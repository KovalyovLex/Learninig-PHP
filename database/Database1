<object id=1> 
<name>is_file</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Определяет, является ли файл обычным файлом</short-description>
<description>bool is_file ( string $filename ) 
 Определяет, является ли файл обычным файлом. </description>
<parameters>filename - Путь к файлу. </parameters>
<output>Возвращает TRUE, если файл существует и является обычным файлом, иначе возвращает FALSE. </output>
<errors>В случае неудачного завершения работы генерируется ошибка уровня E_WARNING.</errors>
<example><?php
var_dump(is_file('a_file.txt')) . "\n";
var_dump(is_file('/usr/bin/')) . "\n";
?></example>
<example_result>
 
bool(true)
bool(false)
</example_result>
</object>

<object id=2> 
<name>imap_list</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Read the list of mailboxes</short-description>
<description>array imap_list ( resource $imap_stream , string $ref , string $pattern ) 
 Read the list of mailboxes. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
ref - ref should normally be just the server specification as described in imap_open(). 
pattern - Определяет начало поиска в иерархии почтовых ящиков.</parameters>
<output>Returns an array containing the names of the mailboxes. </output>
<errors></errors>
<example><?php
$mbox = imap_open("{imap.example.org}", "username", "password", OP_HALFOPEN)
      or die("can't connect: " . imap_last_error());
$list = imap_list($mbox, "{imap.example.org}", "*");
if (is_array($list)) {
    foreach ($list as $val) {
        echo imap_utf7_decode($val) . "\n";
    }
} else {
    echo "imap_list failed: " . imap_last_error() . "\n";
}
imap_close($mbox);
?></example>
<example_result></example_result>
</object>

<object id=3> 
<name>udm_check_stored</name>
<versions>(PHP 4 >= 4.2.0)</versions>
<short-description>Check connection to stored</short-description>
<description>int udm_check_stored ( resource $agent , int $link , string $doc_id ) 
 Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=4> 
<name>proc_get_status</name>
<versions>(PHP 5)</versions>
<short-description>Получает информацию о процессе, открытом при помощи функции proc_open()</short-description>
<description>array proc_get_status ( resource $process ) 
 proc_get_status() получает данные о процессе, открытом при помощи функции proc_open(). </description>
<parameters>process - Полученный при помощи функции proc_open() ресурс resource, который будет исследоваться. </parameters>
<output>Массив array с полученной информацией в случае успеха и FALSE в случае неудачи. Получаемый массив содержит следующие элементы: </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=5> 
<name>imagettfbbox</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Give the bounding box of a text using TrueType fonts</short-description>
<description>array imagettfbbox ( float $size , float $angle , string $fontfile , string $text ) 
 This function calculates and returns the bounding box in pixels for a TrueType text. </description>
<parameters>size - The font size. 
 Замечание: In GD 1, this is measured in pixels. In GD 2, this is measured in points. 
angle - Angle in degrees in which text will be measured. 
fontfile - The name of the TrueType font file (can be a URL). Depending on which version of the GD library that PHP is using, it may attempt to search for files that do not begin with a leading &#039;/&#039; by appending &#039;.ttf&#039; to the filename and searching along a library-defined font path. 
text - The string to be measured. </parameters>
<output>imagettfbbox() returns an array with 8 elements representing four points making the bounding box of the text on success and FALSE on error. key contents 0 lower left corner, X position 1 lower left corner, Y position 2 lower right corner, X position 3 lower right corner, Y position 4 upper right corner, X position 5 upper right corner, Y position 6 upper left corner, X position 7 upper left corner, Y position </output>
<errors></errors>
<example><?php
// Create a 300x150 image
$im = imagecreatetruecolor(300, 150);
$black = imagecolorallocate($im, 0, 0, 0);
$white = imagecolorallocate($im, 255, 255, 255);
// Set the background to be white
imagefilledrectangle($im, 0, 0, 299, 299, $white);
// Path to our font file
$font = './arial.ttf';
// First we create our bounding box for the first text
$bbox = imagettfbbox(10, 45, $font, 'Powered by PHP ' . phpversion());
// This is our cordinates for X and Y
$x = $bbox[0] + (imagesx($im) / 2) - ($bbox[4] / 2) - 25;
$y = $bbox[1] + (imagesy($im) / 2) - ($bbox[5] / 2) - 5;
// Write it
imagettftext($im, 10, 45, $x, $y, $black, $font, 'Powered by PHP ' . phpversion());
// Create the next bounding box for the second text
$bbox = imagettfbbox(10, 45, $font, 'and Zend Engine ' . zend_version());
// Set the cordinates so its next to the first text
$x = $bbox[0] + (imagesx($im) / 2) - ($bbox[4] / 2) + 10;
$y = $bbox[1] + (imagesy($im) / 2) - ($bbox[5] / 2) - 5;
// Write it
imagettftext($im, 10, 45, $x, $y, $black, $font, 'and Zend Engine ' . zend_version());
// Output to browser
header('Content-Type: image/png');
imagepng($im);
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=6> 
<name>PDF_set_parameter</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set string parameter</short-description>
<description>bool PDF_set_parameter ( resource $p , string $key , string $value ) 
 Sets some PDFlib parameter with string type. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=7> 
<name>msql_num_rows</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get number of rows in result</short-description>
<description>int msql_num_rows ( resource $query_identifier ) 
 msql_num_rows() returns the number of rows in a result set. </description>
<parameters>result - Обрабатываемый результат запроса,полученный с помощью функции msql_query().</parameters>
<output>Returns the number of rows in the result set. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=8> 
<name>posix_isatty</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Determine if a file descriptor is an interactive terminal</short-description>
<description>bool posix_isatty ( int $fd ) 
 Determines if the file descriptor fd refers to a valid terminal type device. </description>
<parameters>fd - The file descriptor. </parameters>
<output>Returns TRUE if fd is an open descriptor connected to a terminal and FALSE otherwise. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=9> 
<name>function_exists</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает TRUE, если указанная функция определена</short-description>
<description>bool function_exists ( string $function_name ) 
 Проверяет, есть ли в списке определённых функций, как встроенных, так и пользовательских, функция function_name. </description>
<parameters>function_name - Имя функции, строка. </parameters>
<output>Возвращает TRUE, если function_name существует и является функцией, иначе возвращается FALSE. </output>
<errors></errors>
<example><?php
if (function_exists('imap_open')) {
    echo "IMAP функции доступны.<br />\n";
} else {
    echo "IMAP функции недоступны.<br />\n";
}?></example>
<example_result></example_result>
</object>

<object id=10> 
<name>PDF_get_pdi_parameter</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Get PDI string parameter [deprecated]</short-description>
<description>string PDF_get_pdi_parameter ( resource $p , string $key , int $doc , int $page , int $reserved ) 
 Gets the contents of a PDI document parameter with string type. 
 This function is deprecated since PDFlib version 7, use PDF_pcos_get_string() instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=11> 
<name>fdf_set_encoding</name>
<versions>(PHP 4 >= 4.0.7, PHP 5)</versions>
<short-description>Sets FDF character encoding</short-description>
<description>bool fdf_set_encoding ( resource $fdf_document , string $encoding ) 
 Sets the character encoding for the FDF document. </description>
<parameters>fdf_document - The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string(). 
encoding - The encoding name. The following values are supported: "Shift-JIS", "UHC", "GBK" and "BigFive". </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=12> 
<name>split</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Разбиение строки на массив по регулярному выражению</short-description>
<description>array split ( string $pattern , string $string [, int $limit = -1 ] ) 
 Разбивает строку string на массив по регулярному выражению. Внимание
 С версии PHP 5.3.0 эта функция считаетсяУСТАРЕВШЕЙ. Крайне не рекомендуется полагаться на эту возможность.</description>
<parameters>pattern - Регулярное выражение, чувствительное к регистру. 
string - Входная строка. 
limit - Если указан параметр limit, возвращаемый массив будет содержать максимум limit элементов, причем последний элемент будет включать всю оставшуюся часть строки string. </parameters>
<output>Возвращает массив строк, каждая из которых является строкой, образованной разбиением строки string чувствительным к регистру регулярным выражением pattern. </output>
<errors></errors>
<example>
 /etc/passwd: </example>
<example_result></example_result>
</object>

<object id=13> 
<name>mb_preferred_mime_name</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Get MIME charset string</short-description>
<description>string mb_preferred_mime_name ( string $encoding ) 
 Get a MIME charset string for a specific encoding. </description>
<parameters>encoding - The encoding being checked. </parameters>
<output>The MIME charset string for character encoding encoding. </output>
<errors></errors>
<example><?php
$outputenc = "sjis-win";
mb_http_output($outputenc);
ob_start("mb_output_handler");
header("Content-Type: text/html; charset=" . mb_preferred_mime_name($outputenc));
?></example>
<example_result></example_result>
</object>

<object id=14> 
<name>ovrimos_cursor</name>
<versions>(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)</versions>
<short-description>Returns the name of the cursor</short-description>
<description>string ovrimos_cursor ( int $result_id ) 
 Gets the name of the cursor. Useful when wishing to perform positioned updates or deletes. </description>
<parameters>result_id - A result identifier, returned by ovrimos_execute() or ovrimos_exec(). </parameters>
<output>Returns the name as a string, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=15> 
<name>apache_note</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает и установливает уведомления к запросу Apache</short-description>
<description>string apache_note ( string $note_name [, string $note_value ] ) 
 Эта функция является оберткой для table_get и table_set. С её помощью можно редактировать таблицу уведомлений (apache notes table), которая создаётся во время передачи запроса. Таблица уведомлений позволяет модулям Apache обмениваться данными. 
 Основное назначение apache_note() - передавать информацию из одного модуля в другой внутри одного запроса. </description>
<parameters>note_name - Название уведомления. 
note_value - Значение уведомления. </parameters>
<output>Если функция вызывается с одним аргументом, она возвращает текущее значение уведомления note_name. Если функция вызывается с двумя аргументами, она устанавливает значение уведомления note_name в note_value и возвращает предыдущее значение note_name. Если значение уведомления не может быть получено, будет возвращено FALSE. </output>
<errors></errors>
<example><?php
apache_note('name', 'Fredrik Ekengren');
// Call perl script
virtual("/perl/some_script.pl");
$result = apache_note("resultdata");
?></example>
<example_result></example_result>
</object>

<object id=16> 
<name>xpath_new_context</name>
<versions>(PHP 4)</versions>
<short-description>Создает новый xpath контекст </short-description>
<description>XPathContext xpath_new_context ( domdocument $dom_document ) 
 Создает новый xpath контекст. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=17> 
<name>PDF_get_majorversion</name>
<versions>(PHP 4 >= 4.2.0, PECL pdflib >= 1.0.0)</versions>
<short-description>Get major version number [deprecated]</short-description>
<description>int PDF_get_majorversion ( void ) 
 This function is deprecated since PDFlib version 5, use PDF_get_value() with the parameter major instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=18> 
<name>openssl_get_md_methods</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Gets available digest methods</short-description>
<description>array openssl_get_md_methods ([ bool $aliases = false ] ) 
 Gets a list of available digest methods. </description>
<parameters>aliases - Set to TRUE if digest aliases should be included within the returned array. </parameters>
<output>An array of available digest methods. </output>
<errors></errors>
<example>
 </example>
<example_result>
 
Array
(
    [0] => DSA
    [1] => DSA-SHA
    [2] => MD2
    [3] => MD4
    [4] => MD5
    [5] => RIPEMD160
    [6] => SHA
    [7] => SHA1
    [8] => SHA224
    [9] => SHA256
    [10] => SHA384
    [11] => SHA512
    [12] => dsaEncryption
    [13] => dsaWithSHA
    [14] => ecdsa-with-SHA1
    [15] => md2
    [16] => md4
    [17] => md5
    [18] => ripemd160
    [19] => sha
    [20] => sha1
    [21] => sha224
    [22] => sha256
    [23] => sha384
    [24] => sha512
)
Array
(
    [2] => DSA-SHA1
    [3] => DSA-SHA1-old
    [4] => DSS1
    [9] => RSA-MD2
    [10] => RSA-MD4
    [11] => RSA-MD5
    [12] => RSA-RIPEMD160
    [13] => RSA-SHA
    [14] => RSA-SHA1
    [15] => RSA-SHA1-2
    [16] => RSA-SHA224
    [17] => RSA-SHA256
    [18] => RSA-SHA384
    [19] => RSA-SHA512
    [28] => dsaWithSHA1
    [29] => dss1
    [32] => md2WithRSAEncryption
    [34] => md4WithRSAEncryption
    [36] => md5WithRSAEncryption
    [37] => ripemd
    [39] => ripemd160WithRSA
    [40] => rmd160
    [43] => sha1WithRSAEncryption
    [45] => sha224WithRSAEncryption
    [47] => sha256WithRSAEncryption
    [49] => sha384WithRSAEncryption
    [51] => sha512WithRSAEncryption
    [52] => shaWithRSAEncryption
    [53] => ssl2-md5
    [54] => ssl3-md5
    [55] => ssl3-sha1
)
</example_result>
</object>

<object id=19> 
<name>iconv_mime_decode</name>
<versions>(PHP 5)</versions>
<short-description>Decodes a MIME header field</short-description>
<description>string iconv_mime_decode ( string $encoded_header [, int $mode = 0 [, string $charset = ini_get("iconv.internal_encoding") ]] ) 
 Decodes a MIME header field. </description>
<parameters>encoded_header - The encoded header, as a string. 
mode - mode determines the behaviour in the event iconv_mime_decode() encounters a malformed MIME header field. You can specify any combination of the following bitmasks. Bitmasks acceptable to iconv_mime_decode() Value Constant Description 1 ICONV_MIME_DECODE_STRICT If set, the given header is decoded in full conformance with the standards defined in &raquo; RFC2047. This option is disabled by default because there are a lot of broken mail user agents that don&#039;t follow the specification and don&#039;t produce correct MIME headers. 2 ICONV_MIME_DECODE_CONTINUE_ON_ERROR If set, iconv_mime_decode_headers() attempts to ignore any grammatical errors and continue to process a given header. 
charset - The optional charset parameter specifies the character set to represent the result by. If omitted, iconv.internal_encoding will be used. </parameters>
<output>Returns a decoded MIME field on success, or FALSE if an error occurs during the decoding. </output>
<errors></errors>
<example><?php
// This yields "Subject: Prüfung Prüfung"
echo iconv_mime_decode("Subject: =?UTF-8?B?UHLDvGZ1bmcgUHLDvGZ1bmc=?=",
                       0, "ISO-8859-1");
?></example>
<example_result></example_result>
</object>

<object id=20> 
<name>hw_GetChildDocCollObj</name>
<versions>(PHP 4)</versions>
<short-description>Object records of child documents of collection</short-description>
<description>array hw_getchilddoccollobj ( int $connection , int $objectID ) 
 Returns an array of object records for child documents of a collection. </description>
<parameters>connection - The connection identifier. 
objectID - The object identifier. </parameters>
<output>Returns an array of object records. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=21> 
<name>settype</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Присваивает переменной новый тип</short-description>
<description>bool settype ( mixed &$var , string $type ) 
 Присваивает переменной var тип type. </description>
<parameters>var - Преобразуемая переменная. 
type - Допустимыми значениями параметра type являются: "boolean" (или, начиная с PHP версии 4.2.0, "bool") "integer" (или, начиная с PHP версии 4.2.0, "int") "float" (возможно только c PHP 4.2.0, для предыдущих версий используйте устаревший вариант "double") "string" "array" "object" "null" (начиная с PHP версии 4.2.0) </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$foo = "5bar"; // строка
$bar = true;   // булевое значение
settype($foo, "integer"); // $foo теперь 5   (целое)
settype($bar, "string");  // $bar теперь "1" (строка)
?></example>
<example_result></example_result>
</object>

<object id=22> 
<name>mysql_fetch_array</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Обрабатывает ряд результата запроса, возвращая ассоциативный массив, численный массив или оба</short-description>
<description>array mysql_fetch_array ( resource $result [, int $result_type = MYSQL_BOTH ] ) 
 Возвращает массив, соответствующий обработанному ряду результата запроса и сдвигает внутренний указатель данных вперед. </description>
<parameters>result - Обрабатываемый результат запроса.Этот результат может быть получен с помощью функции mysql_query().
result_type - Тип возвращаемого массива. Является константой и может принимать следующие значения: MYSQL_ASSOC, MYSQL_NUM и MYSQL_BOTH. </parameters>
<output>Возвращает массив строк, соответствующих обработанному ряду результата запроса, или FALSE, если рядов больше нет. Тип возвращаемого массива зависит от значения параметра result_type. При использовании MYSQL_BOTH (по умолчанию), вы получите массив, состоящий как из ассоциативных индексов, так и из численных. MYSQL_ASSOC вернёт только ассоциативные индексы (аналогично функции mysql_fetch_assoc()), а MYSQL_NUM - только численные (аналогично функции mysql_fetch_row()). </output>
<errors></errors>
<example>
 SELECT table1.field AS foo, table2.field AS bar FROM table1, table2</example>
<example_result></example_result>
</object>

<object id=23> 
<name>PDF_open_image</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Use image data [deprecated]</short-description>
<description>int PDF_open_image ( resource $p , string $imagetype , string $source , string $data , int $length , int $width , int $height , int $components , int $bpc , string $params ) 
 Uses image data from a variety of data sources. 
 This function is deprecated since PDFlib version 5, use virtual files and PDF_load_image() instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=24> 
<name>udm_get_res_param</name>
<versions>(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)</versions>
<short-description>Get mnoGoSearch result parameters</short-description>
<description>string udm_get_res_param ( resource $res , int $param ) 
 Gets the mnoGoSearch result parameters. </description>
<parameters>res - res - a link to result identifier, received after call to udm_find(). 
param - param - parameter identifier, may have the following values: UDM_PARAM_NUM_ROWS - number of received found links on the current page. It is equal to UDM_PARAM_PAGE_SIZE for all search pages, on the last page - the rest of links. UDM_PARAM_FOUND - total number of results matching the query. UDM_PARAM_WORDINFO - information on the words found. E.g. search for "a good book" will return "a: stopword, good:5637, book: 120" UDM_PARAM_SEARCHTIME - search time in seconds. UDM_PARAM_FIRST_DOC - the number of the first document displayed on current page. UDM_PARAM_LAST_DOC - the number of the last document displayed on current page. </parameters>
<output>udm_get_res_param() returns result parameter value on success, FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=25> 
<name>hw_InsertDocument</name>
<versions>(PHP 4)</versions>
<short-description>Upload any document</short-description>
<description>int hw_insertdocument ( int $connection , int $parent_id , int $hw_document ) 
 Uploads a document into the given collection. 
 The document has to be created before with hw_new_document(). Make sure that the object record of the new document contains at least the attributes: Type, DocumentType, Title and Name. Possibly you also want to set the MimeType. </description>
<parameters>connection - The connection identifier. 
parent_id - The collection identifier. 
hw_document - The document identifier. </parameters>
<output>The functions returns the object id of the new document or FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=26> 
<name>ldap_error</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвратить сообщение об ошибке LDAP последней команды</short-description>
<description>string ldap_error ( resource $link_identifier ) 
 Возвращает строковое сообщение об ошибке, объясняя ошибку, сгенерированную последней командой LDAP для данного идентификатора соединения link_identifier. В то время как LDAP errno числа стандартизированы, различные библиотеки возвращают отличающийся или даже локализованные текстовые сообщения об ошибках. Никогда не проверяйте на определенный текст сообщения об ошибке, всегда используйте кодами ошибок для проверки. 
 Если вы не снизите достаточно уровень предупреждений в php.ini, или префикс ваших LDAP-команд не будет с символом @ для подавления вывода предупреждений, генерируемые ошибки будут также отображаться в вашем HTML выводе. </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). </parameters>
<output>Возвращает сообщение ошибки в виде строки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=27> 
<name>mcrypt_generic_deinit</name>
<versions>(PHP 4 >= 4.0.7, PHP 5)</versions>
<short-description>This function deinitializes an encryption module</short-description>
<description>bool mcrypt_generic_deinit ( resource $td ) 
 This function terminates encryption specified by the encryption descriptor (td). It clears all buffers, but does not close the module. You need to call mcrypt_module_close() yourself. (But PHP does this for you at the end of the script.) </description>
<parameters>td - The encryption descriptor. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=28> 
<name>mcrypt_enc_get_key_size</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Returns the maximum supported keysize of the opened mode</short-description>
<description>int mcrypt_enc_get_key_size ( resource $td ) 
 Gets the maximum supported key size of the algorithm in bytes. </description>
<parameters>td - The encryption descriptor. </parameters>
<output>Returns the maximum supported key size of the algorithm in bytes. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=29> 
<name>hw_Document_Attributes</name>
<versions>(PHP 4)</versions>
<short-description>Object record of hw_document</short-description>
<description>string hw_document_attributes ( int $hw_document ) 
 Returns the object record of the document. 
 For backward compatibility, hw_documentattributes() is also accepted. This is deprecated, however. </description>
<parameters>hw_document - The document identifier. </parameters>
<output>Returns the object record of the document. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=30> 
<name>session_register_shutdown</name>
<versions>(PHP >=5.4.0)</versions>
<short-description>Session shutdown function</short-description>
<description>void session_register_shutdown ( void ) 
 Registers session_write_close() as a shutdown function. </description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors>Emits E_WARNING if registering the shutdown function fails. </errors>
<example></example>
<example_result></example_result>
</object>

<object id=31> 
<name>shm_attach</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Creates or open a shared memory segment</short-description>
<description>resource shm_attach ( int $key [, int $memsize [, int $perm = 0666 ]] ) 
 shm_attach() returns an id that can be used to access the System V shared memory with the given key, the first call creates the shared memory segment with memsize and the optional perm-bits perm. 
 A second call to shm_attach() for the same key will return a different shared memory identifier, but both identifiers access the same underlying shared memory. memsize and perm will be ignored. </description>
<parameters>key - A numeric shared memory segment ID 
memsize - The memory size. If not provided, default to the sysvshm.init_mem in the php.ini, otherwise 10000 bytes. 
perm - The optional permission bits. Default to 0666. </parameters>
<output>Returns a shared memory segment identifier. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=32> 
<name>mcrypt_create_iv</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Creates an initialization vector (IV) from a random source</short-description>
<description>string mcrypt_create_iv ( int $size [, int $source = MCRYPT_DEV_RANDOM ] ) 
 Creates an initialization vector (IV) from a random source. 
 The IV is only meant to give an alternative seed to the encryption routines. This IV does not need to be secret at all, though it can be desirable. You even can send it along with your ciphertext without losing security. </description>
<parameters>size - The size of the IV. 
source - The source of the IV. The source can be MCRYPT_RAND (system random number generator), MCRYPT_DEV_RANDOM (read data from /dev/random) and MCRYPT_DEV_URANDOM (read data from /dev/urandom). Prior to 5.3.0, MCRYPT_RAND was the only one supported on Windows. </parameters>
<output>Returns the initialization vector, or FALSE on error. </output>
<errors></errors>
<example><?php
    $size = mcrypt_get_iv_size(MCRYPT_CAST_256, MCRYPT_MODE_CFB);
    $iv = mcrypt_create_iv($size, MCRYPT_DEV_RANDOM);
?></example>
<example_result></example_result>
</object>

<object id=33> 
<name>msql_data_seek</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Move internal row pointer</short-description>
<description>bool msql_data_seek ( resource $result , int $row_number ) 
 msql_data_seek() moves the internal row pointer of the mSQL result associated with the specified query identifier to point to the specified row number. The next call to msql_fetch_row() would return that row. </description>
<parameters>result - Обрабатываемый результат запроса,полученный с помощью функции msql_query().
row_number - The seeked row number. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=34> 
<name>mhash_keygen_s2k</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Generates a key</short-description>
<description>string mhash_keygen_s2k ( int $hash , string $password , string $salt , int $bytes ) 
 Generates a key according to the given hash, using an user provided password. 
 This is the Salted S2K algorithm as specified in the OpenPGP document (&raquo; RFC 2440). 
 Keep in mind that user supplied passwords are not really suitable to be used as keys in cryptographic algorithms, since users normally choose keys they can write on keyboard. These passwords use only 6 to 7 bits per character (or less). It is highly recommended to use some kind of transformation (like this function) to the user supplied key. </description>
<parameters>hash - The hash ID used to create the key. One of the MHASH_hashname constants. 
password - An user supplied password. 
salt - Must be different and random enough for every key you generate in order to create different keys. Because salt must be known when you check the keys, it is a good idea to append the key to it. Salt has a fixed length of 8 bytes and will be padded with zeros if you supply less bytes. 
bytes - The key length, in bytes. </parameters>
<output>Returns the generated key as a string, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=35> 
<name>xml_get_current_byte_index</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает текущий для XML анализатора байтовый индекс </short-description>
<description>int xml_get_current_byte_index ( resource $parser ) 
 Получает текущий для заданного XML анализатора байтовый индекс. </description>
<parameters>parser - Ссылка на XML анализатор, из которого будет получен индекс байта. </parameters>
<output>Эта функция вернет FALSE, если аргумент parser не ссылается на допустимый анализатор, в противном случае она возвращает индекс байта в буфере данных анализатора, на котором он находится в данный момент (начиная с нуля). </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=36> 
<name>aggregate_properties_by_regexp</name>
<versions>(PHP 4 >= 4.2.0)</versions>
<short-description>Selective class properties aggregation to an object using a regular expression </short-description>
<description>void aggregate_properties_by_regexp ( object $object , string $class_name , string $regexp [, bool $exclude = false ] ) 
 Aggregates properties from a class to an existing object using a regular expression to match their names. 
 The properties whose names start with an underscore character (_), which are considered private to the aggregated class, are always excluded. </description>
<parameters>object - 
class_name - 
regexp - 
exclude - The optional parameter exclude is used to decide whether the regular expression will select the names of class properties to include in the aggregation (i.e. exclude is FALSE), or to exclude from the aggregation (exclude is TRUE). </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=37> 
<name>dbplus_next</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Get next tuple from relation</short-description>
<description>int dbplus_next ( resource $relation , array &$tuple ) 
 Reads the data for the next tuple for the given relation, makes it the current tuple and will pass it back as an associative array in tuple. </description>
<parameters>relation - A relation opened by dbplus_open(). 
tuple - </parameters>
<output>Returns DBPLUS_ERR_NOERR on success or a db++ error code on failure. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=38> 
<name>m_transactionssent</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Check to see if outgoing buffer is clear</short-description>
<description>int m_transactionssent ( resource $conn ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().</parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=39> 
<name>is_int</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Проверяет, является ли переменная переменной целочисленного типа</short-description>
<description>bool is_int ( mixed $var ) 
 Проверяет, является ли тип переменной целочисленным. 
 Замечание: 
 Чтобы проверить, что переменная является числом или строкой, содержащей число (как поле ввода в форме, которое всегда является строкой), используйте is_numeric(). </description>
<parameters>var - Проверяемая переменная. </parameters>
<output>Возвращает TRUE, если var является целым числом, или FALSE в противном случае. </output>
<errors></errors>
<example><?php
if (is_int(23)) {
    echo "целое\n";
} else {
    echo "не целое\n";
}var_dump(is_int(23));
var_dump(is_int("23"));
var_dump(is_int(23.5));
var_dump(is_int(true));
?></example>
<example_result>
 
целое
bool(true)
bool(false)
bool(false)
bool(false)
</example_result>
</object>

<object id=40> 
<name>pcntl_wifstopped</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Checks whether the child process is currently stopped</short-description>
<description>bool pcntl_wifstopped ( int $status ) 
 Checks whether the child process which caused the return is currently stopped; this is only possible if the call to pcntl_waitpid() was done using the option WUNTRACED. </description>
<parameters>status - Параметр status - этопараметр статуса, передаваемый для успешного вызова функции pcntl_waitpid().</parameters>
<output>Returns TRUE if the child process which caused the return is currently stopped, FALSE otherwise. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=41> 
<name>msql_affected_rows</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Returns number of affected rows</short-description>
<description>int msql_affected_rows ( resource $result ) 
 Returns number of affected rows by the last SELECT, UPDATE or DELETE query associated with result. </description>
<parameters>result - Обрабатываемый результат запроса,полученный с помощью функции msql_query().</parameters>
<output>Returns the number of affected rows on success, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=42> 
<name>oci_lob_is_equal</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Сравнивает два объекта LOB/FILE</short-description>
<description>bool oci_lob_is_equal ( OCI-Lob $lob1 , OCI-Lob $lob2 ) 
 Сравнивает два объекта LOB/FILE. </description>
<parameters>lob1 - Идентификатор LOB. 
lob2 - Идентификатор LOB. </parameters>
<output>Возвращает TRUE, если объекты идентичны, и FALSE в обратном случае или в случае ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=43> 
<name>swf_shapefillsolid</name>
<versions>(PHP 4)</versions>
<short-description>Set the current fill style to the specified color</short-description>
<description>void swf_shapefillsolid ( float $r , float $g , float $b , float $a ) 
 Sets the current fill style to solid, and then sets the fill color to the given color. </description>
<parameters>r - Red value 
g - Green value 
b - Blue value 
a - Alpha value </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=44> 
<name>sybase_set_message_handler</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Sets the handler called when a server message is raised</short-description>
<description>bool sybase_set_message_handler ( callback $handler [, resource $link_identifier ] ) 
 sybase_set_message_handler() sets a user function to handle messages generated by the server. You may specify the name of a global function, or use an array to specify an object reference and a method name. </description>
<parameters>handler - The handler expects five arguments in the following order: message number, severity, state, line number and description. The first four are integers. The last is a string. If the function returns FALSE, PHP generates an ordinary error message. 
link_identifier - If the link identifier isn&#039;t specified, the last opened link is assumed. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
    function msg_handler($msgnumber, $severity, $state, $line, $text)
    {
        var_dump($msgnumber, $severity, $state, $line, $text);
    }
    sybase_set_message_handler('msg_handler');
?></example>
<example_result></example_result>
</object>

<object id=45> 
<name>ncurses_filter</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Set LINES for iniscr() and newterm() to 1</short-description>
<description>void ncurses_filter ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=46> 
<name>sqlite_valid</name>
<versions>(PHP 5)</versions>
<short-description>Проверяет, есть ли еще доступные ряды</short-description>
<description>bool sqlite_valid ( resource $result ) 
 Объектно-ориентированный стиль (метод): bool SQLiteResult::valid ( void )</description>
<parameters>result - Ресурс результата SQLite. Этот параметр не требуется при использовании объектно-ориентированного метода. </parameters>
<output>Возвращает TRUE, если в результирующем наборе result еще есть доступные ряды, иначе возвращается FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=47> 
<name>mysql_num_fields</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает количество полей результата запроса</short-description>
<description>int mysql_num_fields ( resource $result ) 
 Возвращает количество полей в результате запроса. </description>
<parameters>result - Обрабатываемый результат запроса.Этот результат может быть получен с помощью функции mysql_query().</parameters>
<output>Возвращает количество полей в результате запроса (resource) в случае успеха или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$result = mysql_query("SELECT id,email FROM people WHERE id = '42'");
if (!$result) {
    echo 'Не удалось выполнить запрос: ' . mysql_error();
    exit;
}
/* возвращает 2, так как id,email === двум полям */
echo mysql_num_fields($result);
?></example>
<example_result></example_result>
</object>

<object id=48> 
<name>odbc_fetch_into</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Fetch one result row into array</short-description>
<description>int odbc_fetch_into ( resource $result_id , array &$result_array [, int $rownumber ] ) 
 Fetch one result row into array. </description>
<parameters>result_id - The result resource. 
result_array - The result array that can be of any type since it will be converted to type array. The array will contain the column values starting at array index 0. 
rownumber - The row number. </parameters>
<output>Returns the number of columns in the result; FALSE on error. </output>
<errors></errors>
<example><?php
$rc = odbc_fetch_into($res_id, $my_array);
?></example>
<example_result></example_result>
</object>

<object id=49> 
<name>yaz_addinfo</name>
<versions>(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)</versions>
<short-description>Возвращает дополнительную информацию в случае ошибки</short-description>
<description>string yaz_addinfo ( resource $id ) 
 Возвращает дополнительную информацию в случае ошибки последнего запроса к серверу. 
 С некоторыми серверами эта функция может вернуть ту же строку, что и функция yaz_error(). </description>
<parameters>id - Дескриптор соединения, возвращаемый функцией yaz_connect(). </parameters>
<output>Строка содержит дополнительную информацию об ошибке или пустое значение, если последняя операция прошла успешно или нет дополнительной информации от сервера. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=50> 
<name>mysql_real_escape_string</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Экранирует специальные символы в строках для использования в выражениях SQL</short-description>
<description>string mysql_real_escape_string ( string $unescaped_string [, resource $link_identifier ] ) 
 Экранирует специальные символы в unescaped_string, принимая во внимание кодировку соединения, таким образом, что результат можно безопасно использовать в SQL-запросе в функции mysql_query(). Если вставляются бинарные данные, то к ним так же необходимо применять эту функцию. 
 mysql_real_escape_string() вызывает библиотечную функцмю MySQL mysql_real_escape_string, которая добавляет обратную косую черту к следующим символам: \x00, \n, \r, \, &#039;, " и \x1a. 
 Эта функция должна всегда (за несколькими исключениями) использоваться для того, чтобы обезопасить данные, вставляемые в запрос перед отправкой его в MySQL. </description>
<parameters>unescaped_string - Экранируемая строка. 
link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Возвращает строку, в которой экранированы все необходимые символы, или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
// Соединение
$link = mysql_connect('mysql_host', 'mysql_user', 'mysql_password')
    OR die(mysql_error());
// Запрос
$query = sprintf("SELECT * FROM users WHERE user='%s' AND password='%s'",
            mysql_real_escape_string($user),
            mysql_real_escape_string($password));
?></example>
<example_result>
 
SELECT * FROM users WHERE user=&#039;aidan&#039; AND password=&#039;&#039; OR &#039;&#039;=&#039;&#039;
</example_result>
</object>

<object id=51> 
<name>mcrypt_get_iv_size</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Returns the size of the IV belonging to a specific cipher/mode combination</short-description>
<description>int mcrypt_get_iv_size ( string $cipher , string $mode ) 
 Gets the size of the IV belonging to a specific cipher/mode combination. 
 It is more useful to use the mcrypt_enc_get_iv_size() function as this uses the resource returned by mcrypt_module_open(). </description>
<parameters>cipher - One of the MCRYPT_ciphername constants, or the name of the algorithm as string. 
mode - One of the MCRYPT_MODE_modename constants, or one of the following strings: "ecb", "cbc", "cfb", "ofb", "nofb" or "stream". The IV is ignored in ECB mode as this mode does not require it. You will need to have the same IV (think: starting point) both at encryption and decryption stages, otherwise your encryption will fail. </parameters>
<output>Returns the size of the Initialization Vector (IV) in bytes. On error the function returns FALSE. If the IV is ignored in the specified cipher/mode combination zero is returned. </output>
<errors></errors>
<example><?php
    echo mcrypt_get_iv_size(MCRYPT_CAST_256, MCRYPT_MODE_CFB) . "\n";
    echo mcrypt_get_iv_size('des', 'ecb') . "\n";
?></example>
<example_result></example_result>
</object>

<object id=52> 
<name>yaz_errno</name>
<versions>(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)</versions>
<short-description>Returns error number</short-description>
<description>int yaz_errno ( resource $id ) 
 Returns an error number for the server (last request) identified by id. 
 yaz_errno() should be called after network activity for each server - (after yaz_wait() returns) to determine the success or failure of the last operation (e.g. search). </description>
<parameters>id - The connection resource returned by yaz_connect(). </parameters>
<output>Returns an error code. The error code is either a Z39.50 diagnostic code (usually a Bib-1 diagnostic) or a client side error code which is generated by PHP/YAZ itself, such as "Connect failed", "Init Rejected", etc. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=53> 
<name>is_readable</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Определяет существование файла и доступен ли он для чтения</short-description>
<description>bool is_readable ( string $filename ) 
 Возвращает TRUE, если файл существует и доступен для чтения. </description>
<parameters>filename - Путь к файлу. </parameters>
<output>Возвращает TRUE, если файл или директория, указанная в filename существует и доступна для чтения, иначе возвращает FALSE. </output>
<errors>В случае неудачного завершения работы генерируется ошибка уровня E_WARNING.</errors>
<example><?php
$filename = 'test.txt';
if (is_readable($filename)) {
    echo 'Файл доступен для чтения';
} else {
    echo 'Файл недоступен для чтения';
}?></example>
<example_result></example_result>
</object>

<object id=54> 
<name>odbc_commit</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Commit an ODBC transaction</short-description>
<description>bool odbc_commit ( resource $connection_id ) 
 Commits all pending transactions on the connection. </description>
<parameters>connection_id - Идентификатор соединения ODBC,за подробностями обращайтесь к odbc_connect().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=55> 
<name>ob_get_contents</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает содержимое буфера вывода</short-description>
<description>string ob_get_contents ( void ) 
 Получает содержимое буфера без его очистки. </description>
<parameters></parameters>
<output>Функция вернет содержимое буфера вывода или FALSE, если буферизация вывода не активирована. </output>
<errors></errors>
<example><?php
ob_start();
echo "Привет ";
$out1 = ob_get_contents();
echo "Мир";
$out2 = ob_get_contents();
ob_end_clean();
var_dump($out1, $out2);
?></example>
<example_result>
 
string(6) "Привет "
string(11) "Привет Мир"
</example_result>
</object>

<object id=56> 
<name>XMLWriter::startDTD</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Создать стартовый DTD тэг</short-description>
<description>bool XMLWriter::startDTD ( string $qualifiedName [, string $publicId [, string $systemId ]] ) 
 Процедурный стиль bool xmlwriter_start_dtd ( resource $xmlwriter , string $qualifiedName [, string $publicId [, string $systemId ]] )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
qualifiedName - Полностью определенное имя типа документа для создания. 
publicId - Идентификатор внешнего публичного подмножества. 
systemId - Идентификатор внешнего системного подмножества. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=57> 
<name>syslog</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Generate a system log message</short-description>
<description>bool syslog ( int $priority , string $message ) 
 syslog() generates a log message that will be distributed by the system logger. 
 For information on setting up a user defined log handler, see the syslog.conf (5) Unix manual page. More information on the syslog facilities and option can be found in the man pages for syslog (3) on Unix machines. </description>
<parameters>priority - priority is a combination of the facility and the level. Possible values are: syslog() Priorities (in descending order) Constant Description LOG_EMERG system is unusable LOG_ALERT action must be taken immediately LOG_CRIT critical conditions LOG_ERR error conditions LOG_WARNING warning conditions LOG_NOTICE normal, but significant, condition LOG_INFO informational message LOG_DEBUG debug-level message 
message - The message to send, except that the two characters %m will be replaced by the error message string (strerror) corresponding to the present value of errno. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// open syslog, include the process ID and also send
// the log to standard error, and use a user defined
// logging mechanism
openlog("myScriptLog", LOG_PID | LOG_PERROR, LOG_LOCAL0);
// some code
if (authorized_client()) {
    // do something
} else {
    // unauthorized client!
    // log the attempt
    $access = date("Y/m/d H:i:s");
    syslog(LOG_WARNING, "Unauthorized client: $access {$_SERVER['REMOTE_ADDR']} ({$_SERVER['HTTP_USER_AGENT']})");
}
closelog();
?></example>
<example_result></example_result>
</object>

<object id=58> 
<name>ifx_copy_blob</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Duplicates the given blob object</short-description>
<description>int ifx_copy_blob ( int $bid ) 
 Duplicates the given blob object. </description>
<parameters>bid - A BLOB identifier. </parameters>
<output>Returns the new blob object-id, or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=59> 
<name>dbplus_getlock</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Get a write lock on a tuple</short-description>
<description>int dbplus_getlock ( resource $relation , string $tuple ) 
 Requests a write lock on the specified tuple. </description>
<parameters>relation - A relation opened by dbplus_open(). 
tuple - </parameters>
<output>Returns zero on success or a non-zero error code, especially DBPLUS_ERR_WLOCKED on failure. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=60> 
<name>mysqli_client_encoding</name>
<versions>(PHP 5)</versions>
<short-description>Синоним функции mysqli_character_set_name()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=61> 
<name>ncurses_init</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Initialize ncurses</short-description>
<description>void ncurses_init ( void ) 
 Initializes the ncurses interface. This function must be used before any other ncurses function call. 
 Note that ncurses_end() must be called before exiting from the program, or the terminal will not be restored to its proper non-visual mode. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=62> 
<name>ming_setscale</name>
<versions>(PHP 4 >= 4.0.5, PHP 5, PECL ming SVN)</versions>
<short-description>Set the global scaling factor. </short-description>
<description>void ming_setscale ( float $scale ) 
 Sets the scale of the output SWF. Inside the SWF file, coordinates are measured in TWIPS, rather than PIXELS. There are 20 TWIPS in 1 pixel. </description>
<parameters>scale - The scale to be set. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=63> 
<name>mcrypt_module_self_test</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>This function runs a self test on the specified module</short-description>
<description>bool mcrypt_module_self_test ( string $algorithm [, string $lib_dir ] ) 
 This function runs the self test on the algorithm specified. </description>
<parameters>algorithm - The algorithm to test. 
lib_dir - The optional lib_dir parameter can contain the location where the algorithm module is on the system. </parameters>
<output>The function returns TRUE if the self test succeeds, or FALSE when it fails. </output>
<errors></errors>
<example><?php
var_dump(mcrypt_module_self_test(MCRYPT_RIJNDAEL_128)) . "\n";
var_dump(mcrypt_module_self_test(MCRYPT_BOGUS_CYPHER));
?></example>
<example_result>
 
bool(true)
bool(false)
</example_result>
</object>

<object id=64> 
<name>sqlite_libencoding</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Возвращает кодировку, используемую подключенной библиотекой SQLite</short-description>
<description>string sqlite_libencoding ( void ) 
 SQLite может быть скомпилирована либо в режиме совместимости ISO-8859-1, либо UTF-8. Эта функция позволяет определить, какую кодировку использует подключенная библиотека. Внимание 
 По умолчанию, PHP компилирует libsqlite в режиме совместимости с кодировкой ISO-8859-1. Однако, это неверное название; вместо использования ISO-8859-1, библиотека работает в соответствии с установками текущей локали для сравнения и сортировки строк. Поэтому следует считать, что используется не ISO-8859-1, а кодировка &#039;8-bit&#039;. </description>
<parameters></parameters>
<output>Возвращает кодировку, используемую библиотекой. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=65> 
<name>debug_print_backtrace</name>
<versions>(PHP 5)</versions>
<short-description>Выводит стек вызовов функций </short-description>
<description>void debug_print_backtrace ([ int $options = 0 [, int $limit = 0 ]] ) 
 debug_print_backtrace() выводит стек вызовов функций. Выводит вызовы функций, имена включенных/требуемых файлов и другую информацию из функций (eval()). </description>
<parameters>options - В версии 5.3.6, этот аргумент является битовой маской для следующих настроек: debug_print_backtrace() options DEBUG_BACKTRACE_IGNORE_ARGS Требуется или нет не выводить данные с индексом "args", то есть списки аргументов всех функций/методов, для уменьшения расхода памяти. 
limit - В версии 5.4.0, этот аргумент используется для ограничения количества вызовов функций, которые будут выведены. По умолчанию (limit=0) будет выведен весь стек вызовов. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
// include.php file
function a() {
    b();
}
function b() {
    c();
}
function c(){
    debug_print_backtrace();
}
a();
?></example>
<example_result>
 
#0  c() called at [/tmp/include.php:10]
#1  b() called at [/tmp/include.php:6]
#2  a() called at [/tmp/include.php:17]
#3  include(/tmp/include.php) called at [/tmp/test.php:3]
</example_result>
</object>

<object id=66> 
<name>zip_entry_compressedsize</name>
<versions>(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)</versions>
<short-description>Возвращает сжатый размер файла для дескриптора директории</short-description>
<description>int zip_entry_compressedsize ( resource $zip_entry ) 
 Возвращает сжатый размер заданного дескриптора директории. </description>
<parameters>zip_entry - Дескриптор директории, возвращаемый функцией zip_read(). </parameters>
<output>Сжатый размер дескриптора директории. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=67> 
<name>fbsql_query</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Send a FrontBase query</short-description>
<description>resource fbsql_query ( string $query [, resource $link_identifier [, int $batch_size ]] ) 
 Sends a query to the currently active database on the server. 
 If the query succeeds, you can call fbsql_num_rows() to find out how many rows were returned for a SELECT statement or fbsql_affected_rows() to find out how many rows were affected by a DELETE, INSERT, REPLACE, or UPDATE statement. </description>
<parameters>query - The SQL query to be executed. 
link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().
batch_size - </parameters>
<output>fbsql_query() returns TRUE (non-zero) or FALSE to indicate whether or not the query succeeded. A return value of TRUE means that the query was legal and could be executed by the server. It does not indicate anything about the number of rows affected or returned. It is perfectly possible for a query to succeed but affect no rows or return no rows. </output>
<errors></errors>
<example><?php
$result = fbsql_query("SELECT * WHERE 1=1")
    or die ("Invalid query");
?></example>
<example_result></example_result>
</object>

<object id=68> 
<name>substr_replace</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Заменяет часть строки</short-description>
<description>mixed substr_replace ( mixed $string , mixed $replacement , mixed $start [, mixed $length ] ) 
 substr_replace() заменяет часть строки string, начинающуюся с символа с порядковым номером start и (необязательной) длиной length, строкой replacement и возвращает результат. </description>
<parameters>string - Входная строка. 
replacement - Строка замены. 
start - Если start положителен, замена начинается с символа с порядковым номером start строки string. 
length - Если аргумент положителен, то он представляет собой длину заменяемой подстроки в строке string. Если этот аргумент отрицательный, он определяет количество символов от конца строки string, на которых заканчивается замена. Этот аргумент необязателен и по умолчанию равен strlen(string);, т.е. замена до конца строки string. Разумеется, если length равен нулю, то это эквивалентно вставке replacement в string на указанной позиции start. </parameters>
<output>Возвращает результирущую строку. Если string является массивом, то возвращает массив. </output>
<errors></errors>
<example><?php
$var = 'ABCDEFGH:/MNRPQR/';
echo "Оригинал: $var<hr />\n";
/* Обе следующих строки заменяют всю строку $var на 'bob'. */
echo substr_replace($var, 'bob', 0) . "<br />\n";
echo substr_replace($var, 'bob', 0, strlen($var)) . "<br />\n";
/* Вставляет 'bob' в начало $var. */
echo substr_replace($var, 'bob', 0, 0) . "<br />\n";
/* Обе следующих строки заменяют 'MNRPQR' in $var на 'bob'. */
echo substr_replace($var, 'bob', 10, -1) . "<br />\n";
echo substr_replace($var, 'bob', -7, -1) . "<br />\n";
/* Удаляет 'MNRPQR' из $var. */
echo substr_replace($var, '', 10, -1) . "<br />\n";
?></example>
<example_result>
 
A: YYY; B: YYY; C: YYY
A: AAA; B: BBB; C: CCC
A: AAAXX; B: BBBX; C: CCC
</example_result>
</object>

<object id=69> 
<name>pg_untrace</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Отключает трассировку соединения с PostgreSQL</short-description>
<description>bool pg_untrace ([ resource $connection ] ) 
 Останавливает трассировку, запущенную функцией pg_trace(). </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). </parameters>
<output>Всегда возвращает TRUE. </output>
<errors></errors>
<example><?php
$pgsql_conn = pg_connect("dbname=mark host=localhost");
if ($pgsql_conn) {
   pg_trace('/tmp/trace.log', 'w', $pgsql_conn);
   pg_query("SELECT 1");
   pg_untrace($pgsql_conn);
   // Теперь трассировка взаимодействия с сервером отключена
} else {
   print pg_last_error($pgsql_conn);
   exit;
}?></example>
<example_result></example_result>
</object>

<object id=70> 
<name>htmlspecialchars</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Преобразует специальные символы в HTML-сущности</short-description>
<description>string htmlspecialchars ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $charset [, bool $double_encode = true ]]] ) 
 В HTML некоторые символы имеют специальное значение и для сохранения своего значения должны быть преобразованы в HTML-сущности. Эта функция возвращает строку, над которой проведены некоторые из таких преобразований. Этих преобразований достаточно для большинства задач веб-программирования. Если вам нужно преобразовать все возможные сущности, используйте htmlentities(). 
 Эта функция полезна при отображении данных, введенных пользователем, которые могут содержать нежелательные HTML тэги, например в форуме или гостевой книге. 
 Производятся следующие преобразования: &#039;&&#039; (амперсанд) преобразуется в &#039;&&#039; &#039;"&#039; (двойная кавычка) преобразуется в &#039;&quot;&#039; в режиме ENT_NOQUOTES is not set. "&#039;" (одиночная кавычка) преобразуется в &#039;&#039;&#039; только в режиме ENT_QUOTES. &#039;<&#039; (знак "меньше чем") преобразуется в &#039;<&#039; &#039;>&#039; (знак "больше чем") преобразуется в &#039;>&#039; </description>
<parameters>string - Конвертируемая строка (string). 
flags - Битовая маска из нижеуказанных флагов, определяющих режим обработки кавычек, некорректных кодовых последовательностей и используемый тип документа. По умолчанию используется ENT_COMPAT | ENT_HTML401. Доступные значения параметра flags Название константы Описание ENT_COMPAT Преобразует двойные кавычки, одинарные кавычки не изменяются. ENT_QUOTES Преобразует как двойные, так и одинарные кавычки. ENT_NOQUOTES Оставляет без изменения как двойные, так и одинарные кавычки. ENT_IGNORE Молча отбрасывает некорректные кодовые последовательности вместо возврата пустой строки. Данная возможность предоставляется в целях обратной совместимости, избегайте ее использования, т.к. она может внести уязвимости в ваш код. ENT_SUBSTITUTE Заменяет некорреткные кодовые последовательности символом замены Юникода U+FFFD в случае использования UTF-8 и &#FFFD; при использовании другой кодировки, вместо возврата пустой строки. ENT_DISALLOWED Заменяет кодовые последовательности, несоответствующие указанному типу документа символом замены Юникода U+FFFD в случае использования UTF-8 и &#FFFD; при использовании другой кодировки. ENT_HTML401 Обработка кода в соответствии с HTML 4.01. ENT_XML1 Обработка кода в соответствии с XML 1. ENT_XHTML Обработка кода в соответствии с XHTML. ENT_HTML5 Обработка кода в соответствии с HTML 5. 
charset - Указывает кодировку, используемую для преобразования. Кодировкой по умолчанию является ISO-8859-1. 
double_encode - Если параметр double_encode выключен, то PHP не будет преобразовывать существующие html-сущности, по умолчанию преобразуется все без ограничений. </parameters>
<output>Преобразованная строка (string). </output>
<errors></errors>
<example><?php
$new = htmlspecialchars("<a href='test'>Test</a>", ENT_QUOTES);
echo $new; // <a href=&#039;test&#039;>Test</a>
?></example>
<example_result></example_result>
</object>

<object id=71> 
<name>rewind</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сбрасывает курсор у файлового указателя</short-description>
<description>bool rewind ( resource $handle ) 
 Сбрасывает курсор файлового указателя handle на начало файлового потока. 
 Замечание: 
 Если вы открыли файл в режиме "записи в конец" ("a" или "a+"), любые данные, которые вы записываете, будут дописаны в конец файла, независимо от положения курсора. </description>
<parameters>handle - Файловый указатель должен быть доступным и ссылаться на файл, успешно открытый при помощи fopen(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$handle = fopen('output.txt', 'r+');
fwrite($handle, 'Ужасно длинное предложение.');
rewind($handle);
fwrite($handle, 'Оп');
rewind($handle);
echo fread($handle, filesize('output.txt'));
fclose($handle);
?></example>
<example_result>
 
Опасно длинное предложение.
</example_result>
</object>

<object id=72> 
<name>ncurses_has_il</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Check for line insert- and delete-capabilities </short-description>
<description>bool ncurses_has_il ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Returns TRUE if the terminal has insert/delete-line capabilities, FALSE otherwise. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=73> 
<name>m_numrows</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Number of rows returned in a comma delimited response</short-description>
<description>int m_numrows ( resource $conn , int $identifier ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
identifier - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=74> 
<name>fdf_set_version</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Sets version number for a FDF file </short-description>
<description>bool fdf_set_version ( resource $fdf_document , string $version ) 
 Sets the FDF version for the given document. 
 Some features supported by this extension are only available in newer FDF versions. </description>
<parameters>fdf_document - The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string(). 
version - The version number. For the current FDF toolkit 5.0, this may be either 1.2, 1.3 or 1.4. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=75> 
<name>xmlrpc_get_type</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Получает XML-RPC тип для значения PHP</short-description>
<description>string xmlrpc_get_type ( mixed $value ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>value - Значение PHP </parameters>
<output>Возвращает тип XML-RPC. </output>
<errors></errors>
<example><?php
echo xmlrpc_get_type(null) . "\n"; // base64
echo xmlrpc_get_type(false) . "\n"; // boolean
echo xmlrpc_get_type(1) . "\n"; // int
echo xmlrpc_get_type(1.0) . "\n"; // double
echo xmlrpc_get_type("") . "\n"; // string
echo xmlrpc_get_type(array()) . "\n"; // array
echo xmlrpc_get_type(new stdClass) . "\n"; // array
echo xmlrpc_get_type(STDIN) . "\n"; // int
?></example>
<example_result></example_result>
</object>

<object id=76> 
<name>ibase_blob_create</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Create a new blob for adding data</short-description>
<description>resource ibase_blob_create ([ resource $link_identifier = NULL ] ) 
 ibase_blob_create() creates a new BLOB for filling with data. </description>
<parameters>link_identifier - An InterBase link identifier. If omitted, the last opened link is assumed. </parameters>
<output>Returns a BLOB handle for later use with ibase_blob_add() или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=77> 
<name>enchant_broker_describe</name>
<versions>(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0)</versions>
<short-description>Enumerates the Enchant providers</short-description>
<description>array enchant_broker_describe ( resource $broker ) 
 Enumerates the Enchant providers and tells you some rudimentary information about them. The same info is provided through phpinfo(). </description>
<parameters>broker - Broker resource </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$r = enchant_broker_init();
$bprovides = enchant_broker_describe($r);
echo "Current broker provides the following backend(s):\n";
print_r($bprovides);
?></example>
<example_result>
 
Current broker provides the following backend(s):
Array
(
    [0] => Array
        (
            [name] => aspell
            [desc] => Aspell Provider
            [file] => /usr/lib/enchant/libenchant_aspell.so
        )

    [1] => Array
        (
            [name] => hspell
            [desc] => Hspell Provider
            [file] => /usr/lib/enchant/libenchant_hspell.so
        )

    [2] => Array
        (
            [name] => ispell
            [desc] => Ispell Provider
            [file] => /usr/lib/enchant/libenchant_ispell.so
        )

    [3] => Array
        (
            [name] => myspell
            [desc] => Myspell Provider
            [file] => /usr/lib/enchant/libenchant_myspell.so
        )

)
</example_result>
</object>

<object id=78> 
<name>ovrimos_rollback</name>
<versions>(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)</versions>
<short-description>Rolls back the transaction</short-description>
<description>bool ovrimos_rollback ( int $connection_id ) 
 Rolls back the transaction. </description>
<parameters>connection_id - The Ovrimos connection identifier, returned by ovrimos_connect(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=79> 
<name>variant_pow</name>
<versions>(PHP 5)</versions>
<short-description>Returns the result of performing the power function with two variants</short-description>
<description>mixed variant_pow ( mixed $left , mixed $right ) 
 Returns the result of left to the power of right. </description>
<parameters>left - The left operand. 
right - The right operand. </parameters>
<output>Returns the result of left to the power of right. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=80> 
<name>png2wbmp</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Convert PNG image file to WBMP image file</short-description>
<description>bool png2wbmp ( string $pngname , string $wbmpname , int $dest_height , int $dest_width , int $threshold ) 
 Converts a PNG file into a WBMP file. </description>
<parameters>pngname - Path to PNG file. 
wbmpname - Path to destination WBMP file. 
dest_height - Destination image height. 
dest_width - Destination image width. 
threshold - Threshold value, between 0 and 8 (inclusive). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Path to the target png
$path = './test.png';
// Get the image sizes
$image = getimagesize($path);
// Convert image
png2wbmp($path, './test.wbmp', $image[1], $image[0], 7);
?></example>
<example_result></example_result>
</object>

<object id=81> 
<name>msql_error</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Returns error message of last msql call</short-description>
<description>string msql_error ( void ) 
 msql_error() returns the last issued error by the mSQL server. Note that only the last error message is accessible with msql_error(). </description>
<parameters></parameters>
<output>The last error message or an empty string if no error was issued. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=82> 
<name>m_transinqueue</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Number of transactions in client-queue</short-description>
<description>int m_transinqueue ( resource $conn ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().</parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=83> 
<name>acosh</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Гиперболический арккосинус</short-description>
<description>float acosh ( float $arg ) 
 Возвращает гиперболический арккосинус arg, т.е. значение, чей гиперболический косинус равен arg. </description>
<parameters>arg - Входное значение </parameters>
<output>Гиперболический арккосинус arg </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=84> 
<name>msql_numfields</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Alias of msql_num_fields()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=85> 
<name>filter_var_array</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Принимает несколько переменных и, при необходимости, фильтрует их</short-description>
<description>mixed filter_var_array ( array $data [, mixed $definition ] ) 
 Эта функция полезна для получения множества переменных без многократного вызова функции filter_var(). </description>
<parameters>data - Массив со строковыми ключами, содержащий данные для фильтрации. 
definition - Массив, определяющий параметры. Допустимый ключ - строка string, содержащая имя переменной и допустимое значение - или тип фильтра, или массив array, при необходимости определяющий фильтр, флаги и параметры. Если значение является массивом, допустимыми ключами являются filter, который определяет тип фильтра, flags, который определяет любые флаги, применяемые к фильтру, и options, который определяет любые параметры, применяемые к фильтру. См. пример ниже для лучшего понимания. </parameters>
<output>Массив, содержащий значения запрошенных переменных в случае успеха, или FALSE в случае возникновения ошибки. Значение массива будет FALSE, если фильтрация завершилась неудачей, или NULL, если если переменная не определена. </output>
<errors></errors>
<example><?php
error_reporting(E_ALL | E_STRICT);
$data = array(
    'product_id'    => 'libgd<script>',
    'component'     => '10',
    'versions'      => '2.0.33',
    'testscalar'    => array('2', '23', '10', '12'),
    'testarray'     => '2',
);
$args = array(
    'product_id'   => FILTER_SANITIZE_ENCODED,
    'component'    => array('filter'    => FILTER_VALIDATE_INT,
                            'flags'     => FILTER_FORCE_ARRAY, 
                            'options'   => array('min_range' => 1, 'max_range' => 10)
                           ),
    'versions'     => FILTER_SANITIZE_ENCODED,
    'doesnotexist' => FILTER_VALIDATE_INT,
    'testscalar'   => array(
                            'filter' => FILTER_VALIDATE_INT,
                            'flags'  => FILTER_REQUIRE_SCALAR,
                           ),
    'testarray'    => array(
                            'filter' => FILTER_VALIDATE_INT,
                            'flags'  => FILTER_FORCE_ARRAY,
                           )
);
$myinputs = filter_var_array($data, $args);
var_dump($myinputs);
echo "\n";
?></example>
<example_result>
 
array(6) {
  ["product_id"]=>
  array(1) {
    [0]=>
    string(17) "libgd%3Cscript%3E"
  }
  ["component"]=>
  array(1) {
    [0]=>
    int(10)
  }
  ["versions"]=>
  array(1) {
    [0]=>
    string(6) "2.0.33"
  }
  ["doesnotexist"]=>
  NULL
  ["testscalar"]=>
  bool(false)
  ["testarray"]=>
  array(1) {
    [0]=>
    int(2)
  }
}
</example_result>
</object>

<object id=86> 
<name>fdf_set_status</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Set the value of the /STATUS key</short-description>
<description>bool fdf_set_status ( resource $fdf_document , string $status ) 
 Sets the value of the /STATUS key. When a client receives a FDF with a status set it will present the value in an alert box. </description>
<parameters>fdf_document - The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string(). 
status - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=87> 
<name>gzputs</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним gzwrite()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=88> 
<name>session_set_save_handler</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Sets user-level session storage functions</short-description>
<description>bool session_set_save_handler ( callback $open , callback $close , callback $read , callback $write , callback $destroy , callback $gc ) bool session_set_save_handler ( SessionHandler $sessionhandler [, bool $register_shutdown = true ] )</description>
<parameters>sessionhandler - An instance of SessionHandler to register as the session handler 
register_shutdown - Register session_register_shutdown() as a register_shutdown_function() function. 
open - Open function, this works like a constructor in classes and is executed when the session is being opened. The open function expects two parameters, where the first is the save path and the second is the session name. 
close - Close function, this works like a destructor in classes and is executed when the session operation is done. 
read - Read function must return string value always to make save handler work as expected. Return empty string if there is no data to read. Return values from other handlers are converted to boolean expression. TRUE for success, FALSE for failure. 
write - Write function that is called when session data is to be saved. This function expects two parameters: an identifier and the data associated with it. 
 Замечание: 
 The "write" handler is not executed until after the output stream is closed. Thus, output from debugging statements in the "write" handler will never be seen in the browser. If debugging output is necessary, it is suggested that the debug output be written to a file instead. 
destroy - The destroy handler, this is executed when a session is destroyed with session_destroy() and takes the session id as its only parameter. 
gc - The garbage collector, this is executed when the session garbage collector is executed and takes the max session lifetime as its only parameter. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example>
 files. This example could easily be extended to cover database storage using your favorite PHP supported database engine. </example>
<example_result></example_result>
</object>

<object id=89> 
<name>ncurses_addch</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Add character at current position and advance cursor </short-description>
<description>int ncurses_addch ( int $ch ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>ch - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=90> 
<name>get_class</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает имя класса, к которому принадлежит объект</short-description>
<description>string get_class ([ object $object = NULL ] ) 
 Возвращает имя класса, экземпляром которого является объект object. </description>
<parameters>object - Тестируемый объект. Внутри класса этот параметр может быть опущен. </parameters>
<output>Возвращает имя класса, к которому принадлежит экземпляр object. Возвращает FALSE, если object не является объектом. </output>
<errors>Если get_class() будет вызвана с чем-то другим, не являющимся объектом, будет вызвана ошибка уровня E_WARNING. </errors>
<example><?php
class foo {
    function name()
    {
        echo "My name is " , get_class($this) , "\n";
    }
}
// создание объекта
$bar = new foo();
// внешний вызов
echo "Its name is " , get_class($bar) , "\n";
// внутренний вызов
$bar->name();
?></example>
<example_result>
 
Its name is foo
My name is foo
</example_result>
</object>

<object id=91> 
<name>sqlite_factory</name>
<versions>(PHP 5)</versions>
<short-description>Открывает базу данных SQLite и возвращает объект</short-description>
<description>SQLiteDatabase sqlite_factory ( string $filename [, int $mode = 0666 [, string &$error_message ]] ) 
 sqlite_factory() похожа на sqlite_open() в том, что она открывает базу данных SQLite database или пытается создать ее, если она не существует. Однако, в качестве результата возвращается объект SQLiteDatabase, а не ресурс. Для дальнейшего использования и замечаний смотрите страницу sqlite_open(). </description>
<parameters>filename - Путь к базе данных SQLite. 
mode - Режим файла. Предназначется для открытия базы данных в режиме только для чтения. На данный момент этот параметр игнорируется библиотекой sqlite. Значением по умолчанию является 0666, рекомендуется использовать именно это значение. 
error_message - Передается по ссылке и устанавливается в понятное сообщение об ошибке, разъясняющее, почему база данных не может быть открыта, в случае возникновения ошибки. </parameters>
<output>Возвращает объект SQLiteDatabase в случае успеха, или NULL в случае ошибки. </output>
<errors></errors>
<example><?php
$dbhandle = sqlite_factory('sqlitedb');
$dbhandle->query('SELECT user_id, username FROM users');
/* процедурный эквивалент: */
$dbhandle = new SQLiteDatabase('sqlitedb');
$dbhandle->query('SELECT user_id, username FROM users');
?></example>
<example_result></example_result>
</object>

<object id=92> 
<name>openssl_decrypt</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Decrypts data</short-description>
<description>string openssl_decrypt ( string $data , string $method , string $password [, bool $raw_input = false [, string $iv = "" ]] ) 
 Takes a raw or base64 encoded string and decrypts it using a given method and key. Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>data - The data. 
method - The cipher method. 
password - The password. 
raw_input - Setting to TRUE will take a raw encoded string, otherwise a base64 string is assumed for the data parameter. 
iv - A non-NULL Initialization Vector. </parameters>
<output>The decrypted string on success или FALSE в случае возникновения ошибки. </output>
<errors>Emits an E_WARNING level error if an unknown cipher algorithm is passed via the method parameter. </errors>
<example></example>
<example_result></example_result>
</object>

<object id=93> 
<name>swf_actionstop</name>
<versions>(PHP 4)</versions>
<short-description>Stop playing the flash movie at the current frame</short-description>
<description>void swf_actionstop ( void ) 
 Stop playing the flash movie at the current frame. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=94> 
<name>gmp_init</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Создание GMP числа</short-description>
<description>resource gmp_init ( mixed $number [, int $base = 0 ] ) 
 Создает GMP число из целого числа или строки. </description>
<parameters>number - Целое число или строка. Число, заданное строкой может быть десятичным, шестнадцатеричным или восьмеричным. 
base - Основание системы счисления. </parameters>
<output>Число GMP. </output>
<errors></errors>
<example><?php
$a = gmp_init(123456);
$b = gmp_init("0xFFFFDEBACDFEDF7200");
?></example>
<example_result></example_result>
</object>

<object id=95> 
<name>PDF_setgray_stroke</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set stroke color to gray [deprecated]</short-description>
<description>bool PDF_setgray_stroke ( resource $p , float $g ) 
 Sets the current stroke color to a gray value between 0 and 1 inclusive. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. 
 This function is deprecated since PDFlib version 4, use PDF_setcolor() instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=96> 
<name>money_format</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Форматирует число как денежную величину</short-description>
<description>string money_format ( string $format , float $number ) 
 money_format() форматирует число number как денежную величину. Эта функция вызывает функцию strfmon() языка C, но позволяет преобразовать только одно число за один вызов. </description>
<parameters>format - Описание формата состоит из: 
 символа %
=f - Символ =, за которым следует еще один символ f, задает символ заполнения. По умолчанию пробел. 
^ - Отключает группировку символов (определяемую текущей локалью). 
+ или ( - Задает способ форматирования положительных и отрицательных значений. При использовании + будут использоваться аналоги символов + и - из текущей локали. Если указана (, отрицательные числа будут заключены в скобки. По умолчанию +. 
! - Подавляет вывод символа валюты. 
- - Если этот флаг задан, поля будут выравнены влево (с отбивкой вправо), вместо используемого по умолчанию выравнивания вправо (с отбивкой влево). 
w - Строка из десятичных цифр, задающая минимальную ширину поля. Поле будет выравнено вправо, если не указан флаг -. Значение по умолчанию - 0 (ноль). 
#n - Максимальное количество цифр (n), которое ожидается до запятой. Это обычно используется при выводе значений одно под другим, чтобы десятичные точки располагались в одной колонке, при этом используется символ заполнения, если число цифр меньше n. Если число цифр больше n, этот параметр игнорируется. 
.p - Точка, за которой следует число знаков (p), выводимых после запятой. Если значение p равно нулю, десятичная точка и цифры после нее не будут выводиться. Если этот параметр отсутствует, число знаков после запятой определяется текущей локалью. Перед форматированием число округляется до указанного количества знаков. 
i - Используется международный денежный формат из текущей локали (например, для американской локали: USD 1,234.56). 
n - Используется национальный денежный формат из текущей локали (например, для локали de_DE: EU1.234,56). 
% - Вставляет символ %. 
number - Форматируемое число. </parameters>
<output>Возвращает отформатированную строку. Символы перед и после описания формата возвращаются без изменений. Если number не является числом, то будет возвращен NULL и вызвана ошибка уровня E_WARNING. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=97> 
<name>mcrypt_module_get_supported_key_sizes</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Returns an array with the supported keysizes of the opened algorithm</short-description>
<description>array mcrypt_module_get_supported_key_sizes ( string $algorithm [, string $lib_dir ] ) 
 Returns an array with the key sizes supported by the specified algorithm. If it returns an empty array then all key sizes between 1 and mcrypt_module_get_algo_key_size() are supported by the algorithm. </description>
<parameters>algorithm - The algorithm to be used. 
lib_dir - The optional lib_dir parameter can contain the location where the algorithm module is on the system. </parameters>
<output>Returns an array with the key sizes supported by the specified algorithm. If it returns an empty array then all key sizes between 1 and mcrypt_module_get_algo_key_size() are supported by the algorithm. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=98> 
<name>posix_getppid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Return the parent process identifier</short-description>
<description>int posix_getppid ( void ) 
 Return the process identifier of the parent process of the current process. </description>
<parameters></parameters>
<output>Returns the identifier, as an integer. </output>
<errors></errors>
<example><?php
echo posix_getppid(); //8259
?></example>
<example_result></example_result>
</object>

<object id=99> 
<name>imagechar</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Draw a character horizontally</short-description>
<description>bool imagechar ( resource $image , int $font , int $x , int $y , string $c , int $color ) 
 imagechar() draws the first character of c in the image identified by image with its upper-left at x,y (top left is 0, 0) with the color color. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
font - Может принимать значения 1, 2, 3, 4, 5 для встроенных шрифтов в кодировкеlatin2 (более высокое число соответствует большему шрифту) или любому из ваших собственных идентификаторов шрифтов,зарегистрированных с помощью imageloadfont().
x - x-coordinate of the start. 
y - y-coordinate of the start. 
c - The character to draw. 
color - A color identifier created with imagecolorallocate(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$im = imagecreate(100, 100);
$string = 'PHP';
$bg = imagecolorallocate($im, 255, 255, 255);
$black = imagecolorallocate($im, 0, 0, 0);
// prints a black "P" in the top left corner
imagechar($im, 1, 0, 0, $string, $black);
header('Content-type: image/png');
imagepng($im);
?></example>
<example_result></example_result>
</object>

<object id=100> 
<name>mssql_connect</name>
<versions>(PHP 4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Open MS SQL server connection</short-description>
<description>resource mssql_connect ([ string $servername [, string $username [, string $password [, bool $new_link = false ]]]] ) 
 mssql_connect() establishes a connection to a MS SQL server. 
 The link to the server will be closed as soon as the execution of the script ends, unless it&#039;s closed earlier by explicitly calling mssql_close(). </description>
<parameters>servername - The MS SQL server. It can also include a port number, e.g. hostname:port (Linux), or hostname,port (Windows). 
username - The username. 
password - The password. 
new_link - If a second call is made to mssql_connect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned. This parameter modifies this behavior and makes mssql_connect() always open a new link, even if mssql_connect() was called before with the same parameters. </parameters>
<output>Returns a MS SQL link identifier on success, or FALSE on error. </output>
<errors></errors>
<example><?php
// Server in the this format: <computer>\<instance name> or 
// <server>,<port> when using a non default port number
$server = 'KALLESPC\SQLEXPRESS';
// Connect to MSSQL
$link = mssql_connect($server, 'sa', 'phpfi');
if (!$link) {
    die('Something went wrong while connecting to MSSQL');
}?></example>
<example_result></example_result>
</object>

<object id=101> 
<name>range</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Создает массив, содержащий диапазон элементов</short-description>
<description>array range ( mixed $start , mixed $limit [, number $step = 1 ] ) 
 Создает массив, содержащий диапазон элементов. </description>
<parameters>start - Первое значение последовательности. 
limit - Конечное значение, которым заканчивается последовательность. 
step - Если указан параметр step, то он будет использоваться как инкремент между элементами последовательности. step должен быть положительным числом. Если step не указан, он принимает значение по умолчанию 1. </parameters>
<output>Возвращает массив элементов от start до limit, включительно. </output>
<errors></errors>
<example><?php
// array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
foreach (range(0, 12) as $number) {
    echo $number;
}
// Параметр step был добавлен в 5.0.0
// array(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100)
foreach (range(0, 100, 10) as $number) {
    echo $number;
}
// Использование последовательности знаков было добавлено в версии 4.1.0
// array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i');
foreach (range('a', 'i') as $letter) {
    echo $letter;
}// array('c', 'b', 'a');
foreach (range('c', 'a') as $letter) {
    echo $letter;
}?></example>
<example_result></example_result>
</object>

<object id=102> 
<name>enchant_broker_get_error</name>
<versions>(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )</versions>
<short-description>Returns the last error of the broker</short-description>
<description>string enchant_broker_get_error ( resource $broker ) 
 Returns the last error which occurred in this broker. </description>
<parameters>broker - Broker resource. </parameters>
<output>Return the msg string if an error was found or FALSE </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=103> 
<name>dbplus_undoprepare</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Prepare undo</short-description>
<description>int dbplus_undoprepare ( resource $relation ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>relation - A relation opened by dbplus_open(). </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=104> 
<name>exec</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Исполняет внешнюю программу</short-description>
<description>string exec ( string $command [, array &$output [, int &$return_var ]] ) 
 exec() исполняет команду command. </description>
<parameters>command - Команда (имя программы с аргументами - прим.пер.), которая будет исполнена. 
output - Если параметр output указан, то массив будет заполнен строками вывода программы. Завершающие пробелы, такие как \n (перевод строки - прим.пер.), включены в массив не будут. Обратите внимание, что если массив уже содержит какие-либо элементы перед вызовом функции exec(), то вывод команды будет дописан в конец массива. Если же вы не хотите дополнять предыдущее содержимое массива, следует вызвать функцию unset() с именем массива в качестве аргумента перед его передачей в качестве аргумента функции exec(). 
return_var - Если заданы оба параметра return_var и output, то при выходе эта переменная будет содержать статус завершения внешней программы. </parameters>
<output>Последняя строка вывода при исполнении заданной команды. Если требуется исполнить команду и получить все данные программы обратно без какой-либо обработки, следует использовать функцию passthru(). </output>
<errors></errors>
<example><?php
// выводит имя пользователя, от имени которого запущен процесс php/httpd
// (применимо к системам с командой "whoami" в системном пути)
echo exec('whoami');
?></example>
<example_result></example_result>
</object>

<object id=105> 
<name>rawurlencode</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>URL-кодирование строки согласно RFC 3986</short-description>
<description>string rawurlencode ( string $str ) 
 Кодирование строки осуществляется согласно &raquo; RFC 3986. </description>
<parameters>str - URL, который должен быть закодирован. </parameters>
<output>Возвращает строку, в которой все не цифробуквенные символы, кроме -_. должны быть заменены знаком процента (%), за которым следует два шестнадцатеричных числа. Это кодирование, описанное в &raquo; RFC 3986, служит для защиты буквенных символов от интерпретации в качестве специальных разграничителей URL и защищает URL от искажения при передаче символов с последующей конвертацией (как в некоторых почтовых системах). 
 Замечание: 
 До версии PHP 5.3.0, rawurlencode кодировал символ "тильда" (~) в соответствии с &raquo; RFC 1738. </output>
<errors></errors>
<example><?php
echo '<a href="ftp://user:', rawurlencode('foo @+%/'),
     '@ftp.example.com/x.txt">';
?></example>
<example_result>
 
<a href="ftp://user:foo%20%40%2B%25%2F@ftp.example.com/x.txt">
</example_result>
</object>

<object id=106> 
<name>textdomain</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Устанавливает домен по умолчанию</short-description>
<description>string textdomain ( string $text_domain ) 
 Данная функция устанавливает домен, в котором будет производиться поиск при вызове функции gettext(), обычно называется именем приложения. </description>
<parameters>text_domain - Новый домен сообщений, или NULL для получения текущего значения без его изменения. </parameters>
<output>В случае успеха данная функция возвращает текущее домен сообщений, после возможного его изменения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=107> 
<name>exif_thumbnail</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Retrieve the embedded thumbnail of a TIFF or JPEG image</short-description>
<description>string exif_thumbnail ( string $filename [, int &$width [, int &$height [, int &$imagetype ]]] ) 
 exif_thumbnail() reads the embedded thumbnail of a TIFF or JPEG image. 
 If you want to deliver thumbnails through this function, you should send the mimetype information using the header() function. 
 It is possible that exif_thumbnail() cannot create an image but can determine its size. In this case, the return value is FALSE but width and height are set. </description>
<parameters>filename - The name of the image file being read. This image contains an embedded thumbnail. 
width - The return width of the returned thumbnail. 
height - The returned height of the returned thumbnail. 
imagetype - The returned image type of the returned thumbnail. This is either TIFF or JPEG. </parameters>
<output>Returns the embedded thumbnail, or FALSE if the image contains no thumbnail. </output>
<errors></errors>
<example><?php
if (array_key_exists('file', $_REQUEST)) {
    $image = exif_thumbnail($_REQUEST['file'], $width, $height, $type);
} else {
    $image = false;
}if ($image!==false) {
    header('Content-type: ' .image_type_to_mime_type($type));
    echo $image;
    exit;
} else {
    // no thumbnail available, handle the error here
    echo 'No thumbnail available';
}?></example>
<example_result></example_result>
</object>

<object id=108> 
<name>PDF_attach_file</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Add file attachment for current page [deprecated]</short-description>
<description>bool PDF_attach_file ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $filename , string $description , string $author , string $mimetype , string $icon ) 
 Adds a file attachment annotation. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. 
 This function is deprecated since PDFlib version 6, use PDF_create_annotation() with type=FileAttachment instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=109> 
<name>ftp_ssl_connect</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Устанавливает соединение с FTP-сервером через SSL</short-description>
<description>resource ftp_ssl_connect ( string $host [, int $port = 21 [, int $timeout = 90 ]] ) 
 ftp_ssl_connect() устанавливает SSL соединение с FTP-сервером, заданным аргументом host. 
 Замечание: Почему эта функция может быть не определена
 
 Функция ftp_ssl_connect() доступна только в том случае, если PHP был собран с поддержкой OpenSSL. Это означает что под Windows эта функция не будет определена в официальном дистрибутиве. Чтобы использовать эту функцию под Windows, вам придется собрать PHP самостоятельно для включения поддержки OpenSSL. 
 Замечание: 
 ftp_ssl_connect() не предназначена для использования по протоколу sFTP. Для использования sFTP из PHP смотрите функцию ssh2_sftp(). </description>
<parameters>host - Адрес FTP-сервера. Этот параметр не должен содержать слэши в конце и префикс ftp:// в начале. 
port - Задает порт, на котором устанавливается соединение. Если равен нулю или опущен, по умолчанию используется стандартный для протокола FTP порт 21. 
timeout - Задает таймаут для всех операций с этим соединением. По умолчанию таймаут устанавливается в 90 секунд. Получить и установить значение таймаута можно также с помощью функций ftp_set_option() и ftp_get_option(). </parameters>
<output>Возвращает SSL-FTP поток в случае успеха, или FALSE при возникновении ошибки. </output>
<errors></errors>
<example><?php
// установка ssl-соединения
$conn_id = ftp_ssl_connect($ftp_server);
// проверка имени пользователя и пароля
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);
echo ftp_pwd($conn_id); // /
// закрытие ssl-соединения
ftp_close($conn_id);
?></example>
<example_result></example_result>
</object>

<object id=110> 
<name>msql_field_len</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get field length</short-description>
<description>int msql_field_len ( resource $result , int $field_offset ) 
 msql_field_len() returns the length of the specified field. </description>
<parameters>result - Обрабатываемый результат запроса,полученный с помощью функции msql_query().
field_offset - Числовое смещение поля.field_offset начинается с 1.</parameters>
<output>Returns the length of the specified field or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=111> 
<name>count_chars</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает информацию о символах, входящих в строку</short-description>
<description>mixed count_chars ( string $string [, int $mode = 0 ] ) 
 Подсчитывает количество вхождений каждого из символов с ASII-кодами в диапазоне (0..255) в строке string и возвращает эту информацию в различных форматах. </description>
<parameters>string - Исследуемая строка. 
mode - Смотрите возвращаемые значения. </parameters>
<output>В зависимости от параметра mode count_chars() возвращает одно из следующих значений: 0 - массив, индексами которого являются ASCII-коды, а значениями - число вхождений соответствующего символа. 1 - то же, что и для 0, но информация о символах с нулевым числом вхождений не включается в массив. 2 - то же, что и для 0, но в массив включается информация только о символах с нулевым числом вхождений. 3 - строка, содержащая все уникальные символы в исследуемой строке. 4 - строка, состоящая из символов, которые не входят в исходую строку. </output>
<errors></errors>
<example><?php
$data = "Two Ts and one F.";
foreach (count_chars($data, 1) as $i => $val) {
   echo "\"" , chr($i) , "\" встречается в строке $val раз(а).\n";
}?></example>
<example_result>
 
" " встречается в строке 4 раз(а).
"." встречается в строке 1 раз(а).
"F" встречается в строке 1 раз(а).
"T" встречается в строке 2 раз(а).
"a" встречается в строке 1 раз(а).
"d" встречается в строке 1 раз(а).
"e" встречается в строке 1 раз(а).
"n" встречается в строке 2 раз(а).
"o" встречается в строке 2 раз(а).
"s" встречается в строке 1 раз(а).
"w" встречается в строке 1 раз(а).
</example_result>
</object>

<object id=112> 
<name>easter_date</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Метка времени Unix соответствующая полуночи на Пасху в заданном году </short-description>
<description>int easter_date ([ int $year ] ) 
 Возвращает метку времени Unix соответствующую полуночи на Пасху в заданном году. Внимание 
 Функция выдаст предупреждение, если заданный год будет выходить за пределы диапазона меток времени Unix (с 1970 по 2037 гг). </description>
<parameters>year - Год - число между 1970 и 2037 </parameters>
<output>Дата Пасхи в виде метки времени Unix. </output>
<errors></errors>
<example><?php
echo date("M-d-Y", easter_date(1999));        // Apr-04-1999
echo date("M-d-Y", easter_date(2000));        // Apr-23-2000
echo date("M-d-Y", easter_date(2001));        // Apr-15-2001
?></example>
<example_result></example_result>
</object>

<object id=113> 
<name>ob_iconv_handler</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Convert character encoding as output buffer handler</short-description>
<description>string ob_iconv_handler ( string $contents , int $status ) 
 Converts the string encoded in internal_encoding to output_encoding. 
 internal_encoding and output_encoding should be defined in the php.ini file or in iconv_set_encoding(). </description>
<parameters></parameters>
<output>See ob_start() for information about this handler return values. </output>
<errors></errors>
<example><?php
iconv_set_encoding("internal_encoding", "UTF-8");
iconv_set_encoding("output_encoding", "ISO-8859-1");
ob_start("ob_iconv_handler"); // start output buffering
?></example>
<example_result></example_result>
</object>

<object id=114> 
<name>ovrimos_num_fields</name>
<versions>(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)</versions>
<short-description>Returns the number of columns</short-description>
<description>int ovrimos_num_fields ( int $result_id ) 
 Returns the number of columns in the specified result identifier. </description>
<parameters>result_id - A result identifier, returned by ovrimos_execute() or ovrimos_exec(). </parameters>
<output>Returns the number of columns as an integer, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=115> 
<name>zip_entry_close</name>
<versions>(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)</versions>
<short-description>Закрывает дескриптор директории</short-description>
<description>bool zip_entry_close ( resource $zip_entry ) 
 Закрывает заданный дескриптор директории. </description>
<parameters>zip_entry - Дескриптор директории, ранее открытый функцией zip_entry_open(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=116> 
<name>swf_actiontogglequality</name>
<versions>(PHP 4)</versions>
<short-description>Toggle between low and high quality</short-description>
<description>void swf_actiontogglequality ( void ) 
 Toggle the flash movie between high and low quality. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=117> 
<name>socket_strerror</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Return a string describing a socket error</short-description>
<description>string socket_strerror ( int $errno ) 
 socket_strerror() takes as its errno parameter a socket error code as returned by socket_last_error() and returns the corresponding explanatory text. 
 Замечание: 
 Although the error messages generated by the socket extension are in English, the system messages retrieved with this function will appear depending on the current locale (LC_MESSAGES). </description>
<parameters>errno - A valid socket error number, likely produced by socket_last_error(). </parameters>
<output>Returns the error message associated with the errno parameter. </output>
<errors></errors>
<example><?php
if (false == ($socket = @socket_create(AF_INET, SOCK_STREAM, SOL_TCP))) {
   echo "socket_create() failed: reason: " . socket_strerror(socket_last_error()) . "\n";
}
if (false == (@socket_bind($socket, '127.0.0.1', 80))) {
   echo "socket_bind() failed: reason: " . socket_strerror(socket_last_error($socket)) . "\n";
}?></example>
<example_result>
 
socket_bind() failed: reason: Permission denied
</example_result>
</object>

<object id=118> 
<name>variant_xor</name>
<versions>(PHP 5)</versions>
<short-description>Performs a logical exclusion on two variants</short-description>
<description>mixed variant_xor ( mixed $left , mixed $right ) 
 Performs a logical exclusion. </description>
<parameters>left - The left operand. 
right - The right operand. </parameters>
<output>Variant XOR Rules If left is If right is then the result is TRUETRUEFALSE TRUEFALSETRUE FALSETRUETRUE FALSEFALSEFALSE NULLNULLNULL </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=119> 
<name>imap_fetchstructure</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Read the structure of a particular message</short-description>
<description>object imap_fetchstructure ( resource $imap_stream , int $msg_number [, int $options = 0 ] ) 
 Fetches all the structured information for a given message. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
msg_number - The message number 
options - This optional parameter only has a single option, FT_UID, which tells the function to treat the msg_number argument as a UID. </parameters>
<output>Returns an object includes the envelope, internal date, size, flags and body structure along with a similar object for each mime attachment. The structure of the returned objects is as follows: </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=120> 
<name>PDF_get_minorversion</name>
<versions>(PHP 4 >= 4.2.0, PECL pdflib >= 1.0.0)</versions>
<short-description>Get minor version number [deprecated]</short-description>
<description>int PDF_get_minorversion ( void ) 
 Returns the minor version number of the PDFlib version. 
 This function is deprecated since PDFlib version 5, use PDF_get_value() with the parameter minor instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=121> 
<name>array_intersect</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Вычисляет схождение массивов</short-description>
<description>array array_intersect ( array $array1 , array $array2 [, array $ ... ] ) 
 Функция array_intersect() возвращает массив, содержащий все значения массива array1, которые содержатся во всех аргументах. Обратите внимание, что ключи сохраняются. </description>
<parameters>array1 - Основной проверяемый массив 
array2 - Массив, с которым идет сравнение значений 
array - Дополнительные массивы для сравнения </parameters>
<output>Возвращает массив, содержащий все значения array1, которые существуют во всех переданных аргументах. </output>
<errors></errors>
<example><?php
$array1 = array("a" => "green", "red", "blue");
$array2 = array("b" => "green", "yellow", "red");
$result = array_intersect($array1, $array2);
print_r($result);
?></example>
<example_result>
 
Array
(
    [a] => green
    [0] => red
)
</example_result>
</object>

<object id=122> 
<name>shm_get_var</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Returns a variable from shared memory</short-description>
<description>mixed shm_get_var ( resource $shm_identifier , int $variable_key ) 
 shm_get_var() returns the variable with a given variable_key, in the given shared memory segment. The variable is still present in the shared memory. </description>
<parameters>shm_identifier - Shared memory segment, obtained from shm_attach(). 
variable_key - The variable key. </parameters>
<output>Returns the variable with the given key. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=123> 
<name>socket_recvfrom</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Receives data from a socket whether or not it is connection-oriented</short-description>
<description>int socket_recvfrom ( resource $socket , string &$buf , int $len , int $flags , string &$name [, int &$port ] ) 
 The socket_recvfrom() function receives len bytes of data in buf from name on port port (if the socket is not of type AF_UNIX) using socket. socket_recvfrom() can be used to gather data from both connected and unconnected sockets. Additionally, one or more flags can be specified to modify the behaviour of the function. 
 The name and port must be passed by reference. If the socket is not connection-oriented, name will be set to the internet protocol address of the remote host or the path to the UNIX socket. If the socket is connection-oriented, name is NULL. Additionally, the port will contain the port of the remote host in the case of an unconnected AF_INET or AF_INET6 socket. </description>
<parameters>socket - The socket must be a socket resource previously created by socket_create(). 
buf - The data received will be fetched to the variable specified with buf. 
len - Up to len bytes will be fetched from remote host. 
flags - The value of flags can be any combination of the following flags, joined with the binary OR (|) operator. 
name - If the socket is of the type AF_UNIX type, name is the path to the file. Else, for unconnected sockets, name is the IP address of, the remote host, or NULL if the socket is connection-oriented. 
port - This argument only applies to AF_INET and AF_INET6 sockets, and specifies the remote port from which the data is received. If the socket is connection-oriented, port will be NULL. </parameters>
<output>socket_recvfrom() returns the number of bytes received, or FALSE if there was an error. The actual error code can be retrieved by calling socket_last_error(). This error code may be passed to socket_strerror() to get a textual explanation of the error. </output>
<errors></errors>
<example><?php
error_reporting(E_ALL | E_STRICT);
$socket = socket_create(AF_INET, SOCK_DGRAM, SOL_UDP);
socket_bind($socket, '127.0.0.1', 1223);
$from = '';
$port = 0;
socket_recvfrom($socket, $buf, 12, 0, $from, $port);
echo "Received $buf from remote address $from and remote port $port" . PHP_EOL;
?></example>
<example_result></example_result>
</object>

<object id=124> 
<name>hw_InsColl</name>
<versions>(PHP 4)</versions>
<short-description>Insert collection</short-description>
<description>int hw_inscoll ( int $connection , int $objectID , array $object_array ) 
 Inserts a new collection with attributes as in object_array into collection with object ID objectID. </description>
<parameters>connection - The connection identifier. 
objectID - 
object_array - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=125> 
<name>chown</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Изменяет владельца файла</short-description>
<description>bool chown ( string $filename , mixed $user ) 
 Осуществляет попытку изменения владельца файла с именем filename на владельца, чье имя передано в параметре user (в виде числа или строки). Только суперпользователь может изменять владельца файла. </description>
<parameters>filename - Путь к файлу. 
user - Имя пользователя или число. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Используемое имя файла и имя пользователя
$file_name= "foo.php";
$path = "/home/sites/php.net/public_html/sandbox/" . $file_name ;
$user_name = "root";
// Устанавливаем пользователя
chown($path, $user_name);
// Проверяем результат
$stat = stat($path);
print_r(posix_getpwuid($stat['uid']));
?></example>
<example_result>
 
Array
(
    [name] => root
    [passwd] => x
    [uid] => 0
    [gid] => 0
    [gecos] => root
    [dir] => /root
    [shell] => /bin/bash
)
</example_result>
</object>

<object id=126> 
<name>utf8_decode</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Преобразует строку с ISO-8859-1 символами кодированную в UTF-8 в однобайтную ISO-8859-1 </short-description>
<description>string utf8_decode ( string $data ) 
 Эта функция декодирует data, предположительно закодированные в UTF-8, в ISO-8859-1. </description>
<parameters>data - Строка закодированная в UTF-8. </parameters>
<output>Возвращает данные data, переведенные в ISO-8859-1. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=127> 
<name>ncurses_napms</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Sleep</short-description>
<description>int ncurses_napms ( int $milliseconds ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>milliseconds - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=128> 
<name>ftp_nb_continue</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Продолжает асинхронную операцию</short-description>
<description>int ftp_nb_continue ( resource $ftp_stream ) 
 Продолжает отправку или получение файла в асинхронном режиме. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP сервером. </parameters>
<output>Возвращает FTP_FAILED, FTP_FINISHED или FTP_MOREDATA. </output>
<errors></errors>
<example><?php
// Начало скачивания
$ret = ftp_nb_get($my_connection, "test", "README", FTP_BINARY);
while ($ret == FTP_MOREDATA) {
   // продолжение скачивания  ...
   $ret = ftp_nb_continue($my_connection);
}if ($ret != FTP_FINISHED) {
   echo "При скачивании файла произолшла ошибка...";
   exit(1);
}?></example>
<example_result></example_result>
</object>

<object id=129> 
<name>imap_8bit</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Конвертирует 8-битную строку в quoted-printable строку</short-description>
<description>string imap_8bit ( string $string ) 
 Конвертирует 8-битную строку в quoted-printable строку (в соответствии с &raquo; RFC2045, раздел 6.7). </description>
<parameters>string - 8-битная строка для конвертации </parameters>
<output>Возвращает quoted-printable строку. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=130> 
<name>ldap_search</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Поиск по LDAP дереву</short-description>
<description>resource ldap_search ( resource $link_identifier , string $base_dn , string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref ]]]]] ) 
 Выполняет поиск для указанного фильтра в директории с границами LDAP_SCOPE_SUBTREE. Эквивалентно поиску по всему каталогу. 
 Начиная с 4.0.5 также возможно производить параллельный поиск. Чтобы это сделать , необходимо использовать в качестве первого параметра массив идентификаторов ссылок, а не единственный идентификатор. Если необходимости использовать то же самое основное DN и тот же самый фильтр для всех поисков нет, то можно использовать массив базовых DN и/или массив фильтров. Эти массивы должны иметь такой же размер, как и массив идентификаторов ссылок, так как первые записи массивов используются для одного поиска, вторые записи используются для другого и так далее. При выполнении параллельного поиска возвращается массив идентификаторов результатов поиска, кроме ошибочных случаев, тогда запись, соответствующая поиску, будет равна FALSE. Это похоже на обычный поиск, когда возвращается значение, за исключением того, что идентификатор результата всегда возвращается после проведения поиска. Есть некоторые редкие случаи, куда обычный поиск возвращает FALSE, в то время как параллельный поиск возвращает идентификатор. </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
base_dn - Базовое DN для каталога. 
filter - Поисковый фильтр может быть простым или расширенным, используя булевы операторы в формате, описанном в документации LDAP (см. &raquo; Netscape Directory SDK для полной информации о фильтрах). 
attributes - Массив необходимых атрибутов, например, array("mail", "sn", "cn"). Обратите внимание, что "dn" всегда возвращается, независимо от того, какие типы атрибутов требуются. 
attrsonly - Должен быть равен 1, если требуются типы атрибута. Если равен 0, то, по умолчанию, выбираются и типы атрибутов и значения. 
sizelimit - Позволяет ограничить количество выбранных записей. Установка этого параметра равным 0 означает, что ограничение отсутствует. 
timelimit - Устанавливает число секунд, ограничивающее процесс поиска. Установка этого параметра равным 0 означает, что ограничение отсутствует. 
deref - Определяет как псевдонимы должны быть обработаны во время поиска. Может быть одним из следующих: LDAP_DEREF_NEVER - (по умолчанию) псевдонимы никогда не разыменовываются. LDAP_DEREF_SEARCHING - псевдонимы должны быть разыменованы во время поиска, но не при определении местоположения базового объекта поиска. LDAP_DEREF_FINDING - псевдонимы должны быть разыменованы при определении местоположения базового объекта, но не во время поиска. LDAP_DEREF_ALWAYS - псевдонимы должны всегда разыменовываться. </parameters>
<output>Возвращает идентификатор результата поиска или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
// $ds верный идентификатор ссылки на сервер директории
// $person всё или часть имени человека, н-р "Jo"
$dn = "o=My Company, c=US";
$filter="(|(sn=$person*)(givenname=$person*))";
$justthese = array("ou", "sn", "givenname", "mail");
$sr=ldap_search($ds, $dn, $filter, $justthese);
$info = ldap_get_entries($ds, $sr);
echo $info["count"]." записей возвращено\n";
?></example>
<example_result></example_result>
</object>

<object id=131> 
<name>ctype_digit</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Проверяет на наличие цифровых символов в строке</short-description>
<description>bool ctype_digit ( string $text ) 
 Проверяет, являются ли все символы в строке text цифровыми. </description>
<parameters>text - Проверяемая строка. </parameters>
<output>Возвращает TRUE если каждый символ строки text является десятичной цифрой, либо FALSE в противном случае. </output>
<errors></errors>
<example><?php
$strings = array('1820.20', '10002', 'wsl!12');
foreach ($strings as $testcase) {
    if (ctype_digit($testcase)) {
        echo "Строка $testcase состоит только из цифр.\n";
    } else {
        echo "Строка $testcase не состоит только из цифр.\n";
    }
}?></example>
<example_result>
 
Строка 1820.20 не состоит только из цифр.
Строка 10002 состоит только из цифр.
Строка wsl!12 не состоит только из цифр.
</example_result>
</object>

<object id=132> 
<name>m_returnstatus</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Check to see if the transaction was successful</short-description>
<description>int m_returnstatus ( resource $conn , int $identifier ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
identifier - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=133> 
<name>stripcslashes</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Удаляет экранирование символов, произведенное функцией addcslashes()</short-description>
<description>string stripcslashes ( string $str ) 
 Удаляет экранирующие обратные слэши. Распознает экранирование в стиле C (\n, \r ..., восьмеричное и шестнадцатиричное представление). </description>
<parameters>str - Строка, с которой нужно убрать экранирование. </parameters>
<output>Возвращает неэкранированную строку. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=134> 
<name>iterator_count</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Count the elements in an iterator</short-description>
<description>int iterator_count ( Traversable $iterator ) 
 Count the elements in an iterator. </description>
<parameters>iterator - The iterator being counted. </parameters>
<output>The number of elements in iterator. </output>
<errors></errors>
<example><?php
$iterator = new ArrayIterator(array('recipe'=>'pancakes', 'egg', 'milk', 'flour'));
var_dump(iterator_count($iterator));
?></example>
<example_result>
 
int(4)
</example_result>
</object>

<object id=135> 
<name>mb_strstr</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Находит первое вхождение подстроки в строке</short-description>
<description>string mb_strstr ( string $haystack , string $needle [, bool $part = false [, string $encoding ]] ) 
 mb_strstr() находит первое вхождение подстроки needle в строке haystack и возвращает часть haystack. Если needle не найдена, возвращается FALSE. </description>
<parameters>haystack - Строка, в которой ищется первое вхождение строки needle 
needle - Строка для поиска в haystack 
part - Определяет, какую часть строки haystack вернет эта функция. Если установлено TRUE, возвращается часть haystack от начала до первого вхождения needle. Если установлено FALSE, возвращается часть haystack от первого вхождения needle до конца. 
encoding - Название используемой кодировки символов. Если этот параметр опущен, используется внутренняя кодировка. </parameters>
<output>Возвращает часть строки haystack, или FALSE, если needle не найдена. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=136> 
<name>ctype_xdigit</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Проверяет наличие шестнадцатиричных цифр</short-description>
<description>bool ctype_xdigit ( string $text ) 
 Проверяет, являются ли все символы в строке text шестнадцатиричными &#039;цифрами&#039;. </description>
<parameters>text - Проверяемая строка. </parameters>
<output>Возвращает TRUE если каждый символ строки text является шестнадцатиричной &#039;цифрой&#039;, то есть десятичной цифрой либо символом из диапазона [A-Fa-f], в обратном случае возвращает FALSE. </output>
<errors></errors>
<example><?php
$strings = array('AB10BC99', 'AR1012', 'ab12bc99');
foreach ($strings as $testcase) {
    if (ctype_xdigit($testcase)) {
        echo "Строка $testcase состоит из шестнадцатиричных цифр.\n";
    } else {
        echo "Строка $testcase состоит не только из шестнадцатиричных цифр.\n";
    }
}?></example>
<example_result>
 
Строка AB10BC99 состоит из шестнадцатиричных цифр.
Строка AR1012 состоит не только из шестнадцатиричных цифр.
Строка ab12bc99 состоит из шестнадцатиричных цифр.
</example_result>
</object>

<object id=137> 
<name>dio_close</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)</versions>
<short-description>Closes the file descriptor given by fd</short-description>
<description>void dio_close ( resource $fd ) 
 The function dio_close() closes the file descriptor fd. </description>
<parameters>fd - The file descriptor returned by dio_open(). </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
$fd = dio_open('/dev/ttyS0', O_RDWR);
dio_close($fd);
?></example>
<example_result></example_result>
</object>

<object id=138> 
<name>sqlite_prev</name>
<versions>(PHP 5)</versions>
<short-description>Переходит на предыдущую запись</short-description>
<description>bool sqlite_prev ( resource $result ) 
 Объектно-ориентированный стиль (метод): bool SQLiteResult::prev ( void )</description>
<parameters>result - Ресурс результата SQLite. Этот параметр не требуется при использовании объектно-ориентированного метода. </parameters>
<output>Возвращает TRUE в случае успеха, или FALSE, если предыдущих записей больше нет. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=139> 
<name>fileperms</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает информацию о правах на файл</short-description>
<description>int fileperms ( string $filename ) 
 Возвращает информацию о правах доступа на файл. </description>
<parameters>filename - Путь к файлу. </parameters>
<output>Возвращает права доступа на указанный файл в числовом виде, который также подходит для использования в функции chmod(), или FALSE в случае возникновения ошибки. </output>
<errors>В случае неудачного завершения работы генерируется ошибка уровня E_WARNING.</errors>
<example><?php
echo substr(sprintf('%o', fileperms('/tmp')), -4);
echo substr(sprintf('%o', fileperms('/etc/passwd')), -4);
?></example>
<example_result>
 
1777
0644
</example_result>
</object>

<object id=140> 
<name>ibase_drop_db</name>
<versions>(PHP 5)</versions>
<short-description>Drops a database</short-description>
<description>bool ibase_drop_db ([ resource $connection = NULL ] ) 
 This functions drops a database that was opened by either ibase_connect() or ibase_pconnect(). The database is closed and deleted from the server. </description>
<parameters>connection - An InterBase link identifier. If omitted, the last opened link is assumed. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=141> 
<name>assert</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Checks if assertion is FALSE</short-description>
<description>bool assert ( mixed $assertion ) 
 assert() will check the given assertion and take appropriate action if its result is FALSE. 
 If the assertion is given as a string it will be evaluated as PHP code by assert(). The advantages of a string assertion are less overhead when assertion checking is off and messages containing the assertion expression when an assertion fails. This means that if you pass a boolean condition as assertion this condition will not show up as parameter to the assertion function which you may have defined with the assert_options() function, the condition is converted to a string before calling that handler function, and the boolean FALSE is converted as the empty string. 
 Assertions should be used as a debugging feature only. You may use them for sanity-checks that test for conditions that should always be TRUE and that indicate some programming errors if not or to check for the presence of certain features like extension functions or certain system limits and features. 
 Assertions should not be used for normal runtime operations like input parameter checks. As a rule of thumb your code should always be able to work correctly if assertion checking is not activated. 
 The behavior of assert() may be configured by assert_options() or by .ini-settings described in that functions manual page. 
 The assert_options() function and/or ASSERT_CALLBACK configuration directive allow a callback function to be set to handle failed assertions. 
 assert() callbacks are particularly useful for building automated test suites because they allow you to easily capture the code passed to the assertion, along with information on where the assertion was made. While this information can be captured via other methods, using assertions makes it much faster and easier! 
 The callback function should accept three arguments. The first argument will contain the file the assertion failed in. The second argument will contain the line the assertion failed on and the third argument will contain the expression that failed (if any - literal values such as 1 or "two" will not be passed via this argument) </description>
<parameters>assertion - The assertion. </parameters>
<output>FALSE if the assertion is false, TRUE otherwise. </output>
<errors></errors>
<example><?php
// Active assert and make it quiet
assert_options(ASSERT_ACTIVE, 1);
assert_options(ASSERT_WARNING, 0);
assert_options(ASSERT_QUIET_EVAL, 1);
// Create a handler function
function my_assert_handler($file, $line, $code)
{    echo "<hr>Assertion Failed:
        File '$file'<br />
        Line '$line'<br />
        Code '$code'<br /><hr />";
}
// Set up the callback
assert_options(ASSERT_CALLBACK, 'my_assert_handler');
// Make an assertion that should fail
assert('mysql_query("")');
?></example>
<example_result></example_result>
</object>

<object id=142> 
<name>dirname</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает имя родительского каталога из указанного пути</short-description>
<description>string dirname ( string $path ) 
 Получив строку, содержащую путь к файлу или каталогу, данная функция возвратит родительский каталог данного пути. </description>
<parameters>path - Путь. </parameters>
<output>Возвращает путь к родительской директории. Если в параметре path не содержится слэшей, будет возвращена точка (&#039;.&#039;), обозначающая текущую директорию. В другом случае будет возвращен path без последнего компонента /component. </output>
<errors></errors>
<example><?php
echo "1) " . dirname("/etc/passwd") . PHP_EOL; // 1) /etc
echo "2) " . dirname("/etc/") . PHP_EOL; // 2) / (или \ на Windows)
echo "3) " . dirname("."); // 3) .
?></example>
<example_result></example_result>
</object>

<object id=143> 
<name>fam_monitor_file</name>
<versions>(PHP 5 <= 5.0.5)</versions>
<short-description>Monitor a regular file for changes</short-description>
<description>resource fam_monitor_file ( resource $fam , string $filename ) 
 Requests monitoring for a single file. A FAM event will be generated whenever the file status changes (i.e. the result of function stat() on that file). 
 The possible event codes are described in detail in the constants part of this section. </description>
<parameters>fam - A resource representing a connection to the FAM service returned by fam_open() 
filename - Path to the monitored file </parameters>
<output>Returns a monitoring resource or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=144> 
<name>snmp2_getnext</name>
<versions>(PHP >= 5.2.0)</versions>
<short-description>Fetch the SNMP object which follows the given object id</short-description>
<description>string snmp2_getnext ( string $host , string $community , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] ) 
 The snmp2_get_next() function is used to read the value of the SNMP object that follows the specified object_id. </description>
<parameters>host - The hostname of the SNMP agent (server). 
community - The read community. 
object_id - The SNMP object id which precedes the wanted one. 
timeout - The number of microseconds until the first timeout. 
retries - The number of times to retry if timeouts occur. </parameters>
<output>Returns SNMP object value on success or FALSE on error. In case of an error, an E_WARNING message is shown. </output>
<errors></errors>
<example><?php
$nameOfSecondInterface = snmp2_get_netxt('localhost', 'public', 'IF-MIB::ifName.1';
?></example>
<example_result></example_result>
</object>

<object id=145> 
<name>swf_translate</name>
<versions>(PHP 4)</versions>
<short-description>Translate the current transformations</short-description>
<description>void swf_translate ( float $x , float $y , float $z ) 
 Translates the current transformation by the given values. </description>
<parameters>x - x value. 
y - y value. 
z - z value. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=146> 
<name>str_repeat</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает повторяющуюся строку</short-description>
<description>string str_repeat ( string $input , int $multiplier ) 
 Возвращает строку input, повторенную multiplier раз. </description>
<parameters>input - Повторяемая строка. 
multiplier - Количество раз, которые нужно повторить строку input. </parameters>
<output>Возвращает повторяющуюся строку. </output>
<errors></errors>
<example><?php
echo str_repeat("-=", 10);
?></example>
<example_result>
 
-=-=-=-=-=-=-=-=-=-=
</example_result>
</object>

<object id=147> 
<name>mysql_select_db</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выбирает базу данных MySQL</short-description>
<description>bool mysql_select_db ( string $database_name [, resource $link_identifier ] ) 
 Выбирает для работы указанную базу данных на сервере, на который ссылается переданный дескриптор соединения. Каждый последующий вызов функции mysql_query() будет работать с выбранной базой данных. </description>
<parameters>database_name - Имя выбираемой базы данных. 
link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Не удалось соединиться : ' . mysql_error());
}
// выбираем foo в качестве текущей базы данных
$db_selected = mysql_select_db('foo', $link);
if (!$db_selected) {
    die ('Не удалось выбрать базу foo: ' . mysql_error());
}?></example>
<example_result></example_result>
</object>

<object id=148> 
<name>swf_startbutton</name>
<versions>(PHP 4)</versions>
<short-description>Start the definition of a button</short-description>
<description>void swf_startbutton ( int $objid , int $type ) 
 Starts the definition of a button. </description>
<parameters>objid - The object id. 
type - Can either be TYPE_MENUBUTTON or TYPE_PUSHBUTTON. The TYPE_MENUBUTTON constant allows the focus to travel from the button when the mouse is down, TYPE_PUSHBUTTON does not allow the focus to travel when the mouse is down. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=149> 
<name>touch</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Устанавливает время доступа и модификации файла</short-description>
<description>bool touch ( string $filename [, int $time = time() [, int $atime ]] ) 
 Пытается установить время доступа и модификации файла с именем filename в значение time. Обратите внимание, что время доступа изменяется всегда, независимо от количества аргументов. 
 Если файл не существует, он будет создан. </description>
<parameters>filename - Имя касаемого файла. 
time - Время касания. Если аргумент time не указан, используется текущее время. 
atime - Если передан, время доступа указанного файла будет установлено в значение atime. В обратном случае оно будет установлено в значение параметра time. Если же ни один из этих параметров не был указан, то будет использовано текущее системное время. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
if (touch($filename)) {
    echo "Время модификации файла $filename было изменено на текущее";
} else {
    echo "Простите, не удалось изменить время модификации файла ' . $filename;
}?></example>
<example_result></example_result>
</object>

<object id=150> 
<name>pg_lo_import</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Импорт большого объекта из файла</short-description>
<description>int pg_lo_import ([ resource $connection ], string $pathname [, mixed $object_id ] ) 
 pg_lo_import() создает большой объект в базе данных, используя локальный файл в качестве источника данных. 
 Операции с использованием интерфейса больших объектов необходимо заключать в блок транзакции. 
 Замечание: Когда опция safe mode включена, PHP проверяет,имеют ли файлы/каталоги, с которыми вы собираетесь работать, такойже UID (владельца), как и выполняемый скрипт. 
 Замечание: 
 Прежнее название функции: pg_loimport(). </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). 
pathname - Полный путь и имя файла в клиентской файловой системе для чтения данных большого объекта. 
object_id - Если задан аргумент object_id, функция попытается создать объект с этим идентификатором, в противном случае будет использован свободный идентификатор, назначенный сервером. Этот аргумент появился в PHP 5.3 и основан на функционале, впервые реализованном в PostgreSQL 8.1. </parameters>
<output>OID созданного большого объекта, либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
   $database = pg_connect("dbname=jacarta");
   pg_query($database, "begin");
   $oid = pg_lo_import($database, '/tmp/lob.dat');
   pg_query($database, "commit");
?></example>
<example_result></example_result>
</object>

<object id=151> 
<name>curl_multi_getcontent</name>
<versions>(PHP 5)</versions>
<short-description>Возвращает результат операции, если была установлена опция CURLOPT_RETURNTRANSFER</short-description>
<description>string curl_multi_getcontent ( resource $ch ) 
 Если для определенного дескриптора была установлена опция CURLOPT_RETURNTRANSFER, то эта функция вернет содержимое этого cURL дескриптора в виде строки. </description>
<parameters>ch - Дескриптор cURL, полученный из curl_init().</parameters>
<output>Возвращает содержимое cURL дескриптора, если была использована опция CURLOPT_RETURNTRANSFER. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=152> 
<name>XMLWriter::endElement</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Завершить текущий элемент</short-description>
<description>bool XMLWriter::endElement ( void ) 
 Процедурный стиль bool xmlwriter_end_element ( resource $xmlwriter )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=153> 
<name>dbplus_errno</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Get error code for last operation</short-description>
<description>int dbplus_errno ( void ) 
 Returns the error code returned by the last db++ operation. </description>
<parameters></parameters>
<output>Returns the error code, as an integer. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=154> 
<name>dbplus_aql</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Perform AQL query</short-description>
<description>resource dbplus_aql ( string $query [, string $server [, string $dbpath ]] ) 
 Executes an AQL query on the given server and dbpath. </description>
<parameters>query - The AQL query to be executed. Further information on the AQL (Algebraic Query Language) is provided in the original db++ manual. 
server - 
dbpath - </parameters>
<output>Returns a relation handle on success. The result data may be fetched from this relation by calling dbplus_next() and dbplus_curr(). Other relation access functions will not work on a result relation. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=155> 
<name>gmp_scan0</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Поиск нуля в числе</short-description>
<description>int gmp_scan0 ( resource $a , int $start ) 
 Сканирует a, начиная с бита start, пока не найдет бит установленный в 0. </description>
<parameters>a - Число для сканирования. 
start - Бит начала сканирования. </parameters>
<output>Возвращает индекс найденного бита в виде числа типа integer. Индексация начинается с нуля. </output>
<errors></errors>
<example><?php
// "0" бит найдет на позиции 3. поиск начинается с 0
$s1 = gmp_init("10111", 2);
echo gmp_scan0($s1, 0) . "\n";
// "0" бит найдет на позиции 7. поиск начинается с 5
$s2 = gmp_init("101110000", 2);
echo gmp_scan0($s2, 5) . "\n";
?></example>
<example_result>
 
3
7
</example_result>
</object>

<object id=156> 
<name>hw_Document_Size</name>
<versions>(PHP 4)</versions>
<short-description>Size of hw_document</short-description>
<description>int hw_document_size ( int $hw_document ) 
 Gets the size of the document. 
 For backward compatibility, hw_documentsize() is also accepted. This is deprecated, however. </description>
<parameters>hw_document - The document identifier. </parameters>
<output>Returns the size in bytes of the document. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=157> 
<name>imap_rfc822_write_address</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Returns a properly formatted email address given the mailbox, host, and personal info</short-description>
<description>string imap_rfc822_write_address ( string $mailbox , string $host , string $personal ) 
 Returns a properly formatted email address as defined in &raquo; RFC2822 given the needed information. </description>
<parameters>mailbox - The mailbox name, see imap_open() for more information 
host - The email host part 
personal - The name of the account owner </parameters>
<output>Returns a string properly formatted email address as defined in &raquo; RFC2822. </output>
<errors></errors>
<example><?php
echo imap_rfc822_write_address("hartmut", "example.com", "Hartmut Holzgraefe");
?></example>
<example_result>
 
Hartmut Holzgraefe <hartmut@example.com>
</example_result>
</object>

<object id=158> 
<name>ncurses_waddch</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Adds character at current position in a window and advance cursor</short-description>
<description>int ncurses_waddch ( resource $window , int $ch ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>window - 
ch - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=159> 
<name>long2ip</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Конвертирует (IPv4) адрес Интернет сети в стандартную строку с точками</short-description>
<description>string long2ip ( string $proper_address ) 
 Функция long2ip() преобразует заданный Интернет адрес в формат с точками (н-р.: aaa.bbb.ccc.ddd). </description>
<parameters>proper_address - Заданный адрес. </parameters>
<output>Возвращает Интернет IP адрес в виде строки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=160> 
<name>swf_endbutton</name>
<versions>(PHP 4)</versions>
<short-description>End the definition of the current button</short-description>
<description>void swf_endbutton ( void ) 
 The swf_endbutton() function ends the definition of the current button. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=161> 
<name>get_cfg_var</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the value of a PHP configuration option</short-description>
<description>string get_cfg_var ( string $option ) 
 Gets the value of a PHP configuration option. 
 This function will not return configuration information set when the PHP was compiled, or read from an Apache configuration file. 
 To check whether the system is using a configuration file, try retrieving the value of the cfg_file_path configuration setting. If this is available, a configuration file is being used. </description>
<parameters>option - The configuration option name. </parameters>
<output>Returns the current value of the PHP configuration variable specified by option, or FALSE if an error occurs. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=162> 
<name>msession_set_array</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)</versions>
<short-description>Set msession variables from an array</short-description>
<description>void msession_set_array ( string $session , array $tuples ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=163> 
<name>dbplus_find</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Set a constraint on a relation</short-description>
<description>int dbplus_find ( resource $relation , array $constraints , mixed $tuple ) 
 Places a constraint on the given relation. 
 Further calls to functions like dbplus_curr() or dbplus_next() will only return tuples matching the given constraints. </description>
<parameters>relation - A relation opened by dbplus_open(). 
constraints - Constraints are triplets of strings containing of a domain name, a comparison operator and a comparison value. The constraints parameter array may consist of a collection of string arrays, each of which contains a domain, an operator and a value, or of a single string array containing a multiple of three elements. 
tuple - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=164> 
<name>str_word_count</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Возвращает информацию о словах, входящих в строку </short-description>
<description>mixed str_word_count ( string $string [, int $format = 0 [, string $charlist ]] ) 
 Подсчитывает количество слов, входящих в строку string. Если необязательный аргумент format не передан, возвращается целое число, равное количеству слов. В случае, если указан аргумент format, возвращается массив, содержимое которого зависит от значения format. Ниже описаны допустимые значения аргумента format и соответствующие им возвращаемые значения. 
 Для этой функции "слово" обозначает строку с алфавитными символами, зависящую от локали, которая также может содержать символы "&#039;" и "-", но не может начинаться с них. </description>
<parameters>string - Строка 
format - Указывает возвращаемое значение данной функции. На данный момент поддерживаются следующие значения: 0 - возвращает количество найденных слов 1 - возвращается массив, содержащий все слова, входящие в строку string 2 - возвращается массив, индексами которого являются позиции в строке string, а значениями - соответствующие слова. 
charlist - Список дополнительных символов, которые будут рассматриваться как "слово" </parameters>
<output>Возвращает массив или целое число, в зависимости от указанного параметра format. </output>
<errors></errors>
<example><?php
$str = "Hello fri3nd, you're
       looking          good today!";
print_r(str_word_count($str, 1));
print_r(str_word_count($str, 2));
print_r(str_word_count($str, 1, 'àáãç3'));
echo str_word_count($str);
?></example>
<example_result>
 
Array
(
    [0] => Hello
    [1] => fri
    [2] => nd
    [3] => you&#039;re
    [4] => looking
    [5] => good
    [6] => today
)

Array
(
    [0] => Hello
    [6] => fri
    [10] => nd
    [14] => you&#039;re
    [29] => looking
    [46] => good
    [51] => today
)

Array
(
    [0] => Hello
    [1] => fri3nd
    [2] => you&#039;re
    [3] => looking
    [4] => good
    [5] => today
)

7
</example_result>
</object>

<object id=165> 
<name>shmop_delete</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Удаление блока разделяемой памяти</short-description>
<description>bool shmop_delete ( int $shmid ) 
 shmop_delete() используется для удаления блока разделяемой памяти. </description>
<parameters>shmid - Идентификатор блока памяти, возвращаемый функцией shmop_open() </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
shmop_delete($shm_id);
?></example>
<example_result></example_result>
</object>

<object id=166> 
<name>mb_parse_str</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Parse GET/POST/COOKIE data and set global variable</short-description>
<description>bool mb_parse_str ( string $encoded_string [, array &$result ] ) 
 Parses GET/POST/COOKIE data and sets global variables. Since PHP does not provide raw POST/COOKIE data, it can only be used for GET data for now. It parses URL encoded data, detects encoding, converts coding to internal encoding and set values to the result array or global variables. </description>
<parameters>encoded_string - The URL encoded data. 
result - An array containing decoded and character encoded converted values. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=167> 
<name>msql_fieldtype</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Alias of msql_field_type()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=168> 
<name>xslt_create</name>
<versions>(PHP 4 >= 4.0.3)</versions>
<short-description>Создает новый XSLT-процессор </short-description>
<description>resource xslt_create ( void ) 
 Создает новый XSLT-процессор, используемый другими XSLT функциями, и возвращает его ресурс. </description>
<parameters></parameters>
<output>Возвращает ресурс XSLT-процессора или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
function xml2html($xmldata, $xsl)
{    /* $xmldata -> ваш XML */
    /* $xsl -> XSLT файл */
    $path = 'include';
    $arguments = array('/_xml' => $xmldata);
    $xsltproc = xslt_create();
    xslt_set_encoding($xsltproc, 'ISO-8859-1');
    $html =
        xslt_process($xsltproc, 'arg:/_xml', "$path/$xsl", NULL, $arguments);
    if (empty($html)) {
       die('Ошибка при XSLT обработке: '. xslt_error($xsltproc));
    }
    xslt_free($xsltproc);
    return $html;
}?></example>
<example_result></example_result>
</object>

<object id=169> 
<name>m_checkstatus</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Check to see if a transaction has completed</short-description>
<description>int m_checkstatus ( resource $conn , int $identifier ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
identifier - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=170> 
<name>curl_multi_close</name>
<versions>(PHP 5)</versions>
<short-description>Закрывает набор cURL дескрипторов</short-description>
<description>void curl_multi_close ( resource $mh ) 
 Закрывает набор cURL дескрипторов. </description>
<parameters>mh - Мульти-дескриптор cURL, полученный из curl_multi_init().</parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=171> 
<name>getlastmod</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets time of last page modification</short-description>
<description>int getlastmod ( void ) 
 Gets the time of the last modification of the current page. 
 If you&#039;re interested in getting the last modification time of a different file, consider using filemtime(). </description>
<parameters></parameters>
<output>Returns the time of the last modification of the current page. The value returned is a Unix timestamp, suitable for feeding to date(). Returns FALSE on error. </output>
<errors></errors>
<example><?php
// outputs e.g. 'Last modified: March 04 1998 20:43:59.'
echo "Last modified: " . date ("F d Y H:i:s.", getlastmod());
?></example>
<example_result></example_result>
</object>

<object id=172> 
<name>mb_encode_mimeheader</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Кодирование строки для MIME-заголовка</short-description>
<description>string mb_encode_mimeheader ( string $str [, string $charset [, string $transfer_encoding [, string $linefeed = "\r\n" [, int $indent = 0 ]]]] ) 
 Кодирует строку string str по схеме кодирования MIME-заголовка. </description>
<parameters>str - Кодируемая строка string. 
charset - charset задает имя набора символов, в котором представлена строка str. По умолчанию значение определяется настройкой NLS (mbstring.language). mb_internal_encoding() должна быть установлена в ту же кодировку. 
transfer_encoding - transfer_encoding задает схему MIME кодирования. Это может быть либо "B" (Base64), либо "Q" (Quoted-Printable). По умолчанию "B". 
linefeed - linefeed задает метку EOL (конец строки, end-of-line), с помощью которой mb_encode_mimeheader() осуществляет завершение строк (&raquo; RFC терм, разделение строк, длина которых превышает заданное значение. Это значение на данный момент жестко закодировано и равно 74 символам). По умолчанию "\r\n" (CRLF). 
indent - Отступ первой строки (число символов в заголовке перед str). </parameters>
<output>Преобразованное значение строки string, представленное в ASCII. </output>
<errors></errors>
<example><?php
$name = ""; // kanji
$mbox = "kru";
$doma = "gtinn.mon";
$addr = mb_encode_mimeheader($name, "UTF-7", "Q") . " <" . $mbox . "@" . $doma . ">";
echo $addr;
?></example>
<example_result></example_result>
</object>

<object id=173> 
<name>openssl_pkey_export_to_file</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Gets an exportable representation of a key into a file </short-description>
<description>bool openssl_pkey_export_to_file ( mixed $key , string $outfilename [, string $passphrase [, array $configargs ]] ) 
 openssl_pkey_export_to_file() saves an ascii-armoured (PEM encoded) rendition of key into the file named by outfilename. 
 Замечание: Для корректной работы этой функции должен существовать правильный openssl.cnf. Для более подробной информации смотрите замечания под разделом установки. </description>
<parameters>key - 
outfilename - Path to the output file. 
passphrase - The key can be optionally protected by a passphrase. 
configargs - configargs can be used to fine-tune the export process by specifying and/or overriding options for the openssl configuration file. See openssl_csr_new() for more information about configargs. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=174> 
<name>enchant_broker_init</name>
<versions>(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )</versions>
<short-description>create a new broker object capable of requesting</short-description>
<description>resource enchant_broker_init ( void ) </description>
<parameters></parameters>
<output>Returns a broker resource on success or FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=175> 
<name>msession_listvar</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)</versions>
<short-description>List sessions with variable</short-description>
<description>array msession_listvar ( string $name ) 
 Used for searching sessions with common attributes. </description>
<parameters>name - The name being searched. </parameters>
<output>Returns an associative array of value/session for all sessions with a variable named name. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=176> 
<name>hw_mv</name>
<versions>(PHP 4)</versions>
<short-description>Moves objects</short-description>
<description>int hw_mv ( int $connection , array $object_id_array , int $source_id , int $destination_id ) 
 Moves the specified objects from a collection to another. </description>
<parameters>connection - The connection identifier. 
object_id_array - An array of object ids. 
source_id - The source collection id. 
destination_id - The target collection id. If set to 0 the objects will be unlinked from the source collection. If this is the last instance of that object it will be deleted. If you want to delete all instances at once, use hw_deleteobject(). </parameters>
<output>Returns the number of moved objects. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=177> 
<name>swf_actionwaitforframe</name>
<versions>(PHP 4)</versions>
<short-description>Skip actions if a frame has not been loaded</short-description>
<description>void swf_actionwaitforframe ( int $framenumber , int $skipcount ) 
 The swf_actionwaitforframe() function will check to see if the frame, specified by the framenumber parameter has been loaded, if not it will skip the number of actions specified by the skipcount parameter. This can be useful for "Loading..." type animations. </description>
<parameters>framenumber - The frame number. 
skipcount - The number of actions to skip. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=178> 
<name>pspell_new</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Загружает новый словарь</short-description>
<description>int pspell_new ( string $language [, string $spelling [, string $jargon [, string $encoding [, int $mode = 0 ]]]] ) 
 pspell_new() открывает новый словарь и возвращает ссылку на словарь для использования в других функциях pspell. 
 Более подробную информацию и примеры можно найти в руководстве по pspell на сайте:&raquo; http://aspell.net/. </description>
<parameters>language - Параметр language - это код языка, который состоит из двухбуквенного кода языка по стандарту ISO 639 и необязательного двубуквенного кода страны по стандарту ISO 3166 после тире или подчеркивания. 
spelling - Параметр spelling определяет вариант проверки орфографии для языков с более чем одним вариантом правописания, таких, как английский. Известные значения: &#039;american&#039;, &#039;british&#039;, и &#039;canadian&#039;. 
jargon - Параметр jargon содержит дополнительную информацию для различения двух различных списков слов, имеющих одинаковые параметры language и spelling. 
encoding - Параметр encoding это кодировка, в которой, как ожидается, даны слова. Допустимые значения: &#039;utf-8&#039;, &#039;iso8859-*&#039;, &#039;koi8-r&#039;, &#039;viscii&#039;, &#039;cp1252&#039;, &#039;machine unsigned 16&#039;, &#039;machine unsigned 32&#039;. Это параметр ещё не проверен достаточно хорошо, поэтому будьте осторожны при его использовании. 
mode - Параметр mode - это режим, в котором будет работать проверка орфографии. Доступно несколько режимов: PSPELL_FAST - Быстрый режим (наименьшее число вариантов исправления) PSPELL_NORMAL - Нормальный режим (больше вариантов исправления) PSPELL_BAD_SPELLERS - Медленный режим (много вариантов исправления) PSPELL_RUN_TOGETHER - рассматривает объединённые слова как правильные сложные слова. То есть, "thecat" будет считаться правильным сложным словом, хотя между артиклем и словом должен быть пробел. Изменение этой установки влияет только на результаты, возвращаемые функцией pspell_check(); pspell_suggest() будет продолжать выдавать варианты исправления. Mode - это битовая маска, сконструированная из различных перечисленных выше констант. Однако, PSPELL_FAST, PSPELL_NORMAL и PSPELL_BAD_SPELLERS являются взаимноисключающими, так что вы должны выбрать только одну из них. </parameters>
<output>В случае успеха возвращает ссылку на словарь или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$pspell_link = pspell_new("en", "", "", "",
                           (PSPELL_FAST|PSPELL_RUN_TOGETHER));
?></example>
<example_result></example_result>
</object>

<object id=179> 
<name>ncurses_addchnstr</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Add attributed string with specified length at current position </short-description>
<description>int ncurses_addchnstr ( string $s , int $n ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>s - 
n - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=180> 
<name>swf_rotate</name>
<versions>(PHP 4)</versions>
<short-description>Rotate the current transformation</short-description>
<description>void swf_rotate ( float $angle , string $axis ) 
 Rotates the current transformation by a given angle around the given axis. </description>
<parameters>angle - The rotation angle. 
axis - The axis. Valid values axis are x (the x axis), y (the y axis) or z (the z axis). </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=181> 
<name>oci_field_name</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Возвращает имя поля из результата запроса</short-description>
<description>string oci_field_name ( resource $statement , int $field ) 
 Возвращает имя поля field из результата запроса. </description>
<parameters>statement - Идентификатор допустимого OCI запроса. 
field - Может быть номером поля (нумерация начинается с 1) или именем. </parameters>
<output>Возвращает имя в виде строки, или FALSE при ошибках. </output>
<errors></errors>
<example><?php
$conn = oci_connect("scott", "tiger");
$stmt = oci_parse($conn, "SELECT * FROM emp");
oci_execute($stmt);
echo "<table border=\"1\">";
echo "<tr>";
echo "<th>Name</th>";
echo "<th>Type</th>";
echo "<th>Length</th>";
echo "</tr>";
$ncols = oci_num_fields($stmt);
for ($i = 1; $i <= $ncols; $i++) {
    $column_name  = oci_field_name($stmt, $i);
    $column_type  = oci_field_type($stmt, $i);
    $column_size  = oci_field_size($stmt, $i);
    echo "<tr>";
    echo "<td>$column_name</td>";
    echo "<td>$column_type</td>";
    echo "<td>$column_size</td>";
    echo "</tr>";
}
echo "</table>\n";
oci_free_statement($stmt);
oci_close($conn);
?></example>
<example_result></example_result>
</object>

<object id=182> 
<name>msql_regcase</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Alias of sql_regcase()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=183> 
<name>strchr</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним strstr()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=184> 
<name>oci_set_module_name</name>
<versions>(PHP 5.3.2, PECL OCI8 >= 1.4.0)</versions>
<short-description>Задает имя модулю </short-description>
<description>bool oci_set_module_name ( resource $connection , string $module_name ) 
 Задает имя модуля для трассировки Oracle. 
 Имя модуля регистрируется в базе данных во время очередного запроса от PHP, например, когда запускается SQL выражение. 
 Имя может быть извлечено из административных представлений (view) базы данных, таких как V$SESSION. Оно может использоваться для трассировки и мониторинга также, как V$SQLAREA and DBMS_MONITOR.SERV_MOD_ACT_STAT_ENABLE. 
 Значение можно устанавливать и через постоянные соединения. </description>
<parameters>connection - Идентификатор соединения Oracle,возвращаемый oci_connect(), oci_pconnect(),или oci_new_connect().
module_name - Задаваемая пользователем строка string длиной до 48 байт. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$c = oci_connect('hr', 'welcome', 'localhost/XE');
// Запись модуля
oci_set_module_name($c, 'Home Page');
// Код, осуществляющий запрос к БД, например выборка:
$s = oci_parse($c, 'select * from dual');
oci_execute($s);
oci_fetch_all($s, $res);
sleep(30);
?></example>
<example_result>
 
// Пока скрипт выполняется, администратор может увидеть, какие модули
// используются:

sqlplus system/welcome
SQL> select module from v$session;
</example_result>
</object>

<object id=185> 
<name>snmp2_walk</name>
<versions>(PHP >= 5.2.0)</versions>
<short-description>Fetch all the SNMP objects from an agent</short-description>
<description>array snmp2_walk ( string $host , string $community , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] ) 
 snmp2_walk() function is used to read all the values from an SNMP agent specified by the hostname. </description>
<parameters>host - The SNMP agent (server). 
community - The read community. 
object_id - If NULL, object_id is taken as the root of the SNMP objects tree and all objects under that tree are returned as an array. 
timeout - The number of microseconds until the first timeout. 
retries - The number of times to retry if timeouts occur. </parameters>
<output>Returns an array of SNMP object values starting from the object_id as root or FALSE on error. </output>
<errors></errors>
<example><?php
$a = snmp2_walk("127.0.0.1", "public", "");
foreach ($a as $val) {
    echo "$val\n";
}
?></example>
<example_result></example_result>
</object>

<object id=186> 
<name>array_merge</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сливает один или большее количество массивов</short-description>
<description>array array_merge ( array $array1 [, array $... ] ) 
 Сливает элементы одного или большего количества массивов таким образом, что значения одного массива присоединяются к концу предыдущего. Результатом работы функции является новый массив. 
 Если входные массивы имеют одинаковые строковые ключи, тогда каждое последующее значение будет заменять предыдущее. Однако, если массивы имеют одинаковые числовые ключи, значение, упомянутое последним, не заменит исходное значение, а будет добавлено в конец массива. 
 В результирующем массиве значения исходного массива с числовыми ключами будут перенумерованы в возрастающем порядке, начиная с нуля. </description>
<parameters>array1 - Исходный сливаемый массив. 
... - Дополнительные сливаемые массивы. </parameters>
<output>Возвращает результирующий массив. </output>
<errors></errors>
<example><?php
$array1 = array("color" => "red", 2, 4);
$array2 = array("a", "b", "color" => "green", "shape" => "trapezoid", 4);
$result = array_merge($array1, $array2);
print_r($result);
?></example>
<example_result>
 
 Array
    (
        [0] => foo
        [1] => bar
    )
</example_result>
</object>

<object id=187> 
<name>gmp_cmp</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Сравнение чисел</short-description>
<description>int gmp_cmp ( resource $a , resource $b ) 
 Сравнивает два числа. </description>
<parameters>a - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.
b - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.</parameters>
<output>Возвращает положительное значение, если a > b, ноль, если a = b и отрицательное значение, если a < b. </output>
<errors></errors>
<example><?php
$cmp1 = gmp_cmp("1234", "1000"); // больше
$cmp2 = gmp_cmp("1000", "1234"); // меньше
$cmp3 = gmp_cmp("1234", "1234"); // равны
echo "$cmp1 $cmp2 $cmp3\n";
?></example>
<example_result>
 
1 -1 0
</example_result>
</object>

<object id=188> 
<name>hash_file</name>
<versions>(PHP 5 >= 5.1.2, PECL hash >= 1.1)</versions>
<short-description>Генерация хеш-значения, используя содержимое заданного файла</short-description>
<description>string hash_file ( string $algo , string $filename [, bool $raw_output = false ] ) </description>
<parameters>algo - Название выбранного алгоритма хеширования (например "md5", "sha256", "haval160,4" и т.д.) 
filename - Путь или URL к файлу, который будет хеширован; Поддерживается интерфейс fopen. 
raw_output - Когда установлено в TRUE, выводит необработанные двоичные данные. При FALSE выводит данные в шестнадцатеричной кодировке в нижнем регистре. </parameters>
<output>Возвращает строку, содержащую вычисленный хеш-код в шестнадцатеричной кодировке в нижнем регистре. Если raw_output задан как TRUE, то возвращается хеш-код в виде бинарных данных. </output>
<errors></errors>
<example><?php
/* Создаем файл, чтобы вычислить его хеш */
file_put_contents('example.txt', 'Наглый коричневый лисёнок прыгает вокруг ленивой собаки.');
echo hash_file('md5', 'example.txt');
?></example>
<example_result>
 
bff8b4bc8b5c1c1d5b3211dfb21d1e76
</example_result>
</object>

<object id=189> 
<name>m_destroyconn</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Destroy the connection and MCVE_CONN structure</short-description>
<description>bool m_destroyconn ( resource $conn ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().</parameters>
<output>Returns TRUE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=190> 
<name>array_udiff_uassoc</name>
<versions>(PHP 5)</versions>
<short-description>Вычисляет расхождение в массивах с дополнительной проверкой индексов, используя для сравнения значений и индексов callback-функцию</short-description>
<description>array array_udiff_uassoc ( array $array1 , array $array2 [, array $ ... ], callback $data_compare_func , callback $key_compare_func ) 
 Вычисляет расхождение в массивах с дополнительной проверкой индексов, используя для сравнения значений и индексов callback-функцию. 
 Обратите внимание, что для сравнения используются ключи, в отличие от array_diff() и array_udiff(). </description>
<parameters>array1 - Первый массив. 
array2 - Второй массив. 
data_compare_func - Callback-функция, используемая для сравнения. 
key_compare_func - Сравнение ключей (индексов) также осуществляется с помощью callback-функции key_compare_func. Это отличается от поведения array_udiff_assoc(), которая сравнивает индексы с помощью встроенной функции. </parameters>
<output>Возвращает array, содержащий все элементы array1, которых нет в каком-либо из остальных аргументов. </output>
<errors></errors>
<example><?php
class cr {
    private $priv_member;
    function cr($val)
    {
        $this->priv_member = $val;
    }
    static function comp_func_cr($a, $b)
    {
        if ($a->priv_member === $b->priv_member) return 0;
        return ($a->priv_member > $b->priv_member)? 1:-1;
    }
    static function comp_func_key($a, $b)
    {
        if ($a === $b) return 0;
        return ($a > $b)? 1:-1;
    }
}$a = array("0.1" => new cr(9), "0.5" => new cr(12), 0 => new cr(23), 1=> new cr(4), 2 => new cr(-15),);
$b = array("0.2" => new cr(9), "0.5" => new cr(22), 0 => new cr(3), 1=> new cr(4), 2 => new cr(-15),);
$result = array_udiff_uassoc($a, $b, array("cr", "comp_func_cr"), array("cr", "comp_func_key"));
print_r($result);
?></example>
<example_result>
 
Array
(
    [0.1] => cr Object
        (
            [priv_member:private] => 9
        )

    [0.5] => cr Object
        (
            [priv_member:private] => 12
        )

    [0] => cr Object
        (
            [priv_member:private] => 23
        )
)
</example_result>
</object>

<object id=191> 
<name>yp_errno</name>
<versions>(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5)</versions>
<short-description>Returns the error code of the previous operation</short-description>
<description>int yp_errno ( void ) 
 Returns the error code of the previous operation. </description>
<parameters></parameters>
<output>Returns one of the YPERR_XXX error constants. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=192> 
<name>hw_InsertObject</name>
<versions>(PHP 4)</versions>
<short-description>Inserts an object record</short-description>
<description>int hw_insertobject ( int $connection , string $object_rec , string $parameter ) 
 Inserts an object into the server. 
 Note: If you want to insert an Anchor, the attribute Position has always been set either to a start/end value or to &#039;invisible&#039;. Invisible positions are needed if the annotation has no corresponding link in the annotation text. </description>
<parameters>connection - The connection identifier. 
object_rec - The object can be any valid hyperwave object. 
parameter - See the HG-CSP documentation for a detailed information on how the parameters have to be. </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=193> 
<name>imap_close</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Close an IMAP stream</short-description>
<description>bool imap_close ( resource $imap_stream [, int $flag = 0 ] ) 
 Closes the imap stream. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
flag - If set to CL_EXPUNGE, the function will silently expunge the mailbox before closing, removing all messages marked for deletion. You can achieve the same thing by using imap_expunge() </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=194> 
<name>class_implements</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Return the interfaces which are implemented by the given class </short-description>
<description>array class_implements ( mixed $class [, bool $autoload = true ] ) 
 This function returns an array with the names of the interfaces that the given class and its parents implement. </description>
<parameters>class - An object (class instance) or a string (class name). 
autoload - Whether to allow this function to load the class automatically through the __autoload() magic method. </parameters>
<output>An array on success, or FALSE on error. </output>
<errors></errors>
<example><?php
interface foo { }
class bar implements foo {}
print_r(class_implements(new bar));
// since PHP 5.1.0 you may also specify the parameter as a string
print_r(class_implements('bar'));

function __autoload($class_name) {
   require_once $class_name . '.php';
}
// use __autoload to load the 'not_loaded' class
print_r(class_implements('not_loaded', true));
?></example>
<example_result>
 
Array
(
    [foo] => foo
)

Array
(
    [interface_of_not_loaded] => interface_of_not_loaded
)
</example_result>
</object>

<object id=195> 
<name>fbsql_errno</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Returns the error number from previous operation</short-description>
<description>int fbsql_errno ([ resource $link_identifier ] ) 
 Returns the numerical value of the error message from previous FrontBase operation. 
 Errors coming back from the fbsql database backend don&#039;t issue warnings. Instead, use fbsql_errno() to retrieve the error code. Note that this function only returns the error code from the most recently executed fbsql function (not including fbsql_error() and fbsql_errno()), so if you want to use it, make sure you check the value before calling another fbsql function. </description>
<parameters>link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Returns the error number from the last fbsql function, or 0 (zero) if no error occurred. </output>
<errors></errors>
<example><?php
fbsql_connect("marliesle");
echo fbsql_errno() . ": " . fbsql_error() . "<br />";
fbsql_select_db("nonexistentdb");
echo fbsql_errno() . ": " . fbsql_error() . "<br />";
$conn = fbsql_query("SELECT * FROM nonexistenttable;");
echo fbsql_errno() . ": " . fbsql_error() . "<br />";
?></example>
<example_result></example_result>
</object>

<object id=196> 
<name>stream_socket_shutdown</name>
<versions>(PHP 5 >= 5.2.1)</versions>
<short-description>Закрывает полнодуплексное соединение</short-description>
<description>bool stream_socket_shutdown ( resource $stream , int $how ) 
 Закрывает (частично или нет) полнодуплексное соединение. </description>
<parameters>stream - Открытый поток (открытый при помощи функции stream_socket_client(), например) 
how - Одна из следующих констант: STREAM_SHUT_RD (отключает последующее получение данных), STREAM_SHUT_WR (отключает последующую передачу данных) или STREAM_SHUT_RDWR (отключает последующие получение и передачу данных). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$server = stream_socket_server('tcp://127.0.0.1:1337');
$client = stream_socket_client('tcp://127.0.0.1:1337');
var_dump(fputs($client, "привет"));
stream_socket_shutdown($client, STREAM_SHUT_WR);
var_dump(fputs($client, "привет")); // не работает сейчас
?></example>
<example_result>
 
int(5)

Notice: fputs(): send of 6 bytes failed with errno=32 Broken pipe in test.php on line 9
int(0)
</example_result>
</object>

<object id=197> 
<name>gzopen</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Открывает gz-файл</short-description>
<description>resource gzopen ( string $filename , string $mode [, int $use_include_path = 0 ] ) 
 Открывает файл gzip (.gz) для чтения или записи. 
 gzopen() также можно использовать для несжатых файлов (т.е. не в формате gzip). В этом случае gzread() вернёт файл напрямую без какой-либо обработки. </description>
<parameters>filename - Имя файла. 
mode - Как в fopen() (rb или wb), но также может включать уровень сжатия (wb9) или стратегию: f для фильтрации данных как в wb6f, h для сжатия только по алгоритму Хаффмана как в wb1h (Для более детальной информации о параметре стратегии см. описание deflateInit2 в zlib.h). 
use_include_path - Если вы хотите, чтобы поиск файла выполнялся также в директориях include_path, установите значение этого аргумента в 1. </parameters>
<output>Возвращает указатель на открытый файл, после чего всё, что вы читаете из этого дескриптора, будет автоматически распаковываться, а всё, что вы записываете - упаковываться. </output>
<errors></errors>
<example><?php
$fp = gzopen("/tmp/file.gz", "r");
?></example>
<example_result></example_result>
</object>

<object id=198> 
<name>ldap_start_tls</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Запускает TLS</short-description>
<description>bool ldap_start_tls ( resource $link ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=199> 
<name>enchant_dict_is_in_session</name>
<versions>(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )</versions>
<short-description>whether or not &#039;word&#039; exists in this spelling-session</short-description>
<description>bool enchant_dict_is_in_session ( resource $dict , string $word ) 
 Tells whether or not a word already exists in the current session. </description>
<parameters>dict - Dictionary resource 
word - The word to lookup </parameters>
<output>Returns TRUE if the word exists or FALSE </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=200> 
<name>PDF_close</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Закрывает pdf-документ [устаревшее]</short-description>
<description>bool PDF_close ( resource $p ) 
 Закрывает сгенерированный PDF-файл и освобождает все относящиеся к документу ресурсы. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. 
 Эта функция устарела начиная с 6-ой версии PDFlib, вместо нее используйте PDF_end_document(). </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=201> 
<name>gzgetss</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает строку из gz-файла с удалёнными HTML-тегами </short-description>
<description>string gzgetss ( resource $zp , int $length [, string $allowable_tags ] ) 
 Аналогично gzgets(), только gzgetss() также удаляет все теги HTML и PHP из возвращаемой строки. </description>
<parameters>zp - Указатель на gz-файл, возвращённый, после его успешного открытия, функцией gzopen(). 
length - Максимальный размер возвращаемых данных. 
allowable_tags - Используйте этот необязательный параметр, чтобы указать теги, которые не следует удалять из возвращаемой строки. </parameters>
<output>Распакованная строка без разметки или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$handle = gzopen('somefile.gz', 'r');
while (!gzeof($handle)) {
   $buffer = gzgetss($handle, 4096);
   echo $buffer;
}gzclose($handle);
?></example>
<example_result></example_result>
</object>

<object id=202> 
<name>fbsql_hostname</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Get or set the host name used with a connection</short-description>
<description>string fbsql_hostname ( resource $link_identifier [, string $host_name ] ) 
 Gets or sets the host name used with a connection. </description>
<parameters>link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().
host_name - If provided, this will be the new connection host name. </parameters>
<output>Returns the current host name used for the connection. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=203> 
<name>xml_set_unparsed_entity_decl_handler</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Установка обработчика неразобранных объявлений сущностей </short-description>
<description>bool xml_set_unparsed_entity_decl_handler ( resource $parser , callback $handler ) 
 Задает функцию обработчик неразобранных объявлений сущностей для XML анализатора parser. 
 Обработчик handler будет вызван, если XML анализатор обнаружит NDATA объявление внешней сущности вида: 
 <!ENTITY <parameter>name</parameter> {<parameter>publicId</parameter> | <parameter>systemId</parameter>} NDATA <parameter>notationName</parameter></description>
<parameters>parser - Ссылка на XML анализатор для которого задается обработчик. 
handler - handler - строка содержащая имя функции, которая должна быть определена на момент вызова функции xml_parse() из анализатора parser. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=204> 
<name>tidy_access_count</name>
<versions>(PHP 5, PECL tidy >= 0.5.2)</versions>
<short-description>Возвращает число доступных предупреждений Tidy, встретившихся в рассмотренном документе</short-description>
<description>int tidy_access_count ( tidy $object ) 
 tidy_access_count() возвращает число доступных предупреждений, найденных в рассмотренном документе. </description>
<parameters>object - Объект Tidy. </parameters>
<output>Возвращает число предупреждений. </output>
<errors></errors>
<example><?php
$html ='<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html><head><title>Title</title></head>
<body>
<p><img src="img.png"></p>
</body></html>';

// выбирается уровень проверки доступности: 1, 2 или 3
$config = array('accessibility-check' => 3);
$tidy = new tidy();
$tidy->parseString($html, $config);
$tidy->cleanRepair();
/* Нельзя забывать про этот вызов! */
$tidy->diagnose();
echo tidy_access_count($tidy); //5
?></example>
<example_result></example_result>
</object>

<object id=205> 
<name>XMLWriter::endDTDEntity</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Завершить текущую запись DTD</short-description>
<description>bool XMLWriter::endDTDEntity ( void ) 
 Процедурный стиль bool xmlwriter_end_dtd_entity ( resource $xmlwriter )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=206> 
<name>mcrypt_ecb</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Deprecated: Encrypts/decrypts data in ECB mode</short-description>
<description>string mcrypt_ecb ( int $cipher , string $key , string $data , int $mode ) string mcrypt_ecb ( string $cipher , string $key , string $data , int $mode [, string $iv ] )</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=207> 
<name>m_iscommadelimited</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Checks to see if response is comma delimited</short-description>
<description>int m_iscommadelimited ( resource $conn , int $identifier ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
identifier - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=208> 
<name>bzwrite</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Бинарно-безопасная запись bzip2 файла</short-description>
<description>int bzwrite ( resource $bz , string $data [, int $length ] ) 
 bzwrite() записывает строку в переданный bzip2 файловый поток. </description>
<parameters>bz - Указатель на файл. Должен быть корректным и указывать на файл, успешно открытый bzopen(). 
data - Записываемые данные. 
length - Если указан, запись остановится после length (несжатых) записанных байт, либо если был достигнут конец data, в зависимости от того, что произойдет первым. </parameters>
<output>Возвращает количество записанных байт или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$str = "uncompressed data";
$bz = bzopen("/tmp/foo.bz2", "w");
bzwrite($bz, $str, strlen($str));
bzclose($bz);
?></example>
<example_result></example_result>
</object>

<object id=209> 
<name>com_load_typelib</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Loads a Typelib</short-description>
<description>bool com_load_typelib ( string $typelib_name [, bool $case_insensitive = true ] ) 
 Loads a type-library and registers its constants in the engine, as though they were defined using define(). 
 Note that it is much more efficient to use the configuration setting to pre-load and register the constants, although not so flexible. 
 If you have turned on , then PHP will attempt to automatically register the constants associated with a COM object when you instantiate it. This depends on the interfaces provided by the COM object itself, and may not always be possible. </description>
<parameters>typelib_name - typelib_name can be one of the following: 
 The filename of a .tlb file or the executable module that contains the type library. 
case_insensitive - The case_insensitive behaves in the same way as the parameter with the same name in the define() function. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=210> 
<name>xslt_set_scheme_handler</name>
<versions>(PHP 4 >= 4.0.5)</versions>
<short-description>Задает обработчики схемы для XSLT-процессора </short-description>
<description>void xslt_set_scheme_handler ( resource $xh , array $handlers ) 
 Задает обработчики схемы для ресурса XSLT-процессора xh. </description>
<parameters>xh - Идентификатор ссылки на XSLT-процессор, созданный функцией xslt_create(). 
handlers - Обработчики схемы должны быть представлены в виде массива в следующем формате (все элементы являются необязательными): 
 array(
[get_all] => обработчик get all,
[open] => обработчик open,
[get] => обработчик get,
[put] => обработчик put,
[close] => обработчик close
)
 </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result>
 
array(
[get_all] => обработчик get all,
[open] => обработчик open,
[get] => обработчик get,
[put] => обработчик put,
[close] => обработчик close
)
</example_result>
</object>

<object id=211> 
<name>ifx_getsqlca</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Get the contents of sqlca.sqlerrd[0..5] after a query</short-description>
<description>array ifx_getsqlca ( resource $result_id ) 
 Returns a pseudo-row with sqlca.sqlerrd[0] ... sqlca.sqlerrd[5] after the query associated with result_id. 
 For inserts, updates and deletes the values returned are those as set by the server after executing the query. This gives access to the number of affected rows and the serial insert value. For SELECTs the values are those saved after the PREPARE statement. This gives access to the *estimated* number of affected rows. The use of this function saves the overhead of executing a SELECT dbinfo(&#039;sqlca.sqlerrdx&#039;) query, as it retrieves the values that were saved by the ifx driver at the appropriate moment. </description>
<parameters>result_id - result_id is a valid result id returned by ifx_query() or ifx_prepare() (select type queries only!). </parameters>
<output>Returns an associative array with the following entries: sqlerrd0, sqlerrd1, sqlerrd2, sqlerrd3, sqlerrd4 and sqlerrd5. </output>
<errors></errors>
<example><?php
/* assume the first column of 'sometable' is a serial */
$qid = ifx_query("insert into sometable
                  values (0, '2nd column', 'another column') ", $connid);
if (!$qid) {
    /* ... error ... */
}
$sqlca = ifx_getsqlca($qid);
$serial_value = $sqlca["sqlerrd1"];
echo "The serial value of the inserted row is : $serial_value<br />\n";
?></example>
<example_result></example_result>
</object>

<object id=212> 
<name>notes_copy_db</name>
<versions>(PHP 4 >= 4.0.5)</versions>
<short-description>Copy a Lotus Notes database</short-description>
<description>bool notes_copy_db ( string $from_database_name , string $to_database_name ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=213> 
<name>defined</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Проверяет существование указанной именованной константы</short-description>
<description>bool defined ( string $name ) 
 Проверяет существование и наличие значения указанной константы. 
 Замечание: 
 Если необходимо узнать о существовании переменной, то используйте isset(), так как defined() применима лишь для констант. Если вам необходимо узнать о существовании функции, то используйте function_exists(). </description>
<parameters>name - Имя константы. </parameters>
<output>Возвращает TRUE, если именованная константа, указанная в параметре name, была определена, FALSE в противном случае. </output>
<errors></errors>
<example><?php
/* Важно учесть необходимость использования кавычек. Данный пример проверяет
 * является ли строка 'TEST' именем константы TEST. */
if (defined('TEST')) {
    echo TEST;
}?></example>
<example_result></example_result>
</object>

<object id=214> 
<name>microtime</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает текущую метку времени Unix с микросекундами</short-description>
<description>mixed microtime ([ bool $get_as_float = false ] ) 
 Функция microtime() возвращает текущую метку времени Unix с микросекундами. Эта функция доступна только на операционных системах, в которых есть системный вызов gettimeofday(). </description>
<parameters>get_as_float - Если указано и установлено в TRUE, microtime() возвратит float вместо string, как описано в разделе возвращаемых значений ниже. </parameters>
<output>По умолчанию microtime() возвращает string в формате "msec sec", где sec представляет собой текущее время, прошедшее с начала Эпохи Unix (1 января 1970 0:00:00 GMT) в секундах, а msec - это количество микросекунд, прошедших после sec. </output>
<errors></errors>
<example><?php
/**
 * Простая функция для реализации поведения из PHP 5
 */
function microtime_float()
{    list($usec, $sec) = explode(" ", microtime());
    return ((float)$usec + (float)$sec);
}
$time_start = microtime_float();
// Спим некоторое время
usleep(100);
$time_end = microtime_float();
$time = $time_end - $time_start;
echo "Ничего не делал $time секунд\n";
?></example>
<example_result></example_result>
</object>

<object id=215> 
<name>array_filter</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Фильтрует элементы массива с помощью callback-функции</short-description>
<description>array array_filter ( array $input [, callback $callback ] ) 
 Обходит каждое значение массива input, передавая его в callback-функцию. Если callback-функция возвращает true, данное значение возвращается в массив input. Ключи массива сохраняются. </description>
<parameters>input - Итерируемый массив 
callback - Используемая callback-функция </parameters>
<output>Возвращает отфильтрованный массив. </output>
<errors></errors>
<example><?php
function odd($var)
{    // является ли переданное число нечетным
    return($var & 1);
}
function even($var)
{    // является ли переданное число четным
    return(!($var & 1));
}
$array1 = array("a"=>1, "b"=>2, "c"=>3, "d"=>4, "e"=>5);
$array2 = array(6, 7, 8, 9, 10, 11, 12);
echo "Нечетные:\n";
print_r(array_filter($array1, "odd"));
echo "Четные:\n";
print_r(array_filter($array2, "even"));
?></example>
<example_result>
 
Нечетные:
Array
(
    [a] => 1
    [c] => 3
    [e] => 5
)
Четные:
Array
(
    [0] => 6
    [2] => 8
    [4] => 10
    [6] => 12
)
</example_result>
</object>

<object id=216> 
<name>fdf_get_encoding</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Получает значение ключа /Encoding</short-description>
<description>string fdf_get_encoding ( resource $fdf_document ) 
 Получает значение ключа /Encoding. </description>
<parameters>fdf_document - Дескриптор FDF-документа, возвращенный функциями fdf_create(), fdf_open() или fdf_open_string(). </parameters>
<output>Возвращает кодировку в виде строки. Возвращается пустая строка, если используется схема по умолчанию PDFDocEncoding/Unicode. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=217> 
<name>swf_nextid</name>
<versions>(PHP 4)</versions>
<short-description>Returns the next free object id</short-description>
<description>int swf_nextid ( void ) 
 The swf_nextid() function returns the next available object id. </description>
<parameters></parameters>
<output>Returns the id, as an integer. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=218> 
<name>log</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Натуральный логарифм</short-description>
<description>float log ( float $arg [, float $base = M_E ] ) 
 Если указан необязательный параметр base, log() возвращает logbase от arg, иначе log() возвращает натуральный логарифм числа arg. </description>
<parameters>arg - Число, для которого необходимо вычислить логарифм 
base - Необязательное основание логарифма (по умолчанию основание &#039;e&#039;, что соответсвует натуральному логарифму). </parameters>
<output>Логарифм числа arg по основанию base, если указано, или натуральный логарифм. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=219> 
<name>getallheaders</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает все заголовки HTTP-запроса</short-description>
<description>array getallheaders ( void ) 
 Возвращает все заголовки для текущего HTTP-запроса. 
 Эта функция является псевдонимом функции apache_request_headers(). Пожалуйста, обратитесь к описанию функции apache_request_headers() для получения детальной информации о ее работе. </description>
<parameters></parameters>
<output>Ассоциативный массив, содержащий все HTTP-заголовки для данного запроса или FALSE в случае возникновения ошибок. </output>
<errors></errors>
<example><?php
foreach (getallheaders() as $name => $value) {
    echo "$name: $value\n";
}
?></example>
<example_result></example_result>
</object>

<object id=220> 
<name>oci_close</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Закрывает соединение с сервером Oracle</short-description>
<description>bool oci_close ( resource $connection ) 
 Освобождает connection. Соответствующее ему соединение с базой данных будет закрыто при отсутствии использующих его ресурсов и если оно было получено из функции oci_connect() или oci_new_connect(). 
 Рекомендуется закрывать неиспользуемые более соединения, т.к. это освобождает ресурсы базы данных для других пользователей. </description>
<parameters>connection - Идентификатор соединения Oracle, полученный и функций oci_connect(), oci_pconnect() или oci_new_connect(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=221> 
<name>PDF_set_text_matrix</name>
<versions>(PHP 4 <= 4.0.4)</versions>
<short-description>Set text matrix [deprecated]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=222> 
<name>udm_get_res_field</name>
<versions>(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)</versions>
<short-description>Fetch a result field</short-description>
<description>string udm_get_res_field ( resource $res , int $row , int $field ) 
 Fetch a mnoGoSearch result field. </description>
<parameters>res - res - a link to result identifier, received after call to udm_find(). 
row - row - the number of the link on the current page. May have values from 0 to UDM_PARAM_NUM_ROWS-1. 
field - field - field identifier, may have the following values: UDM_FIELD_URL - document URL field UDM_FIELD_CONTENT - document Content-type field (for example, text/html). UDM_FIELD_CATEGORY - document category field. Use udm_cat_path() to get full path to current category from the categories tree root. (This parameter is available only in PHP 4.0.6 or later). UDM_FIELD_TITLE - document title field. UDM_FIELD_KEYWORDS - document keywords field (from META KEYWORDS tag). UDM_FIELD_DESC - document description field (from META DESCRIPTION tag). UDM_FIELD_TEXT - document body text (the first couple of lines to give an idea of what the document is about). UDM_FIELD_SIZE - document size. UDM_FIELD_URLID - unique URL ID of the link. UDM_FIELD_RATING - page rating (as calculated by mnoGoSearch). UDM_FIELD_MODIFIED - last-modified field in unixtime format. UDM_FIELD_ORDER - the number of the current document in set of found documents. UDM_FIELD_CRC - document CRC. </parameters>
<output>udm_get_res_field() returns result field value on success, FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=223> 
<name>imap_createmailbox</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Create a new mailbox</short-description>
<description>bool imap_createmailbox ( resource $imap_stream , string $mailbox ) 
 Creates a new mailbox specified by mailbox. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
mailbox - The mailbox name, see imap_open() for more information. Names containing international characters should be encoded by imap_utf7_encode() </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$mbox = imap_open("{imap.example.org}", "username", "password", OP_HALFOPEN)
     or die("can't connect: " . imap_last_error());
$name1 = "phpnewbox";
$name2 = imap_utf7_encode("phpnewböx"); // phpnewb&w7Y-x
$newname = $name1;
echo "Newname will be '$name1'<br />\n";
// we will now create a new mailbox "phptestbox" in your inbox folder,
// check its status after creation and finaly remove it to restore
// your inbox to its initial state
if (@imap_createmailbox($mbox, imap_utf7_encode("{imap.example.org}INBOX.$newname"))) {
    $status = @imap_status($mbox, "{imap.example.org}INBOX.$newname", SA_ALL);
    if ($status) {
        echo "your new mailbox '$name1' has the following status:<br />\n";
        echo "Messages:   " . $status->messages    . "<br />\n";
        echo "Recent:     " . $status->recent      . "<br />\n";
        echo "Unseen:     " . $status->unseen      . "<br />\n";
        echo "UIDnext:    " . $status->uidnext     . "<br />\n";
        echo "UIDvalidity:" . $status->uidvalidity . "<br />\n";
        if (imap_renamemailbox($mbox, "{imap.example.org}INBOX.$newname", "{imap.example.org}INBOX.$name2")) {
            echo "renamed new mailbox from '$name1' to '$name2'<br />\n";
            $newname = $name2;
        } else {
            echo "imap_renamemailbox on new mailbox failed: " . imap_last_error() . "<br />\n";
        }
    } else {
        echo "imap_status on new mailbox failed: " . imap_last_error() . "<br />\n";
    }
    if (@imap_deletemailbox($mbox, "{imap.example.org}INBOX.$newname")) {
        echo "new mailbox removed to restore initial state<br />\n";
    } else {
        echo "imap_deletemailbox on new mailbox failed: " . implode("<br />\n", imap_errors()) . "<br />\n";
    }
} else {
    echo "could not create new mailbox: " . implode("<br />\n", imap_errors()) . "<br />\n";
}
imap_close($mbox);
?></example>
<example_result></example_result>
</object>

<object id=224> 
<name>odbc_gettypeinfo</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Retrieves information about data types supported by the data source</short-description>
<description>resource odbc_gettypeinfo ( resource $connection_id [, int $data_type ] ) 
 Retrieves information about data types supported by the data source. </description>
<parameters>connection_id - Идентификатор соединения ODBC,за подробностями обращайтесь к odbc_connect().
data_type - The data type, which can be used to restrict the information to a single data type. </parameters>
<output>Returns an ODBC result identifier or FALSE on failure. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=225> 
<name>imap_listmailbox</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним imap_list()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=226> 
<name>ocicolumntype</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_field_type()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=227> 
<name>oci_field_type_raw</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Возвращает исходный Oracle тип поля</short-description>
<description>int oci_field_type_raw ( resource $statement , int $field ) 
 Возвращает тип Oracle поля field. 
 Однако, если вы хотите получить тип поля, то oci_field_type() подойдет вам больше. </description>
<parameters>statement - Идентификатор допустимого OCI запроса. 
field - Может быть номером поля (нумерация начинается с 1) или именем. </parameters>
<output>Возвращает исходный Oracle тип в виде строки, или FALSE при ошибках. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=228> 
<name>is_object</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Проверяет, является ли переменная объектом</short-description>
<description>bool is_object ( mixed $var ) 
 Проверяет, является ли данная переменная объектом. </description>
<parameters>var - Проверяемая переменная. </parameters>
<output>Возвращает TRUE, если var является объектом, или FALSE в противном случае. </output>
<errors></errors>
<example><?php
// Объявляем простую функцию, которая возвращает 
// массив из нашего объекта
function get_students($obj)
{    if (!is_object($obj)) {
        return false;
    }
    return $obj->students;
}
// Создаем новый экземпляр класса
// и заполняем некоторыми значениями
$obj = new stdClass();
$obj->students = array('Kalle', 'Ross', 'Felipe');
var_dump(get_students(null));
var_dump(get_students($obj));
?></example>
<example_result></example_result>
</object>

<object id=229> 
<name>ovrimos_result_all</name>
<versions>(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)</versions>
<short-description>Prints the whole result set as an HTML table</short-description>
<description>int ovrimos_result_all ( int $result_id [, string $format ] ) 
 Prints the whole result set as an HTML table. </description>
<parameters>result_id - A result identifier, returned by ovrimos_execute() or ovrimos_exec(). 
format - Optional HTML attributes for the generated table element. </parameters>
<output>Returns the number of rows in the generated table. </output>
<errors></errors>
<example><?php
$conn = ovrimos_connect("db_host", "8001", "admin", "password");
if ($conn != 0) {
    echo "Connection ok!";
    $res = ovrimos_prepare($conn, "select table_id, table_name
                                    from sys.tables where table_id = 7");
    if ($res != 0) {
        echo "Prepare ok!";
        if (ovrimos_execute($res, array(3))) {
            echo "Execute ok!\n";
            ovrimos_result_all($res);
        } else {
            echo "Execute not ok!";
        }
        ovrimos_free_result($res);
    } else {
        echo "Prepare not ok!\n";
    }
    ovrimos_close($conn);
}?></example>
<example_result></example_result>
</object>

<object id=230> 
<name>imap_headerinfo</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Read the header of the message</short-description>
<description>object imap_headerinfo ( resource $imap_stream , int $msg_number [, int $fromlength = 0 [, int $subjectlength = 0 [, string $defaulthost = NULL ]]] ) 
 Gets information about the given message number by reading its headers. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
msg_number - The message number 
fromlength - Number of characters for the fetchfrom property. Must be greater than or equal to zero. 
subjectlength - Number of characters for the fetchsubject property Must be greater than or equal to zero. 
defaulthost - </parameters>
<output>Returns the information in an object with following properties: toaddress - full to: line, up to 1024 characters to - an array of objects from the To: line, with the following properties: personal, adl, mailbox, and host fromaddress - full from: line, up to 1024 characters from - an array of objects from the From: line, with the following properties: personal, adl, mailbox, and host ccaddress - full cc: line, up to 1024 characters cc - an array of objects from the Cc: line, with the following properties: personal, adl, mailbox, and host bccaddress - full bcc: line, up to 1024 characters bcc - an array of objects from the Bcc: line, with the following properties: personal, adl, mailbox, and host reply_toaddress - full Reply-To: line, up to 1024 characters reply_to - an array of objects from the Reply-To: line, with the following properties: personal, adl, mailbox, and host senderaddress - full sender: line, up to 1024 characters sender - an array of objects from the Sender: line, with the following properties: personal, adl, mailbox, and host return_pathaddress - full Return-Path: line, up to 1024 characters return_path - an array of objects from the Return-Path: line, with the following properties: personal, adl, mailbox, and host remail - date - The message date as found in its headers Date - Same as date subject - The message subject Subject - Same a subject in_reply_to - message_id - newsgroups - followup_to - references - Recent - R if recent and seen, N if recent and not seen, &#039; &#039; if not recent. Unseen - U if not seen AND not recent, &#039; &#039; if seen OR not seen and recent Flagged - F if flagged, &#039; &#039; if not flagged Answered - A if answered, &#039; &#039; if unanswered Deleted - D if deleted, &#039; &#039; if not deleted Draft - X if draft, &#039; &#039; if not draft Msgno - The message number MailDate - Size - The message size udate - mail message date in Unix time fetchfrom - from line formatted to fit fromlength characters fetchsubject - subject line formatted to fit subjectlength characters </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=231> 
<name>oci_error</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Возвращает последнюю ошибку</short-description>
<description>array oci_error ([ resource $resource ] ) 
 Возвращает последнюю найденную ошибку. 
 Функция должны вызваться сразу же после появления ошибки. Ошибки очищаются при произведении правильного запроса. </description>
<parameters>resource - Для большинства ошибок параметром resource является соответствующий идентификатор соединения или выражения. Для ошибок во время выполнения функций oci_connect(), oci_new_connect() и oci_pconnect() параметр resource указывать не следует. </parameters>
<output>Если ошибок не найдено, то oci_error() возвращает FALSE. В другом случае, oci_error() возвращает информацию об ошибке в виде ассоциативного массива. </output>
<errors></errors>
<example><?php
$conn = oci_connect("hr", "welcome", "localhost/XE");
if (!$conn) {
    $e = oci_error();   // Для обработки ошибок oci_connect
    trigger_error(htmlentities($e['message']), E_USER_ERROR);
}?></example>
<example_result></example_result>
</object>

<object id=232> 
<name>ociexecute</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_execute()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=233> 
<name>bcdiv</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Операция деления для чисел произвольной точности </short-description>
<description>string bcdiv ( string $left_operand , string $right_operand [, int $scale ] ) 
 Делит left_operand на right_operand. </description>
<parameters>left_operand - Левый операнд в виде строки. 
right_operand - Правый операнд в виде строки. 
scale - Этот необязательный параметр используется для установки количества знаков после десятичного разделителя в результате.Вы также можете установить этот параметр глобально для всех функций с помощью bcscale().</parameters>
<output>Возвращает результат деления в виде строки или NULL, если right_operand равен 0. </output>
<errors></errors>
<example><?php
echo bcdiv('105', '6.55957', 3);  // 16.007
?></example>
<example_result></example_result>
</object>

<object id=234> 
<name>session_start</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Initialize session data</short-description>
<description>bool session_start ( void ) 
 session_start() creates a session or resumes the current one based on a session identifier passed via a GET or POST request, or passed via a cookie. 
 To use a named session, call session_name() before calling session_start(). 
 When session.use_trans_sid is enabled, the session_start() function will register an internal output handler for URL rewriting. 
 If a user uses ob_gzhandler or similar with ob_start(), the function order is important for proper output. For example, ob_gzhandler must be registered before starting the session. </description>
<parameters></parameters>
<output>This function returns TRUE if a session was successfully started, otherwise FALSE. </output>
<errors></errors>
<example><?php
// page1.php
session_start();
echo 'Welcome to page #1';
$_SESSION['favcolor'] = 'green';
$_SESSION['animal']   = 'cat';
$_SESSION['time']     = time();
// Works if session cookie was accepted
echo '<br /><a href="page2.php">page 2</a>';
// Or maybe pass along the session id, if needed
echo '<br /><a href="page2.php?' . SID . '">page 2</a>';
?></example>
<example_result></example_result>
</object>

<object id=235> 
<name>msql_field_flags</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get field flags</short-description>
<description>string msql_field_flags ( resource $result , int $field_offset ) 
 msql_field_flags() returns the field flags of the specified field. </description>
<parameters>result - Обрабатываемый результат запроса,полученный с помощью функции msql_query().
field_offset - Числовое смещение поля.field_offset начинается с 1.</parameters>
<output>Returns a string containing the field flags of the specified key. This can be: primary key not null, not null, primary key, unique not null or unique. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=236> 
<name>xptr_new_context</name>
<versions>(PHP 4)</versions>
<short-description>Создает новый контекст XPath </short-description>
<description>XPathContext xptr_new_context ( void ) 
 Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=237> 
<name>ncurses_slk_set</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Sets function key labels</short-description>
<description>bool ncurses_slk_set ( int $labelnr , string $label , int $format ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>labelnr - 
label - 
format - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=238> 
<name>array_intersect_uassoc</name>
<versions>(PHP 5)</versions>
<short-description>Вычисляет схождение массивов с дополнительной проверкой индекса, осуществляемой при помощи callback-функции</short-description>
<description>array array_intersect_uassoc ( array $array1 , array $array2 [, array $ ... ], callback $key_compare_func ) 
 array_intersect_uassoc() возвращает массив, содержащий значения array1, содержащиеся во всех последующих параметрах. Обратите внимание, что в отличие от array_intersect(), для сравнения используются ключи. 
 Для сравнения ключей используется функция, предоставляемая пользователем. Она должна возвращать целое число меньшее, равное или большее нуля, если первый параметр, соответственно, меньше, равен или больше второго. </description>
<parameters>array1 - Исходный сравниваемый массив 
array2 - Первый массив, с которым сравниваются ключи. 
array - Дополнительные массивы, с которыми осуществляется сравнение. 
key_compare_func - Предоставленная пользователем callback-функция. </parameters>
<output>Возвращает все элементы array1, чьи значения существуют во всех аргументах. </output>
<errors></errors>
<example><?php
$array1 = array("a" => "green", "b" => "brown", "c" => "blue", "red");
$array2 = array("a" => "GREEN", "B" => "brown", "yellow", "red");
print_r(array_intersect_uassoc($array1, $array2, "strcasecmp"));
?></example>
<example_result>
 
Array
(
    [b] => brown
)
</example_result>
</object>

<object id=239> 
<name>ncurses_meta</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Enables/Disable 8-bit meta key information</short-description>
<description>int ncurses_meta ( resource $window , bool $8bit ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>window - 
8bit - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=240> 
<name>imap_errors</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Returns all of the IMAP errors that have occured</short-description>
<description>array imap_errors ( void ) 
 Gets all of the IMAP errors (if any) that have occurred during this page request or since the error stack was reset. 
 When imap_errors() is called, the error stack is subsequently cleared. </description>
<parameters></parameters>
<output>This function returns an array of all of the IMAP error messages generated since the last imap_errors() call, or the beginning of the page. Returns FALSE if no error messages are available. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=241> 
<name>yaz_error</name>
<versions>(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)</versions>
<short-description>Returns error description</short-description>
<description>string yaz_error ( resource $id ) 
 yaz_error() returns an English text message corresponding to the last error number as returned by yaz_errno(). </description>
<parameters>id - The connection resource returned by yaz_connect(). </parameters>
<output>Returns an error text message for server (last request), identified by parameter id. An empty string is returned if the last operation was successful. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=242> 
<name>mysql_list_tables</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает список таблиц базы данных MySQL</short-description>
<description>resource mysql_list_tables ( string $database [, resource $link_identifier ] ) 
 Возвращает список имен таблиц базы данных MySQL. 
 Данная функция устарела. Вместо нее рекомендуется использовать mysql_query() с запросом SHOW TABLES [FROM db_name] [LIKE &#039;pattern&#039;]. </description>
<parameters>database - Имя базы данных 
link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Дескриптор результата (resource) в случае успеха или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$dbname = 'mysql_dbname';
if (!mysql_connect('mysql_host', 'mysql_user', 'mysql_password')) {
    echo 'Ошибка подключения к mysql';
    exit;
}
$sql = "SHOW TABLES FROM $dbname";
$result = mysql_query($sql);
if (!$result) {
    echo "Ошибка базы, не удалось получить список таблиц\n";
    echo 'Ошибка MySQL: ' . mysql_error();
    exit;
}
while ($row = mysql_fetch_row($result)) {
    echo "Таблица: {$row[0]}\n";
}
mysql_free_result($result);
?></example>
<example_result></example_result>
</object>

<object id=243> 
<name>dbplus_rcreate</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Creates a new DB++ relation</short-description>
<description>resource dbplus_rcreate ( string $name , mixed $domlist [, bool $overwrite ] ) 
 Creates a new relation. Any existing relation sharing the same name will be overwritten if the relation is currently not in use and overwrite is set to TRUE. </description>
<parameters>name - 
domlist - A combination of domains. May be passed as a single domain name string or as an array of domain names. 
overwrite - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=244> 
<name>getrusage</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the current resource usages</short-description>
<description>array getrusage ([ int $who = 0 ] ) 
 This is an interface to getrusage(2). It gets data returned from the system call. </description>
<parameters>who - If who is 1, getrusage will be called with RUSAGE_CHILDREN. </parameters>
<output>Returns an associative array containing the data returned from the system call. All entries are accessible by using their documented field names. </output>
<errors></errors>
<example><?php
$dat = getrusage();
echo $dat["ru_nswap"];         // number of swaps
echo $dat["ru_majflt"];        // number of page faults
echo $dat["ru_utime.tv_sec"];  // user time used (seconds)
echo $dat["ru_utime.tv_usec"]; // user time used (microseconds)
?></example>
<example_result></example_result>
</object>

<object id=245> 
<name>hw_Root</name>
<versions>(PHP 4)</versions>
<short-description>Root object id</short-description>
<description>int hw_root ( void ) 
 Returns the object ID of the hyperroot collection. Currently this is always 0. The child collection of the hyperroot is the root collection of the connected server. </description>
<parameters></parameters>
<output>Returns 0. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=246> 
<name>enchant_dict_check</name>
<versions>(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )</versions>
<short-description>Check whether a word is correctly spelled or not</short-description>
<description>bool enchant_dict_check ( resource $dict , string $word ) 
 If the word is correctly spelled return TRUE, otherwise return FALSE </description>
<parameters>dict - Dictionary resource 
word - The word to check </parameters>
<output>Returns TRUE if the word is spelled correctly, FALSE if not. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=247> 
<name>date_default_timezone_get</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Возвращает временную зону, используемой по умолчанию всеми функциями даты/времени в скрипте </short-description>
<description>string date_default_timezone_get ( void ) 
 Функция пытается получить временную зону по умолчанию по порядку следующими способами: 
 Чтение настройки временной зоны с помощью функции date_default_timezone_set() (если применимо) 
 Только до версии PHP 5.4.0: чтение переменной окружения TZ (если она не пуста) 
 Чтение значения ini настройки date.timezone (если задана) 
 Только до версии PHP 5.4.0: опрос операционной системы (если поддерживается и разрешено ОС). При этом используется механизм угадывания временной зоны. Этот механизм не всегда корректно работает. Если используется этот метод (все предыдущие не дали результата), будет выдано предупреждение. Не стоит полагаться на результат, полученный этим способом, вместо этого лучше задать в параметрах временной зоны date.timezone правильное значение. 
 Если ни один из способов не принес результата, date_default_timezone_get() вернет временную зону UTC. </description>
<parameters></parameters>
<output>Возвращает string. </output>
<errors></errors>
<example><?php
date_default_timezone_set('Europe/London');
if (date_default_timezone_get()) {
    echo 'date_default_timezone_set: ' . date_default_timezone_get() . '<br />';
}
if (ini_get('date.timezone')) {
    echo 'date.timezone: ' . ini_get('date.timezone');
}
?></example>
<example_result>
 
date_default_timezone_set: Europe/London
date.timezone: Europe/London
</example_result>
</object>

<object id=248> 
<name>ibase_backup</name>
<versions>(PHP 5)</versions>
<short-description>Initiates a backup task in the service manager and returns immediately</short-description>
<description>mixed ibase_backup ( resource $service_handle , string $source_db , string $dest_file [, int $options = 0 [, bool $verbose = false ]] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=249> 
<name>PDF_get_font</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Возвращает шрифт [устаревшее]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=250> 
<name>headers_sent</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Проверяет были ли и куда отправлены заголовки</short-description>
<description>bool headers_sent ([ string &$file [, int &$line ]] ) 
 Проверяет были ли и куда отправлены заголовки. 
 Нельзя отправить дополнительные строки заголовков, используя функцию header() если заголовки уже были отправлены. Используя эту функцию, можно предупредить ошибки, связанные с HTTP заголовками. Также можно использовать Буфферизацию вывода. </description>
<parameters>file - Если опциональные параметры file и line установлены, то функция headers_sent() поместит имя файла PHP исходника и номер строки, с которой начинается вывод, в переменные file и line. 
line - Номер строки, с которой начинается вывод. </parameters>
<output>Функция headers_sent() вернет FALSE если HTTP заголовки не были отправлены, либо TRUE если отправлены. </output>
<errors></errors>
<example><?php
// Если не было отправлено ни одного заголовка, то отправить один
if (!headers_sent()) {
    header('Location: http://www.example.com/');
    exit;
}
// Пример использования необязательных параметров file и line, как в PHP 4.3.0
// необходимо отметить, что $filename и $linenum передаются для дальнейшего использования.
// Не назначайте их значения заранее.
if (!headers_sent($filename, $linenum)) {
    header('Location: http://www.example.com/');
    exit;
// Скорее всего, ошибка будет происходит здесь.
} else {
    echo "Звголовки уже были отправлены в $filename в строке $linenum\n" .
          "Невозможно перенаправить, пожалуйста, передите по этой <a " .
          "href=\"http://www.example.com\">link</a> ссылке\n";
    exit;
}
?></example>
<example_result></example_result>
</object>

<object id=251> 
<name>getservbyname</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает номер порта, присвоенного Интернет службе и протоколу</short-description>
<description>int getservbyname ( string $service , string $protocol ) 
 Функция getservbyname() возвращает Интернет порт, который соответствует параметру service для заданного в protocol протокола, как в /etc/services. </description>
<parameters>service - Имя Интернет службы в виде строки (string). 
protocol - Параметр protocol может быть равен "tcp" или "udp" (в нижнем регистре). </parameters>
<output>Возвращает номер порта, или FALSE если service или protocol не найдены. </output>
<errors></errors>
<example><?php
     $services = array('http', 'ftp', 'ssh', 'telnet', 'imap',
     'smtp', 'nicname', 'gopher', 'finger', 'pop3', 'www');
     
     foreach ($services as $service) {
     $port = getservbyname($service, 'tcp');
     echo $service . ": " . $port . "<br />\n";
     }
     ?></example>
<example_result></example_result>
</object>

<object id=252> 
<name>odbc_longreadlen</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Handling of LONG columns</short-description>
<description>bool odbc_longreadlen ( resource $result_id , int $length ) 
 Enables handling of LONG and LONGVARBINARY columns. </description>
<parameters>result_id - The result identifier. 
length - The number of bytes returned to PHP is controlled by the parameter length. If it is set to 0, Long column data is passed through to the client. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=253> 
<name>vpopmail_auth_user</name>
<versions>(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)</versions>
<short-description>Attempt to validate a username/domain/password</short-description>
<description>bool vpopmail_auth_user ( string $user , string $domain , string $password [, string $apop ] ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=254> 
<name>PDF_close_image</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Закрывает изображение</short-description>
<description>bool PDF_close_image ( resource $p , int $image ) 
 Закрывает изображение image, полученное с помощью функции PDF_open_image(). </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=255> 
<name>dbplus_add</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Add a tuple to a relation</short-description>
<description>int dbplus_add ( resource $relation , array $tuple ) 
 Adds a tuple to a relation. </description>
<parameters>relation - 
tuple - An array of attribute/value pairs to be inserted into the given relation. </parameters>
<output>The function will return DBPLUS_ERR_NOERR on success or a db++ error code on failure. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=256> 
<name>base64_decode</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Декодирует данные, закодированные алгоритмом MIME base64</short-description>
<description>string base64_decode ( string $data [, bool $strict = false ] ) 
 Декодирует строку data, закодированную при помощи base64. </description>
<parameters>data - Закодированные данные. 
strict - Возвращает FALSE, если данные содержат символы вне алфавита base64. </parameters>
<output>Возвращает декодированные данные или FALSE в случае возникновения ошибки. Возвращаемые данные могут быть бинарными. </output>
<errors></errors>
<example><?php
$str = 'VGhpcyBpcyBhbiBlbmNvZGVkIHN0cmluZw==';
echo base64_decode($str);
?></example>
<example_result>
 
This is an encoded string
</example_result>
</object>

<object id=257> 
<name>filegroup</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает идентификатор группы файла</short-description>
<description>int filegroup ( string $filename ) 
 Возвращает идентификатор группы файла в виде числа. Для получения имени группы в виде строки используйте функцию posix_getgrgid(). </description>
<parameters>filename - Путь к файлу. </parameters>
<output>Возвращает идентификатор группы файла или FALSE в случае ошибки. Идентификатор группы возвращается в виде числа, для получения имени группы в виде строки используйте функцию posix_getgrgid(). В случае возникновения ошибки возвращается FALSE. </output>
<errors>В случае возникновения ошибки будет сгенерирована ошибка уровня E_WARNING. </errors>
<example><?php
$filename = 'index.php';
print_r(posix_getgrgid(filegroup($filename)));
?></example>
<example_result></example_result>
</object>

<object id=258> 
<name>PDF_get_fontname</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Возвращает название шрифта [устаревшее]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=259> 
<name>mb_get_info</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Получает внутренние настройки mbstring</short-description>
<description>mixed mb_get_info ([ string $type = "all" ] ) 
 mb_get_info() возвращает параметры внутренней настройки mbstring. </description>
<parameters>type - Если type не указан, или указан как "all", будет возвращен массив array, содержащий элементы internal_encoding", "http_output", "http_input", "func_overload", "mail_charset", "mail_header_encoding", "mail_body_encoding". </parameters>
<output>Массив array информации о параметрах, если type не указан, в противном случае значение заданного параметра type. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=260> 
<name>JDToFrench</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Переводит число дней в Юлианском летоисчислении в дату по Французскому республиканскому календарю </short-description>
<description>string jdtofrench ( int $juliandaycount ) 
 Переводит число дней в Юлианском летоисчислении в дату по Французскому республиканскому календарю </description>
<parameters>julianday - Номер дня в Юлианском летоисчислении </parameters>
<output>Дата со дня французской революции в виде строки формата "месяц/день/год" </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=261> 
<name>filepro_fieldwidth</name>
<versions>(PHP 4, PHP 5 <= 5.1.6)</versions>
<short-description>Gets the width of a field</short-description>
<description>int filepro_fieldwidth ( int $field_number ) 
 Returns the width of the field corresponding to field_number. </description>
<parameters>field_number - The field number. </parameters>
<output>Returns the width of the field as a integer, or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=262> 
<name>ob_list_handlers</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Список всех используемых обработчиков вывода</short-description>
<description>array ob_list_handlers ( void ) 
 Список всех используемых обработчиков вывода. </description>
<parameters></parameters>
<output>Функция вернет массив с используемыми обработчиками вывода (если имеются). Если включен output_buffering или использовалась анонимная функция вместе с ob_start(), то ob_list_handlers() вернет "default output handler". </output>
<errors></errors>
<example><?php
//используется output_buffering=On
print_r(ob_list_handlers());
ob_end_flush();
ob_start("ob_gzhandler");
print_r(ob_list_handlers());
ob_end_flush();
// анонимная функция
ob_start(create_function('$string', 'return $string;'));
print_r(ob_list_handlers());
ob_end_flush();
?></example>
<example_result>
 
Array
(
    [0] => default output handler
)

Array
(
    [0] => ob_gzhandler
)

Array
(
    [0] => default output handler
)
</example_result>
</object>

<object id=263> 
<name>pg_copy_from</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Вставляет записи из массива в таблицу </short-description>
<description>bool pg_copy_from ( resource $connection , string $table_name , array $rows [, string $delimiter [, string $null_as ]] ) 
 pg_copy_from() вставляет записи в таблицу из массива rows. В ходе выполнения вызывает SQL команду COPY FROM для вставки записей. </description>
<parameters>connection - Ресурс соединения с базой данных PostgreSQL. 
table_name - Имя таблицы, в которую копируются значения из rows. 
rows - Массив (array) данных для копирования в table_name. Каждое значение в rows становится строкой в table_name. Каждое значение массива rows должно быть строкой с разделителем, содержащей значения для вставки в каждое поле таблицы. Значения должны заканчиваться символом перевода строки. 
delimiter - Символ, отделяющий значения друг от друга в каждом элементе массива rows. По-умолчанию TAB. 
null_as - Определяет, каким образом значения SQL NULL представлены в массиве rows. По-умолчанию \N ("\\N"). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
   $db = pg_connect("dbname=publisher") or die("Не удается создать подключение");
   
   $rows = pg_copy_to($db, $table_name);
   
   pg_query($db, "DELETE FROM $table_name");
   
   pg_copy_from($db, $table_name, $rows);
?></example>
<example_result></example_result>
</object>

<object id=264> 
<name>zlib_get_coding_type</name>
<versions>(PHP 4 >= 4.3.2, PHP 5)</versions>
<short-description>Возвращает способ кодирования, используемый для сжатия вывода</short-description>
<description>string zlib_get_coding_type ( void ) 
 Возвращает способ кодирования, используемый для сжатия вывода. </description>
<parameters></parameters>
<output>Возможные значения: gzip, deflate или FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=265> 
<name>ibase_close</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Close a connection to an InterBase database</short-description>
<description>bool ibase_close ([ resource $connection_id = NULL ] ) 
 Closes the link to an InterBase database that&#039;s associated with a connection id returned from ibase_connect(). Default transaction on link is committed, other transactions are rolled back. </description>
<parameters>connection_id - An InterBase link identifier returned from ibase_connect(). If omitted, the last opened link is assumed. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=266> 
<name>m_numcolumns</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Number of columns returned in a comma delimited response</short-description>
<description>int m_numcolumns ( resource $conn , int $identifier ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
identifier - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=267> 
<name>ini_get</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the value of a configuration option</short-description>
<description>string ini_get ( string $varname ) 
 Returns the value of the configuration option on success. </description>
<parameters>varname - The configuration option name. </parameters>
<output>Returns the value of the configuration option as a string on success, or an empty string for null values. Returns FALSE if the configuration option doesn&#039;t exist. </output>
<errors></errors>
<example><?php
/*
Our php.ini contains the following settings:
display_errors = On
register_globals = Off
post_max_size = 8M
*/
echo 'display_errors = ' . ini_get('display_errors') . "\n";
echo 'register_globals = ' . ini_get('register_globals') . "\n";
echo 'post_max_size = ' . ini_get('post_max_size') . "\n";
echo 'post_max_size+1 = ' . (ini_get('post_max_size')+1) . "\n";
echo 'post_max_size in bytes = ' . return_bytes(ini_get('post_max_size'));
function return_bytes($val) {
    $val = trim($val);
    $last = strtolower($val[strlen($val)-1]);
    switch($last) {
        // The 'G' modifier is available since PHP 5.1.0
        case 'g':
            $val *= 1024;
        case 'm':
            $val *= 1024;
        case 'k':
            $val *= 1024;
    }
    return $val;
}
?></example>
<example_result>
 

display_errors = 1
register_globals = 0
post_max_size = 8M
post_max_size+1 = 9
post_max_size in bytes = 8388608

</example_result>
</object>

<object id=268> 
<name>ftp_set_option</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Устанавливает параметры соединения с FTP сервером</short-description>
<description>bool ftp_set_option ( resource $ftp_stream , int $option , mixed $value ) 
 Эта функция устанавливает параметры соединения с FTP сервером. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP сервером. 
option - В настоящее время поддерживаются следующие параметры: Поддерживаемые параметры FTP_TIMEOUT_SEC Устанавливает таймаут сетевых операций, в секундах. Аргумент value должен быть целым, больше 0. По умолчанию таймаут равен 90 секунд. FTP_AUTOSEEK При установке этого параметра, перед выполнением запросов GET или PUT с параметром resumepos или startpos указатель файла будет установлен на запрошенную позицию. Этот параметр установлен по умолчанию. 
value - Назначение этого аргумента зависит от значения параметра option. </parameters>
<output>Возвращает TRUE если параметр был установлен; FALSE в противном случае. Если значение аргумента option не поддерживается или значение аргумента value не соответствует значению аргумента option, будет выведено предупреждение. </output>
<errors></errors>
<example><?php
// установка таймаута в 10 секунд
ftp_set_option($conn_id, FTP_TIMEOUT_SEC, 10);
?></example>
<example_result></example_result>
</object>

<object id=269> 
<name>yaz_element</name>
<versions>(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)</versions>
<short-description>Specifies Element-Set Name for retrieval </short-description>
<description>bool yaz_element ( resource $id , string $elementset ) 
 This function sets the element set name for retrieval. 
 Call this function before yaz_search() or yaz_present() to specify the element set name for records to be retrieved. 
 Замечание: 
 If this function appears to have no effect, see the description of the piggybacking option in yaz_connect(). </description>
<parameters>id - The connection resource returned by yaz_connect(). 
elementset - Most servers support F (for full records) and B (for brief records). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=270> 
<name>unlink</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Удаляет файл</short-description>
<description>bool unlink ( string $filename [, resource $context ] ) 
 Удаляет файл filename. Функция похожа на функцию unlink() Unix C. В случае ошибки будет сгенерирована ошибка уровня E_WARNING. </description>
<parameters>filename - Путь к файлу. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$fh = fopen('test.html', 'a');
fwrite($fh, '<h1>Hello world!</h1>');
fclose($fh);
unlink('test.html');
?></example>
<example_result></example_result>
</object>

<object id=271> 
<name>fbsql_db_query</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Send a FrontBase query</short-description>
<description>resource fbsql_db_query ( string $database , string $query [, resource $link_identifier ] ) 
 Selects a database and executes a query on it. </description>
<parameters>database - The database to be selected. 
query - The SQL query to be executed. 
link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Returns a positive FrontBase result identifier to the query result, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=272> 
<name>ncurses_slk_attroff</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Turn off the given attributes for soft function-key labels</short-description>
<description>int ncurses_slk_attroff ( int $intarg ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>intarg - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=273> 
<name>imap_qprint</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Convert a quoted-printable string to an 8 bit string</short-description>
<description>string imap_qprint ( string $string ) 
 Convert a quoted-printable string to an 8 bit string according to &raquo; RFC2045, section 6.7. </description>
<parameters>string - A quoted-printable string </parameters>
<output>Returns an 8 bits string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=274> 
<name>oci_commit</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Фиксирует транзакцию базы данных</short-description>
<description>bool oci_commit ( resource $connection ) 
 Фиксирует транзакцию соединения connection. Фиксация завершает текущую транзакцию и делает все изменения постоянными. Она также освобождает все установленные блокировки. 
 Транзакция начинается при первом SQL-запросе, изменяющим данные, который был запущен с помощью функции oci_execute() и флага OCI_NO_AUTO_COMMIT. Последующие изменения данных от других запросов также становятся частью данной транзакции. Изменения, сделанные в транзакции, являются временными до тех пор, пока транзакция не будет зафиксирована или будет произведен ее откат. Другие пользователи базы данных не смогут увидеть изменения до их фиксации. 
 При вставке или обновлении данных рекомендуется использовать транзакции для сохранения целостности данных и увеличения производительности. </description>
<parameters>connection - Идентификатор соединения Oracle, полученный из функций oci_connect(), oci_pconnect() или oci_new_connect(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Вставка в несколько таблиц, откат изменений в случае ошибки
$conn = oci_connect('hr', 'welcome', 'localhost/XE');
$stid = oci_parse($conn, "INSERT INTO mysalary (id, name) VALUES (1, 'Chris')");
// Флаг OCI_NO_AUTO_COMMIT сообщает Oracle не фиксировать запрос INSERT при его поступлении
// Для PHP <= 5.3.1 используйте OCI_DEFAULT, эти два флага эквивалентны
$r = oci_execute($stid, OCI_NO_AUTO_COMMIT);
if (!$r) {
    $e = oci_error($stid);
    trigger_error(htmlentities($e['message']), E_USER_ERROR);
}
$stid = oci_parse($conn, 'INSERT INTO myschedule (startday) VALUES (12)');
$r = oci_execute($stid, OCI_NO_AUTO_COMMIT);
if (!$r) {
    $e = oci_error($stid);
    oci_rollback($conn);  // откат изменений из обоих таблиц
    trigger_error(htmlentities($e['message']), E_USER_ERROR);
}
// Фиксация изменений в обоих таблицах
$r = oci_commit($conn);
if (!r) {
    $e = oci_error($conn);
    trigger_error(htmlentities($e['message']), E_USER_ERROR);
}
?></example>
<example_result></example_result>
</object>

<object id=275> 
<name>sqrt</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Квадратный корень</short-description>
<description>float sqrt ( float $arg ) 
 Возвращает квадратный корень из arg. </description>
<parameters>arg - Аргумент для вычисления </parameters>
<output>Квадратный корень из arg или специальное значение NAN для отрицательных чисел. </output>
<errors></errors>
<example><?php
// Точность зависит от ваших настроек точности
echo sqrt(9); // 3
echo sqrt(10); // 3.16227766 ...
?></example>
<example_result></example_result>
</object>

<object id=276> 
<name>pg_get_pid</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Получает ID процесса сервера БД</short-description>
<description>int pg_get_pid ( resource $connection ) 
 pg_get_pid() получает PID сервера базы данных. PID полезен, когда требуется определить, какой процесс отправил NOTIFY сообщение, принятое функцией pg_get_notify() (точнее узнать, сервер его отправил или какой-то другой процесс). </description>
<parameters>connection - Ресурс соединения с базой данных PostgreSQL. </parameters>
<output>ID процесса сервера баз данных. </output>
<errors></errors>
<example><?php 
$conn = pg_pconnect("dbname=publisher");
if (!$conn) {
  echo "Произошла ошибка.\n";
  exit;
}
// PID сервера БД. Сравните его с PID возвращаемым pg_get_notify()
$pid = pg_get_pid($conn);
?></example>
<example_result></example_result>
</object>

<object id=277> 
<name>dba_delete</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Delete DBA entry specified by key</short-description>
<description>bool dba_delete ( string $key , resource $handle ) 
 dba_delete() deletes the specified entry from the database. </description>
<parameters>key - The key of the entry which is deleted. 
handle - The database handler, returned by dba_open() or dba_popen(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=278> 
<name>array_merge_recursive</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Рекурсивное слияние двух или более массивов</short-description>
<description>array array_merge_recursive ( array $array1 [, array $... ] ) 
 Функция array_merge_recursive() сливает элементы двух или более массивов таким образом, что значения одного массива присоединяются в конец другого. Возвращает результирующий массив. 
 Если входные массивы имеют одинаковые строковые ключи, то значения этих ключей сливаются в массив, и это делается рекурсивно, так что если одно из значений является массивом, то функция сливает его с соответствующим значением в другом массиве. Однако, если массивы имеют одинаковые числовые ключи, значение, упомянутое последним, не заменит исходное значение, а будет добавлено в конец массива. </description>
<parameters>array1 - Первоначальный массив для слияния. 
... - Дополнительные рекурсивно сливаемые массивы. </parameters>
<output>Массив значений, полученный в результате слияния аргументов вместе. </output>
<errors></errors>
<example><?php
$ar1 = array("color" => array("favorite" => "red"), 5);
$ar2 = array(10, "color" => array("favorite" => "green", "blue"));
$result = array_merge_recursive($ar1, $ar2);
print_r($result);
?></example>
<example_result>
 
Array
(
    [color] => Array
        (
            [favorite] => Array
                (
                    [0] => red
                    [1] => green
                )

            [0] => blue
        )

    [0] => 5
    [1] => 10
)
</example_result>
</object>

<object id=279> 
<name>ncurses_color_content</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Retrieves RGB components of a color</short-description>
<description>int ncurses_color_content ( int $color , int &$r , int &$g , int &$b ) 
 Retrieves the red, green, and blue components for the given color definition. Terminal color capabilities must be initialized with ncurses_start_color() prior to calling this function. </description>
<parameters>color - The number of the color to retrieve information for. May be one of the pre-defined color constants. 
r - A reference to which to return the red component of the color. The value returned to the reference will be between 0 and 1000. 
g - A reference to which to return the green component of the color. The value returned to the reference will be between 0 and 1000. 
b - A reference to which to return the blue component of the color. The value returned to the reference will be between 0 and 1000. </parameters>
<output>Returns -1 if the function was successful, and 0 if ncurses or terminal color capabilities have not been initialized. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=280> 
<name>mb_ereg_search_getregs</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Выводит результат последнего сравнения с регулярным выражением </short-description>
<description>array mb_ereg_search_getregs ( void ) 
 Получение результата выполнения функций сравнения многобайтных строк с регулярным выражением </description>
<parameters></parameters>
<output>Для этой функции будетиспользована внутренняя кодировка или кодировка, установленная функцией mb_regex_encoding().</output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=281> 
<name>dbplus_rchperm</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Change relation permissions</short-description>
<description>int dbplus_rchperm ( resource $relation , int $mask , string $user , string $group ) 
 Changes access permissions as specified by mask, user and group. The values for these are operating system specific. </description>
<parameters>relation - A relation opened by dbplus_open(). 
mask - 
user - 
group - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=282> 
<name>time</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает текущую метку времени Unix</short-description>
<description>int time ( void ) 
 Возвращает количество секунд, прошедших с начала Эпохи Unix (The Unix Epoch, 1 января 1970 00:00:00 GMT) до текущего времени. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example><?php
$nextWeek = time() + (7 * 24 * 60 * 60);
                   // 7 дней; 24 часа; 60 минут; 60 секунд
echo 'Сейчас:           '. date('Y-m-d') ."\n";
echo 'Следующая неделя: '. date('Y-m-d', $nextWeek) ."\n";
// или с помощью strtotime():
echo 'Следующая неделя: '. date('Y-m-d', strtotime('+1 week')) ."\n";
?></example>
<example_result>
 
Сейчас:           2005-03-30
Следующая неделя: 2005-04-06
Следующая неделя: 2005-04-06
</example_result>
</object>

<object id=283> 
<name>imap_subscribe</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Subscribe to a mailbox</short-description>
<description>bool imap_subscribe ( resource $imap_stream , string $mailbox ) 
 Subscribe to a new mailbox. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
mailbox - The mailbox name, see imap_open() for more information </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=284> 
<name>xslt_set_sax_handlers</name>
<versions>(PHP 4 >= 4.0.6)</versions>
<short-description>Задает SAX обработчики, которые будут вызваться после разбора XML докумнента </short-description>
<description>void xslt_set_sax_handlers ( resource $processor , array $handlers ) 
 xslt_set_sax_handlers() задает SAX обработчики handlers для документа и заданного ресурса XSLT-процессора processor. 
 Использование xslt_set_sax_handlers() не сильно отличается от применения SAX парсера, как например xml_parse(), к результату xslt_process() преобразования. </description>
<parameters>processor - Идентификатор ссылки на XSLT-процессор, созданный функцией xslt_create(). 
handlers - handlers должны быть массивом следующего формата: <?php
$handlers = array(
 "document" => array(
 "start_doc",
 "end_doc"),
 "element" => array(
 "start_element",
 "end_element"),
 "namespace" => array(
 "start_namespace",
 "end_namespace"),
 "comment" => "comment",
 "pi" => "pi",
 "character" => "characters"
);
?> Синтаксис функций описан в документации к функциям обработки схем. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
// От ohlesbeauxjours at yahoo dot fr
// В этом примере к содержимому каждого тэга <auteur> 
// применяется функция strtoupper(), а затем выводится
// результат в виде XML дерева:
$xml='<?xml version="1.0"?>
<books>
 <book>
  <title>Mme Bovary</title>
  <author>Gustave Flaubert</author>
 </book>
 <book>
  <title>Mrs Dalloway</title>
  <author>Virginia Woolf</author>
 </book>
</books>';
$xsl='<?xml version="1.0"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:output method="html" encoding="ISO-8859-1" indent="no" omit-xml-declaration="yes"/>
<xsl:template match="/">
 <xsl:for-each select="books/book">
  <livre>
   <auteur><xsl:value-of select="author/text()"/></auteur>
  </livre>
 </xsl:for-each>
</xsl:template>
</xsl:stylesheet>';
// Обработчики :
function start_document()
{  // начало чтения документа
}
function end_document()
{  // завершение чтения документа
}
function start_element($parser, $name, $attributes)
{  global $result,$tag;
  $result .= "<". $name . ">";
  $tag = $name;
}
function end_element($parser, $name)
{  global $result;
  $result .= "</" . $name . ">";
}
function characters($parser, $data)
{  global $result,$tag;
  if ($tag == "auteur" ) {
    $data = strtoupper($data);
  }
  $result .= $data;
}
// Преобразование :
$xh = xslt_create();
$handlers = array("document" => array("start_document","end_document"),
   "element" => array("start_element","end_element"),
   "character" => "characters");
xslt_set_sax_handlers($xh, $handlers);
xslt_process($xh, 'arg:/_xml', 'arg:/_xsl', NULL, array("/_xml"=>$xml, "/_xsl"=>$xsl));
xslt_free($xh);
?></example>
<example_result>
 
<livre>
   <auteur>GUSTAVE FLAUBERT</auteur>
</livre>
<livre>
   <auteur>VIRGINIA WOOLF</auteur>
</livre>
</example_result>
</object>

<object id=285> 
<name>posix_getpgrp</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Return the current process group identifier</short-description>
<description>int posix_getpgrp ( void ) 
 Return the process group identifier of the current process. </description>
<parameters></parameters>
<output>Returns the identifier, as an integer. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=286> 
<name>flock</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Портируемая консультативная блокировка файлов</short-description>
<description>bool flock ( resource $handle , int $operation [, int &$wouldblock ] ) 
 flock() позволяет осуществить простую модель чтения/записи, которая может быть использована практически на любой платформе (включая большинство вариантов Unix и даже Windows). 
 В версиях PHP до 5.3.2 блокировка освобождалась также вызовом функции fclose() (которая также вызывается автоматически по завершении скрипта). 
 PHP поддерживает портируемый способ консультативной блокировки (adviosory locking) полностью всего файла (что означает, что все программы, осуществляющие доступ к файлу, должны использовать один и тот же способ блокировки, иначе блокировка не будет работать). По умолчанию, данная функция будет ждать получения блокировки; это поведение можно изменить (на платформах отличных от Windows) с помощью описанного ниже параметра LOCK_NB. </description>
<parameters>handle - Указатель (resource)на файл, обычно создаваемый с помощью функции fopen().
operation - operation может принимать следующие значения: LOCK_SH для получения разделяемой блокировки (чтение). LOCK_EX для получения эксклюзивной блокировки (запись). LOCK_UN для снятия блокировки (разделяемой или эксклюзивной). 
wouldblock - Необязательный третий параметр будет установлен в TRUE, если блокировка будет блокирующей (код ошибки EWOULDBLOCK). (не поддерживается на Windows) </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$fp = fopen("/tmp/lock.txt", "r+");
if (flock($fp, LOCK_EX)) { // выполняем эксклюзивную блокировку
    ftruncate($fp, 0); // очищаем файл
    fwrite($fp, "Что-нибудь пишем сюда\n");
    flock($fp, LOCK_UN); // отпираем файл
} else {
    echo "Не удалось получить блокировку !";
}
fclose($fp);
?></example>
<example_result></example_result>
</object>

<object id=287> 
<name>str_split</name>
<versions>(PHP 5)</versions>
<short-description>Преобразует строку в массив</short-description>
<description>array str_split ( string $string [, int $split_length = 1 ] ) 
 Преобразует строку в массив. </description>
<parameters>string - Входная строка. 
split_length - Максимальная длина фрагмента. </parameters>
<output>Если указан необязательный аргумент split_length, возвращаемый массив будет содержать части исходной строки длиной split_length каждая, иначе каждый элемент будет содержать один символ. </output>
<errors></errors>
<example><?php
$str = "Hello Friend";
$arr1 = str_split($str);
$arr2 = str_split($str, 3);
print_r($arr1);
print_r($arr2);
?></example>
<example_result>
 
Array
(
    [0] => H
    [1] => e
    [2] => l
    [3] => l
    [4] => o
    [5] =>
    [6] => F
    [7] => r
    [8] => i
    [9] => e
    [10] => n
    [11] => d
)

Array
(
    [0] => Hel
    [1] => lo
    [2] => Fri
    [3] => end
)
</example_result>
</object>

<object id=288> 
<name>ezmlm_hash</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Вычисляет хеш-сумму, необходимую для EZMLM</short-description>
<description>int ezmlm_hash ( string $addr ) 
 ezmlm_hash() вычисляет хеш-сумму, необходимую при хранении почтовых списков EZMLM в базе MySQL. </description>
<parameters>addr - Хешируемый адрес электронной почты. </parameters>
<output>Хеш-сумма параметра addr. </output>
<errors></errors>
<example><?php
$user = "joecool@example.com";
$hash = ezmlm_hash($user);
$query = sprintf("INSERT INTO sample VALUES (%s, '%s')", $hash, $user);
$db->query($query); // используя интерфейс PHPLIB db
?></example>
<example_result></example_result>
</object>

<object id=289> 
<name>inet_pton</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Конвертирует читаемый IP адрес в упакованное in_addr представление</short-description>
<description>string inet_pton ( string $address ) 
 Эта функция конвертирует читаемый IPv4 или IPv6 адрес (если PHP был собран с поддержкой IPv6) в адрес соответствующий 32-битной или 128-битной бинарной структуре. </description>
<parameters>address - Читаемый IPv4 или IPv6 адрес. </parameters>
<output>Возвращает in_addr представление заданного в параметре address адреса, или FALSE если задан синтаксически неверный address (к примеру, IPv4 адрес без точек или IPv6 адрес без двоеточий). </output>
<errors></errors>
<example><?php
$in_addr = inet_pton('127.0.0.1');
 
$in6_addr = inet_pton('::1');
?></example>
<example_result></example_result>
</object>

<object id=290> 
<name>srand</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Изменяет начальное число генератора псевдослучайных чисел</short-description>
<description>void srand ([ int $seed ] ) 
 Устанавливает начальное число генератора случайных чисел в seed или случайное число, если seed не указан. 
 Замечание: Начиная с PHP 4.2.0, больше нетнеобходимости инициализировать генератор случайных чисел функциямиsrand() или mt_srand(), посколькутеперь это происходит автоматически. </description>
<parameters>seed - Начальное значение генератора </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
// рандомизировать микросекундами
function make_seed()
{    list($usec, $sec) = explode(' ', microtime());
    return (float) $sec + ((float) $usec * 100000);
}srand(make_seed());
$randval = rand();
?></example>
<example_result></example_result>
</object>

<object id=291> 
<name>xml_get_current_line_number</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает от XML-парсера номер текущей строки</short-description>
<description>int xml_get_current_line_number ( resource $parser ) 
 Получает текущий номер строки для заданного XML-парсера. </description>
<parameters>parser - Ссылка на парсер XML для получения номера строки. </parameters>
<output>Эта функция возвращает FALSE, если ссылка параметра parser не ведет к действующему парсеру, или же возвращает номер строки согласно текущему положению указателя парсера. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=292> 
<name>fileowner</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает идентификатор владельца файла</short-description>
<description>int fileowner ( string $filename ) 
 Возвращает идентификатор владельца файла </description>
<parameters>filename - Путь к файлу. </parameters>
<output>Возвращает числовой идентификатор владельца указанного файла, или FALSE в случае возникновения ошибки. Чтобы получить имя владельца в виде строки, используйте функцию posix_getpwuid(). </output>
<errors>В случае неудачного завершения работы генерируется ошибка уровня E_WARNING.</errors>
<example><?php
$filename = 'index.php';
print_r(posix_getpwuid(fileowner($filename)));
?></example>
<example_result></example_result>
</object>

<object id=293> 
<name>dio_tcsetattr</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 <= 5.0.5)</versions>
<short-description>Sets terminal attributes and baud rate for a serial port </short-description>
<description>bool dio_tcsetattr ( resource $fd , array $options ) 
 dio_tcsetattr() sets the terminal attributes and baud rate of the open fd. </description>
<parameters>fd - The file descriptor returned by dio_open(). 
options - The currently available options are: 
 &#039;baud&#039; - baud rate of the port - can be 38400,19200,9600,4800,2400,1800, 1200,600,300,200,150,134,110,75 or 50, default value is 9600. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
$fd = dio_open('/dev/ttyS0', O_RDWR | O_NOCTTY | O_NONBLOCK);
dio_fcntl($fd, F_SETFL, O_SYNC);
dio_tcsetattr($fd, array(
  'baud' => 9600,
  'bits' => 8,
  'stop'  => 1,
  'parity' => 0
)); 
while (1) {
  $data = dio_read($fd, 256);
  if ($data) {
      echo $data;
  }
} 
?></example>
<example_result></example_result>
</object>

<object id=294> 
<name>dbplus_resolve</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Resolve host information for relation</short-description>
<description>array dbplus_resolve ( string $relation_name ) 
 dbplus_resolve() will try to resolve the given relation_name and find out internal server id, real hostname and the database path on this host. </description>
<parameters>relation_name - The relation name. </parameters>
<output>Returns an array containing these values under the keys sid, host and host_path or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=295> 
<name>variant_get_type</name>
<versions>(PHP 5)</versions>
<short-description>Returns the type of a variant object</short-description>
<description>int variant_get_type ( variant $variant ) 
 Returns the type of a variant object. </description>
<parameters>variant - The variant object. </parameters>
<output>This function returns an integer value that indicates the type of variant, which can be an instance of COM, DOTNET or VARIANT classes. The return value can be compared to one of the VT_XXX constants. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=296> 
<name>fdf_create</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Create a new FDF document</short-description>
<description>resource fdf_create ( void ) 
 Creates a new FDF document. 
 This function is needed if one would like to populate input fields in a PDF document with data. </description>
<parameters></parameters>
<output>Returns a FDF document handle, or FALSE on error. </output>
<errors></errors>
<example><?php
$outfdf = fdf_create();
fdf_set_value($outfdf, "volume", $volume, 0);
fdf_set_file($outfdf, "http:/testfdf/resultlabel.pdf");
fdf_save($outfdf, "outtest.fdf");
fdf_close($outfdf);
Header("Content-type: application/vnd.fdf");
$fp = fopen("outtest.fdf", "r");
fpassthru($fp);
unlink("outtest.fdf");
?></example>
<example_result></example_result>
</object>

<object id=297> 
<name>imap_fetch_overview</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Read an overview of the information in the headers of the given message</short-description>
<description>array imap_fetch_overview ( resource $imap_stream , string $sequence [, int $options = 0 ] ) 
 This function fetches mail headers for the given sequence and returns an overview of their contents. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
sequence - A message sequence description. You can enumerate desired messages with the X,Y syntax, or retrieve all messages within an interval with the X:Y syntax 
options - sequence will contain a sequence of message indices or UIDs, if this parameter is set to FT_UID. </parameters>
<output>Returns an array of objects describing one message header each. The object will only define a property if it exists. The possible properties are: subject - the messages subject from - who sent it to - recipient date - when was it sent message_id - Message-ID references - is a reference to this message id in_reply_to - is a reply to this message id size - size in bytes uid - UID the message has in the mailbox msgno - message sequence number in the mailbox recent - this message is flagged as recent flagged - this message is flagged answered - this message is flagged as answered deleted - this message is flagged for deletion seen - this message is flagged as already read draft - this message is flagged as being a draft </output>
<errors></errors>
<example><?php
$mbox = imap_open("{imap.example.org:143}INBOX", "username", "password")
     or die("can't connect: " . imap_last_error());
$MC = imap_check($mbox);
// Fetch an overview for all messages in INBOX
$result = imap_fetch_overview($mbox,"1:{$MC->Nmsgs}",0);
foreach ($result as $overview) {
    echo "#{$overview->msgno} ({$overview->date}) - From: {$overview->from}
    {$overview->subject}\n";
}imap_close($mbox);
?></example>
<example_result></example_result>
</object>

<object id=298> 
<name>swf_placeobject</name>
<versions>(PHP 4)</versions>
<short-description>Place an object onto the screen</short-description>
<description>void swf_placeobject ( int $objid , int $depth ) 
 Places the object in the current frame at a specified depth. 
 This uses the current mulcolor (specified by swf_mulcolor()) and the current addcolor (specified by swf_addcolor()) to color the object and it uses the current matrix to position the object. </description>
<parameters>objid - The object id. 
depth - Must be between 1 and 65535. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=299> 
<name>imagecolorexact</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get the index of the specified color</short-description>
<description>int imagecolorexact ( resource $image , int $red , int $green , int $blue ) 
 Returns the index of the specified color in the palette of the image. 
 Если изображение было создано из файла, то будут распознаны только цвета, используемые в изображении. Цвета, которые используются только в палитре, распознаны не будут. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
red - Значение красного компонента цвета.
green - Значение зеленого компонента цвета.
blue - Значение синего компонента цвета.</parameters>
<output>Returns the index of the specified color in the palette, or -1 if the color does not exist. </output>
<errors></errors>
<example><?php
// Setup an image
$im = imagecreatefrompng('./gdlogo.png');
$colors   = Array();
$colors[] = imagecolorexact($im, 255, 0, 0);
$colors[] = imagecolorexact($im, 0, 0, 0);
$colors[] = imagecolorexact($im, 255, 255, 255);
$colors[] = imagecolorexact($im, 100, 255, 52);
print_r($colors);
// Free from memory
imagedestroy($im);
?></example>
<example_result>
 
Array
(
    [0] => 16711680
    [1] => 0
    [2] => 16777215
    [3] => 6618932
)
</example_result>
</object>

<object id=300> 
<name>ncurses_slk_color</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Sets color for soft label keys</short-description>
<description>int ncurses_slk_color ( int $intarg ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>intarg - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=301> 
<name>ncurses_slk_init</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Initializes soft label key functions</short-description>
<description>bool ncurses_slk_init ( int $format ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>format - If ncurses_init() eventually uses a line from stdscr to emulate the soft labels, then this parameter determines how the labels are arranged of the screen. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=302> 
<name>pg_get_notify</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Получение SQL NOTIFY сообщения</short-description>
<description>array pg_get_notify ( resource $connection [, int $result_type ] ) 
 pg_get_notify() получает уведомления, сгенерированные командой SQL NOTIFY. Для получения уведомлений используйте команду SQL LISTEN. </description>
<parameters>connection - Ресурс соединения с базой данных PostgreSQL. 
result_type - Необязательный аргумент, указывающий, каким образом возвращаемый массив (array) будет проиндексирован.result_type - константа, и может принимать следующие значения: PGSQL_ASSOC, PGSQL_NUM или PGSQL_BOTH. При передаче PGSQL_ASSOC функция pg_get_notify() вернет ассоциативный массив, при передаче PGSQL_NUM - численно индексированный, в случае PGSQL_BOTH (по умолчанию) будут возвращены оба массива. </parameters>
<output>Массив(array), содержащий NOTIFY сообщение и PID сервера БД. Если никаких уведомлений не ожидается, функция вернет FALSE. </output>
<errors></errors>
<example><?php 
$conn = pg_pconnect("dbname=publisher");
if (!$conn) {
  echo "Произошла ошибка.\n";
  exit;
}
// Слушаем сообщение 'author_updated' из другого процесса
pg_query($conn, 'LISTEN author_updated;');
$notify = pg_get_notify($conn);
if (!$notify) {
  echo "Нет сообщений\n";
} else {
  print_r($notify);
}?></example>
<example_result></example_result>
</object>

<object id=303> 
<name>oci_set_client_info</name>
<versions>(PHP 5.3.2, PECL OCI8 >= 1.4.0)</versions>
<short-description>Задает информацию о клиенте </short-description>
<description>bool oci_set_client_info ( resource $connection , string $client_info ) 
 Задет информацию о клиенте для трассировки Oracle. 
 Информация о клиенте регистрируется в базе данных во время очередного запроса от PHP, например, когда запускается SQL выражение. 
 Клиентская информация может быть извлечена из административных представлений (view) базы данных, таких как V$SESSION. 
 Значение можно устанавливать и через постоянные соединения. </description>
<parameters>- Идентификатор соединения Oracle,возвращаемый oci_connect(), oci_pconnect(),или oci_new_connect().
 - Задаваемая пользователем строка до 64 байт. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$c = oci_connect('hr', 'welcome', 'localhost/XE');
// Запись информации о клиенте
oci_set_client_info($c, 'My Application Version 2');
// Код, осуществляющий запрос к БД, например выборка:
$s = oci_parse($c, 'select * from dual');
oci_execute($s);
oci_fetch_all($s, $res);
sleep(30);
?></example>
<example_result>
 
// Пока скрипт выполняется, администратор может увидеть клиентскую 
// информацию:

sqlplus system/welcome
SQL> select client_info from v$session;
</example_result>
</object>

<object id=304> 
<name>ini_get_all</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Gets all configuration options</short-description>
<description>array ini_get_all ([ string $extension [, bool $details = true ]] ) 
 Returns all the registered configuration options. </description>
<parameters>extension - An optional extension name. If set, the function return only options specific for that extension. 
details - Retrieve details settings or only the current value for each setting. Default is TRUE (retrieve details). </parameters>
<output>Returns an associative array with directive name as the array key. </output>
<errors></errors>
<example><?php
print_r(ini_get_all("pcre"));
print_r(ini_get_all());
?></example>
<example_result>
 
Array
(
    [pcre.backtrack_limit] => Array
        (
            [global_value] => 100000
            [local_value] => 100000
            [access] => 7
        )

    [pcre.recursion_limit] => Array
        (
            [global_value] => 100000
            [local_value] => 100000
            [access] => 7
        )

)
Array
(
    [allow_call_time_pass_reference] => Array
        (
            [global_value] => 0
            [local_value] => 0
            [access] => 6
        )

    [allow_url_fopen] => Array
        (
            [global_value] => 1
            [local_value] => 1
            [access] => 4
        )

    ...

)
</example_result>
</object>

<object id=305> 
<name>bzopen</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Открывает файл, сжатый с использованием bzip2</short-description>
<description>resource bzopen ( string $filename , string $mode ) 
 bzopen() открывает bzip2 (.bz2) файл для чтения и записи. </description>
<parameters>filename - Имя открываемого файла. 
mode - Аналогично функции fopen(), поддерживаются только &#039;r&#039; (чтение) и &#039;w&#039; (запись). Все остальное заставит bzopen вернуть FALSE. </parameters>
<output>Если открытие не удалось, bzopen() возвращает FALSE, иначе возвращается указатель на открытый файл. </output>
<errors></errors>
<example><?php
$file = "/tmp/foo.bz2";
$bz = bzopen($file, "r") or die("Couldn't open $file for reading");
bzclose($bz);
?></example>
<example_result></example_result>
</object>

<object id=306> 
<name>qdom_tree</name>
<versions>(PHP 4 >= 4.0.4)</versions>
<short-description>Создает дерево XML-строки</short-description>
<description>QDomDocument qdom_tree ( string $doc ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=307> 
<name>mysql_error</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает текст ошибки последней операции с MySQL</short-description>
<description>string mysql_error ([ resource $link_identifier ] ) 
 Возвращает текст ошибки выполнения последней функции MySQL. Ошибки работы с MySQL больше не вызывают сообщений в PHP. Вместо этого используйте функцию mysql_error(), для получения сообщения об ошибке. Учтите, что функция возвращает текст ошибки только последней выполненной функции MySQL (исключая mysql_error() и mysql_errno()), поэтому убедитесь, что вы вызываете данную функцию до вызова следующей функции MySQL. </description>
<parameters>link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Возвращает текст ошибки выполнения последней функции MySQL, или &#039;&#039; (пустую строку), если операция выполнена успешно. </output>
<errors></errors>
<example><?php
$link = mysql_connect("localhost", "mysql_user", "mysql_password");
mysql_select_db("nonexistentdb", $link);
echo mysql_errno($link) . ": " . mysql_error($link). "\n";
mysql_select_db("kossu", $link);
mysql_query("SELECT * FROM nonexistenttable", $link);
echo mysql_errno($link) . ": " . mysql_error($link) . "\n";
?></example>
<example_result>
 
1049: Unknown database &#039;nonexistentdb&#039;
1146: Table &#039;kossu.nonexistenttable&#039; doesn&#039;t exist
</example_result>
</object>

<object id=308> 
<name>zip_read</name>
<versions>(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)</versions>
<short-description>Считывает следующую запись в ZIP-архиве</short-description>
<description>mixed zip_read ( resource $zip ) 
 Считывает следующую запись в ZIP-архиве. </description>
<parameters>zip - ZIP-файл, предварительно открытый с помощью функции zip_open(). </parameters>
<output>Возвращает запись каталога для дальнейшего использования с функциями zip_entry_..., или FALSE, если больше нет записей для чтения, или код ошибки, если она произошла. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=309> 
<name>ncurses_mvaddnstr</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Move position and add string with specified length </short-description>
<description>int ncurses_mvaddnstr ( int $y , int $x , string $s , int $n ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>y - 
x - 
s - 
n - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=310> 
<name>XMLWriter::writeElementNS</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Записать полное пространство имен тега элемента</short-description>
<description>bool XMLWriter::writeElementNS ( string $prefix , string $name , string $uri [, string $content ] ) 
 Процедурный стиль bool xmlwriter_write_element_ns ( resource $xmlwriter , string $prefix , string $name , string $uri [, string $content ] )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
prefix - Префикс пространства имен. 
name - Имя элемента. 
uri - URI пространства имен. 
content - Содержимое элемента. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=311> 
<name>odbc_columns</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Lists the column names in specified tables</short-description>
<description>resource odbc_columns ( resource $connection_id [, string $qualifier [, string $schema [, string $table_name [, string $column_name ]]]] ) 
 Lists all columns in the requested range. </description>
<parameters>connection_id - Идентификатор соединения ODBC,за подробностями обращайтесь к odbc_connect().
qualifier - The qualifier. 
schema - The owner. 
table_name - The table name. 
column_name - The column name. </parameters>
<output>Returns an ODBC result identifier или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=312> 
<name>aggregate</name>
<versions>(PHP 4 >= 4.2.0)</versions>
<short-description>Dynamic class and object aggregation of methods and properties </short-description>
<description>void aggregate ( object $object , string $class_name ) 
 Aggregates methods and properties defined in a class to an existing object. Methods and properties with names starting with an underscore character (_) are considered private to the aggregated class and are not used, constructors are also excluded from the aggregation procedure. </description>
<parameters>object - 
class_name - </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=313> 
<name>ingres_field_scale</name>
<versions>(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)</versions>
<short-description>Get the scale of a field</short-description>
<description>int ingres_field_scale ( resource $result , int $index ) 
 ingres_field_scale() returns the scale of a field. This value is used only for the decimal SQL data type. For detailed information, see the Ingres OpenAPI User Guide, Appendix "Data Types" in the Ingres documentation. 
 Замечание: Related Configurations
 
 See ingres.array_index_start in Runtime Configuration </description>
<parameters>result - The query result identifier 
index - index is the field whose scale will be retrieved. </parameters>
<output>Returns the scale of the field, as an integer </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=314> 
<name>gc_disable</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Deactivates the circular reference collector</short-description>
<description>void gc_disable ( void ) 
 Deactivates the circular reference collector, setting zend.enable_gc to 0. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=315> 
<name>socket_read</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Reads a maximum of length bytes from a socket</short-description>
<description>string socket_read ( resource $socket , int $length [, int $type = PHP_BINARY_READ ] ) 
 The function socket_read() reads from the socket resource socket created by the socket_create() or socket_accept() functions. </description>
<parameters>socket - A valid socket resource created with socket_create() or socket_accept(). 
length - The maximum number of bytes read is specified by the length parameter. Otherwise you can use \r, \n, or \0 to end reading (depending on the type parameter, see below). 
type - Optional type parameter is a named constant: PHP_BINARY_READ (Default) - use the system recv() function. Safe for reading binary data. PHP_NORMAL_READ - reading stops at \n or \r. </parameters>
<output>socket_read() returns the data as a string on success, or FALSE on error (including if the remote host has closed the connection). The error code can be retrieved with socket_last_error(). This code may be passed to socket_strerror() to get a textual representation of the error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=316> 
<name>enchant_broker_free</name>
<versions>(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )</versions>
<short-description>Free the broker resource and its dictionnaries</short-description>
<description>bool enchant_broker_free ( resource $broker ) 
 Free a broker resource with all its dictionaries. </description>
<parameters>broker - Broker resource </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=317> 
<name>user_error</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Синоним для trigger_error()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=318> 
<name>ocifetchstatement</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_fetch_all()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=319> 
<name>ncurses_raw</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Switch terminal into raw mode </short-description>
<description>bool ncurses_raw ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Returns TRUE if any error occurred, otherwise FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=320> 
<name>PDF_add_note</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Set annotation for current page [deprecated]</short-description>
<description>bool PDF_add_note ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $contents , string $title , string $icon , int $open ) 
 Sets an annotation for the current page. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. 
 This function is deprecated since PDFlib version 6, use PDF_create_annotation() with type=Text instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=321> 
<name>msession_uniq</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)</versions>
<short-description>Get unique id</short-description>
<description>string msession_uniq ( int $param [, string $classname [, string $data ]] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=322> 
<name>pcntl_wexitstatus</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Returns the return code of a terminated child</short-description>
<description>int pcntl_wexitstatus ( int $status ) 
 Returns the return code of a terminated child. This function is only useful if pcntl_wifexited() returned TRUE. </description>
<parameters>status - Параметр status - этопараметр статуса, передаваемый для успешного вызова функции pcntl_waitpid().</parameters>
<output>Returns the return code, as an integer. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=323> 
<name>fdf_get_opt</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Gets a value from the opt array of a field</short-description>
<description>mixed fdf_get_opt ( resource $fdf_document , string $fieldname [, int $element = -1 ] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=324> 
<name>PDF_open_image_file</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Read image from file [deprecated]</short-description>
<description>int PDF_open_image_file ( resource $p , string $imagetype , string $filename , string $stringparam , int $intparam ) 
 Opens an image file. 
 This function is deprecated since PDFlib version 5, use PDF_load_image() with the colorize, ignoremask, invert, mask, masked, and page options instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=325> 
<name>gzcompress</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Сжимает строку</short-description>
<description>string gzcompress ( string $data [, int $level = -1 ] ) 
 Данная функция сжимает строку используя формат данных ZLIB. 
 Подробнее про алгоритм сжатия ZLIB см. документ "&raquo; Формат сжатия ZLIB. Спецификация версии 3.3" (RFC 1950). 
 Замечание: 
 ZLIB -- это не gzip-сжатие, которое включает в себя некоторые данные заголовка. Информацию о gzip-сжатии см. gzencode(). </description>
<parameters>data - Данные для сжатия. 
level - Уровень сжатия. Целое число от 0 до 9 (0 - без сжатия, 9 - максимальное сжатие). </parameters>
<output>Сжатая строка или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$compressed = gzcompress('Сожми меня', 9);
echo $compressed;
?></example>
<example_result></example_result>
</object>

<object id=326> 
<name>swf_endshape</name>
<versions>(PHP 4)</versions>
<short-description>Completes the definition of the current shape</short-description>
<description>void swf_endshape ( void ) 
 The swf_endshape() completes the definition of the current shape. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=327> 
<name>ob_get_level</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает уровень вложенности механизма буферизации вывода</short-description>
<description>int ob_get_level ( void ) 
 Вернет уровень вложенности механизма буферизации вывода. </description>
<parameters></parameters>
<output>Возвращает уровень вложенности обработчиков буферизации вывода или 0, если буферизация не активирована. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=328> 
<name>swf_definepoly</name>
<versions>(PHP 4)</versions>
<short-description>Define a polygon</short-description>
<description>void swf_definepoly ( int $objid , array $coords , int $npoints , float $width ) 
 Defines a polygon given an array of x, y coordinates. </description>
<parameters>objid - The object id. 
coords - An array of x, y coordinates. 
npoints - The number of overall points that are contained in the array given by coords 
width - The width of the polygon&#039;s border, if set to 0.0 the polygon is filled. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=329> 
<name>mssql_get_last_message</name>
<versions>(PHP 4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Returns the last message from the server</short-description>
<description>string mssql_get_last_message ( void ) 
 Gets the last message from the MS-SQL server </description>
<parameters></parameters>
<output>Returns last error message from server, or an empty string if no error messages are returned from MSSQL. </output>
<errors></errors>
<example><?php
// Connect to MSSQL and select the database
mssql_connect('KALLESPC\SQLEXPRESS', 'sa', 'phpfi');
mssql_select_db('php');
// Make a query that will fail
$query = @mssql_query('SELECT * FROM [php].[dbo].[not-found]');
if (!$query) {
    // The query has failed, print a nice error message
    // using mssql_get_last_message()
    die('MSSQL error: ' . mssql_get_last_message());
}?></example>
<example_result>
 
MSSQL error: Invalid object name &#039;php.dbo.not-found&#039;.
</example_result>
</object>

<object id=330> 
<name>ldap_dn2ufn</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Преобразовать DN в удобный для пользователя формат именования</short-description>
<description>string ldap_dn2ufn ( string $dn ) 
 Переключает указанный dn в более удобную для пользователя форму, снимая изоляцию с имен типов. </description>
<parameters>dn - Отличительное имя объекта LDAP. </parameters>
<output>Возвращает удобное для пользователя имя. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=331> 
<name>ceil</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Округляет дробь в большую сторону</short-description>
<description>float ceil ( float $value ) 
 Возвращает ближайшее большее целое от value. </description>
<parameters>value - Значение, которое требуется округлить в большую сторону </parameters>
<output>Возвращает ближайшее большее целое от value. Тип возвращаемого значения остаётся float т.к. диапазон float больше integer. </output>
<errors></errors>
<example><?php
echo ceil(4.3);    // 5
echo ceil(9.999);  // 10
echo ceil(-3.14);  // -3
?></example>
<example_result></example_result>
</object>

<object id=332> 
<name>filepro_retrieve</name>
<versions>(PHP 4, PHP 5 <= 5.1.6)</versions>
<short-description>Retrieves data from a filePro database</short-description>
<description>string filepro_retrieve ( int $row_number , int $field_number ) 
 Returns the data from the specified location in the database. 
 Замечание: Когда опция safe mode включена, PHP проверяет,имеют ли файлы/каталоги, с которыми вы собираетесь работать, такойже UID (владельца), как и выполняемый скрипт. </description>
<parameters>row_number - The row number. Must be between zero and the total number of rows minus one (0..filepro_rowcount() - 1) 
field_number - The field number. Accepts values between zero and the total number of fields minus one (0..filepro_fieldcount() - 1) </parameters>
<output>Returns the specified data, or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=333> 
<name>log1p</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Возвращает log(1 + number), рассчитанный таким, что результат точен, даже если значение number близко к нулю </short-description>
<description>float log1p ( float $number ) 
 log1p() возвращает log(1 + number), рассчитанное таким образом, что результат точен, даже когда значение number близко к нулю. Из-за недостатка точности log() в этом случае может вернуть просто log(1). </description>
<parameters>number - Входное значение </parameters>
<output>log(1 + number) </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=334> 
<name>stat</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает информацию о файле</short-description>
<description>array stat ( string $filename ) 
 Собирает статистическую информацию о файле filename. Если filename является символической ссылкой, информация собирается о самом файле, а не ссылке. 
 Функция lstat() индентична функции stat() за исключением того, что в данном случае она вернёт информацию о самой символической ссылке. </description>
<parameters>filename - Путь к файлу. </parameters>
<output>Формат результата работы функций stat() и fstat() Числовой Ассоциативный (начиная с PHP 4.0.6) Описание 0 dev номер устройства 1 ino номер inode * 2 mode режим защиты inode 3 nlink количество ссылок 4 uid userid владельца * 5 gid groupid владельца * 6 rdev тип устройства, если устройство inode 7 size размер в байтах 8 atime время последнего доступа (временная метка Unix) 9 mtime время последней модификации (временная метка Unix) 10 ctime время последнего изменения inode (временная метка Unix) 11 blksize размер блока ввода-вывода файловой системы ** 12 blocks количество используемых 512-байтных блоков ** * В Windows это всегда будет 0. </output>
<errors>В случае ошибки будет сгенерирована ошибка уровня E_WARNING. </errors>
<example><?php
/* Получаем статистику файла */
$stat = stat('C:\php\php.exe');
/*
 * Выводим последнее время доступа к файлу, это тоже самое, что и
 * вызов fileatime()
 */
echo 'Последнее время доступа: ' . $stat['atime'];
/*
 * Выводим время изменения файла, это тоже самое, что и
 * вызов filemtime()
 */
echo 'Время изменения: ' . $stat['mtime'];
/* Выводим номер устройства */
echo 'Номер устройства: ' . $stat['dev'];
?></example>
<example_result></example_result>
</object>

<object id=335> 
<name>ibase_free_query</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Free memory allocated by a prepared query</short-description>
<description>bool ibase_free_query ( resource $query ) 
 Frees a prepared query. </description>
<parameters>query - A query prepared with ibase_prepare(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=336> 
<name>PDF_end_page</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Finish page</short-description>
<description>bool PDF_end_page ( resource $p ) 
 Finishes the page. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=337> 
<name>strripos</name>
<versions>(PHP 5)</versions>
<short-description>Возвращает позицию последнего вхождения подстроки без учета регистра</short-description>
<description>int strripos ( string $haystack , string $needle [, int $offset = 0 ] ) 
 Ищет позицию последнего вхождения подстроки needle в строку haystack. 
 В отличие от strrpos(), strripos() не учитывает регистр символов. </description>
<parameters>haystack - Строка, в которой производится поиск. 
needle - Если параметр needle не является строкой, то он будет преобразован к целому и обработан как код символа. 
offset - Если указан, то поиск начнется с данного количества символов с начала строки. Если передано отрицательное значение, поиск начнется с указанного количества символов от конца строки, но по прежнему будет производится поиск последнего вхождения. </parameters>
<output>Возвращает номер позиции последнего вхождения needle относительно начала строки haystack (независимо от направления поиска и смещения (offset)). Также обратите внимание на то, что позиция строки отсчитывается от 0, а не от 1. </output>
<errors></errors>
<example><?php
$haystack = 'ababcd';
$needle   = 'aB';
$pos      = strripos($haystack, $needle);
if ($pos === false) {
    echo "К сожалению, ($needle) не найдена в ($haystack)";
} else {
    echo "Поздравляем!\n";
    echo "Последнее вхождение ($needle) найдено в ($haystack) в позиции ($pos)";
}?></example>
<example_result>
 
 Поздравляем!
   Последнее вхождение (aB) найдено в (ababcd) в позиции (2)
</example_result>
</object>

<object id=338> 
<name>notes_create_db</name>
<versions>(PHP 4 >= 4.0.5)</versions>
<short-description>Create a Lotus Notes database</short-description>
<description>bool notes_create_db ( string $database_name ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=339> 
<name>dbplus_rcrtexact</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Creates an exact but empty copy of a relation including indices</short-description>
<description>mixed dbplus_rcrtexact ( string $name , resource $relation [, bool $overwrite ] ) 
 dbplus_rcrtexact() will create an exact but empty copy of the given relation under a new name. </description>
<parameters>name - 
relation - The copied relation, opened by dbplus_open(). 
overwrite - An existing relation by the same name will only be overwritten if this parameter is set to TRUE and no other process is currently using the relation. </parameters>
<output>Returns resource on success or DBPLUS_ERR_UNKNOWN on failure. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=340> 
<name>posix_getpwuid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Return info about a user by user id</short-description>
<description>array posix_getpwuid ( int $uid ) 
 Returns an array of information about the user referenced by the given user ID. </description>
<parameters>uid - The user identifier. </parameters>
<output>Returns an associative array with the following elements: The user information array Element Description name The name element contains the username of the user. This is a short, usually less than 16 character "handle" of the user, not the real, full name. passwd The passwd element contains the user&#039;s password in an encrypted format. Often, for example on a system employing "shadow" passwords, an asterisk is returned instead. uid User ID, should be the same as the uid parameter used when calling the function, and hence redundant. gid The group ID of the user. Use the function posix_getgrgid() to resolve the group name and a list of its members. gecos GECOS is an obsolete term that refers to the finger information field on a Honeywell batch processing system. The field, however, lives on, and its contents have been formalized by POSIX. The field contains a comma separated list containing the user&#039;s full name, office phone, office number, and home phone number. On most systems, only the user&#039;s full name is available. dir This element contains the absolute path to the home directory of the user. shell The shell element contains the absolute path to the executable of the user&#039;s default shell. </output>
<errors></errors>
<example><?php
$userinfo = posix_getpwuid(10000);
print_r($userinfo);
?></example>
<example_result>
 
Array
(
    [name]    => tom
    [passwd]  => x
    [uid]     => 10000
    [gid]     => 42
    [geocs]   => "tom,,,"
    [dir]     => "/home/tom"
    [shell]   => "/bin/bash"
)
</example_result>
</object>

<object id=341> 
<name>mb_stristr</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Находит первое вхождение подстроки в строке без учета регистра</short-description>
<description>string mb_stristr ( string $haystack , string $needle [, bool $part = false [, string $encoding ]] ) 
 mb_stristr() находит первое вхождение подстроки needle в haystack и возвращает часть haystack. В отличие от mb_strstr(), mb_stristr() не учитывает регистр. Если needle не найдена, возвращается FALSE. </description>
<parameters>haystack - Строка, в которой ищется первое вхождение строки needle 
needle - Строка для поиска в haystack 
part - Определяет, какую часть строки haystack вернет эта функция. Если установлено TRUE, возвращается часть haystack от начала до первого вхождения needle. Если установлено FALSE, возвращается часть haystack от первого вхождения needle до конца. 
encoding - Название используемой кодировки символов. Если этот параметр опущен, используется внутренняя кодировка. </parameters>
<output>Возвращает часть строки haystack, или FALSE, если needle не найдена. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=342> 
<name>ncurses_init_color</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Define a terminal color</short-description>
<description>int ncurses_init_color ( int $color , int $r , int $g , int $b ) 
 Defines or redefines the given color. When this function is called, all occurrences of the given color on the screen, if any, immediately change to the new definition. 
 Color capabilities must be supported by the terminal and initialized using ncurses_start_color() prior to calling this function. In addition, the terminal must have color changing capabilities; use ncurses_can_change_color() to check for this. </description>
<parameters>color - The identification number of the color to redefine. It may be one of the default color constants. 
r - A color value, between 0 and 1000, for the red component. 
g - A color value, between 0 and 1000, for the green component. 
b - A color value, between 0 and 1000, for the blue component. </parameters>
<output>Returns -1 if the function was successful, and 0 if ncurses or terminal color capabilities have not been initialized or the terminal does not have color changing capabilities. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=343> 
<name>imagecreatefromgif</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Создает новое изображение из файла или URL</short-description>
<description>resource imagecreatefromgif ( string $filename ) 
 imagecreatefromgif() returns an image identifier representing the image obtained from the given filename. Подсказка
 Для этой функции вы можете использовать URLв качестве имени файла, если была включена опция fopen wrappers. Смотрите болееподробную информацию об определении имени файла в описании функцииfopen(). Смотрите также список поддерживаемых оберток URL, их возможности, замечания по использованию и списокпредопределенных констант в Поддерживаемые протоколы и обработчики (wrappers).</description>
<parameters>filename - Path to the GIF image. </parameters>
<output>Возвращает ресурс изображения в случае успеха, или FALSE в случае ошибки.</output>
<errors></errors>
<example><?php
function LoadGif($imgname)
{    /* Attempt to open */
    $im = @imagecreatefromgif($imgname);
    /* See if it failed */
    if(!$im)
    {
        /* Create a blank image */
        $im = imagecreatetruecolor (150, 30);
        $bgc = imagecolorallocate ($im, 255, 255, 255);
        $tc = imagecolorallocate ($im, 0, 0, 0);
        imagefilledrectangle ($im, 0, 0, 150, 30, $bgc);
        /* Output an error message */
        imagestring ($im, 1, 5, 5, 'Error loading ' . $imgname, $tc);
    }
    return $im;
}
header('Content-Type: image/gif');
$img = LoadGif('bogus.image');
imagegif($img);
imagedestroy($img);
?></example>
<example_result></example_result>
</object>

<object id=344> 
<name>php_ini_scanned_files</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Return a list of .ini files parsed from the additional ini dir</short-description>
<description>string php_ini_scanned_files ( void ) 
 php_ini_scanned_files() returns a comma-separated list of configuration files parsed after php.ini. These files are found in a directory defined by the --with-config-file-scan-dir option which is set during compilation. 
 The returned configuration files also include the path as declared in the --with-config-file-scan-dir option. </description>
<parameters></parameters>
<output>Returns a comma-separated string of .ini files on success. Each comma is followed by a newline. If the directive --with-config-file-scan-dir wasn&#039;t set, FALSE is returned. If it was set and the directory was empty, an empty string is returned. If a file is unrecognizable, the file will still make it into the returned string but a PHP error will also result. This PHP error will be seen both at compile time and while using php_ini_scanned_files(). </output>
<errors></errors>
<example><?php
if ($filelist = php_ini_scanned_files()) {
    if (strlen($filelist) > 0) {
        $files = explode(',', $filelist);
        foreach ($files as $file) {
            echo "<li>" . trim($file) . "</li>\n";
        }
    }
}?></example>
<example_result></example_result>
</object>

<object id=345> 
<name>readline_add_history</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Adds a line to the history</short-description>
<description>bool readline_add_history ( string $line ) 
 This function adds a line to the command line history. </description>
<parameters>line - The line to be added in the history. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=346> 
<name>java_last_exception_get</name>
<versions>(PHP 4 >= 4.0.2)</versions>
<short-description>Get last Java exception</short-description>
<description>object java_last_exception_get ( void ) 
 Gets last Java exception. </description>
<parameters></parameters>
<output>Returns an exception object. </output>
<errors></errors>
<example><?php
$stack = new Java('java.util.Stack');
$stack->push(1);
// This should succeed
$result = $stack->pop();
$ex = java_last_exception_get();
if (!$ex) {
  echo "$result\n";
}
// This should fail (error suppressed by @)
$result = @$stack->pop();
$ex = java_last_exception_get();
if ($ex) {
  echo $ex->toString();
}
// Clear last exception
java_last_exception_clear();
?></example>
<example_result></example_result>
</object>

<object id=347> 
<name>mysql_connect</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Открывает соединение с сервером MySQL</short-description>
<description>resource mysql_connect ([ string $server = ini_get("mysql.default_host") [, string $username = ini_get("mysql.default_user") [, string $password = ini_get("mysql.default_password") [, bool $new_link = false [, int $client_flags = 0 ]]]]] ) 
 Открывает новое соединение с сервером MySQL или использует уже существующее. </description>
<parameters>server - Сервер MySQL. Может также включать номер порта, например, "hostname:port" или путь к локальному сокету, например, ":/path/to/socket" для локального сервера. 
username - Имя пользователя. Значение по умолчанию определяется директивой mysql.default_user. В SQL safe mode этот параметр будет проигнорирован и будет использован пользователь, владеющий процессом сервера. 
password - Пароль. Значение по умолчанию определяется директивой mysql.default_password. В SQL safe mode этот параметр будет проигнорирован и в качестве пароля будет использована пустая строка. 
new_link - Если второй вызов функции mysql_connect() произошёл с теми же аргументами, то новое соединение не будет установлено. Вместо этого функция вернёт ссылку на уже установленное соединение. Параметр new_link может заставить функцию mysql_connect() открыть ещё одно соединение, даже если соединение с аналогичными параметрами уже открыто. В SQL safe mode этот параметр игнорируется. 
client_flags - Параметр client_flags должен быть комбинацией из следующих констант: 128 (включает обработку LOAD DATA LOCAL), MYSQL_CLIENT_SSL, MYSQL_CLIENT_COMPRESS, MYSQL_CLIENT_IGNORE_SPACE or MYSQL_CLIENT_INTERACTIVE. Подробнее читайте в разделе Клиентские константы MySQL. В SQL safe mode этот параметр игнорируется. </parameters>
<output>Возвращает дескриптор соединения с MySQL в случае успешного выполнения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Ошибка соединения: ' . mysql_error());
}echo 'Успешно соединились';
mysql_close($link);
?></example>
<example_result></example_result>
</object>

<object id=348> 
<name>ingres_pconnect</name>
<versions>(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)</versions>
<short-description>Open a persistent connection to an Ingres database</short-description>
<description>resource ingres_pconnect ([ string $database [, string $username [, string $password [, array $options ]]]] ) 
 Open a persistent connection to an Ingres database. 
 There are only two differences between this function and ingres_connect(): First, when connecting, the function will initially try to find a (persistent) link that is already opened with the same parameters. If one is found, an identifier for it will be returned instead of opening a new connection. Second, the connection to the Ingres server will not be closed when the execution of the script ends. Instead, the link will remain open for future use (ingres_close() will not close links established by ingres_pconnect()). This type of link is therefore called "persistent". </description>
<parameters>database - The database name. Must follow the syntax: 
username - The Ingres user name 
password - The password associated with username 
options - See ingres_connect() for the list of options that can be passed </parameters>
<output>Returns an Ingres link resource on success или FALSE в случае возникновения ошибки </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=349> 
<name>curl_version</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Возвращает версию cURL</short-description>
<description>array curl_version ([ int $age = CURLVERSION_NOW ] ) 
 Возвращает информацию о версии cURL. </description>
<parameters>age - </parameters>
<output>Возвращает ассоциативный массив со следующими элементами: Индекс Описание значения version_number 24-битный номер версии cURL version Номер версии cURL, в виде строки ssl_version_number 24-битный номер версии OpenSSL ssl_version Номер версии OpenSSL, в виде строки libz_version Номер версии zlib, в виде строки host Информация о хосте, где была собрана cURL age   features Битовая маска констант CURL_VERSION_XXX protocols Массив поддерживаемых протоколов cURL </output>
<errors></errors>
<example>
 curl_version(). </example>
<example_result></example_result>
</object>

<object id=350> 
<name>hw_Modifyobject</name>
<versions>(PHP 4)</versions>
<short-description>Modifies object record</short-description>
<description>bool hw_modifyobject ( int $connection , int $object_to_change , array $remove , array $add [, int $mode ] ) 
 This command allows to remove, add, or modify individual attributes of an object record. The object is specified by the Object ID object_to_change. In order to modify an attribute one will have to remove the old one and add a new one. hw_modifyobject() will always remove the attributes before it adds attributes unless the value of the attribute to remove is not a string or array. 
 The keys of both arrays are the attributes name. The value of each array element can either be an array, a string or anything else. If it is an array each attribute value is constructed by the key of each element plus a colon and the value of each element. If it is a string it is taken as the attribute value. An empty string will result in a complete removal of that attribute. If the value is neither a string nor an array but something else, e.g. an integer, no operation at all will be performed on the attribute. This is necessary if you want to add a completely new attribute not just a new value for an existing attribute. If the remove array contained an empty string for that attribute, the attribute would be tried to be removed which would fail since it doesn&#039;t exist. The following addition of a new value for that attribute would also fail. Setting the value for that attribute to e.g. 0 would not even try to remove it and the addition will work. 
 If you would like to change the attribute &#039;Name&#039; with the current value &#039;books&#039; into &#039;articles&#039; you will have to create two arrays and call hw_modifyobject(). 
 Пример #1 modifying an attribute <?php
       // $connect is an existing connection to the Hyperwave server
       // $objid is the ID of the object to modify
       $remarr = array("Name" => "books");
       $addarr = array("Name" => "articles");
       $hw_modifyobject($connect, $objid, $remarr, $addarr);
?></description>
<parameters>connection - The connection identifier. 
object_to_change - The object to be changed. 
remove - An array of attributes to remove. 
add - An array of attributes to add. 
mode - The last parameter determines if the modification is performed recursively. 1 means recursive modification. If some of the objects cannot be modified they will be skipped without notice. hw_error() may not indicate an error though some of the objects could not be modified. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=351> 
<name>imagefontheight</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get font height</short-description>
<description>int imagefontheight ( int $font ) 
 Returns the pixel height of a character in the specified font. </description>
<parameters>font - Может принимать значения 1, 2, 3, 4, 5 для встроенных шрифтов в кодировкеlatin2 (более высокое число соответствует большему шрифту) или любому из ваших собственных идентификаторов шрифтов,зарегистрированных с помощью imageloadfont().</parameters>
<output>Returns the height of the pixel. </output>
<errors></errors>
<example><?php
echo 'Font height: ' . imagefontheight(4);
?></example>
<example_result>
 
Font height: 16
</example_result>
</object>

<object id=352> 
<name>sqlite_fetch_string</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Псевдоним sqlite_fetch_single()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=353> 
<name>dbplus_flush</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Flush all changes made on a relation</short-description>
<description>int dbplus_flush ( resource $relation ) 
 Writes all changes applied to relation since the last flush to disk. </description>
<parameters>relation - A relation opened by dbplus_open(). </parameters>
<output>Returns DBPLUS_ERR_NOERR on success or a db++ error code on failure. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=354> 
<name>imap_create</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним imap_createmailbox()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=355> 
<name>PDF_get_pdi_value</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Get PDI numerical parameter [deprecated]</short-description>
<description>float PDF_get_pdi_value ( resource $p , string $key , int $doc , int $page , int $reserved ) 
 Gets the contents of a PDI document parameter with numerical type. 
 This function is deprecated since PDFlib version 7, use PDF_pcos_get_number() instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=356> 
<name>oci_set_prefetch</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Устанавливает количество строк, которые будут автоматически выбраны в буфер</short-description>
<description>bool oci_set_prefetch ( resource $statement , int $rows ) 
 Устанавливает количество рядов, которые будут выбраны в буфер клиентскими библиотеками Oracle сразу после удачного вызова oci_execute() и для каждого последующего внутреннего запроса данных к базе. Производительность может быть значительно увеличена для запросов, возвращающих большое количество рядов, с помощью установки значения предварительной выборки больше значения по умолчанию oci8.default_prefetch. 
 Предварительная выборка - это эффективный механизм Oracle, позволяющий возвращать больше одного ряда результата из базы данных за каждый сетевой запрос. Это дает более рациональное использование сети и процессора. Буферизация рядов происходит внутри OCI8, поэтому поведение функций выборки OCI8 никак не зависит от размера предварительной выборки. Например, oci_fetch_row() всегда возвращает один ряд. Буфер предварительной выборки резервируется отдельно на каждый запрос и не используется второй раз в повторно запущенных запросахили в других соединениях. 
 Перед вызовом oci_execute() вызовите oci_set_prefetch(). 
 Смысл настройки размера предварительной выборки состоит в подборе удобного значения для передачи в сети и обработки в базе данных. Для запросов, возвращающих очень большое количество рядов, общая производительность системы может быть лучше, если ряды будут возвращаться в несколько приемов (т.е. установить размер предварительной выборки меньше количества рядов). Это позволит базе данных обрабатывать запросы других пользователей в течение обработки PHP-скриптом текущего результата запроса. 
 Предварительная выборка запросов появилась в Oracle 8i. Предварительная выборка REF CURSOR появилась в Oracle 11gR2 и может быть применена в случае, если PHP слинкован с клиентскими библиотеками Oracle 11gR2 и работает с 11gR2 или предыдущими версиями базы данных. Предварительная выборка вложенных курсоров была добавлена в Oracle 11gR2 и требует наличия версии 11gR2 как для клиентских библиотек Oracle, так и для используемой базы данных. 
 Предварительная выборка не поддерживается, если запросы содержат LONG или LOB столбцы. Значение предварительной выборки игнорируется и во всех ситуациях, не поддерживающих предварительную выборку, будет использована построчная выборка. </description>
<parameters>statement - Корректный идентификатор выражения OCI8, полученный изoci_parse() и исполненный функцией oci_execute(), или идентификатор выраженияREF CURSOR.
rows - Количество рядов предварительной выборки, >= 0 </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$conn = oci_connect('hr', 'welcome', 'localhost/XE');
$stid = oci_parse($conn, 'SELECT * FROM myverybigtable');
oci_set_prefetch($stid, 300);  // Устанавливаем перед вызовом oci_execute()
oci_execute($stid);
echo "<table border='1'>\n";
while ($row = oci_fetch_array($stid, OCI_ASSOC+OCI_RETURN_NULLS)) {
    echo "<tr>\n";
    foreach ($row as $item) {
        echo "    <td>".($item !== null ? htmlentities($item, ENT_QUOTES) : "&nbsp;")."</td>\n";
    }
    echo "</tr>\n";
}echo "</table>\n";
oci_free_statement($stid);
oci_close($conn);
?></example>
<example_result></example_result>
</object>

<object id=357> 
<name>error_reporting</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Задает, какие ошибки PHP попадут в отчет </short-description>
<description>int error_reporting ([ int $level ] ) 
 Функция error_reporting() задает значение директивы error_reporting во время выполнения. В PHP есть много уровней ошибок. Используя эту функцию, можно задать уровень ошибок времени выполнения скрипта, которые попадут в отчет. Если необязательный аргумент level не задан, error_reporting() вернет текущее значение уровня протоколирования ошибок. </description>
<parameters>level - Новое значение уровня error_reporting. Это может быть битовая маска или именованные константы. При использовании именованных констант нужно будет следить за совместимостью с новыми версиями PHP. В новых версиях могут добавиться новые уровни ошибок, увеличиться диапазон целочисленных типов. Все это может привести к нестабильной работе при использовании старых целочисленных обозначений уровней ошибок. </parameters>
<output>Возвращает старое значение уровня error_reporting либо текущее значение, если аргумент level не задан. </output>
<errors></errors>
<example><?php
// Выключение протоколирования ошибок
error_reporting(0);
// Включать в отчет простые описания ошибок
error_reporting(E_ERROR | E_WARNING | E_PARSE);
// Включать в отчет E_NOTICE сообщения (добавятся сообщения о 
//непроинициализированных переменных или ошибках в именах переменных)
error_reporting(E_ERROR | E_WARNING | E_PARSE | E_NOTICE);
// Добавлять сообщения обо всех ошибках, кроме E_NOTICE
// Это значение включено по умолчанию в php.ini
error_reporting(E_ALL ^ E_NOTICE);
// Добавлять в отчет все PHP ошибки (см. список изменений)
error_reporting(E_ALL);
// Добавлять в отчет все PHP ошибки
error_reporting(-1);
// То же, что и error_reporting(E_ALL);
ini_set('error_reporting', E_ALL);
?></example>
<example_result></example_result>
</object>

<object id=358> 
<name>openlog</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Открывает соединение к системному журналу</short-description>
<description>bool openlog ( string $ident , int $option , int $facility ) 
 Функция openlog() открывает для программы соединение к системному журналу. 
 Использование openlog() не является обязательным. Эта функция при необходимости будет вызвана функцией syslog() автоматически, при этом параметр ident будет по умолчанию равен FALSE. </description>
<parameters>ident - Строка ident добавляется к каждому сообщению. 
option - Аргумент option используется для указания используемых опций журналирования при создании записи журнала. Опции openlog() Constant Description LOG_CONS если при отправке данных системному журналу происходит ошибка, перевести вывод непосредственно в системную консоль LOG_NDELAY открыть соединение с журналом без задержки LOG_ODELAY (по умолчанию) отложить открытие соединения до вывода первого сообщения в журнал LOG_PERROR выводить вместе со стандартной ошибкой сообщение журнала LOG_PID добавить PID к каждому сообщению Можно использовать одну или сразу несколько опций. При использовании нескольких опций необходимо разделять их OR, к примеру, для открытия соединения без задержки, записи в консоль и включения PID в каждое из сообщений, необходима следующая комбинация опций: LOG_CONS | LOG_NDELAY | LOG_PID 
facility - Параметр facility используется для определения типа программы создавшей сообщение журнала. Это позволяет определить (в конфигурации syslog) как будут обработаны сообщения журнала, поступающие из разных объектов. openlog() Facilities Константа Описание LOG_AUTH сообщения по безопасности/авторизации (необходимо взамен использовать LOG_AUTHPRIV в системах, где эта константа предопределена) LOG_AUTHPRIV сообщения по безопасности/авторизации (частное) LOG_CRON планировщик задач (cron и at) LOG_DAEMON другие системные службы LOG_KERN сообщения ядра LOG_LOCAL0 ... LOG_LOCAL7 зарезервированы для локального использования, не доступны в Windows LOG_LPR подсистема печати LPR LOG_MAIL почтовая подсистема LOG_NEWS подсистема новостей USENET LOG_SYSLOG внутренние сообщения syslogd LOG_USER общие сообщения на уровне пользователя LOG_UUCP подсистема UUCP </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=359> 
<name>filesize</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает размер файла</short-description>
<description>int filesize ( string $filename ) 
 Возвращает размер указанного файла. </description>
<parameters>filename - Путь к файлу. </parameters>
<output>Возвращает размер указанного файла в байтах или FALSE (и генерирует ошибку уровня E_WARNING) в случае возникновения ошибки. </output>
<errors>В случае неудачного завершения работы генерируется ошибка уровня E_WARNING.</errors>
<example><?php
// Пример вывода: Размер файла somefile.txt: 1024 байта
$filename = 'somefile.txt';
echo 'Размер файла ' . $filename . ': ' . filesize($filename) . ' байт';
?></example>
<example_result></example_result>
</object>

<object id=360> 
<name>ingres_close</name>
<versions>(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)</versions>
<short-description>Close an Ingres database connection</short-description>
<description>bool ingres_close ( resource $link ) 
 ingres_close() closes the connection to the Ingres server that is associated with the specified link. 
 ingres_close() is usually unnecessary, as it will not close persistent connections and all non-persistent connections are automatically closed at the end of the script. </description>
<parameters>link - The connection link identifier </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=361> 
<name>scandir</name>
<versions>(PHP 5)</versions>
<short-description>Получает список файлов и каталогов, расположенных по указанному пути</short-description>
<description>array scandir ( string $directory [, int $sorting_order = SCANDIR_SORT_ASCENDING [, resource $context ]] ) 
 Возвращает array, содержащий имена файлов и каталогов, расположенных по пути, переданном в параметре directory. </description>
<parameters>directory - Сканируемый каталог. 
sorting_order - По умолчанию, сортировка производится в алфавитном порядке по возрастанию. Если необязательный параметр sorting_order установлен в значение SCANDIR_SORT_DESCENDING, сортировка производится в алфавитном порядке по убыванию. Если же он установлен в значение SCANDIR_SORT_NONE, то сортировка не производится. 
context - За описанием параметра context обратитесь к разделу "Потоки" данного руководства. </parameters>
<output>Возвращает array имен файлов в случае успеха или FALSE в случае ошибки. Если directory не является каталогом, возвращается FALSE и генерируется сообщение об ошибке уровня E_WARNING. </output>
<errors></errors>
<example><?php
$dir    = '/tmp';
$files1 = scandir($dir);
$files2 = scandir($dir, 1);
print_r($files1);
print_r($files2);
?></example>
<example_result>
 
Array
(
    [0] => .
    [1] => ..
    [2] => bar.php
    [3] => foo.txt
    [4] => somedir
)
Array
(
    [0] => somedir
    [1] => foo.txt
    [2] => bar.php
    [3] => ..
    [4] => .
)
</example_result>
</object>

<object id=362> 
<name>udm_api_version</name>
<versions>(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)</versions>
<short-description>Получает версию mnoGoSearch API</short-description>
<description>int udm_api_version ( void ) 
 Получает версию mnoGoSearch API. 
 Эта функция позволяет пользователю узнать, какие функции API доступны, например, функция udm_get_doc_count() доступна только в mnoGoSearch 3.1.11 или выше. </description>
<parameters></parameters>
<output>udm_api_version() возвращает номер версии mnoGoSearch API. Например, если используется mnoGoSearch 3.1.10 API, эта функция вернет 30110. </output>
<errors></errors>
<example><?php
if (udm_api_version() >= 30111) {
    echo  "Общее количество URL-адресов в базе данных: " . udm_get_doc_count($udm) . "<br />\n";
}?></example>
<example_result></example_result>
</object>

<object id=363> 
<name>msession_set</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)</versions>
<short-description>Set value in session</short-description>
<description>bool msession_set ( string $session , string $name , string $value ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=364> 
<name>hw_GetText</name>
<versions>(PHP 4)</versions>
<short-description>Retrieve text document</short-description>
<description>int hw_gettext ( int $connection , int $objectID [, mixed $rootID/prefix ] ) 
 Returns the document with object ID objectID. If the document has anchors which can be inserted, they will be inserted already. 
 This function will only work for pure text documents. It will not open a special data connection and therefore blocks the control connection during the transfer. </description>
<parameters>connection - The connection identifier. 
objectID - The object identifier. 
rootID/prefix - The optional parameter rootID/prefix can be a string or an integer. If it is an integer it determines how links are inserted into the document. The default is 0 and will result in links that are constructed from the name of the link&#039;s destination object. This is useful for web applications. If a link points to an object with name &#039;internet_movie&#039; the HTML link will be <A href="/internet_movie">. The actual location of the source and destination object in the document hierarchy is disregarded. You will have to set up your web browser, to rewrite that URL to for example &#039;/my_script.php/internet_movie&#039;. &#039;my_script.php&#039; will have to evaluate $PATH_INFO and retrieve the document. All links will have the prefix &#039;/my_script.php/&#039;. If you do not want this you can set the optional parameter rootID/prefix to any prefix which is used instead. Is this case it has to be a string. </parameters>
<output>Returns the text document. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=365> 
<name>ncurses_mvwaddstr</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Add string at new position in window </short-description>
<description>int ncurses_mvwaddstr ( resource $window , int $y , int $x , string $text ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>window - 
y - 
x - 
text - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=366> 
<name>fbsql_read_blob</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Read a BLOB from the database</short-description>
<description>string fbsql_read_blob ( string $blob_handle [, resource $link_identifier ] ) 
 Reads BLOB data from the database. 
 If a select statement contains BLOB and/or CLOB columns FrontBase will return the data directly when data is fetched. This default behavior can be changed with fbsql_set_lob_mode() so the fetch functions will return handles to BLOB and CLOB data. If a handle is fetched a user must call fbsql_read_blob() to get the actual BLOB data from the database. </description>
<parameters>blob_handle - A BLOB handle, returned by fbsql_create_blob(). 
link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Returns a string containing the specified BLOB data. </output>
<errors></errors>
<example><?php
$link = fbsql_pconnect("localhost", "_SYSTEM", "secret")
    or die("Could not connect");
$sql = "SELECT BLOB_COLUMN FROM BLOB_TABLE;";
$rs = fbsql_query($sql, $link);
$row_data = fbsql_fetch_row($rs);
// $row_data[0] will now contain the blob data for the first row
fbsql_free_result($rs);
$rs = fbsql_query($sql, $link);
fbsql_set_lob_mode($rs, FBSQL_LOB_HANDLE);
$row_data = fbsql_fetch_row($rs);
// $row_data[0] will now contain a handle to the BLOB data in the first row
$blob_data = fbsql_read_blob($row_data[0]);
fbsql_free_result($rs);
?></example>
<example_result></example_result>
</object>

<object id=367> 
<name>fdf_set_ap</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Set the appearance of a field</short-description>
<description>bool fdf_set_ap ( resource $fdf_document , string $field_name , int $face , string $filename , int $page_number ) 
 Sets the appearance of a field (i.e. the value of the /AP key). </description>
<parameters>fdf_document - The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string(). 
field_name - 
face - The possible values FDFNormalAP, FDFRolloverAP and FDFDownAP. 
filename - 
page_number - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=368> 
<name>pcntl_wifexited</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Checks if status code represents a normal exit</short-description>
<description>bool pcntl_wifexited ( int $status ) 
 Checks whether the child status code represents a normal exit. </description>
<parameters>status - Параметр status - этопараметр статуса, передаваемый для успешного вызова функции pcntl_waitpid().</parameters>
<output>Returns TRUE if the child status code represents a normal exit, FALSE otherwise. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=369> 
<name>imap_mail_move</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Move specified messages to a mailbox</short-description>
<description>bool imap_mail_move ( resource $imap_stream , string $msglist , string $mailbox [, int $options = 0 ] ) 
 Moves mail messages specified by msglist to the specified mailbox. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
msglist - msglist is a range not just message numbers (as described in &raquo; RFC2060). 
mailbox - The mailbox name, see imap_open() for more information 
options - options is a bitmask and may contain the single option: CP_UID - the sequence numbers contain UIDS </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=370> 
<name>exit</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выводит сообщение и прекращает выполнение текущего скрипта</short-description>
<description>void exit ([ string $status ] ) void exit ( int $status )</description>
<parameters>status - Если параметр status задан в виде строки, то эта функция выведет содержимое status перед выходом. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
$filename = '/path/to/data-file';
$file = fopen($filename, 'r')
    or exit("Невозможно открыть файл ($filename)");
?></example>
<example_result>
 
 Завершить: shutdown()
 Деинициализировать: Foo::__destruct()
 </example_result>
</object>

<object id=371> 
<name>exif_imagetype</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Determine the type of an image</short-description>
<description>int exif_imagetype ( string $filename ) 
 exif_imagetype() reads the first bytes of an image and checks its signature. 
 exif_imagetype() can be used to avoid calls to other exif functions with unsupported file types or in conjunction with $_SERVER['HTTP_ACCEPT'] to check whether or not the viewer is able to see a specific image in the browser. </description>
<parameters></parameters>
<output>When a correct signature is found, the appropriate constant value will be returned otherwise the return value is FALSE. The return value is the same value that getimagesize() returns in index 2 but exif_imagetype() is much faster. </output>
<errors></errors>
<example><?php
if (exif_imagetype('image.gif') != IMAGETYPE_GIF) {
    echo 'The picture is not a gif';
}?></example>
<example_result></example_result>
</object>

<object id=372> 
<name>gmp_perfect_square</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Проверка числа на точный квадрат</short-description>
<description>bool gmp_perfect_square ( resource $a ) 
 Проверяет, является ли число точным квадратом, т.е. квадратом целого числа. </description>
<parameters>a - Проверяемое на точный квадрат число. </parameters>
<output>Возвращает TRUE, если a является квадратом целого числа, FALSE в противном случае. </output>
<errors></errors>
<example><?php
// 3 * 3, точный квадрат
var_dump(gmp_perfect_square("9"));
// не является точным квадратом
var_dump(gmp_perfect_square("7"));
// 1234567890 * 1234567890, точный квадрат
var_dump(gmp_perfect_square("1524157875019052100"));
?></example>
<example_result>
 
bool(true)
bool(false)
bool(true)
</example_result>
</object>

<object id=373> 
<name>fbsql_list_fields</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>List FrontBase result fields</short-description>
<description>resource fbsql_list_fields ( string $database_name , string $table_name [, resource $link_identifier ] ) 
 Retrieves information about the given table. </description>
<parameters>database_name - The database name. 
table_name - The table name. 
link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Returns a result pointer which can be used with the fbsql_field_xxx functions, or FALSE on error. </output>
<errors>A string describing the error will be placed in $phperrmsg, and unless the function was called as @fbsql() then this error string will also be printed out. </errors>
<example><?php
$link = fbsql_connect('localhost', 'myname', 'secret');
$fields = fbsql_list_fields("database1", "table1", $link);
$columns = fbsql_num_fields($fields);
for ($i = 0; $i < $columns; $i++) {
    echo fbsql_field_name($fields, $i) . "\n";;
}?></example>
<example_result>
 
field1
field2
field3
...
</example_result>
</object>

<object id=374> 
<name>socket_create_listen</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Opens a socket on port to accept connections </short-description>
<description>resource socket_create_listen ( int $port [, int $backlog = 128 ] ) 
 socket_create_listen() creates a new socket resource of type AF_INET listening on all local interfaces on the given port waiting for new connections. 
 This function is meant to ease the task of creating a new socket which only listens to accept new connections. </description>
<parameters>port - The port on which to listen on all interfaces. 
backlog - The backlog parameter defines the maximum length the queue of pending connections may grow to. SOMAXCONN may be passed as backlog parameter, see socket_listen() for more information. </parameters>
<output>socket_create_listen() returns a new socket resource on success or FALSE on error. The error code can be retrieved with socket_last_error(). This code may be passed to socket_strerror() to get a textual explanation of the error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=375> 
<name>ncurses_show_panel</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Places an invisible panel on top of the stack, making it visible</short-description>
<description>int ncurses_show_panel ( resource $panel ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>panel - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=376> 
<name>ftp_size</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает размер указанного файла</short-description>
<description>int ftp_size ( resource $ftp_stream , string $remote_file ) 
 ftp_size() возвращает размер заданного файла в байтах. 
 Замечание: 
 Не все FTP-серверы поддерживают эту возможность. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером. 
remote_file - Имя файла на сервере. </parameters>
<output>Возвращает размер файла, или -1 при возникновении ошибки. </output>
<errors></errors>
<example><?php
$file = 'somefile.txt';
// установка соединения
$conn_id = ftp_connect($ftp_server);
// проверка имени пользователя и пароля
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);
// получение размера файла $file
$res = ftp_size($conn_id, $file);
if ($res != -1) {
    echo "Размер файла $file: $res байт";
} else {
    echo "Не удалось определить размер файла $file";
}
// закрытие соединения
ftp_close($conn_id);
?></example>
<example_result></example_result>
</object>

<object id=377> 
<name>PDF_open_ccitt</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Open raw CCITT image [deprecated]</short-description>
<description>int PDF_open_ccitt ( resource $pdfdoc , string $filename , int $width , int $height , int $BitReverse , int $k , int $Blackls1 ) 
 Opens a raw CCITT image. 
 This function is deprecated since PDFlib version 5, use PDF_load_image() instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=378> 
<name>ociloadlob</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним OCI-Lob::load()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=379> 
<name>checkdate</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Проверяет корректность даты по григорианскому календарю</short-description>
<description>bool checkdate ( int $month , int $day , int $year ) 
 Проверяет корректность даты по переданным аргументам. Дата считается корректной, если все параметры принимают допустимые значения. </description>
<parameters>month - Месяц. Принимает значения от 1 до 12 включительно. 
day - День. Принимает значения, допустимые для указанного месяца month. При этом учитывается, является ли год year високосным. 
year - Год. Принимает значения от 1 до 32767 включительно. </parameters>
<output>Возвращает TRUE, если проверяемая дата является корректной, или FALSE в противном случае. </output>
<errors></errors>
<example><?php
var_dump(checkdate(12, 31, 2000));
var_dump(checkdate(2, 29, 2001));
?></example>
<example_result>
 
bool(true)
bool(false)
</example_result>
</object>

<object id=380> 
<name>gmp_gcd</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Вычисление наибольшего общего делителя</short-description>
<description>resource gmp_gcd ( resource $a , resource $b ) 
 Вычисляет наибольший общий делитель чисел a и b. Результат всегда положителен, даже если одно из чисел, или оба, отрицательные. </description>
<parameters>a - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.
b - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.</parameters>
<output>Положительный НОД чисел a и b. </output>
<errors></errors>
<example><?php
$gcd = gmp_gcd("12", "21");
echo gmp_strval($gcd) . "\n";
?></example>
<example_result>
 
3
</example_result>
</object>

<object id=381> 
<name>pg_meta_data</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Получение метаданных таблицы </short-description>
<description>array pg_meta_data ( resource $connection , string $table_name ) 
 pg_meta_data() возвращает определение таблицы table_name в виде массива. Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>connection - Ресурс соединения с базой данных PostgreSQL. 
table_name - Название таблицы. </parameters>
<output>Массив, содержащий определение таблицы, либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Невозможно соединиться с сервером");
  $meta = pg_meta_data($dbconn, 'authors');
  if (is_array($meta)) {
      echo '<pre>';
      var_dump($meta);
      echo '</pre>';
  }
?></example>
<example_result>
 
array(3) {
["author"]=>
array(5) {
  ["num"]=>
  int(1)
  ["type"]=>
  string(7) "varchar"
  ["len"]=>
  int(-1)
  ["not null"]=>
  bool(false)
  ["has default"]=>
  bool(false)
}
["year"]=>
array(5) {
  ["num"]=>
  int(2)
  ["type"]=>
  string(4) "int2"
  ["len"]=>
  int(2)
  ["not null"]=>
  bool(false)
  ["has default"]=>
  bool(false)
}
["title"]=>
array(5) {
  ["num"]=>
  int(3)
  ["type"]=>
  string(7) "varchar"
  ["len"]=>
  int(-1)
  ["not null"]=>
  bool(false)
  ["has default"]=>
  bool(false)
}
}
</example_result>
</object>

<object id=382> 
<name>imap_scan</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним imap_listscan()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=383> 
<name>ingres_fetch_row</name>
<versions>(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)</versions>
<short-description>Fetch a row of result into an enumerated array</short-description>
<description>array ingres_fetch_row ( resource $result ) 
 ingres_fetch_row() returns an array that corresponds to the fetched row, or FALSE if there are no more rows. Each result column is stored in an array offset, starting at offset 1. 
 Subsequent calls to ingres_fetch_row() return the next row in the result set, or FALSE if there are no more rows. 
 By default, arrays created by ingres_fetch_row() start from position 1 and not 0 as with other DBMS extensions. The starting position can be adjusted to 0 using the configuration parameter ingres.array_index_start. 
 Замечание: Related Configurations
 
 See also the ingres.array_index_start, ingres.fetch_buffer_size and ingres.utf8 directives in Runtime Configuration. </description>
<parameters>result - The query result identifier </parameters>
<output>Returns an array that corresponds to the fetched row, or FALSE if there are no more rows </output>
<errors></errors>
<example><?php
$link = ingres_connect($database, $user, $password);
$result = ingres_query($link, "select * from table");
while ($row = ingres_fetch_row($result)) {
    echo $row[1];
    echo $row[2];
}?></example>
<example_result></example_result>
</object>

<object id=384> 
<name>swf_startdoaction</name>
<versions>(PHP 4)</versions>
<short-description>Start a description of an action list for the current frame</short-description>
<description>void swf_startdoaction ( void ) 
 Starts the description of an action list for the current frame. This must be called before actions are defined for the current frame. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=385> 
<name>hw_InsDoc</name>
<versions>(PHP 4)</versions>
<short-description>Insert document</short-description>
<description>int hw_insdoc ( resource $connection , int $parentID , string $object_record [, string $text ] ) 
 Inserts a new document with attributes as in object_record into acollection. 
 If you want to insert a general document of any kind use hw_insertdocument() instead. </description>
<parameters>connection - The connection identifier. 
parentID - The collection id. 
object_record - Object attributes. 
text - If provided, this ascii text will be inserted too. </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=386> 
<name>pcntl_wifsignaled</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Checks whether the status code represents a termination due to a signal</short-description>
<description>bool pcntl_wifsignaled ( int $status ) 
 Checks whether the child process exited because of a signal which was not caught. </description>
<parameters>status - Параметр status - этопараметр статуса, передаваемый для успешного вызова функции pcntl_waitpid().</parameters>
<output>Returns TRUE if the child process exited because of a signal which was not caught, FALSE otherwise. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=387> 
<name>XMLWriter::writePI</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Записать инструкцию обработки (PI)</short-description>
<description>bool XMLWriter::writePI ( string $target , string $content ) 
 Процедурный стиль bool xmlwriter_write_pi ( resource $xmlwriter , string $target , string $content )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
target - Цель инструкций обработки. 
content - Содержимое инструкций обработки. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=388> 
<name>mssql_result</name>
<versions>(PHP 4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Get result data</short-description>
<description>string mssql_result ( resource $result , int $row , mixed $field ) 
 mssql_result() returns the contents of one cell from a MS SQL result set. </description>
<parameters>result - The result resource that is being evaluated. This result comes from a call to mssql_query(). 
row - The row number. 
field - Can be the field&#039;s offset, the field&#039;s name or the field&#039;s table dot field&#039;s name (tablename.fieldname). If the column name has been aliased (&#039;select foo as bar from...&#039;), it uses the alias instead of the column name. </parameters>
<output>Returns the contents of the specified cell. </output>
<errors></errors>
<example><?php
// Send a select query to MSSQL
$query = mssql_query('SELECT [username] FROM [php].[dbo].[userlist]');
// Check if there were any records
if (!mssql_num_rows($query)) {
    echo 'No records found';
} else {
    for ($i = 0; $i < mssql_num_rows($query); ++$i) {
        echo mssql_result($query, $i, 'username'), PHP_EOL;
    }
}
// Free the query result
mssql_free_result($query);
?></example>
<example_result>
 
Kalle
Felipe
Emil
Ross
</example_result>
</object>

<object id=389> 
<name>swf_startsymbol</name>
<versions>(PHP 4)</versions>
<short-description>Define a symbol</short-description>
<description>void swf_startsymbol ( int $objid ) 
 Defines an object id as a symbol. Symbols are tiny flash movies that can be played simultaneously. </description>
<parameters>objid - The object id you want to define as a symbol. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=390> 
<name>ftp_exec</name>
<versions>(PHP 4 >= 4.0.3, PHP 5)</versions>
<short-description>Запрашивает выполнение команды на FTP-сервере</short-description>
<description>bool ftp_exec ( resource $ftp_stream , string $command ) 
 Посылает команду SITE EXEC command на FTP-сервер. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером. 
command - Команда для выполнения. </parameters>
<output>Возвращает TRUE в случае успешного выполнения команды (сервер отправляет код ответа: 200); в противном случае возвращает FALSE. </output>
<errors></errors>
<example><?php
// инициализация переменных
$command = 'ls -al >files.txt';
// устанавливаем соединение
$conn_id = ftp_connect($ftp_server);
// вход с именем пользователя и пароля
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);
// выполняем команду
if (ftp_exec($conn_id, $command)) {
    echo "Команда $command выполнена успешно\n";
} else {
    echo "Не удалось выполнить $command\n";
}
// закрываем соединение
ftp_close($conn_id);
?></example>
<example_result></example_result>
</object>

<object id=391> 
<name>mcrypt_enc_get_algorithms_name</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Returns the name of the opened algorithm</short-description>
<description>string mcrypt_enc_get_algorithms_name ( resource $td ) 
 This function returns the name of the algorithm. </description>
<parameters>td - The encryption descriptor. </parameters>
<output>Returns the name of the opened algorithm as a string. </output>
<errors></errors>
<example><?php
$td = mcrypt_module_open(MCRYPT_CAST_256, '', MCRYPT_MODE_CFB, '');
echo mcrypt_enc_get_algorithms_name($td). "\n";
$td = mcrypt_module_open('cast-256', '', MCRYPT_MODE_CFB, '');
echo mcrypt_enc_get_algorithms_name($td). "\n";
?></example>
<example_result>
 
CAST-256
CAST-256
</example_result>
</object>

<object id=392> 
<name>fbsql_field_name</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Get the name of the specified field in a result</short-description>
<description>string fbsql_field_name ( resource $result [, int $field_index ] ) 
 Returns the name of the specified field index. </description>
<parameters>result - A result pointer returned by fbsql_list_fields(). 
field_index - The numerical offset of the field. The field index starts at 0. </parameters>
<output>Returns the name as a string, or FALSE if the field doesn&#039;t exist. </output>
<errors></errors>
<example><?php
// The users table consists of three fields:
//   user_id
//   username
//   password.
$res = fbsql_db_query("users", "select * from users", $link);
echo fbsql_field_name($res, 0) . "\n";
echo fbsql_field_name($res, 2);
?></example>
<example_result>
 
user_id
password
</example_result>
</object>

<object id=393> 
<name>dbplus_getunique</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Get an id number unique to a relation</short-description>
<description>int dbplus_getunique ( resource $relation , int $uniqueid ) 
 Obtains a number guaranteed to be unique for the given relation and will pass it back in the variable given as uniqueid. </description>
<parameters>relation - A relation opened by dbplus_open(). 
uniqueid - </parameters>
<output>Returns DBPLUS_ERR_NOERR on success or a db++ error code on failure. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=394> 
<name>pg_close</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Закрывает соединение с базой данных PostgreSQL</short-description>
<description>bool pg_close ([ resource $connection ] ) 
 pg_close() закрывает обычное (непостоянное) соединение с базой данных PostgreSQL, соответствующее ресурсу connection. 
 Замечание: 
 Использование pg_close(), как правило, необязательно, так как непостоянные соединения закрываются автоматически при завершении работы скрипта. 
 Если с соединением работают ресурсы "больших" объектов, то перед закрытием соединения необходимо закрыть эти ресурсы. </description>
<parameters>connection - Ресурс соединения с базой данных PostgreSQL. В случае, если connection не задан, будет закрыто последнее соединение открытое функциями pg_connect() или pg_pconnect(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$dbconn = pg_connect("host=localhost port=5432 dbname=mary")
   or die("Невозможно подключиться к БД");
echo "Успешно подключено к БД";
pg_close($dbconn);
?></example>
<example_result>
 
Успешно подключено к БД
</example_result>
</object>

<object id=395> 
<name>array_reduce</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Итеративно уменьшает массив к единственному значению, используя callback-функцию</short-description>
<description>mixed array_reduce ( array $input , callback $function [, mixed $initial = NULL ] ) 
 array_reduce() итеративно применяет callback-функцию function к элементам массива input и, таким образом, сводит массив к единственному значению. </description>
<parameters>input - Входной массив. 
function - Callback-функция. 
initial - Если передан необязательный параметр initial, то он будет использован в начале процесса, или в качестве окончательного результата в случае пустого массива. </parameters>
<output>Возвращает получившееся значение. </output>
<errors></errors>
<example><?php
function rsum($v, $w)
{    $v += $w;
    return $v;
}
function rmul($v, $w)
{    $v *= $w;
    return $v;
}
$a = array(1, 2, 3, 4, 5);
$x = array();
$b = array_reduce($a, "rsum");
$c = array_reduce($a, "rmul", 10);
$d = array_reduce($x, "rsum", "No data to reduce");
?></example>
<example_result></example_result>
</object>

<object id=396> 
<name>imagecolorat</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get the index of the color of a pixel</short-description>
<description>int imagecolorat ( resource $image , int $x , int $y ) 
 Returns the index of the color of the pixel at the specified location in the image specified by image. 
 If PHP is compiled against GD library 2.0 or higher and the image is a truecolor image, this function returns the RGB value of that pixel as integer. Use bitshifting and masking to access the distinct red, green and blue component values: </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
x - x-coordinate of the point. 
y - y-coordinate of the point. </parameters>
<output>Returns the index of the color. </output>
<errors></errors>
<example><?php
$im = imagecreatefrompng("php.png");
$rgb = imagecolorat($im, 10, 15);
$r = ($rgb >> 16) & 0xFF;
$g = ($rgb >> 8) & 0xFF;
$b = $rgb & 0xFF;
var_dump($r, $g, $b);
?></example>
<example_result>
 
int(119)
int(123)
int(180)
</example_result>
</object>

<object id=397> 
<name>idn_to_utf8</name>
<versions>(PHP 5 >= 5.3.0, PECL intl >= 1.0.2, PECL idn >= 0.1)</versions>
<short-description>Convert domain name from IDNA ASCII to Unicode.</short-description>
<description>string idn_to_utf8 ( string $domain [, int $options = 0 [, int $variant = INTL_IDNA_VARIANT_2003 [, array &$idna_info ]]] ) 
 This function converts Unicode domain name from IDNA ASCII-compatible format to plain Unicode, encoded in UTF-8. </description>
<parameters>domain - Domain to convert in IDNA ASCII-compatible format. 
options - Conversion options - combination of IDNA_* constants (except IDNA_ERROR_* constants). 
variant - Either INTL_IDNA_VARIANT_2003 for IDNA 2003 or INTL_IDNA_VARIANT_UTS46 for UTS #46. 
idna_info - This parameter can be used only if INTL_IDNA_VARIANT_UTS46 was used for variant. In that case, it will be filled with an array with the keys &#039;result&#039;, the possibly illegal result of the transformation, &#039;isTransitionalDifferent&#039;, a boolean indicating whether the usage of the transitional mechanisms of UTS #46 either has or would have changed the result and &#039;errors&#039;, which is an int representing a bitset of the error constants IDNA_ERROR_*. </parameters>
<output>Domain name in Unicode, encoded in UTF-8. или FALSE в случае возникновения ошибки </output>
<errors></errors>
<example><?php
echo idn_to_utf8('xn--tst-qla.de'); 
?></example>
<example_result>
 
täst.de
</example_result>
</object>

<object id=398> 
<name>ob_end_clean</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Очищает (стирает) буфер вывода и отключает буферизацию вывода</short-description>
<description>bool ob_end_clean ( void ) 
 Эта функция удаляет содержимое самого верхнего буфера вывода и отключает эту буферизацию. Если вы хотите использовать содержимое буфера, то вам необходимо вызвать ob_get_contents() перед ob_end_clean(), так как все содержимое буфера удаляется при вызове ob_end_clean(). </description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. Основной причиной неудачного завершения работы функции является ее вызов без активной буферизации, или если буфер не может быть удален (специальный тип буфера). </output>
<errors>Если функция завершается ошибкой генерируется E_NOTICE. </errors>
<example><?php
ob_start();
echo 'Текст, который не отобразится.';
ob_end_clean();
?></example>
<example_result></example_result>
</object>

<object id=399> 
<name>array_keys</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает все или некоторое подмножество ключей массива</short-description>
<description>array array_keys ( array $input [, mixed $search_value [, bool $strict = false ]] ) 
 Функция array_keys() возвращает числовые и строковые ключи, содержащиеся в массиве input. 
 Если указан необязательный параметр search_value, функция возвращает только ключи, совпадающие с этим параметром. В обратном случае, функция возвращает все ключи массива input. </description>
<parameters>input - Массив, содержащий возвращаемые ключи. 
search_value - Если указано, будут возвращены только ключи, содержащие данное значение. 
strict - Определяет использование строгой проверки на равенство (===) при поиске. </parameters>
<output>Возвращает массив со всеми ключами input. </output>
<errors></errors>
<example><?php
$array = array(0 => 100, "color" => "red");
print_r(array_keys($array));
$array = array("blue", "red", "green", "blue", "blue");
print_r(array_keys($array, "blue"));
$array = array("color" => array("blue", "red", "green"),
               "size"  => array("small", "medium", "large"));
print_r(array_keys($array));
?></example>
<example_result>
 
Array
(
    [0] => 0
    [1] => color
)
Array
(
    [0] => 0
    [1] => 3
    [2] => 4
)
Array
(
    [0] => color
    [1] => size
)
</example_result>
</object>

<object id=400> 
<name>ncurses_hline</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Draw a horizontal line at current position using an attributed character and max. n characters long </short-description>
<description>int ncurses_hline ( int $charattr , int $n ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>charattr - 
n - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=401> 
<name>dbplus_sql</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Perform SQL query</short-description>
<description>resource dbplus_sql ( string $query [, string $server [, string $dbpath ]] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>query - 
server - 
dbpath - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=402> 
<name>each</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает текущую пару ключ/значение из массива и смещает его указатель</short-description>
<description>array each ( array &$array ) 
 Возвращает текущую пару ключ/значение из массива и смещает его указатель. 
 После выполнения each(), указатель массива перемещается к следующему его элементу, пока не будет достигнут конец массива. Для повторного обхода массива при помощи each необходимо использовать функцию reset(). </description>
<parameters>array - Входной массив. </parameters>
<output>Возвращает текущую пару ключ/значение из массива array. Данная пара возвращается в массива из четырех элементов, с ключами 0, 1, key и value. Элементы 0 и key содержат имя ключа элемента массива, а 1 и value содержат его данные. </output>
<errors></errors>
<example><?php
$foo = array("bob", "fred", "jussi", "jouni", "egon", "marliese");
$bar = each($foo);
print_r($bar);
?></example>
<example_result>
 
Array
(
    [1] => bob
    [value] => bob
    [0] => 0
    [key] => 0
)
</example_result>
</object>

<object id=403> 
<name>odbc_free_result</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Free resources associated with a result</short-description>
<description>bool odbc_free_result ( resource $result_id ) 
 Free resources associated with a result. 
 odbc_free_result() only needs to be called if you are worried about using too much memory while your script is running. All result memory will automatically be freed when the script is finished. </description>
<parameters>result_id - The result identifier. </parameters>
<output>Always returns TRUE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=404> 
<name>qdom_error</name>
<versions>(PHP 4 >= 4.0.5)</versions>
<short-description>Возвращает строку ошибки из последней операции QDOM или FALSE, если ошибок не было</short-description>
<description>string qdom_error ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=405> 
<name>debug_zval_dump</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Выводит строковое представление внутреннего значения zend</short-description>
<description>void debug_zval_dump ( mixed $variable ) 
 Выводит строковое представление внутреннего значения zend. </description>
<parameters>variable - Обрабатываемая переменная. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
$var1 = 'Hello World';
$var2 = '';
$var2 =& $var1;
debug_zval_dump(&$var1);
?></example>
<example_result>
 
&string(11) "Hello World" refcount(3)
</example_result>
</object>

<object id=406> 
<name>ocinewdescriptor</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_new_descriptor()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=407> 
<name>is_writable</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Определяет, доступен ли файл для записи</short-description>
<description>bool is_writable ( string $filename ) 
 Возвращает TRUE, если файл filename существует и доступен для записи. Аргумент filename может быть именем директории, что позволяет вам проверять директории на доступность для записи. 
 Не забывайте, что PHP может обращаться к файлу от имени того пользователя, от которого запущен веб-сервер (обычно &#039;nobody&#039;). Ограничения безопасного режима не принимаются во внимание. </description>
<parameters>filename - Проверяемый файл. </parameters>
<output>Возвращает TRUE, если filename существует и доступен для записи. </output>
<errors>В случае неудачного завершения работы генерируется ошибка уровня E_WARNING.</errors>
<example><?php
$filename = 'test.txt';
if (is_writable($filename)) {
    echo 'Файл доступен для записи';
} else {
    echo 'Файл недоступен для записи';
}?></example>
<example_result></example_result>
</object>

<object id=408> 
<name>yaz_search</name>
<versions>(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)</versions>
<short-description>Prepares for a search</short-description>
<description>bool yaz_search ( resource $id , string $type , string $query ) 
 yaz_search() prepares for a search on the given connection. 
 Like yaz_connect() this function is non-blocking and only prepares for a search to be executed later when yaz_wait() is called. </description>
<parameters>id - The connection resource returned by yaz_connect(). 
type - This parameter represents the query type - only "rpn" is supported now in which case the third argument specifies a Type-1 query in prefix query notation. 
query - The RPN query is a textual representation of the Type-1 query as defined by the Z39.50 standard. However, in the text representation as used by YAZ a prefix notation is used, that is the operator precedes the operands. The query string is a sequence of tokens where white space is ignored unless surrounded by double quotes. Tokens beginning with an at-character (@) are considered operators, otherwise they are treated as search terms. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example>
 
 computer</example>
<example_result>
 
@attrset gils @and @attr 1=4 art @attr 1=2000 company
</example_result>
</object>

<object id=409> 
<name>PDF_get_image_width</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Возвращает ширину изображения [устаревшее]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=410> 
<name>session_unregister</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Unregister a global variable from the current session</short-description>
<description>bool session_unregister ( string $name ) 
 session_unregister() unregisters the global variable named name from the current session. Внимание
 С версии PHP 5.3.0 эта функция считаетсяУСТАРЕВШЕЙ. Крайне не рекомендуется полагаться на эту возможность.</description>
<parameters>name - The variable name. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=411> 
<name>dbase_create</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Создает базу данных</short-description>
<description>int dbase_create ( string $filename , array $fields ) 
 dbase_create() создает базу данных dBase с заданными свойствами. 
 Замечание: Когда опция safe mode включена, PHP проверяет,имеют ли файлы/каталоги, с которыми вы собираетесь работать, такойже UID (владельца), как и выполняемый скрипт. 
 Замечание: 
 На поведение этой функции влияетзначение директивы open_basedir. </description>
<parameters>filename - Имя базы данных. Это может быть относительный или абсолютный путь к файлу, в котором dBase будет хранить ваши данные. 
fields - Массив массивов, в котором каждый массив описывает формат одного поля базы данных. Формат каждого поля состоит из имени этого поля, символа, указывающего тип поля, и, при необходимости, его длину и точность. </parameters>
<output>Возвращает идентификатор связи с базой данных, если база данных успешно создана, или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
// база данных "definition"
$def = array(
  array("date",     "D"),
  array("name",     "C",  50),
  array("age",      "N",   3, 0),
  array("email",    "C", 128),
  array("ismember", "L")
);
// создаем
if (!dbase_create('/tmp/test.dbf', $def)) {
  echo "Ошибка, не получается создать базу данных\n";
}
?></example>
<example_result></example_result>
</object>

<object id=412> 
<name>ncurses_scr_restore</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Restore screen from file dump </short-description>
<description>int ncurses_scr_restore ( string $filename ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>filename - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=413> 
<name>xpath_eval</name>
<versions>(PHP 4)</versions>
<short-description>Вычисляет XPath Location Path в переданной строке </short-description>
<description>XPathObject XPathContext::xpath_eval ( string $xpath_expression [, domnode $contextnode ] ) XPathObject xpath_eval ( XPathContext $xpath_context , string $xpath_expression [, domnode $contextnode ] )</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=414> 
<name>imagecreatefromgd2part</name>
<versions>(PHP 4 >= 4.0.7, PHP 5)</versions>
<short-description>Create a new image from a given part of GD2 file or URL</short-description>
<description>resource imagecreatefromgd2part ( string $filename , int $srcX , int $srcY , int $width , int $height ) 
 Create a new image from a given part of GD2 file or URL. Подсказка
 Для этой функции вы можете использовать URLв качестве имени файла, если была включена опция fopen wrappers. Смотрите болееподробную информацию об определении имени файла в описании функцииfopen(). Смотрите также список поддерживаемых оберток URL, их возможности, замечания по использованию и списокпредопределенных констант в Поддерживаемые протоколы и обработчики (wrappers).</description>
<parameters>filename - Path to the GD2 image. 
srcX - x-coordinate of source point. 
srcY - y-coordinate of source point. 
width - Ширина исходного изображения.
height - Высота исходного изображения.</parameters>
<output>Возвращает ресурс изображения в случае успеха, или FALSE в случае ошибки.</output>
<errors></errors>
<example><?php
// For this example we need the image size before
$image = getimagesize('./test.gd2');
// Create the image instance now we got the image 
// sizes
$im = imagecreatefromgd2part('./test.gd2', 4, 4, ($image[0] / 2) - 6, ($image[1] / 2) - 6);
// Do an image operation, in this case we emboss the 
// image if PHP 5+
if(function_exists('imagefilter'))
{    imagefilter($im, IMG_FILTER_EMBOSS);
}
// Save optimized image
imagegd2($im, './test_emboss.gd2');
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=415> 
<name>pos</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним current()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=416> 
<name>XMLWriter::openMemory</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Создать новый объект XMLWriter, используя память для строкового вывода</short-description>
<description>bool XMLWriter::openMemory ( void ) 
 Процедурный стиль resource xmlwriter_open_memory ( void )</description>
<parameters></parameters>
<output>Объектно-ориентированный стиль: Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=417> 
<name>gmp_scan1</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Поиск единицы в числе</short-description>
<description>int gmp_scan1 ( resource $a , int $start ) 
 Сканирует a, начиная с бита start, пока не найдет бит установленный в 1. </description>
<parameters>a - Сканируемое число. 
start - Бит начала поиска. </parameters>
<output>Возвращает индекс найденного бита в виде числа типа integer. Если таких нет, будет возвращено -1. </output>
<errors></errors>
<example><?php
// "1" бит найден в позиции 3. Поиск начинается с 0
$s1 = gmp_init("01000", 2);
echo gmp_scan1($s1, 0) . "\n";
// "1" бит найден в позиции 9. Поиск начинается с 5
$s2 = gmp_init("01000001111", 2);
echo gmp_scan1($s2, 5) . "\n";
?></example>
<example_result>
 
3
9
</example_result>
</object>

<object id=418> 
<name>stream_filter_prepend</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Прикрепляет фильтр к потоку</short-description>
<description>resource stream_filter_prepend ( resource $stream , string $filtername [, int $read_write [, mixed $params ]] ) 
 Добавляет фильтр filtername к списку фильтров, прикреплённых к потоку stream. </description>
<parameters>stream - Целевой поток. 
filtername - Название потока. 
read_write - По умолчанию, функция stream_filter_prepend() будет прикреплять фильтр к цепочке фильтров чтения, если файл был открыт для чтения (т. е. режим файла: r, и/или +). Фильтр также будет прикреплён к цепочке фильтров записи, если файл был открыт для записи (т. е. режим файла: w, a, и/или +). Константы STREAM_FILTER_READ, STREAM_FILTER_WRITE, и/или STREAM_FILTER_ALL также могут быть переданы в параметре read_write, чтобы переопределить это поведение. Смотрите функцию stream_filter_append() для примера использования этого параметра. 
params - Этот фильтр будет добавлен с указанными параметрами params к началу списка и, таким образом, будет вызван первым во время потоковых операций. Для того, чтобы добавить фильтр к концу списка, используйте stream_filter_append(). </parameters>
<output>Возвращает ресурс, который может быть использован для того, чтобы обратиться к этому экземпляру фильтра во время вызова stream_filter_remove(). </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=419> 
<name>yaz_record</name>
<versions>(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)</versions>
<short-description>Returns a record</short-description>
<description>string yaz_record ( resource $id , int $pos , string $type ) 
 The yaz_record() function inspects a record in the current result set at the position specified by parameter pos. </description>
<parameters>id - The connection resource returned by yaz_connect(). 
pos - The record position. Records positions in a result set are numbered 1, 2, ... $hits where $hits is the count returned by yaz_hits(). 
type - The type specifies the form of the returned record. 
string - The record is returned as a string for simple display. In this mode, all MARC records are converted to a line-by-line format since ISO2709 is hardly readable. XML records and SUTRS are returned in their original format. GRS-1 are returned in a (ugly) line-by-line format. 
xml - The record is returned as an XML string if possible. In this mode, all MARC records are converted to &raquo; MARCXML. XML records and SUTRS are returned in their original format. GRS-1 is not supported. 
raw - The record is returned as a string in its original form. This type is suitable for MARC, XML and SUTRS. It does not work for GRS-1. 
syntax - The syntax of the record is returned as a string, i.e. USmarc, GRS-1, XML, etc. 
database - The name of database associated with record at the position is returned as a string. 
array - The record is returned as an array that reflects the GRS-1 structure. This type is suitable for MARC and GRS-1. XML, SUTRS are not supported and if the actual record is XML or SUTRS an empty string will be returned. </parameters>
<output>Returns the record at position pos or an empty string if no record exists at the given position. </output>
<errors></errors>
<example>
 
 (4,52)Robert M. Pirsig(4,70) (4,90) (2,7)Transworld Publishers, ltd.</example>
<example_result>
 
Array
(
    [0] => Array
        (
            [0] => (4,52)
            [1] => Robert M. Pirsig
        )
    [1] => Array
        (
            [0] => (4,70)
        )
    [2] => Array
        (
            [0] => (4,70)(4,90)
        )
    [3] => Array
        (
            [0] => (4,70)(4,90)(2,7)
            [1] => Transworld Publishers, ltd.
        )
)      
</example_result>
</object>

<object id=420> 
<name>ncurses_color_set</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Set active foreground and background colors</short-description>
<description>int ncurses_color_set ( int $pair ) 
 Sets the active foreground and background colors. Any characters written after this function is invoked will have these colors. This function requires terminal colors to be supported and initialized using ncurses_start_color() beforehand. 
 ncurses uses color pairs to specify both foreground and background colors. Use ncurses_init_pair() to define a color pair. </description>
<parameters>pair - The color pair from which to get the foreground and background colors to set as the active colors. </parameters>
<output>Returns -1 on success, and 0 on failure. </output>
<errors></errors>
<example><?php
ncurses_init();
// If the terminal supports colors, initialize and set active color
if (ncurses_has_colors()) {
    ncurses_start_color();
    ncurses_init_pair(1, NCURSES_COLOR_YELLOW, NCURSES_COLOR_BLUE);
    ncurses_color_set(1);
}
// Write a string at specified location
ncurses_mvaddstr(10, 10, "Hello world! Yellow on blue text!");
// Flush output to screen
ncurses_refresh();
ncurses_end();
?></example>
<example_result></example_result>
</object>

<object id=421> 
<name>com_message_pump</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Process COM messages, sleeping for up to timeoutms milliseconds</short-description>
<description>bool com_message_pump ([ int $timeoutms = 0 ] ) 
 This function will sleep for up to timeoutms milliseconds, or until a message arrives in the queue. 
 The purpose of this function is to route COM calls between apartments and handle various synchronization issues. This allows your script to wait efficiently for events to be triggered, while still handling other events or running other code in the background. You should use it in a loop, as demonstrated by the example in the com_event_sink() function, until you are finished using event bound COM objects. </description>
<parameters>timeoutms - The timeout, in milliseconds. </parameters>
<output>If a message or messages arrives before the timeout, they will be dispatched, and the function will return TRUE. If the timeout occurs and no messages were processed, the return value will be FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=422> 
<name>stream_filter_remove</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Удаляет фильтр из потока</short-description>
<description>bool stream_filter_remove ( resource $stream_filter ) 
 Удаляет потоковый фильтр, ранее добавленный к потоку при помощи функции stream_filter_prepend() или stream_filter_append(). Любые данные, оставшиеся во внутреннем буфере фильтра, будут отправлены в следующий фильтр до его удаления. </description>
<parameters>stream_filter - Потоковый фильтр для удаления. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
/* Открытие тестового файла для чтения и записи */
$fp = fopen("test.txt", "rw");
$rot13_filter = stream_filter_append($fp, "string.rot13", STREAM_FILTER_WRITE);
fwrite($fp, "This is ");
stream_filter_remove($rot13_filter);
fwrite($fp, "a test\n");
rewind($fp);
fpassthru($fp);
fclose($fp);
?></example>
<example_result>
 
Guvf vf a test
</example_result>
</object>

<object id=423> 
<name>imagetypes</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Return the image types supported by this PHP build</short-description>
<description>int imagetypes ( void ) 
 Returns the image types supported by the current PHP installation. </description>
<parameters></parameters>
<output>Returns a bit-field corresponding to the image formats supported by the version of GD linked into PHP. The following bits are returned, IMG_GIF | IMG_JPG | IMG_PNG | IMG_WBMP | IMG_XPM. </output>
<errors></errors>
<example><?php
if (imagetypes() & IMG_PNG) {
    echo "PNG Support is enabled";
}?></example>
<example_result></example_result>
</object>

<object id=424> 
<name>gmp_neg</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Изменение знака числа</short-description>
<description>resource gmp_neg ( resource $a ) 
 Возвращает противоположное относительно нуля число. </description>
<parameters>a - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.</parameters>
<output>Возвращает -a в виде GMP числа. </output>
<errors></errors>
<example><?php
$neg1 = gmp_neg("1");
echo gmp_strval($neg1) . "\n";
$neg2 = gmp_neg("-1");
echo gmp_strval($neg2) . "\n";
?></example>
<example_result>
 
-1
1
</example_result>
</object>

<object id=425> 
<name>gzencode</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Сжимает строку в формате gzip</short-description>
<description>string gzencode ( string $data [, int $level = -1 [, int $encoding_mode = FORCE_GZIP ]] ) 
 Возвращает сжатую версию входных данных data, аналогично выводу программы gzip. 
 Подробности о формате GZIP см. &raquo; Формат файла GZIP. Спецификация версии 4.3 (RFC 1952). </description>
<parameters>data - Данные для сжатия. 
level - Уровень сжатия. 0 - без сжатия, 9 - максимальное сжатие. Если не указано, будет использоваться уровень сжатия по умолчанию библиотеки zlib. 
encoding_mode - Режим сжатия, может быть FORCE_GZIP (по умолчанию) или FORCE_DEFLATE. </parameters>
<output>Сжатая строка или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$data = implode("", file("bigfile.txt"));
$gzdata = gzencode($data, 9);
$fp = fopen("bigfile.txt.gz", "w");
fwrite($fp, $gzdata);
fclose($fp);
?></example>
<example_result></example_result>
</object>

<object id=426> 
<name>shmop_write</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Запись данных в разделяемую память</short-description>
<description>int shmop_write ( int $shmid , string $data , int $offset ) 
 shmop_write() записывает строковые данные в участок разделяемой памяти. </description>
<parameters>shmid - Идентификатор участка памяти, возвращаемый функцией shmop_open() 
data - Строковые данные для размещения в памяти 
offset - Определяет, в каком месте участка памяти следует начать запись данных. </parameters>
<output>Размер записанных данных, переданных через параметр data, или FALSE при отказе. </output>
<errors></errors>
<example><?php
$shm_bytes_written = shmop_write($shm_id, $my_string, 0);
?></example>
<example_result></example_result>
</object>

<object id=427> 
<name>m_setssl_cafile</name>
<versions>(PHP 5 >= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Set SSL CA (Certificate Authority) file for verification of server certificate</short-description>
<description>int m_setssl_cafile ( resource $conn , string $cafile ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
cafile - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=428> 
<name>ociwritetemporarylob</name>
<versions>(PHP 4 >= 4.0.6, PECL OCI8 1.0)</versions>
<short-description>Псевдоним OCI-Lob::writeTemporary()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=429> 
<name>dbase_get_record_with_names</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает запись из базы данных в виде ассоциативного массива </short-description>
<description>array dbase_get_record_with_names ( int $dbase_identifier , int $record_number ) 
 Получает запись из базы данных dBase в виде ассоциативного массива (вместе с именами соответствующих полей). </description>
<parameters>dbase_identifier - Идентификатор базы данных, возвращаемый функцией dbase_open() или dbase_create(). 
record_number - Индекс записи. (Здесь соответствует физическому номеру записи. - прим. пер.) </parameters>
<output>Ассоциативный массив с данными строки. Массив будет включать в себя ключ deleted который равен 1, если запись помечена на удаление (см. dbase_delete_record()). Возвращает и пустые записи. </output>
<errors></errors>
<example><?php
// открываем базу в режиме чтения
$db = dbase_open('/tmp/test.dbf', 0);
if ($db) {
  $record_numbers = dbase_numrecords($db);
  for ($i = 1; $i <= $record_numbers; $i++) {
      $row = dbase_get_record_with_names($db, $i);
      if ($row['ismember'] == 1) {
          echo "Member #$i: " . trim($row['name']) . "\n";
      }
  }
}// Прим. пер. -
// к полученным с помощью dbase_get_record_with_names значениям записи 
// обращаемся по имени - $row['ismember'],
// а в случае с dbase_get_record к значениям записи 
// обращаемся по номеру - $row[4]
?></example>
<example_result></example_result>
</object>

<object id=430> 
<name>swf_ortho2</name>
<versions>(PHP 4)</versions>
<short-description>Defines 2D orthographic mapping of user coordinates onto the current viewport</short-description>
<description>void swf_ortho2 ( float $xmin , float $xmax , float $ymin , float $ymax ) 
 Defines a two dimensional orthographic mapping of user coordinates onto the current viewport, this defaults to one to one mapping of the area of the Flash movie. 
 If a perspective transformation is desired, swf_perspective() can be used. </description>
<parameters>xmin - 
xmax - 
ymin - 
ymax - </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=431> 
<name>pg_send_query_params</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Посылает параметризованный запрос на сервер, не ожидает возвращаемого результата </short-description>
<description>bool pg_send_query_params ( resource $connection , string $query , array $params ) 
 Отправляет параметризованный запрос на выполнение и не ждет его завершения. Параметры передаются отдельно от текста SQL запроса. 
 Функция является аналогом pg_send_query() за одним исключением: параметры запроса можно передавать отдельно от строки запроса. Аргументы функции обрабатываются так же, как и в pg_query_params(). pg_send_query() поддерживается на соединениях с серверами PostgreSQL версий 7.4 и выше. Функция не будет работать с серверами ранних версий. Также она поддерживает только одну SQL команду в выражении. </description>
<parameters>connection - Ресурс соединения с базой данных PostgreSQL. 
query - Параметризованный SQL запрос. Должен содержать только одно выражение (несколько выражений разделенных точкой с запятой не поддерживаются). Если в запрос будут передаваться параметры, то они заменят псевдопеременные $1, $2 и т.д. 
params - Массив значений параметров запроса для замены псевдопеременных $1, $2 и т.д. в исходной строке запроса. Количество элементов массива должно точно совпадать с количеством псевдопеременных. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки.</output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Could not connect");
  // Использование параметров. Стоит заметить, что нет необходимости 
  // заключать в кавычки и экранировать параметр.
  pg_send_query_params($dbconn, 'select count(*) from authors where city = $1', array('Perth'));
  
  // В сравнении с pg_send_query 
  $str = pg_escape_string('Perth');
  pg_send_query($dbconn, "select count(*) from authors where city = '${str}'");
?></example>
<example_result></example_result>
</object>

<object id=432> 
<name>jdtojewish</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Переводит число дней в Юлианском летоисчислении в дату по Иудейскому календарю </short-description>
<description>string jdtojewish ( int $juliandaycount [, bool $hebrew = false [, int $fl = 0 ]] ) 
 Переводит число дней в Юлианском летоисчислении в дату по Иудейскому календарю. </description>
<parameters>julianday - Номер дня в Юлианском летоисчислении 
hebrew - Если аргумент hebrew установлен в TRUE, дата будет возвращена в виде строки в Иудейском формате заданном аргументом fl. 
fl - Доступные форматы вывода даты: CAL_JEWISH_ADD_ALAFIM_GERESH, CAL_JEWISH_ADD_ALAFIM, CAL_JEWISH_ADD_GERESHAYIM. </parameters>
<output>Дата по Иудейскому календарю в виде строки формата "месяц/день/год" </output>
<errors></errors>
<example><?php
echo jdtojewish(gregoriantojd(10, 8, 2002), true,
       CAL_JEWISH_ADD_GERESHAYIM + CAL_JEWISH_ADD_ALAFIM + CAL_JEWISH_ADD_ALAFIM_GERESH); 
?></example>
<example_result></example_result>
</object>

<object id=433> 
<name>ncurses_wgetch</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Reads a character from keyboard (window)</short-description>
<description>int ncurses_wgetch ( resource $window ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>window - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=434> 
<name>ldap_first_reference</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Возвращает первую справку</short-description>
<description>resource ldap_first_reference ( resource $link , resource $result ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=435> 
<name>ncurses_scr_dump</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Dump screen content to file </short-description>
<description>int ncurses_scr_dump ( string $filename ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>filename - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=436> 
<name>mcrypt_cbc</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Шифрует/дешифрует даные в режиме CBC</short-description>
<description>string mcrypt_cbc ( int $cipher , string $key , string $data , int $mode [, string $iv ] ) string mcrypt_cbc ( string $cipher , string $key , string $data , int $mode [, string $iv ] )</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=437> 
<name>dba_open</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Open database</short-description>
<description>resource dba_open ( string $path , string $mode [, string $handler [, mixed $... ]] ) 
 dba_open() establishes a database instance for path with mode using handler. </description>
<parameters>path - Commonly a regular path in your filesystem. 
mode - It is r for read access, w for read/write access to an already existing database, c for read/write access and database creation if it doesn&#039;t currently exist, and n for create, truncate and read/write access. The database is created in BTree mode, other modes (like Hash or Queue) are not supported. 
handler - The name of the handler which shall be used for accessing path. It is passed all optional parameters given to dba_open() and can act on behalf of them. </parameters>
<output>Returns a positive handle on success или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=438> 
<name>swf_setfont</name>
<versions>(PHP 4)</versions>
<short-description>Change the current font</short-description>
<description>void swf_setfont ( int $fontid ) 
 The swf_setfont() sets the current font to the value given by the fontid parameter. </description>
<parameters>fontid - The font identifier. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=439> 
<name>fdf_open_string</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Read a FDF document from a string</short-description>
<description>resource fdf_open_string ( string $fdf_data ) 
 Reads form data from a string. 
 You can use fdf_open_string() together with $HTTP_FDF_DATA to process FDF form input from a remote client. </description>
<parameters>fdf_data - The data as returned from a PDF form or created using fdf_create() and fdf_save_string(). </parameters>
<output>Returns a FDF document handle, or FALSE on error. </output>
<errors></errors>
<example><?php
$fdf = fdf_open_string($HTTP_FDF_DATA);
/* ... */
fdf_close($fdf);
?></example>
<example_result></example_result>
</object>

<object id=440> 
<name>curl_multi_remove_handle</name>
<versions>(PHP 5)</versions>
<short-description>Удаляет cURL дескриптор из набора cURL дескрипторов</short-description>
<description>int curl_multi_remove_handle ( resource $mh , resource $ch ) 
 Удаляет указанный дескриптор ch из указанного набора дескрипторов mh. После того, как дескриптор ch удален, его можно снова совершенно легально использовать в функции curl_exec(). Удаление дескриптора ch во время использования также остановит текущую передачу, идущую на этом дескрипторе. </description>
<parameters>mh - Мульти-дескриптор cURL, полученный из curl_multi_init().
ch - Дескриптор cURL, полученный из curl_init().</parameters>
<output>В случае успеха возвращает 0 или одну из констант CURLM_XXX, где XXX - код ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=441> 
<name>shell_exec</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выполняет команду через шелл и возвращает полный вывод в виде строки</short-description>
<description>string shell_exec ( string $cmd ) 
 Эта функция идентична оператору обратный апостроф. </description>
<parameters>cmd - Команда, которая будет выполнена. </parameters>
<output>Вывод исполняемой команды или NULL, если произошла ошибка. </output>
<errors></errors>
<example><?php
$output = shell_exec('ls -lart');
echo "<pre>$output</pre>";
?></example>
<example_result></example_result>
</object>

<object id=442> 
<name>import_request_variables</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Импортирует переменные GET/POST/Cookie в глобальную область видимости</short-description>
<description>bool import_request_variables ( string $types [, string $prefix ] ) 
 Импортирует переменные GET/POST/Cookie в глобальную область видимости. Это бывает полезно, если при отключенной директиве register_globals и желании видеть некоторые переменные в глобальной области видимости. 
 Если необходимо импортировать в глобальную область видимости другие переменные, такие, как $_SERVER, воспользуйтесь функцией extract(). </description>
<parameters>types - С помощью параметра types, можно указать, какие переменные запроса необходимо импортировать. Можно использовать символы &#039;G&#039;, &#039;P&#039; и &#039;C&#039; соответственно для GET, POST и Cookie. Данные символы не являются регистро-зависимыми, поэтому также можно использовать любую комбинацию из &#039;g&#039;, &#039;p&#039; и &#039;c&#039;. POST включает в себя информацию о загруженных файлах методом POST. 
prefix - Префикс имени переменной, добавляемый перед всеми именами переменных, импортируемых в глобальную область видимости. То есть, если есть переменная GET с именем "userid", и указан префикс "pref_", то результатом будет глобальная переменная с именем $pref_userid. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// В примере импортируются переменные GET и POST
// с префиксом "rvar_"
import_request_variables("gp", "rvar_");
echo $rvar_foo;
?></example>
<example_result></example_result>
</object>

<object id=443> 
<name>XMLWriter::startDTDEntity</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Создать начальную запись DTD</short-description>
<description>bool XMLWriter::startDTDEntity ( string $name , bool $isparam ) 
 Процедурный стиль bool xmlwriter_start_dtd_entity ( resource $xmlwriter , string $name , bool $isparam )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
name - Имя записи. 
isparam - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=444> 
<name>ibase_restore</name>
<versions>(PHP 5)</versions>
<short-description>Initiates a restore task in the service manager and returns immediately</short-description>
<description>mixed ibase_restore ( resource $service_handle , string $source_file , string $dest_db [, int $options = 0 [, bool $verbose = false ]] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=445> 
<name>filepro_fieldtype</name>
<versions>(PHP 4, PHP 5 <= 5.1.6)</versions>
<short-description>Gets the type of a field</short-description>
<description>string filepro_fieldtype ( int $field_number ) 
 Returns the edit type of the field corresponding to field_number. </description>
<parameters>field_number - The field number. </parameters>
<output>Returns the edit type of the field as a string, or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=446> 
<name>ibase_blob_import</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Create blob, copy file in it, and close it</short-description>
<description>string ibase_blob_import ( resource $link_identifier , resource $file_handle ) string ibase_blob_import ( resource $file_handle )</description>
<parameters>link_identifier - An InterBase link identifier. If omitted, the last opened link is assumed. 
file_handle - The file handle is a handle returned by fopen(). </parameters>
<output>Returns the BLOB id on success, or FALSE on error. </output>
<errors></errors>
<example><?php
$dbh = ibase_connect($host, $username, $password);
$filename = '/tmp/bar';
$fd = fopen($filename, 'r');
if ($fd) {
    $blob = ibase_blob_import($dbh, $fd);
    fclose($fd);
    if (!is_string($blob)) {
        // import failed
    } else {
        $query = "INSERT INTO foo (name, data) VALUES ('$filename', ?)";
        $prepared = ibase_prepare($dbh, $query);
        if (!ibase_execute($prepared, $blob)) {
            // record insertion failed
        }
    }
} else {
    // unable to open the data file
}
?></example>
<example_result></example_result>
</object>

<object id=447> 
<name>mb_strtolower</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Make a string lowercase</short-description>
<description>string mb_strtolower ( string $str [, string $encoding = mb_internal_encoding() ] ) 
 Returns str with all alphabetic characters converted to lowercase. </description>
<parameters>str - The string being lowercased. 
encoding - Параметр encodingпредставляет собой символьную кодировку. Если он опущен, вместо него будет использовано значение внутренней кодировки.</parameters>
<output>str with all alphabetic characters converted to lowercase. </output>
<errors></errors>
<example><?php
$str = "Mary Had A Little Lamb and She LOVED It So";
$str = mb_strtolower($str);
echo $str; // Prints mary had a little lamb and she loved it so
?></example>
<example_result></example_result>
</object>

<object id=448> 
<name>bzerror</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Возвращает код и строку ошибки работы с bzip2 в виде массива</short-description>
<description>array bzerror ( resource $bz ) 
 Возвращает ассоциативный массив с кодом и строкой ошибки, произошедшей с переданным файловым указателем. </description>
<parameters>bz - Файловый указатель. Должен быть корректным и указывать на файл, успешно открытый bzopen(). </parameters>
<output>Возвращает ассоциативный массив с кодом ошибки с ключом errno, и строкой ошибки с ключом errstr. </output>
<errors></errors>
<example><?php
$error = bzerror($bz);
echo $error["errno"];
echo $error["errstr"];
?></example>
<example_result></example_result>
</object>

<object id=449> 
<name>fbsql_create_blob</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Create a BLOB</short-description>
<description>string fbsql_create_blob ( string $blob_data [, resource $link_identifier ] ) 
 Creates a BLOB from the given data. </description>
<parameters>blob_data - The BLOB data. 
link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Returns a resource handle to the newly created BLOB, which can be used with insert and update commands to store the BLOB in the database. </output>
<errors></errors>
<example><?php
$link = fbsql_pconnect("localhost", "_SYSTEM", "secret")
    or die("Could not connect");
$filename = "blobfile.bin";
$fp = fopen($filename, "rb");
$blobdata = fread($fp, filesize($filename));
fclose($fp);
$blobHandle = fbsql_create_blob($blobdata, $link);
$sql = "INSERT INTO BLOB_TABLE (BLOB_COLUMN) VALUES ($blobHandle);";
$rs = fbsql_query($sql, $link);
?></example>
<example_result></example_result>
</object>

<object id=450> 
<name>mcrypt_ofb</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Encrypts/decrypts data in OFB mode</short-description>
<description>string mcrypt_ofb ( int $cipher , string $key , string $data , int $mode , string $iv ) string mcrypt_ofb ( string $cipher , string $key , string $data , int $mode [, string $iv ] )</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=451> 
<name>gettimeofday</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает текущее время</short-description>
<description>mixed gettimeofday ([ bool $return_float = false ] ) 
 Функция является интерфейсом к системному вызову gettimeofday(2). Она возвращает ассоциативный массив, содержащий информацию, полученную от системного вызова. </description>
<parameters>return_float - Если установлено в TRUE, вместо массива возвращается число с плавающей точкой. </parameters>
<output>По умолчанию возвращается array. Если установлен параметр return_float, то возвращается float. </output>
<errors></errors>
<example><?php
print_r(gettimeofday());
echo gettimeofday(true);
?></example>
<example_result>
 
Array
(
    [sec] => 1073504408
    [usec] => 238215
    [minuteswest] => 0
    [dsttime] => 1
)

1073504408.23910
</example_result>
</object>

<object id=452> 
<name>zip_entry_compressionmethod</name>
<versions>(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)</versions>
<short-description>Возвращает метод сжатия дескриптора директории</short-description>
<description>string zip_entry_compressionmethod ( resource $zip_entry ) 
 Возвращает метод сжатия дескриптора директории, заданного в zip_entry. </description>
<parameters>zip_entry - Дескриптор директории, возвращаемый функцией zip_read(). </parameters>
<output>Метод сжатия. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=453> 
<name>msql_createdb</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним msql_create_db()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=454> 
<name>ncurses_ungetmouse</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Pushes mouse event to queue</short-description>
<description>bool ncurses_ungetmouse ( array $mevent ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>mevent - An associative array specifying the event options: 
 "id" : Id to distinguish multiple devices</parameters>
<output>Returns FALSE on success, TRUE otherwise. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=455> 
<name>pspell_check</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Проверяет слово</short-description>
<description>bool pspell_check ( int $dictionary_link , string $word ) 
 pspell_check() проверяет орфографию слова. </description>
<parameters>dictionary_link - 
word - Проверяемое слово. </parameters>
<output>Возвращает TRUE, если орфография верна; FALSE - в противном случае. </output>
<errors></errors>
<example><?php
$pspell_link = pspell_new("en");
if (pspell_check($pspell_link, "testt")) {
    echo "Это верное написание";
} else {
    echo "К сожалению, неправильное написание";
}?></example>
<example_result></example_result>
</object>

<object id=456> 
<name>sybase_fetch_field</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get field information from a result</short-description>
<description>object sybase_fetch_field ( resource $result [, int $field_offset = -1 ] ) 
 sybase_fetch_field() can be used in order to obtain information about fields in a certain query result. </description>
<parameters>result - 
field_offset - If the field offset isn&#039;t specified, the next field that wasn&#039;t yet retrieved by sybase_fetch_field() is retrieved. </parameters>
<output>Returns an object containing field information. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=457> 
<name>sybase_fetch_assoc</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Fetch a result row as an associative array</short-description>
<description>array sybase_fetch_assoc ( resource $result ) 
 sybase_fetch_assoc() is a version of sybase_fetch_row() that uses column names instead of integers for indices in the result array. Columns from different tables with the same names are returned as name, name1, name2, ..., nameN. 
 An important thing to note is that using sybase_fetch_assoc() is NOT significantly slower than using sybase_fetch_row(), while it provides a significant added value. </description>
<parameters>result - </parameters>
<output>Returns an array that corresponds to the fetched row, or FALSE if there are no more rows. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=458> 
<name>array_diff</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Вычислить расхождение массивов</short-description>
<description>array array_diff ( array $array1 , array $array2 [, array $... ] ) 
 Сравнивает array1 с array2 и возвращает разницу. </description>
<parameters>array1 - Исходный массив 
array2 - Массив, с которым идет сравнение 
... - Дополнительные массивы, с которыми осуществляется сравнение </parameters>
<output>Возвращает array, содержащий элементы array1, отсутствующие в любом из всех остальных массивах. </output>
<errors></errors>
<example><?php
$array1 = array("a" => "green", "red", "blue", "red");
$array2 = array("b" => "green", "yellow", "red");
$result = array_diff($array1, $array2);
print_r($result);
?></example>
<example_result>
 
Array
(
    [1] => blue
)
</example_result>
</object>

<object id=459> 
<name>ingres_field_name</name>
<versions>(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)</versions>
<short-description>Get the name of a field in a query result</short-description>
<description>string ingres_field_name ( resource $result , int $index ) 
 ingres_field_name() returns the name of a field in a query result. 
 Замечание: Related Configurations
 
 See ingres.array_index_start in Runtime Configuration </description>
<parameters>result - The query result identifier 
index - index is the field whose name will be retrieved. </parameters>
<output>Returns the name of a field in a query result или FALSE в случае возникновения ошибки </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=460> 
<name>xslt_set_object</name>
<versions>(PHP 4 >= 4.3.0)</versions>
<short-description>Задает объект, в котором будут реализованы callback-функции </short-description>
<description>bool xslt_set_object ( resource $processor , object &$obj ) 
 Эта функция позволяет использовать processor внутри объекта object и реализовать все callback-функции как методы этого объекта. 
 Callback-функции могут задаваться с помощью функций xslt_set_sax_handlers(), xslt_set_scheme_handlers() или xslt_set_error_handler() и быть объявлены как методы объекта object. </description>
<parameters>processor - Идентификатор ссылки на XSLT-процессор, созданный функцией xslt_create(). 
obj - Объект. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=461> 
<name>XMLWriter::startAttribute</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Создать начальный атрибут</short-description>
<description>bool XMLWriter::startAttribute ( string $name ) 
 Процедурный стиль bool xmlwriter_start_attribute ( resource $xmlwriter , string $name )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
name - Имя атрибута. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=462> 
<name>fpassthru</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выводит все оставшиеся данные из файлового указателя</short-description>
<description>int fpassthru ( resource $handle ) 
 Читает указанный файловый указатель с текущей позиции до EOF (конца файла) и записывает результат в буфер вывода. 
 Вам может понадобиться вызвать rewind() чтобы сбросить файловый указатель на начало файла, если вы уже записывали данные в файл. 
 Если вы хотите просто сбросить содержимое файла в буфер вывода, предварительно не модифицируя его и не начиная с определённого смещения, вы можете воспользоваться readfile(), которая избавит вас от лишнего вызова fopen(). </description>
<parameters>handle - Указатель на файл должен быть корректным и указыватьна файл, успешно открытый функциями fopen() илиfsockopen() (и все еще не закрытым функцией fclose()).</parameters>
<output>В случае возникновения ошибки fpassthru() возвращает FALSE. Иначе, fpassthru() возвращает количество символов, прочтенных из handle и переданных на вывод. </output>
<errors></errors>
<example><?php
// открываем файл в бинарном режиме
$name = './img/ok.png';
$fp = fopen($name, 'rb');
// отправляем нужные заголовки
header("Content-Type: image/png");
header("Content-Length: " . filesize($name));
// скидываем картинку и останавливаем выполнение скрипта
fpassthru($fp);
exit;
?></example>
<example_result></example_result>
</object>

<object id=463> 
<name>enchant_dict_add_to_session</name>
<versions>(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )</versions>
<short-description>add &#039;word&#039; to this spell-checking session</short-description>
<description>void enchant_dict_add_to_session ( resource $dict , string $word ) 
 Add a word to the given dictionary. It will be added only for the active spell-checking session. </description>
<parameters>dict - Dictionary resource 
word - The word to add </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=464> 
<name>ncurses_slk_touch</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Forces output when ncurses_slk_noutrefresh is performed</short-description>
<description>int ncurses_slk_touch ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=465> 
<name>lchown</name>
<versions>(PHP 5 >= 5.1.2)</versions>
<short-description>Изменяет владельца символической ссылки</short-description>
<description>bool lchown ( string $filename , mixed $user ) 
 Пытается изменить владельца символической ссылки filename на указанного в user пользователя. 
 Только суперпользователь может изменять владельца символической ссылки. </description>
<parameters>filename - Путь к файлу. 
user - Имя пользователя или номер. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$target = 'output.php';
$link = 'output.html';
symlink($target, $link);
lchown($link, 8);
?></example>
<example_result></example_result>
</object>

<object id=466> 
<name>gmmktime</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает метку времени Unix для времени по Гринвичу</short-description>
<description>int gmmktime ([ int $hour = gmdate("H") [, int $minute = gmdate("i") [, int $second = gmdate("s") [, int $month = gmdate("n") [, int $day = gmdate("j") [, int $year = gmdate("Y") [, int $is_dst = -1 ]]]]]]] ) 
 Эта функция идентична функции mktime(), за исключением того, что аргументы формируют время по Гринвичу (GMT). gmmktime() внутри использует mktime(), поэтому могут быть использованы только те даты местного времени, которые корректно представляются в этой зоне. 
 Подобно функции mktime(), аргументы могут быть опущены в порядке справа налево, в этом случае они предполагаются равными соответствующим компонентам текущего времени по Гринвичу. </description>
<parameters>hour - Количество часов, прошедших с начала дня, указанного параметрами month, day и year. Отрицательные значения определяют часы до полуночи указанного дня. Значения большие 23 определяют соответствующий час следующего дня (или дней). 
minute - Количество минут, прошедших от начала часа, указанного параметром hour. Отрицательные значения определяют минуты предыдущего часа. Значения большие 59 определяют соответствующие минуты следующего часа (или часов). 
second - Количество секунд, прошедших от начала минуты, указанной параметром minute. Отрицательные знаения определяют секунды из предыдущей минуты. Значения большие 59 определяют соответствующие секунды следующей минуты (или минут). 
month - Количество месяцев, прошедших с конца предыдущего года. Значения от 1 до 12 определяют нормальные обычные календарные месяцы года. Значения меньшие 1 (включая отрицательные значения) определяют месяца предыдущего года в обратном порядке, т.е. 0 будет декабрем, -1 - ноябрем и т.д. Значения больше 12 определяют соответствующий месяц в следующем году (или годах). 
day - Количество дней, прошедших с конца предыдущего месяца. Значения от 1 до 28, 29, 30 или 31 (в зависимости от месяца) определяют нормальные дни соответствующего месяца. Значения меньшие 1 (включая отрицательные значения) определяют дни предыдущего месяца, таким образом, 0 является последним днем предыдущего месяца, -1 - предпоследним днем предыдущего месяца и т.д. Значения большие количества дней соответствующего месяца определяют соответствующий день следующего месяца (или месяцев). 
year - Год 
is_dst - Параметры всегда представляют собой дату по Гринвичу, поэтому параметр is_dst не влияет на результат. </parameters>
<output>Возвращает временную метку Unix (тип integer). </output>
<errors></errors>
<example><?php
// Выводит: July 1, 2000 is on a Friday
echo "July 1, 2000 is on a " . date("l", gmmktime(0, 0, 0, 7, 1, 2000));
?></example>
<example_result></example_result>
</object>

<object id=467> 
<name>shmop_open</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Резервирование или использование блока разделяемой памяти</short-description>
<description>int shmop_open ( int $key , string $flags , int $mode , int $size ) 
 shmop_open() резервирует или использует существующий блок разделяемой памяти. </description>
<parameters>key - Системный идентификатор блока разделяемой памяти. Может быть задан в десятичной или шестнадцатеричной кодировке. 
flags - Доступные для использования флаги: "a" для доступа (устанавливает флаг SHM_RDONLY) Следует применять этот флаг, когда необходимо использовать ранее зарезервированный участок разделяемой памяти, уже содержащий какие-либо данные. В этом случае доступ возможен только для операций чтения. "c" для резервирования (устанавливает флаг IPC_CREATE) Следует применять этот флаг для создания нового зарезервированного участка разделяемой памяти. Если участок памяти с таким идентификатором уже существует, выполняется попытка доступа к нему для последующих операций чтения и записи. "w" для выполнения операций чтения и записи Следует применять этот флаг для чтения и записи данных, хранимых в разделяемой памяти. Данный флаг используется в большинстве случаев. "n" для создания в памяти нового сегмента (устанавливает флаг IPC_CREATE|IPC_EXCL) Следует применять этот флаг для создания нового сегмента в разделяемой памяти, но если сегмент уже существует с тем же флагом, происходит отказ. Это полезно в целях безопасности, т.к. позволяет избежать ошибок синхронизации (Race condition exploits). 
mode - Права доступа к участку памяти такие же, как к обычному файлу. Их можно указывать в восьмеричноv виде, например 0644. 
size - Размер резервируемого блока в разделяемой памяти в байтах </parameters>
<output>При успешном выполнении shmop_open() возвращается идентификатор, который может быть в дальнейшем использован для доступа к зарезервированному участку памяти. </output>
<errors></errors>
<example><?php
$shm_key = ftok(__FILE__, 't');
$shm_id = shmop_open($shm_key, "c", 0644, 100);
?></example>
<example_result></example_result>
</object>

<object id=468> 
<name>swf_setframe</name>
<versions>(PHP 4)</versions>
<short-description>Switch to a specified frame</short-description>
<description>void swf_setframe ( int $framenumber ) 
 Changes the active frame to the specified on. </description>
<parameters>framenumber - The frame number to be set. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=469> 
<name>swf_addbuttonrecord</name>
<versions>(PHP 4)</versions>
<short-description>Controls location, appearance and active area of the current button</short-description>
<description>void swf_addbuttonrecord ( int $states , int $shapeid , int $depth ) 
 Allow you to define the specifics of using a button. </description>
<parameters>states - Defines what states the button can have, these can be any or all of the following constants: BSHitTest, BSDown, BSOver or BSUp. 
shapeid - The second parameter, the shapeid is the look of the button, this is usually the object id of the shape of the button. 
depth - This parameter is the placement of the button in the current frame. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
swf_startButton($objid, TYPE_MENUBUTTON);
swf_addButtonRecord(BSDown|BSOver, $buttonImageId, 340);
swf_onCondition(MenuEnter);
swf_actionGetUrl("http://www.example.com", "_level1");
swf_onCondition(MenuExit);
swf_actionGetUrl("", "_level1");
swf_endButton();
?></example>
<example_result></example_result>
</object>

<object id=470> 
<name>pg_dbname</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Определяет имя базы данных</short-description>
<description>string pg_dbname ([ resource $connection ] ) 
 pg_dbname() возвращает имя базы данных, соответствующей ресурсу PostgreSQL connection. </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). </parameters>
<output>Строка, содержащая имя базы данных, соответствующей ресурсу connection, либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
  error_reporting(E_ALL);
  pg_connect("host=localhost port=5432 dbname=mary");
  echo pg_dbname(); // mary
?></example>
<example_result></example_result>
</object>

<object id=471> 
<name>enchant_broker_request_dict</name>
<versions>(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )</versions>
<short-description>create a new dictionary using a tag</short-description>
<description>resource enchant_broker_request_dict ( resource $broker , string $tag ) 
 create a new dictionary using tag, the non-empty language tag you wish to request a dictionary for ("en_US", "de_DE", ...) </description>
<parameters>broker - Broker resource 
tag - A tag describing the locale, for example en_US, de_DE </parameters>
<output>Returns a dictionary resource on success или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example>
 enchant_broker_dict_exists() and request it. </example>
<example_result></example_result>
</object>

<object id=472> 
<name>array_search</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Осуществляет поиск данного значения в массиве и возвращает соответствующий ключ в случае удачи</short-description>
<description>mixed array_search ( mixed $needle , array $haystack [, bool $strict = false ] ) 
 Ищет в haystack значение needle. </description>
<parameters>needle - Искомое значение. 
haystack - Массив. 
strict - Если третий параметр strict установлен в TRUE, то функция array_search() будет искать идентичные элементы в haystack. Это означает, что также будут проверяться типы needle в haystack, а объекты должны быть одни и тем же экземпляром. </parameters>
<output>Возвращает ключ для needle, если он был найден в массиве, иначе FALSE. </output>
<errors></errors>
<example><?php
$array = array(0 => 'blue', 1 => 'red', 2 => 'green', 3 => 'red');
$key = array_search('green', $array); // $key = 2;
$key = array_search('red', $array);   // $key = 1;
?></example>
<example_result></example_result>
</object>

<object id=473> 
<name>imagecopymergegray</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Copy and merge part of an image with gray scale</short-description>
<description>bool imagecopymergegray ( resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h , int $pct ) 
 imagecopymergegray() copy a part of src_im onto dst_im starting at the x,y coordinates src_x, src_y with a width of src_w and a height of src_h. The portion defined will be copied onto the x,y coordinates, dst_x and dst_y. 
 This function is identical to imagecopymerge() except that when merging it preserves the hue of the source by converting the destination pixels to gray scale before the copy operation. </description>
<parameters>dst_im - Ресурс целевого изображения.
src_im - Ресурс исходного изображения.
dst_x - x-coordinate of destination point. 
dst_y - y-coordinate of destination point. 
src_x - x-coordinate of source point. 
src_y - y-coordinate of source point. 
src_w - Ширина исходного изображения.
src_h - Высота исходного изображения.
pct - The src_im will be changed to grayscale according to pct where 0 is fully grayscale and 100 is unchanged. When pct = 100 this function behaves identically to imagecopy() for pallete images, while it implements alpha transparency for true colour images. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Create image instances
$dest = imagecreatefromgif('php.gif');
$src = imagecreatefromgif('php.gif');
// Copy and merge - Gray = 20%
imagecopymergegray($dest, $src, 10, 10, 0, 0, 100, 47, 20);
// Output and free from memory
header('Content-Type: image/gif');
imagegif($dest);
imagedestroy($dest);
imagedestroy($src);
?></example>
<example_result></example_result>
</object>

<object id=474> 
<name>libxml_get_last_error</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Извлечение последней ошибки из libxml </short-description>
<description>LibXMLError libxml_get_last_error ( void ) 
 Извлечение последней ошибки из libxml. </description>
<parameters></parameters>
<output>Возвращает объект LibXMLError, если в буфере есть ошибки, либо FALSE в противном случае. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=475> 
<name>ocicloselob</name>
<versions>(PHP 4 >= 4.0.6, PECL OCI8 1.0)</versions>
<short-description>Псевдоним OCI-Lob::close()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=476> 
<name>odbc_result</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get result data</short-description>
<description>mixed odbc_result ( resource $result_id , mixed $field ) 
 Get result data </description>
<parameters>result_id - The ODBC resource. 
field - The field name being retrieved. It can either be an integer containing the column number of the field you want; or it can be a string containing the name of the field. </parameters>
<output>Returns the string contents of the field, FALSE on error, NULL for NULL data, or TRUE for binary data. </output>
<errors></errors>
<example><?php
$item_3   = odbc_result($Query_ID, 3);
$item_val = odbc_result($Query_ID, "val");
?></example>
<example_result></example_result>
</object>

<object id=477> 
<name>iptcembed</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Embeds binary IPTC data into a JPEG image</short-description>
<description>mixed iptcembed ( string $iptcdata , string $jpeg_file_name [, int $spool ] ) 
 Embeds binary IPTC data into a JPEG image. </description>
<parameters>iptcdata - The data to be written. 
jpeg_file_name - Path to the JPEG image. 
spool - Spool flag. If the spool flag is over 2 then the JPEG will be returned as a string. </parameters>
<output>If success and spool flag is lower than 2 then the JPEG will not be returned as a string, FALSE on errors. </output>
<errors></errors>
<example><?php
// iptc_make_tag() function by Thies C. Arntzen
function iptc_make_tag($rec, $data, $value)
{    $length = strlen($value);
    $retval = chr(0x1C) . chr($rec) . chr($data);
    if($length < 0x8000)
    {
        $retval .= chr($length >> 8) .  chr($length & 0xFF);
    }
    else
    {
        $retval .= chr(0x80) . 
                   chr(0x04) . 
                   chr(($length >> 24) & 0xFF) . 
                   chr(($length >> 16) & 0xFF) . 
                   chr(($length >> 8) & 0xFF) . 
                   chr($length & 0xFF);
    }
    return $retval . $value;
}
// Path to jpeg file
$path = './phplogo.jpg';
// We need to check if theres any IPTC data in the jpeg image. If there is then 
// bail out because we cannot embed any image that already has some IPTC data!
$image = getimagesize($path, $info);
if(isset($info['APP13']))
{    die('Error: IPTC data found in source image, cannot continue');
}
// Set the IPTC tags
$iptc = array(
    '2#120' => 'Test image',
    '2#116' => 'Copyright 2008-2009, The PHP Group'
);
// Convert the IPTC tags into binary code
$data = '';
foreach($iptc as $tag => $string)
{    $tag = substr($tag, 2);
    $data .= iptc_make_tag(2, $tag, $string);
}
// Embed the IPTC data
$content = iptcembed($data, $path);
// Write the new image data out to the file.
$fp = fopen($path, "wb");
fwrite($fp, $content);
fclose($fp);
?></example>
<example_result></example_result>
</object>

<object id=478> 
<name>ftp_systype</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает тип операционной системы FTP-сервера</short-description>
<description>string ftp_systype ( resource $ftp_stream ) 
 Возвращает тип операционной системы FTP-сервера. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером. </parameters>
<output>Возвращает тип операционной системы FTP-сервера, или FALSE при возникновении ошибки. </output>
<errors></errors>
<example><?php
// установка соединения
$ftp = ftp_connect('ftp.example.com');
ftp_login($ftp, 'user', 'password');
// получение типа системы
if ($type = ftp_systype($ftp)) {
    echo "example.com использует $type\n";
} else {
    echo "Не удалось определить тип системы";
}
?></example>
<example_result>
 
example.com использует UNIX
</example_result>
</object>

<object id=479> 
<name>ncurses_wattroff</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Turns off attributes for a window</short-description>
<description>int ncurses_wattroff ( resource $window , int $attrs ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>window - 
attrs - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=480> 
<name>chgrp</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Изменяет группу владельцев файла</short-description>
<description>bool chgrp ( string $filename , mixed $group ) 
 Осуществляет попытку смены группы файла filename на группу group. 
 Только суперпользователь может произвольно менять группу файла; остальные пользователи могут менять группу файла только на те группы, членами которых они являются. </description>
<parameters>filename - Путь к файлу. 
group - Название или номер группы. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$filename = 'shared_file.txt';
$format = "%s's Group ID @ %s: %d\n";
printf($format, $filename, date('r'), filegroup($filename));
chgrp($filename, 8);
clearstatcache(); // сбрасываем кэш filegroup()
printf($format, $filename, date('r'), filegroup($filename));
?></example>
<example_result></example_result>
</object>

<object id=481> 
<name>array_chunk</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Разбивает массив на части</short-description>
<description>array array_chunk ( array $input , int $size [, bool $preserve_keys = false ] ) 
 Разбивает массив на несколько частей размером size. Последний массив из полученных может содержать меньшее количество значений, чем указано в size. </description>
<parameters>input - Обрабатываемый массив 
size - Размер каждой части 
preserve_keys - Если установлено в TRUE, ключи оригинального массива будут сохранены. По умолчанию установлено в FALSE, что переиндексирует каждую часть с числовыми ключами </parameters>
<output>Возвращает многомерный массив с числовыми индексами, начинающимися с нуля, каждый элемент которого содержит size элементов из оригинального массива. </output>
<errors>Если size меньше 1, будет сгенерирована ошибка уровня E_WARNING и возвращен NULL. </errors>
<example><?php
$input_array = array('a', 'b', 'c', 'd', 'e');
print_r(array_chunk($input_array, 2));
print_r(array_chunk($input_array, 2, true));
?></example>
<example_result>
 
Array
(
    [0] => Array
        (
            [0] => a
            [1] => b
        )

    [1] => Array
        (
            [0] => c
            [1] => d
        )

    [2] => Array
        (
            [0] => e
        )

)
Array
(
    [0] => Array
        (
            [0] => a
            [1] => b
        )

    [1] => Array
        (
            [2] => c
            [3] => d
        )

    [2] => Array
        (
            [4] => e
        )

)
</example_result>
</object>

<object id=482> 
<name>PDF_get_fontsize</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Font handling [deprecated]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=483> 
<name>enchant_dict_quick_check</name>
<versions>(PHP 5 >= 5.3.0, PECL enchant:0.2.0-1.0.1)</versions>
<short-description>Check the word is correctly spelled and provide suggestions</short-description>
<description>bool enchant_dict_quick_check ( resource $dict , string $word [, array &$suggestions ] ) 
 If the word is correctly spelled return TRUE, otherwise return FALSE, if suggestions variable is provided, fill it with spelling alternatives. </description>
<parameters>dict - Dictionary resource 
word - The word to check 
suggestions - If the word is not correctly spelled, this variable will contain an array of suggestions. </parameters>
<output>Returns TRUE if the word is correctly spelled or FALSE </output>
<errors></errors>
<example><?php
$tag = 'en_US';
$r = enchant_broker_init();
if (enchant_broker_dict_exists($r,$tag)) {
    $d = enchant_broker_request_dict($r, $tag);
    enchant_dict_quick_check($d, 'soong', $suggs);
    print_r($suggs);
}?></example>
<example_result>
 
Array
(
    [0] => song
    [1] => snog
    [2] => soon
    [3] => Sang
    [4] => Sung
    [5] => sang
    [6] => sung
    [7] => sponge
    [8] => spongy
    [9] => snag
    [10] => snug
    [11] => sonic
    [12] => sing
    [13] => songs
    [14] => Son
    [15] => Sonja
    [16] => Synge
    [17] => son
    [18] => Sejong
    [19] => sarong
    [20] => sooner
    [21] => Sony
    [22] => sown
    [23] => scone
    [24] => song&#039;s
)
</example_result>
</object>

<object id=484> 
<name>hw_GetObject</name>
<versions>(PHP 4)</versions>
<short-description>Object record</short-description>
<description>mixed hw_getobject ( int $connection , mixed $objectID [, string $query ] ) 
 Gets an object record. If the second parameter is an array of integer the function will </description>
<parameters>connection - The connection identifier. 
objectID - The object identifier, or an array of identifiers. 
query - The query string has the following syntax: 
 <expr> ::= "(" <expr> ")" | "!" <expr> | /* NOT */ <expr> "||" <expr> | /* OR */ <expr> "&&" <expr> | /* AND */ <attribute> <operator> <value><attribute> ::= /* any attribute name (Title, Author, DocumentType ...) */<operator> ::= "=" | /* equal */ "<" | /* less than (string compare) */ ">" | /* greater than (string compare) */ "~" /* regular expression matching */ The query allows to further select certain objects from the list of given objects. Unlike the other query functions, this query may use not indexed attributes. How many object records are returned depends on the query and if access to the object is allowed. </parameters>
<output>Returns the object record for the given object ID if the second parameter is an integer. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=485> 
<name>socket_set_timeout</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним stream_set_timeout()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=486> 
<name>swf_definefont</name>
<versions>(PHP 4)</versions>
<short-description>Defines a font</short-description>
<description>void swf_definefont ( int $fontid , string $fontname ) 
 The swf_definefont() function defines a font parameter and gives it the specified id. It then sets the font given by fontname to the current font. </description>
<parameters>fontid - The id to be given to the font. 
fontname - The font so be set as current font. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=487> 
<name>XMLWriter::writeElement</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Записать полный тег элемента</short-description>
<description>bool XMLWriter::writeElement ( string $name [, string $content ] ) 
 Процедурный стиль bool xmlwriter_write_element ( resource $xmlwriter , string $name [, string $content ] )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
name - Имя элемента. 
content - Содержимое элемента. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=488> 
<name>w32api_register_function</name>
<versions>(PHP 4 >= 4.2.0)</versions>
<short-description>Registers function function_name from library with PHP</short-description>
<description>bool w32api_register_function ( string $library , string $function_name , string $return_type ) 
 This function tries to find the function_name function in library, and tries to import it into PHP. </description>
<parameters>library - The library name, as a string. 
function_name - The function name, as a string. 
return_type - The function will be registered with the given return_type. This type can be a generic PHP type, or a type defined with w32api_deftype(). All type names are case sensitive. Built in type names should be provided in lowercase. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=489> 
<name>ncurses_halfdelay</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Put terminal into halfdelay mode </short-description>
<description>int ncurses_halfdelay ( int $tenth ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>tenth - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=490> 
<name>mysql_info</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Возвращает информацию о последнем запросе</short-description>
<description>string mysql_info ([ resource $link_identifier ] ) 
 Возвращает подробную информацию о последнем запросе. </description>
<parameters>link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Возвращает информацию о запросе в случае успеха, или FALSE в случае ошибки. Смотрите пример ниже для каких запросов возвращается информация и как выглядят возвращаемые значения. Для неперечисленных запросов будет возвращено значение FALSE. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=491> 
<name>PDF_stroke</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Stroke path</short-description>
<description>bool PDF_stroke ( resource $p ) 
 Strokes the path with the current color and line width, and clear it. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=492> 
<name>asort</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сортирует массив, сохраняя ключи</short-description>
<description>bool asort ( array &$array [, int $sort_flags = SORT_REGULAR ] ) 
 Эта функция сортирует массив таким образом, что сохраняются отношения между ключами и значениями. Она полезна, в основном, при сортировке ассоциативных массивов, когда важно сохранить отношение ключ => значение. </description>
<parameters>array - Входной массив. 
sort_flags - Вы можете изменить поведение сортировки, используя дополнительный параметр sort_flags, подробнее см. sort(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$fruits = array("d" => "lemon", "a" => "orange", "b" => "banana", "c" => "apple");
asort($fruits);
foreach ($fruits as $key => $val) {
    echo "$key = $val\n";
}?></example>
<example_result>
 
c = apple
b = banana
d = lemon
a = orange
</example_result>
</object>

<object id=493> 
<name>posix_getgrgid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Return info about a group by group id</short-description>
<description>array posix_getgrgid ( int $gid ) 
 Gets information about a group provided its id. </description>
<parameters>gid - The group id. </parameters>
<output>The array elements returned are: The group information array Element Description name The name element contains the name of the group. This is a short, usually less than 16 character "handle" of the group, not the real, full name. passwd The passwd element contains the group&#039;s password in an encrypted format. Often, for example on a system employing "shadow" passwords, an asterisk is returned instead. gid Group ID, should be the same as the gid parameter used when calling the function, and hence redundant. members This consists of an array of string&#039;s for all the members in the group. </output>
<errors></errors>
<example><?php
$groupid   = posix_getegid();
$groupinfo = posix_getgrgid($groupid);
print_r($groupinfo);
?></example>
<example_result>
 
Array
(
    [name]    => toons
    [passwd]  => x
    [members] => Array
        (
            [0] => tom
            [1] => jerry
        )
    [gid]     => 42
)
</example_result>
</object>

<object id=494> 
<name>PDF_concat</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Concatenate a matrix to the CTM</short-description>
<description>bool PDF_concat ( resource $p , float $a , float $b , float $c , float $d , float $e , float $f ) 
 Concatenates a matrix to the current transformation matrix (CTM). Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=495> 
<name>log10</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Десятичный логарифм</short-description>
<description>float log10 ( float $arg ) 
 Возвращает десятичный логарифм arg. </description>
<parameters>arg - Входное значение </parameters>
<output>Десятичный логарифм arg </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=496> 
<name>imagefilledellipse</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Draw a filled ellipse</short-description>
<description>bool imagefilledellipse ( resource $image , int $cx , int $cy , int $width , int $height , int $color ) 
 Draws an ellipse centered at the specified coordinate on the given image. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
cx - x-coordinate of the center. 
cy - y-coordinate of the center. 
width - The ellipse width. 
height - The ellipse height. 
color - The fill color. A color identifier created with imagecolorallocate(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// create a blank image
$image = imagecreatetruecolor(400, 300);
// fill the background color
$bg = imagecolorallocate($image, 0, 0, 0);
// choose a color for the ellipse
$col_ellipse = imagecolorallocate($image, 255, 255, 255);
// draw the white ellipse
imagefilledellipse($image, 200, 150, 300, 200, $col_ellipse);
// output the picture
header("Content-type: image/png");
imagepng($image);
?></example>
<example_result></example_result>
</object>

<object id=497> 
<name>mysql_field_len</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает длину указанного поля</short-description>
<description>int mysql_field_len ( resource $result , int $field_offset ) 
 mysql_field_len() возвращает длину указанного поля. </description>
<parameters>result - Обрабатываемый результат запроса.Этот результат может быть получен с помощью функции mysql_query().
field_offset - Числовое смещение поля.field_offset начинается с 0. Еслиfield_offset не существует, генерируется ошибка уровняE_WARNING.</parameters>
<output>Длина указанного поля в случае успеха или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$result = mysql_query("SELECT id,email FROM people WHERE id = '42'");
if (!$result) {
    echo 'Не удалось выполнить запрос: ' . mysql_error();
    exit;
}
// Получит длину поля id так, как указано в структуре базы данных
$length = mysql_field_len($result, 0);
echo $length;
?></example>
<example_result></example_result>
</object>

<object id=498> 
<name>date_default_timezone_set</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Устанавливает временную зону по умолчанию для всех функций даты/времени в скрипте </short-description>
<description>bool date_default_timezone_set ( string $timezone_identifier ) 
 date_default_timezone_set() устанавливает временную зону по умолчанию для всех функций даты/времени в скрипте . 
 Замечание: 
 Начиная с версии PHP 5.1.0 (когда функции даты/времени были переписаны), вызов любой функции даты времени генерирует E_NOTICE, если временная зона имеет неверное значение, и/или E_WARNING, если используются системные параметры или переменная окружения TZ. 
 Вместо использования этой функции, Вы можете воспользоваться INI настройкой date.timezone для установки временной зоны по умолчанию. </description>
<parameters>timezone_identifier - Идентификатор временной зоны, как например UTC или Europe/Lisbon. Список поддерживаемых временных зон. </parameters>
<output>Функция возвращает FALSE, если timezone_identifier имеет неверное значение, в остальных случаях TRUE. </output>
<errors></errors>
<example><?php
date_default_timezone_set('America/Los_Angeles');
$script_tz = date_default_timezone_get();
if (strcmp($script_tz, ini_get('date.timezone'))){
    echo 'Временная зона скрипта отличается от заданной в INI-файле.';
} else {
    echo 'Временные зоны скрипта и настройки INI-файла совпадают.';
}?></example>
<example_result></example_result>
</object>

<object id=499> 
<name>imagegrabscreen</name>
<versions>(PHP 5 >= 5.2.2)</versions>
<short-description>Captures the whole screen</short-description>
<description>resource imagegrabscreen ( void ) 
 Grabs a screenshot of the whole screen. </description>
<parameters></parameters>
<output>Returns an image resource identifier on success, FALSE on failure. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=500> 
<name>xslt_process</name>
<versions>(PHP 4 >= 4.0.3)</versions>
<short-description>Запуск XSLT преобразования </short-description>
<description>mixed xslt_process ( resource $xh , string $xmlcontainer , string $xslcontainer [, string $resultcontainer [, array $arguments [, array $parameters ]]] ) 
 xslt_process() - главная функция расширения XSLT. Она позволяет применить XSLT преобразование практически к любому типу входных данных - контейнеров. Это возможно, благодаря использованию буферов аргументов - концепция, взятая из Sablotron XSLT процессора (на данный момент это расширение поддерживает только XSLT процессор). По умолчанию, контейнеры - файлы содержащие документ для преобразования. </description>
<parameters>xh - Ресурс XSLT-процессора, возвращаемый функцией xslt_create(). 
xmlcontainer - Путь к XML файлу или псевдопеременная для XML аргумента. 
xslcontainer - Путь к XSL файлу или псевдопеременная для XML аргумента. 
resultcontainer - Контейнер для результата. По умолчанию, это имя файла для записи преобразованного документа. Если не задано - то есть NULL - то результат будет возвращен из функции. 
arguments - Вместо явного указания аргументов XML и XSLT в функции xslt_process() можно задать "псевдопеременные", которые будут заменяться значениями из отдельного массива аргументов arguments. 
parameters - Массив параметров, которые будут передаваться в XSLT-документ. Доступ к этим параметрам из XSL файлов можно получить, используя инструкцию <xsl:param name="имя_параметра">. Параметры должны быть закодированы в UTF-8, а их значения будут интерпретированы Sablotron процессором, как символьные строки. Другими словами, нельзя передавать узлы и поддеревья в качестве параметров в XSLT документ. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. Если контейнер для результата не задан - т.е. NULL - будет возвращен результат преобразования. </output>
<errors></errors>
<example><?php
// Создание нового XSLT процессора
$xh = xslt_create();
// Преобразование документа
if (xslt_process($xh, 'sample.xml', 'sample.xsl', 'result.xml')) {
    echo "УСПЕХ, sample.xml преобразован в соответствии с sample.xsl в result.xml";
    echo ", содержимое result.xml:\n<br />\n";
    echo "<pre>\n";
    readfile('result.xml');
    echo "</pre>\n";
} else {
    echo "К сожалению, sample.xml не может быть преобразован в соответсвии с sample.xsl в";
    echo "  result.xml по следующей причине: " . xslt_error($xh) . ", код ошибки: ";
    echo xslt_errno($xh);
}
xslt_free($xh);
?></example>
<example_result>
 
Моя PHP переменная : test<br>
Мой набор узлов : <foo>bar</foo>
</example_result>
</object>

<object id=501> 
<name>swf_actiongeturl</name>
<versions>(PHP 4)</versions>
<short-description>Get a URL from a Shockwave Flash movie</short-description>
<description>void swf_actiongeturl ( string $url , string $target ) 
 Gets the URL specified by the parameter url with the given target. </description>
<parameters>url - The URL, as a string. 
target - The target, as a string. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=502> 
<name>fbsql_db_status</name>
<versions>(PHP 4 >= 4.0.7, PHP 5)</versions>
<short-description>Get the status for a given database</short-description>
<description>int fbsql_db_status ( string $database_name [, resource $link_identifier ] ) 
 Gets the current status of the specified database. </description>
<parameters>database_name - The database name. 
link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Returns an integer value with the current status. This can be one of the following constants: FALSE - The exec handler for the host was invalid. This error will occur when the link_identifier connects directly to a database by using a port number. FBExec can be available on the server but no connection has been made for it. FBSQL_UNKNOWN - The Status is unknown. FBSQL_STOPPED - The database is not running. Use fbsql_start_db() to start the database. FBSQL_STARTING - The database is starting. FBSQL_RUNNING - The database is running and can be used to perform SQL operations. FBSQL_STOPPING - The database is stopping. FBSQL_NOEXEC - FBExec is not running on the server and it is not possible to get the status of the database. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=503> 
<name>oci_connect</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Устанавливает соединение с базой данных Oracle</short-description>
<description>resource oci_connect ( string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]] ) 
 Возвращает идентификатор соединения, который используется большинством функций данного модуля. 
 См. Управление соединением для более детальной информации по управлению соединениями. 
 Начиная с PHP 5.1.2 (PECL OCI8 1.1) функция oci_close() может использоваться для завершения соединения. 
 Второй и последующие вызовы функции oci_connect() с теми же параметрами вернут идентификатор уже открытого соединения. Это означает, что транзакции используют одно и то же базовое соединение с базой данных. При необходимости разделения транзакций рекомендуется использовать функцию oci_new_connect(). </description>
<parameters>username - Имя пользователя Oracle. 
password - Пароль username. 
connection_string - Содержитэкземпляр Oracle для подключения. Это может быть&raquo; Easy Connect string, или Connect Name из файлаtnsnames.ora, или имя локального экземпляра Oracle.
character_set - Определяет кодировку, используемую клиентскимибиблиотеками Oracle. Данная кодировка не обязательно должна совпадать с кодировкой, используемой в самой базе данных.Если она не совпадает, Oracle сделает все возможное для конвертирования данных из- и в данную кодировку.В зависимости от используемых кодировок это может не всегда давать приемлемые результаты. Преобразование такжесоздает некоторые дополнительные временные затраты.
session_mode - Этот параметрдоступен начиная с версии PHP 5 (PECL OCI8 1.1) и принимает следующие значения:OCI_DEFAULT,OCI_SYSOPER и OCI_SYSDBA.Если были указаны OCI_SYSOPER илиOCI_SYSDBA, данная функция попытается установить привилегированное соединение, используя внешниеданные авторизации.По умолчанию привилегированные соединения отключены. Чтобы их включить, необходимо установитьoci8.privileged_connectв On.</parameters>
<output>Возвращает идентификатор соединения или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
// Подключается к XE сервису (т.е. к базе данных) на "localhost"
$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $e = oci_error();
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}
$stid = oci_parse($conn, 'SELECT * FROM employees');
oci_execute($stid);
echo "<table border='1'>\n";
while ($row = oci_fetch_array($stid, OCI_ASSOC+OCI_RETURN_NULLS)) {
    echo "<tr>\n";
    foreach ($row as $item) {
        echo "    <td>" . ($item !== null ? htmlentities($item, ENT_QUOTES) : "") . "</td>\n";
    }
    echo "</tr>\n";
}echo "</table>\n";
?></example>
<example_result></example_result>
</object>

<object id=504> 
<name>xslt_set_sax_handler</name>
<versions>(PHP 4 >= 4.0.3)</versions>
<short-description>Задает SAX обработчик для XSLT-процессора </short-description>
<description>void xslt_set_sax_handler ( resource $xh , array $handlers ) 
 Задает SAX обработчики для заданного XSLT-процессора xh. </description>
<parameters>xh - Идентификатор ссылки на XSLT-процессор, созданный функцией xslt_create(). 
handlers - SAX обработчики должны быть двумерным массивом с определенным форматом (элементы верхнего уровня являются необязательными): 
 array(
[document] =>
 array(
 обработчик начала документа,
 обработчик окончания документа
 ),
[element] =>
 array(
 обработчик начала элемента,
 обработчик окончания элемента
 ),
[namespace] =>
 array(
 обработчик начала пространства имен,
 обработчик окончания пространства имен
 ),
[comment] => обработчик комментария,
[pi] => обработчик PI,
[character] => обработчик символьных данных
)
 </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result>
 
array(
[document] =>
    array(
        обработчик начала документа,
        обработчик окончания документа
    ),
[element] =>
    array(
        обработчик начала элемента,
        обработчик окончания элемента
    ),
[namespace] =>
    array(
        обработчик начала пространства имен,
        обработчик окончания пространства имен
    ),
[comment] => обработчик комментария,
[pi] => обработчик PI,
[character] => обработчик символьных данных
)
</example_result>
</object>

<object id=505> 
<name>imap_setflag_full</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Sets flags on messages</short-description>
<description>bool imap_setflag_full ( resource $imap_stream , string $sequence , string $flag [, int $options = NIL ] ) 
 Causes a store to add the specified flag to the flags set for the messages in the specified sequence. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
sequence - A sequence of message numbers. You can enumerate desired messages with the X,Y syntax, or retrieve all messages within an interval with the X:Y syntax 
flag - The flags which you can set are \Seen, \Answered, \Flagged, \Deleted, and \Draft as defined by &raquo; RFC2060. 
options - A bit mask that may contain the single option: ST_UID - The sequence argument contains UIDs instead of sequence numbers </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$mbox = imap_open("{imap.example.org:143}", "username", "password")
     or die("can't connect: " . imap_last_error());
$status = imap_setflag_full($mbox, "2,5", "\\Seen \\Flagged");
echo gettype($status) . "\n";
echo $status . "\n";
imap_close($mbox);
?></example>
<example_result></example_result>
</object>

<object id=506> 
<name>xslt_set_encoding</name>
<versions>(PHP 4 >= 4.0.5)</versions>
<short-description>Задание кодировки для разбора XML документов </short-description>
<description>void xslt_set_encoding ( resource $xh , string $encoding ) 
 Задает кодировку результата XSLT преобразований. При использовании для XSLT преобразований серверного приложения Sablotron эта настройка будет доступна, если Sablotron компилировался с поддержкой кодировок. </description>
<parameters>xh - Идентификатор ссылки на XSLT-процессор, созданный функцией xslt_create(). 
encoding - Кодировка результата, например iso-8859-1. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=507> 
<name>mcrypt_module_is_block_mode</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Returns if the specified mode outputs blocks or not</short-description>
<description>bool mcrypt_module_is_block_mode ( string $mode [, string $lib_dir ] ) 
 This function returns TRUE if the mode outputs blocks of bytes or FALSE if it outputs just bytes. (e.g. TRUE for cbc and ecb, and FALSE for cfb and stream). </description>
<parameters>mode - The mode to check. 
lib_dir - The optional lib_dir parameter can contain the location where the algorithm module is on the system. </parameters>
<output>This function returns TRUE if the mode outputs blocks of bytes or FALSE if it outputs just bytes. (e.g. TRUE for cbc and ecb, and FALSE for cfb and stream). </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=508> 
<name>posix_getpid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Return the current process identifier</short-description>
<description>int posix_getpid ( void ) 
 Return the process identifier of the current process. </description>
<parameters></parameters>
<output>Returns the identifier, as an integer. </output>
<errors></errors>
<example><?php
echo posix_getpid(); //8805
?></example>
<example_result></example_result>
</object>

<object id=509> 
<name>m_verifysslcert</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Set whether or not to verify the server ssl certificate</short-description>
<description>bool m_verifysslcert ( resource $conn , int $tf ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
tf - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=510> 
<name>socket_sendto</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Sends a message to a socket, whether it is connected or not </short-description>
<description>int socket_sendto ( resource $socket , string $buf , int $len , int $flags , string $addr [, int $port = 0 ] ) 
 The function socket_sendto() sends len bytes from buf through the socket socket to the port at the address addr. </description>
<parameters>socket - A valid socket resource created using socket_create(). 
buf - The sent data will be taken from buffer buf. 
len - len bytes from buf will be sent. 
flags - The value of flags can be any combination of the following flags, joined with the binary OR (|) operator. Possible values for flags MSG_OOB Send OOB (out-of-band) data. MSG_EOR Indicate a record mark. The sent data completes the record. MSG_EOF Close the sender side of the socket and include an appropriate notification of this at the end of the sent data. The sent data completes the transaction. MSG_DONTROUTE Bypass routing, use direct interface. 
addr - IP address of the remote host. 
port - port is the remote port number at which the data will be sent. </parameters>
<output>socket_sendto() returns the number of bytes sent to the remote host, or FALSE if an error occurred. </output>
<errors></errors>
<example><?php
    $sock = socket_create(AF_INET, SOCK_DGRAM, SOL_UDP);
    $msg = "Ping !";
    $len = strlen($msg);
    socket_sendto($sock, $msg, $len, 0, '127.0.0.1', 1223);
    socket_close($sock);
?></example>
<example_result></example_result>
</object>

<object id=511> 
<name>pg_transaction_status</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Возвращает текущее состояние транзакции на сервере </short-description>
<description>int pg_transaction_status ( resource $connection ) 
 Возвращает текущее состояние транзакции на сервере. Предостережение 
 pg_transaction_status() выдает некорректный результат при работе с сервером PostgreSQL 7.3, на котором выключена опция autocommit. Автоматическое завершение транзакций на стороне сервера устарело и не используется в более поздних версиях. </description>
<parameters>connection - Ресурс соединения с базой данных PostgreSQL. </parameters>
<output>Список возможных состояний: PGSQL_TRANSACTION_IDLE (сервер бездействует), PGSQL_TRANSACTION_ACTIVE (выполняется запрос), PGSQL_TRANSACTION_INTRANS (сервер бездействует, работа в режиме транзакции), или PGSQL_TRANSACTION_INERROR (сервер бездействует, транзакция потерпела неудачу). PGSQL_TRANSACTION_UNKNOWN - ошибка подключения. PGSQL_TRANSACTION_ACTIVE возвращается только когда запрос уже отправлен на сервер, но еще не обработан. </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Подключиться не удалось");
  $stat = pg_transaction_status($dbconn);
  if ($stat === PGSQL_TRANSACTION_UNKNOWN) {
      echo 'Соединение не удалось';
  } else if ($stat === PGSQL_TRANSACTION_IDLE) {
      echo 'Соединение свободно и простаивает';
  } else {
      echo 'Соединение в режиме транзакции';
  }    
?></example>
<example_result></example_result>
</object>

<object id=512> 
<name>class_parents</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Return the parent classes of the given class </short-description>
<description>array class_parents ( mixed $class [, bool $autoload = true ] ) 
 This function returns an array with the name of the parent classes of the given class. </description>
<parameters>class - An object (class instance) or a string (class name). 
autoload - Whether to allow this function to load the class automatically through the __autoload() magic method. </parameters>
<output>An array on success, or FALSE on error. </output>
<errors></errors>
<example><?php
class foo { }
class bar extends foo {}
print_r(class_parents(new bar));
// since PHP 5.1.0 you may also specify the parameter as a string
print_r(class_parents('bar'));

function __autoload($class_name) {
   require_once $class_name . '.php';
}
// use __autoload to load the 'not_loaded' class
print_r(class_parents('not_loaded', true));
?></example>
<example_result>
 
Array
(
    [foo] => foo
)

Array
(
    [parent_of_not_loaded] => parent_of_not_loaded
)
</example_result>
</object>

<object id=513> 
<name>swf_perspective</name>
<versions>(PHP 4)</versions>
<short-description>Define a perspective projection transformation</short-description>
<description>void swf_perspective ( float $fovy , float $aspect , float $near , float $far ) 
 Defines a perspective projection transformation. 
 Замечание: 
 Various distortion artifacts may appear when performing a perspective projection, this is because Flash players only have a two dimensional matrix. Some are not to pretty. </description>
<parameters>fovy - A field-of-view angle in the y direction. 
aspect - The aspect ratio of the viewport that is being drawn onto. 
near - The near clipping plane. 
far - The far clipping plane. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=514> 
<name>swf_definebitmap</name>
<versions>(PHP 4)</versions>
<short-description>Define a bitmap</short-description>
<description>void swf_definebitmap ( int $objid , string $image_name ) 
 The swf_definebitmap() function defines a bitmap given an image. </description>
<parameters>objid - An SWF object id. 
image_name - A GIF, JPEG, RGB or FI image. The image will be converted into a Flash JPEG or Flash color map format. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=515> 
<name>posix_getrlimit</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Return info about system resource limits</short-description>
<description>array posix_getrlimit ( void ) 
 posix_getrlimit() returns an array of information about the current resource&#039;s soft and hard limits. 
 Each resource has an associated soft and hard limit. The soft limit is the value that the kernel enforces for the corresponding resource. The hard limit acts as a ceiling for the soft limit. An unprivileged process may only set its soft limit to a value from 0 to the hard limit, and irreversibly lower its hard limit. </description>
<parameters></parameters>
<output>Returns an associative array of elements for each limit that is defined. Each limit has a soft and a hard limit. List of possible limits returned Limit name Limit description core The maximum size of the core file. When 0, not core files are created. When core files are larger than this size, they will be truncated at this size. totalmem The maximum size of the memory of the process, in bytes. virtualmem The maximum size of the virtual memory for the process, in bytes. data The maximum size of the data segment for the process, in bytes. stack The maximum size of the process stack, in bytes. rss The maximum number of virtual pages resident in RAM maxproc The maximum number of processes that can be created for the real user ID of the calling process. memlock The maximum number of bytes of memory that may be locked into RAM. cpu The amount of time the process is allowed to use the CPU. filesize The maximum size of the data segment for the process, in bytes. openfiles One more than the maximum number of open file descriptors. </output>
<errors></errors>
<example><?php
$limits = posix_getrlimit();
print_r($limits);
?></example>
<example_result>
 
Array
(
    [soft core] => 0
    [hard core] => unlimited
    [soft data] => unlimited
    [hard data] => unlimited
    [soft stack] => 8388608
    [hard stack] => unlimited
    [soft totalmem] => unlimited
    [hard totalmem] => unlimited
    [soft rss] => unlimited
    [hard rss] => unlimited
    [soft maxproc] => unlimited
    [hard maxproc] => unlimited
    [soft memlock] => unlimited
    [hard memlock] => unlimited
    [soft cpu] => unlimited
    [hard cpu] => unlimited
    [soft filesize] => unlimited
    [hard filesize] => unlimited
    [soft openfiles] => 1024
    [hard openfiles] => 1024
)
</example_result>
</object>

<object id=516> 
<name>dbase_replace_record</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Заменяет запись в базе данных</short-description>
<description>bool dbase_replace_record ( int $dbase_identifier , array $record , int $record_number ) 
 Заменяет данную запись в базе данных на заданные значения. </description>
<parameters>dbase_identifier - Идентификатор базы данных, возвращаемый функцией dbase_open() или dbase_create(). 
record - Индексированный массив данных. Количество элементов должно быть равно количеству полей в базе данных, в противном случае вызов dbase_replace_record() не удастся. 
record_number - Целое число, которое может быть в диапазоне от 1 до числа записей в базе данных (которое вернула функция dbase_numrecords()). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// откроем в режиме чтения и записи
$db = dbase_open('/tmp/test.dbf', 2);
if ($db) {
  // получим старую запись
  $row = dbase_get_record_with_names($db, 1);
  
  // сбросим пометку 'deleted' 
  unset($row['deleted']);
  
  // Установим в поле даты текущую дату
  $row['date'] = date('Ymd');
  
  // Заменим запись
  dbase_replace_record($db, $row, 1);
  dbase_close($db);
}
?></example>
<example_result></example_result>
</object>

<object id=517> 
<name>fbsql_read_clob</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Read a CLOB from the database</short-description>
<description>string fbsql_read_clob ( string $clob_handle [, resource $link_identifier ] ) 
 Reads CLOB data from the database. 
 If a select statement contains BLOB and/or CLOB columns FrontBase will return the data directly when data is fetched. This default behavior can be changed with fbsql_set_lob_mode() so the fetch functions will return handles to BLOB and CLOB data. If a handle is fetched a user must call fbsql_read_clob() to get the actual CLOB data from the database. </description>
<parameters>clob_handle - A CLOB handle, returned by fbsql_create_clob(). 
link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Returns a string containing the specified CLOB data. </output>
<errors></errors>
<example><?php
$link = fbsql_pconnect("localhost", "_SYSTEM", "secret")
    or die("Could not connect");
$sql = "SELECT CLOB_COLUMN FROM CLOB_TABLE;";
$rs = fbsql_query($sql, $link);
$row_data = fbsql_fetch_row($rs);
// $row_data[0] will now contain the clob data for the first row
fbsql_free_result($rs);
$rs = fbsql_query($sql, $link);
fbsql_set_lob_mode($rs, FBSQL_LOB_HANDLE);
$row_data = fbsql_fetch_row($rs);
// $row_data[0] will now contain a handle to the CLOB data in the first row
$clob_data = fbsql_read_clob($row_data[0]);
fbsql_free_result($rs);
?></example>
<example_result></example_result>
</object>

<object id=518> 
<name>nsapi_request_headers</name>
<versions>(PHP 4 >= 4.3.3, PHP 5)</versions>
<short-description>Fetch all HTTP request headers</short-description>
<description>array nsapi_request_headers ( void ) 
 nsapi_request_headers() gets all the HTTP headers in the current request. This is only supported when PHP runs as a NSAPI module. 
 Замечание: 
 Prior to PHP 4.3.3, getallheaders() was only available for the Apache servers. After PHP 4.3.3, getallheaders() is an alias for nsapi_request_headers() if you use the NSAPI module. 
 Замечание: 
 You can also get at the value of the common CGI variables by reading them from the $_SERVER superglobal, which works whether or not you are using PHP as a NSAPI module. </description>
<parameters></parameters>
<output>Returns an associative array with all the HTTP headers. </output>
<errors></errors>
<example><?php
$headers = nsapi_request_headers();
foreach ($headers as $header => $value) {
  echo "$header: $value <br />\n";
}?></example>
<example_result></example_result>
</object>

<object id=519> 
<name>stream_get_transports</name>
<versions>(PHP 5)</versions>
<short-description>Возвращает список зарегистрированных транспортов сокета</short-description>
<description>array stream_get_transports ( void ) 
 Возвращает индексированный массив, содержащий названия всех транспортов сокета, доступных на работающей системе. </description>
<parameters></parameters>
<output>Возвращает индексированный массив названий транспортов сокета. </output>
<errors></errors>
<example><?php
$xportlist = stream_get_transports();
print_r($xportlist);
?></example>
<example_result>
 
Array (
  [0] => tcp
  [1] => udp
  [2] => unix
  [3] => udg
)
</example_result>
</object>

<object id=520> 
<name>escapeshellcmd</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Экранирует метасимволы командной строки</short-description>
<description>string escapeshellcmd ( string $command ) 
 Команда escapeshellcmd() экранирует любые символы в строке, которые могут быть использованы для обмана шелл-команд при выполнении произвольных команд. Эта функция должна быть использована для того, чтобы убедиться, что любые данные, вводимые пользователем, экранированы перед передачей их функции exec() или system(), или оператору "обратный апостроф". 
 Следующие символы будут экранированы при помощи обратного слэша: #&;`|*?~<>^()[]{}$\, \x0A и \xFF. Символы &#039; и " экранируются только в том случае, если они встречаются не попарно. В Windows все эти символы и % заменяются пробелом. </description>
<parameters>command - Команда, которая будет экранирована. </parameters>
<output>Экранированая строка. </output>
<errors></errors>
<example><?php
// Мы допускаем здесь произвольное количество аргументов умышленно.
$command = './configure '.$_POST['configure_options'];
$escaped_command = escapeshellcmd($command);
 
system($escaped_command);
?></example>
<example_result></example_result>
</object>

<object id=521> 
<name>bindec</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Двоичное в десятичное</short-description>
<description>number bindec ( string $binary_string ) 
 Возвращает десятичный эквивалент двоичного числа binary_string. 
 bindec() преобразует двоичное число в integer или, если необходимо по причинам размера, в float. 
 bindec() интерпетирует значения binary_string как беззнаковое число. Так как bindec() воспринимает старший бит как еще один порядок величины, а не знаковый бит. </description>
<parameters>binary_string - Бинарная строка для преобразования </parameters>
<output>Десятичное значение binary_string </output>
<errors></errors>
<example><?php
echo bindec('110011') . "\n";
echo bindec('000110011') . "\n";
echo bindec('111');
?></example>
<example_result>
 
51
51
7
</example_result>
</object>

<object id=522> 
<name>ifx_fieldtypes</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>List of Informix SQL fields</short-description>
<description>array ifx_fieldtypes ( resource $result_id ) 
 Returns an associative array with fieldnames as key and the SQL fieldtypes as data for the query associated with result_id. </description>
<parameters>result_id - result_id is a valid resultid returned by ifx_query() or ifx_prepare() (select type queries only!). </parameters>
<output>Returns an associative array with fieldnames as key and the SQL fieldtypes as data for query with result_id. Returns FALSE on error. </output>
<errors></errors>
<example><?php
$types = ifx_fieldtypes($resultid);
if (is_array($types)) {
    foreach ($types as $fname => $val) {
        echo "$fname:\t type = $val\n";
    }
}?></example>
<example_result></example_result>
</object>

<object id=523> 
<name>pg_set_client_encoding</name>
<versions>(PHP 4 >= 4.0.3, PHP 5)</versions>
<short-description>Устанавливает клиентскую кодировку </short-description>
<description>int pg_set_client_encoding ([ resource $connection ], string $encoding ) 
 pg_set_client_encoding() устанавливает клиентскую кодировку и возвращает 0 при успехе, -1 в случае ошибки. 
 PostgreSQL автоматически конвертирует данные из кодировки базы данных в кодировку клиентского приложения. 
 Замечание: 
 Прежнее название функции: pg_setclientencoding(). </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). 
encoding - Требуемая клиентская кодировка. Список возможных значений: SQL_ASCII, EUC_JP, EUC_CN, EUC_KR, EUC_TW, UNICODE, MULE_INTERNAL, LATINX (X=1...9), KOI8, WIN, ALT, SJIS, BIG5 or WIN1250. </parameters>
<output>Возвращает 0 в случае успеха, либо -1 в случае ошибки. </output>
<errors></errors>
<example><?php
$conn = pg_pconnect("dbname=publisher");
if (!$conn) {
  echo "Произошла ошибка.\n";
  exit;
}
// Установка кодировки в UNICODE. Данные будут автоматически 
// преобразованы из кодировки в базе данных к клиентской.
pg_set_client_encoding($conn, "UNICODE");
$result = pg_query($conn, "SELECT author, email FROM authors");
if (!$result) {
  echo "Произошла ошибка.\n";
  exit;
}
// Выводим UTF-8 данные
while ($row = pg_fetch_row($result)) {
  echo "Author: $row[0]  E-mail: $row[1]";
  echo "<br />\n";
} 
?></example>
<example_result></example_result>
</object>

<object id=524> 
<name>xml_set_end_namespace_decl_handler</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Установка обработчика выхода за пределы пространства имен </short-description>
<description>bool xml_set_end_namespace_decl_handler ( resource $parser , callback $handler ) 
 Задает обработчик, который вызывается при выходе за пределы объявления пространства имен. Этот обработчик будет вызываться для каждого объявления пространства имен после того как отработает обработчик окончания элемента, в котором это пространство имен было объявлено. </description>
<parameters>parser - Ссылка на XML анализатор. 
handler - handler - строка содержащая имя функции, которая должна быть определена на момент вызова функции xml_parse() из анализатора parser. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=525> 
<name>variant_round</name>
<versions>(PHP 5)</versions>
<short-description>Rounds a variant to the specified number of decimal places</short-description>
<description>mixed variant_round ( mixed $variant , int $decimals ) 
 Returns the value of variant rounded to decimals decimal places. </description>
<parameters>variant - The variant. 
decimals - Number of decimal places. </parameters>
<output>Returns the rounded value. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=526> 
<name>mysqli_slave_query</name>
<versions>(PHP 5)</versions>
<short-description>Force execution of a query on a slave in a master/slave setup</short-description>
<description>bool mysqli_slave_query ( mysqli $link , string $query ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=527> 
<name>ncurses_wstandend</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>End standout mode for a window</short-description>
<description>int ncurses_wstandend ( resource $window ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>window - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=528> 
<name>iconv_get_encoding</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Получает текущее значение настроек преобразования кодировок</short-description>
<description>mixed iconv_get_encoding ([ string $type = "all" ] ) 
 Возвращает внутренние параметры конфигурации расширения iconv. </description>
<parameters>type - Возможные значения необязательного параметра type: all input_encoding output_encoding internal_encoding </parameters>
<output>Возвращает текущее значение указанной переменной и FALSE в случае ошибки. </output>
<errors></errors>
<example><pre>
<?php
iconv_set_encoding("internal_encoding", "UTF-8");
iconv_set_encoding("input_encoding", "WINDOWS-1251");
iconv_set_encoding("output_encoding", "KOI8-U");
var_dump(iconv_get_encoding('all'));
?>
</pre></example>
<example_result>
 
Array
(
    [input_encoding] => WINDOWS-1251
    [output_encoding] => KOI8-U
    [internal_encoding] => UTF-8
)

</example_result>
</object>

<object id=529> 
<name>is_numeric</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Проверяет, является ли переменная числом или строкой, содержащей число </short-description>
<description>bool is_numeric ( mixed $var ) 
 Проверяет, является ли данная переменная числом. Строки, содержащие числа, состоят из необязательного знака, любого количества цифр, необязательной десятичной части и необязательной экспоненциальной части. Так, +0123.45e6 является верным числовым значением. Шестнадцатеричная запись (0xFF) также допускается, но только без знака, десятичной и экспоненциальной части. </description>
<parameters>var - Проверяемая переменная. </parameters>
<output>Возвращает TRUE, если var является числом или строкой, содержащей число, в противном случае возвращается FALSE. </output>
<errors></errors>
<example><?php
$tests = array(
    "42", 
    1337, 
    "1e4", 
    "not numeric", 
    array(), 
    9.1
);
foreach ($tests as $element) {
    if (is_numeric($element)) {
        echo "'{$element}' - число", PHP_EOL;
    } else {
        echo "'{$element}' - НЕ число", PHP_EOL;
    }
}?></example>
<example_result>
 
&#039;42&#039; - число
&#039;1337&#039; - число
&#039;1e4&#039; - число
&#039;not numeric&#039; - НЕ число
&#039;Array&#039; - НЕ число
&#039;9.1&#039; - число
</example_result>
</object>

<object id=530> 
<name>PDF_setpolydash</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Set complicated dash pattern [deprecated]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=531> 
<name>ncurses_getyx</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Returns the current cursor position for a window</short-description>
<description>void ncurses_getyx ( resource $window , int &$y , int &$x ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>window - 
y - 
x - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=532> 
<name>PDF_set_char_spacing</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set character spacing [deprecated]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=533> 
<name>swf_fontsize</name>
<versions>(PHP 4)</versions>
<short-description>Change the font size</short-description>
<description>void swf_fontsize ( float $size ) 
 Changes the font size to the value given by the size parameter. </description>
<parameters>size - The font size, as an integer. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=534> 
<name>ftp_mdtm</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает время последней модификации файла</short-description>
<description>int ftp_mdtm ( resource $ftp_stream , string $remote_file ) 
 ftp_mdtm() возвращает время последней модификации удалённого файла. 
 Замечание: 
 Не все серверы поддерживают эту функцию! 
 Замечание: 
 ftp_mdtm() не работает с директориями. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP сервером 
remote_file - Файл, время модификации которого надо получить. </parameters>
<output>Возвращает время последней модификации виде временной метки Unix или -1 в случае ошибки. </output>
<errors></errors>
<example><?php
$file = 'somefile.txt';
// установка соединения
$conn_id = ftp_connect($ftp_server);
// вход с именем пользователя и паролем
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);
//  получение времени модификации файла
$buff = ftp_mdtm($conn_id, $file);
if ($buff != -1) {
    // дата последней модификации somefile.txt : March 26 2003 14:16:41.
    echo "дата последней модификации $file : " . date("F d Y H:i:s.", $buff);
} else {
    echo "Не удалось выполнить mdtime";
}
// закрытие соединения
ftp_close($conn_id);
?></example>
<example_result></example_result>
</object>

<object id=535> 
<name>ncurses_wborder</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Draws a border around the window using attributed characters</short-description>
<description>int ncurses_wborder ( resource $window , int $left , int $right , int $top , int $bottom , int $tl_corner , int $tr_corner , int $bl_corner , int $br_corner ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>window - The window on which we operate 
left - 
right - 
top - 
bottom - 
tl_corner - Top left corner 
tr_corner - Top right corner 
bl_corner - Bottom left corner 
br_corner - Bottom right corner </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=536> 
<name>readline_read_history</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Reads the history</short-description>
<description>bool readline_read_history ([ string $filename ] ) 
 This function reads a command history from a file. </description>
<parameters>filename - Path to the filename containing the command history. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=537> 
<name>swf_textwidth</name>
<versions>(PHP 4)</versions>
<short-description>Get the width of a string</short-description>
<description>float swf_textwidth ( string $str ) 
 Gives the width of the string in pixels, using the current font and font size. </description>
<parameters>str - The string. </parameters>
<output>Returns the line width, as a float. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=538> 
<name>wddx_add_vars</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Add variables to a WDDX packet with the specified ID</short-description>
<description>bool wddx_add_vars ( resource $packet_id , mixed $var_name [, mixed $... ] ) 
 Serializes the passed variables and add the result to the given packet. </description>
<parameters>packet_id - A WDDX packet, returned by wddx_packet_start(). 
var_name - Can be either a string naming a variable or an array containing strings naming the variables or another array, etc. 
... - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=539> 
<name>imageconvolution</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Apply a 3x3 convolution matrix, using coefficient and offset</short-description>
<description>bool imageconvolution ( resource $image , array $matrix , float $div , float $offset ) 
 Applies a convolution matrix on the image, using the given coefficient and offset. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
matrix - A 3x3 matrix: an array of three arrays of three floats. 
div - The divisor of the result of the convolution, used for normalization. 
offset - Color offset. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$image = imagecreatefromgif('http://www.php.net/images/php.gif');
$emboss = array(array(2, 0, 0), array(0, -1, 0), array(0, 0, -1));
imageconvolution($image, $emboss, 1, 127);
header('Content-Type: image/png');
imagepng($image, null, 9);
?></example>
<example_result></example_result>
</object>

<object id=540> 
<name>method_exists</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Проверяет, существует ли метод в данном классе</short-description>
<description>bool method_exists ( mixed $object , string $method_name ) 
 Проверяет, существует ли метод класса, в указанном объекте object. </description>
<parameters>object - Экземпляр объекта или имя класса 
method_name - Имя метода </parameters>
<output>Возвращает TRUE, если метод method_name определен для указанного объекта object, иначе возвращает FALSE. </output>
<errors></errors>
<example><?php
$directory = new Directory('.');
var_dump(method_exists($directory,'read'));
?></example>
<example_result>
 
bool(true)
</example_result>
</object>

<object id=541> 
<name>mb_ereg_replace</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Осуществляет замену по регулярному выражению с поддержкой многобайтовых символов</short-description>
<description>string mb_ereg_replace ( string $pattern , string $replacement , string $string [, string $option = "msr" ] ) 
 Сканирует строку string для поиска совпадений с pattern, затем заменяет совпавший текст на replacement </description>
<parameters>pattern - Шаблон регулярного выражения. 
replacement - Текст замены. 
string - Проверяемая строка string. </parameters>
<output>Результирующая строка string в случае успеха, или FALSE в случае ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=542> 
<name>dba_list</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>List all open database files</short-description>
<description>array dba_list ( void ) 
 dba_list() list all open database files. </description>
<parameters></parameters>
<output>An associative array, in the form resourceid => filename. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=543> 
<name>curl_exec</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Выполняет запрос cURL</short-description>
<description>mixed curl_exec ( resource $ch ) 
 Выполняет запрос cURL. 
 Эта функция должна вызываться после инициализации сеанса и установки всех необходимых параметров. </description>
<parameters>ch - Дескриптор cURL, полученный из curl_init().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. Однако, если установлена опция CURLOPT_RETURNTRANSFER, при успешном завершении будет возвращен результат, а при неудаче - FALSE. </output>
<errors></errors>
<example><?php
// создание нового cURL ресурса
$ch = curl_init();
// установка URL и других необходимых параметров
curl_setopt($ch, CURLOPT_URL, "http://www.example.com/");
curl_setopt($ch, CURLOPT_HEADER, 0);
// загрузка страницы и выдача её браузеру
curl_exec($ch);
// завершение сеанса и освобождение ресурсов
curl_close($ch);
?></example>
<example_result></example_result>
</object>

<object id=544> 
<name>flush</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сброс буфера вывода</short-description>
<description>void flush ( void ) 
 Функция очищает буфер вывода PHP, при этом всё содержимое буфера отправляется в браузер пользователя (с некоторыми исключениями), независимо от используемого backend-а у PHP (CGI, web-сервер и т.д.). 
 flush() не может изменить схему буферизации вашего web-сервера и никак не влияет на буферизацию браузера на стороне клиента. Функция так же не влияет на механизм буферизации пользовательского PHP кода. Это означает, что если вы используете сброс выходных буферов ob, то вам придется вызывать ob_flush() и flush() вместе. 
 Некоторые серверы, особенно под управлением Win32, будут по-прежнему продолжать буферизировать вывод вашего скрипта до передачи результатов в браузер. 
 Серверные модули для Apache, такие как mod_gzip, могут сами выполнять буферизацию, поэтому flush() не приводит к немедленной передаче данных клиенту. 
 Браузер может также буферизировать поступающие к нему данные перед отображением. Например, Netscape, буферизирует текст пока не получит признак end-of-line или начало тэга, и не будет отображать таблицы пока не увидит тэга </table> самой внешней таблицы. 
 Некоторые версии Microsoft Internet Explorer начинают отображать страницу только после получения 256 байт вывода, поэтому может понадобиться отправить дополнительные пробелы перед сбросом, чтобы такие браузеры отобразили страницу. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=545> 
<name>ldap_get_attributes</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает атрибуты из записи в результатах поиска</short-description>
<description>array ldap_get_attributes ( resource $link_identifier , resource $result_entry_identifier ) 
 Читает атрибуты и значения из записи в результатах поиска. 
 Определив местоположение определенной записи в каталоге, вы можете узнать, какая информация хранится для этой записи используя эту функцию. Вы должны использовать эту функцию для приложения, которое "просматривает" записи каталога и/или где структура записей каталога неизвестна. Во многих приложениях вы будете искать определенный атрибут, такой как адрес электронной почты или фамилия, не затрагивая другие данные. 
 return_value["count"] = число атрибутов в записи
return_value[0] = первый атрибут
return_value[n] = n-ый атрибут

return_value["attribute"]["count"] = число значений атрибута
return_value["attribute"][0] = первое значение атрибута
return_value["attribute"][i] = (i+1)-ое значение атрибута
</description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
result_entry_identifier - </parameters>
<output>Возвращает полную информацию записи в многомерный массив в случае успеха и FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
// $ds - идентификатор ссылки для директории
// $sr - действительный результат поиска из запроса
// к директории ldap
$entry = ldap_first_entry($ds, $sr);
$attrs = ldap_get_attributes($ds, $entry);
echo $attrs["count"] . " атрибуты, соответствующие этой записи:<p>";
for ($i=0; $i < $attrs["count"]; $i++) {
    echo $attrs[$i] . "<br />";
}?></example>
<example_result>
 
return_value["count"] = число атрибутов в записи
return_value[0] = первый атрибут
return_value[n] = n-ый атрибут

return_value["attribute"]["count"] = число значений атрибута
return_value["attribute"][0] = первое значение атрибута
return_value["attribute"][i] = (i+1)-ое значение атрибута
</example_result>
</object>

<object id=546> 
<name>strspn</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает длину участка в начале строки, полностью соответствующего маске </short-description>
<description>int strspn ( string $subject , string $mask [, int $start [, int $length ]] ) 
 Возвращает длину участка от начала строки subject, содержащий только символы из mask. 
 Если параметры start и length не указаны, то будет исследована вся строка subject. Если они указаны, то эффект будет аналогичен вызову strspn(substr($subject, $start, $length) $mask) (подробнее см. функцию substr). 
 Строка кода: <?php
$var = strspn("42 is the answer to the 128th question.", "1234567890");
?></description>
<parameters>subject - Исследуемая строка. 
mask - Список из разрешенных символов. 
start - Позиция начала поиска в subject. 
length - Длина исследуемого фрагмента subject. </parameters>
<output>Возвращает длину первого участка subject, состоящего целиком из символов в mask. </output>
<errors></errors>
<example><?php
// subject не начинается ни из какого символа из mask
var_dump(strspn("foo", "o"));
// проверить два символа из subject начиная с позиции 1
var_dump(strspn("foo", "o", 1, 2));
// проверить один символ из subject начиная с позиции 1
var_dump(strspn("foo", "o", 1, 1));
?></example>
<example_result>
 
int(0)
int(2)
int(1)
</example_result>
</object>

<object id=547> 
<name>dbplus_open</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Open relation file</short-description>
<description>resource dbplus_open ( string $name ) 
 Opens the given relation file. </description>
<parameters>name - Can be either a file name or a relative or absolute path name. This will be mapped in any case to an absolute relation file path on a specific host machine and server. </parameters>
<output>On success a relation file resource (cursor) is returned which must be used in any subsequent commands referencing the relation. Failure leads to a zero return value, the actual error code may be asked for by calling dbplus_errno(). </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=548> 
<name>pg_last_notice</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Возвращает последнее уведомление от сервера PostgreSQL </short-description>
<description>string pg_last_notice ( resource $connection ) 
 pg_last_notice() возвращает последнее уведомление сгенерированное сервером PostgreSQL на заданном соединении connection. В некоторых случаях сервер посылает уведомления, например при создании в таблице колонки типа SERIAL. 
 Благодаря pg_last_notice() не требуется делать лишних запросов, чтобы узнать посылала ваша транзакция уведомления или нет. 
 Можно отключить отслеживание уведомлений установкой в 1 параметра pgsql.ignore_notice в файле php.ini. 
 Можно отключить журналирование уведомлений установкой в 0 параметра pgsql.log_notice в файле php.ini. Пока этот параметр установлен в 0, уведомления невозможно записать в журнал выполнения. </description>
<parameters>connection - Ресурс соединения с базой данных PostgreSQL. </parameters>
<output>Строка, содержащая последнее уведомление на заданном соединении, либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
  $pgsql_conn = pg_connect("dbname=mark host=localhost");
  
  $res = pg_query("CREATE TABLE test (id SERIAL)");
  
  $notice = pg_last_notice($pgsql_conn);
  
  echo $notice;
?></example>
<example_result>
 
CREATE TABLE will create implicit sequence "test_id_seq" for "serial" column "test.id"
</example_result>
</object>

<object id=549> 
<name>PDF_continue_text</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Output text in next line</short-description>
<description>bool PDF_continue_text ( resource $p , string $text ) 
 Prints text at the next line. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=550> 
<name>timezone_identifiers_list</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Псевдоним DateTimeZone::listIdentifiers()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=551> 
<name>is_executable</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Определяет, является ли файл исполняемым</short-description>
<description>bool is_executable ( string $filename ) 
 Определяет, является ли файл исполняемым. </description>
<parameters>filename - Путь к файлу. </parameters>
<output>Возвращает TRUE, если файл существует и является исполняемым, или FALSE в случае ошибки. </output>
<errors>В случае неудачного завершения работы генерируется ошибка уровня E_WARNING.</errors>
<example><?php
$file = '/home/vincent/somefile.sh';
if (is_executable($file)) {
    echo $file.' является исполняемым';
} else {
    echo $file.' не является исполняемым';
}
?></example>
<example_result></example_result>
</object>

<object id=552> 
<name>is_nan</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Проверяет, является ли значение "не числом"</short-description>
<description>bool is_nan ( float $val ) 
 Проверяет, является ли val "не числом" (NaN), например, как результат выполнения функции acos(1.01). </description>
<parameters>val - Проверяемое значение </parameters>
<output>Возвращает TRUE, если val имеет значение "не число" (NaN), и FALSE в противном случае. </output>
<errors></errors>
<example><?php
// Недопустимое вычисление, возвращает
// значение "не число" (NaN)
$nan = acos(8);
var_dump($nan, is_nan($nan));
?></example>
<example_result>
 
float(NAN)
bool(true)
</example_result>
</object>

<object id=553> 
<name>ibase_service_detach</name>
<versions>(PHP 5)</versions>
<short-description>Disconnect from the service manager</short-description>
<description>bool ibase_service_detach ( resource $service_handle ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=554> 
<name>variant_set_type</name>
<versions>(PHP 5)</versions>
<short-description>Convert a variant into another type "in-place"</short-description>
<description>void variant_set_type ( variant $variant , int $type ) 
 This function is similar to variant_cast() except that the variant is modified "in-place"; no new variant is created. The parameters for this function have identical meaning to those of variant_cast(). </description>
<parameters>variant - The variant. 
type - </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=555> 
<name>oci_lob_copy</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Копирует объект LOB</short-description>
<description>bool oci_lob_copy ( OCI-Lob $lob_to , OCI-Lob $lob_from [, int $length = 0 ] ) 
 Копирует содержание или часть содержания объекта LOB в другой объект LOB. Содержимое объекта LOB, в который производится копирование, перезаписывается. 
 Если необходимо скопировать определенную часть объекта, то для этого можно использовать OCI-Lob::seek(), чтобы передвинуть внутренние указатели объектов на нужные позиции. </description>
<parameters>lob_to - LOB объект назначения. 
lob_from - Копируемый объект LOB. 
length - Длина участка содержимого для копирования. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=556> 
<name>sem_remove</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Remove a semaphore</short-description>
<description>bool sem_remove ( resource $sem_identifier ) 
 sem_remove() removes the given semaphore. 
 After removing the semaphore, it is no longer accessible. </description>
<parameters>sem_identifier - A semaphore resource identifier as returned by sem_get(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=557> 
<name>mysqlnd_ms_get_last_used_connection</name>
<versions>(PHP >= 5.4.0, PECL mysqlnd_ms >= 1.1.0)</versions>
<short-description>Returns an array which describes the last used connection</short-description>
<description>array mysqlnd_ms_get_last_used_connection ( mixed $connection ) 
 Returns an array which describes the last used connection from the plugins connection pool currently pointed to by the user connection handle. If using the plugin, a user connection handle represents a pool of database connections. It is not possible to tell from the user connection handles properties to which database server from the pool the user connection handle points. 
 The function can be used to debug or monitor PECL mysqlnd_ms. </description>
<parameters>connection - A MySQL connection handle obtained from any of the connect functions of the mysqli, mysql or PDO_MYSQL extensions. </parameters>
<output>FALSE on error. Otherwise, an array which describes the connection used to execute the last statement on. </output>
<errors></errors>
<example><?php
$link = new mysqli("myapp", "user", "password", "database");
$res = $link->query("SELECT 1 FROM DUAL");
var_dump(mysqlnd_ms_get_last_used_connection($link));
?></example>
<example_result>
 
array(10) {
  ["scheme"]=>
  string(22) "unix:///tmp/mysql.sock"
  ["host_info"]=>
  string(25) "Localhost via UNIX socket"
  ["host"]=>
  string(0) ""
  ["port"]=>
  int(3306)
  ["socket_or_pipe"]=>
  string(15) "/tmp/mysql.sock"
  ["thread_id"]=>
  int(46253)
  ["last_message"]=>
  string(0) ""
  ["errno"]=>
  int(0)
  ["error"]=>
  string(0) ""
  ["sqlstate"]=>
  string(5) "00000"
}
</example_result>
</object>

<object id=558> 
<name>openssl_error_string</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Return openSSL error message</short-description>
<description>string openssl_error_string ( void ) 
 openssl_error_string() returns the last error from the openSSL library. Error messages are queued, so this function should be called multiple times to collect all of the information. The last error will be the most recent one. </description>
<parameters></parameters>
<output>Returns an error message string, or FALSE if there are no more error messages to return. </output>
<errors></errors>
<example><?php
// lets assume you just called an openssl function that failed
while ($msg = openssl_error_string())
    echo $msg . "<br />\n";
?></example>
<example_result></example_result>
</object>

<object id=559> 
<name>sizeof</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним count()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=560> 
<name>zend_version</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the version of the current Zend engine</short-description>
<description>string zend_version ( void ) 
 Returns a string containing the version of the currently running Zend Engine. </description>
<parameters></parameters>
<output>Returns the Zend Engine version number, as a string. </output>
<errors></errors>
<example><?php
echo "Zend engine version: " . zend_version();
?></example>
<example_result>
 
Zend engine version: 2.2.0
</example_result>
</object>

<object id=561> 
<name>ovrimos_longreadlen</name>
<versions>(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)</versions>
<short-description>Specifies how many bytes are to be retrieved from long datatypes</short-description>
<description>bool ovrimos_longreadlen ( int $result_id , int $length ) 
 Specifies how many bytes are to be retrieved from long datatypes (long varchar and long varbinary). </description>
<parameters>result_id - A result identifier, returned by ovrimos_execute() or ovrimos_exec(). 
length - The number of bytes to retrieve. Default is zero. </parameters>
<output>Returns TRUE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=562> 
<name>msql_list_dbs</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>List mSQL databases on server</short-description>
<description>resource msql_list_dbs ([ resource $link_identifier ] ) 
 msql_list_tables() lists the databases available on the specified link_identifier. </description>
<parameters>link_identifier - Соединение mSQL.Если не указан, используется последнее соединение, открытое msql_connect().Если такое соединение не было найдено, функция попытается установить новое, как если бы была вызвана функцияmsql_connect(), и использовать его.</parameters>
<output>Returns a result set which may be traversed with any function that fetches result sets, such as msql_fetch_array(). On failure, this function will return FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=563> 
<name>ovrimos_field_len</name>
<versions>(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)</versions>
<short-description>Returns the length of the output column</short-description>
<description>int ovrimos_field_len ( int $result_id , int $field_number ) 
 Gets the length of the specified output column. </description>
<parameters>result_id - A result identifier, returned by ovrimos_execute() or ovrimos_exec(). 
field_number - The field number. Starts at 1. </parameters>
<output>Returns the length as an integer, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=564> 
<name>PDF_open_pdi_page</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Prepare a page</short-description>
<description>int PDF_open_pdi_page ( resource $p , int $doc , int $pagenumber , string $optlist ) 
 Prepares a page for later use with PDF_fit_pdi_page(). </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=565> 
<name>hash_hmac</name>
<versions>(PHP 5 >= 5.1.2, PECL hash >= 1.1)</versions>
<short-description>Генерация хеш-кода на основе ключа, используя метод HMAC</short-description>
<description>string hash_hmac ( string $algo , string $data , string $key [, bool $raw_output = false ] ) </description>
<parameters>algo - Имя выбранного алгоритма хеширования (например, "md5", "sha256", "haval160,4" и т.д.) Смотрите hash_algos() для получения списка поддерживаемых алгоритмов. 
data - Сообщение для хеширования. 
key - Общий секретный ключ, используемый для генерации HMAC хеш кода. 
raw_output - Когда установлено в TRUE, выводит необработанные двоичные данные. При FALSE выводит данные в шестнадцатеричной кодировке в нижнем регистре. </parameters>
<output>Возвращает строку содержащую вычисленный хеш-код в шестнадцатеричной кодировке в нижнем регистре. Если raw_output задан как TRUE, то возвращается хеш-код в виде бинарных данных. </output>
<errors></errors>
<example><?php
echo hash_hmac('ripemd160', 'Наглый коричневый лисёнок прыгает вокруг ленивой собаки.', 'secret');
?></example>
<example_result>
 
b95d4abec7c27ec87fb54da1621f9942948879e4
</example_result>
</object>

<object id=566> 
<name>get_parent_class</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает имя родительского класса для объекта или класса</short-description>
<description>string get_parent_class ([ mixed $object ] ) 
 Возвращает имя родительского класса для объекта или класса. </description>
<parameters>object - Тестируемый объект или имя класса </parameters>
<output>Возвращает имя родительского класса, если object является объектом или именем класса. </output>
<errors></errors>
<example><?php
class dad {
    function dad()
    {
    // реализация какой-нибудь логики
    }
}
class child extends dad {
    function child()
    {
        echo "I'm " , get_parent_class($this) , "'s son\n";
    }
}
class child2 extends dad {
    function child2()
    {
        echo "I'm " , get_parent_class('child2') , "'s son too\n";
    }
}
$foo = new child();
$bar = new child2();
?></example>
<example_result>
 
I&#039;m dad&#039;s son
I&#039;m dad&#039;s son too
</example_result>
</object>

<object id=567> 
<name>ncurses_echo</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Activate keyboard input echo </short-description>
<description>bool ncurses_echo ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Returns FALSE on success, TRUE if any error occurred. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=568> 
<name>ncurses_refresh</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Refresh screen </short-description>
<description>int ncurses_refresh ( int $ch ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>ch - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=569> 
<name>zip_entry_read</name>
<versions>(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)</versions>
<short-description>Читает данные из открытого ранее дескриптора директории</short-description>
<description>string zip_entry_read ( resource $zip_entry [, int $length ] ) 
 Читает данные из открытого ранее дескриптора директории. </description>
<parameters>zip_entry - Дескриптор директории, возвращаемый функцией zip_read(). 
length - Число байт, которое нужно считать. Если параметр не определен, то функция будет пытаться считать 1024 байта. </parameters>
<output>Возвращает считанные данные или FALSE если достигнут конец файла. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=570> 
<name>fbsql_autocommit</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Enable or disable autocommit</short-description>
<description>bool fbsql_autocommit ( resource $link_identifier [, bool $OnOff ] ) 
 Returns the current autocommit status. </description>
<parameters>link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().
OnOff - If this optional parameter is given the auto commit status will be changed. </parameters>
<output>Returns the current autocommit status, as a boolean. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=571> 
<name>php_sapi_name</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Returns the type of interface between web server and PHP</short-description>
<description>string php_sapi_name ( void ) 
 Returns a lowercase string that describes the type of interface (the Server API, SAPI) that PHP is using. For example, in CLI PHP this string will be "cli" whereas with Apache it may have several different values depending on the exact SAPI used. Possible values are listed below. </description>
<parameters></parameters>
<output>Returns the interface type, as a lowercase string. </output>
<errors></errors>
<example>
 cgi because it may also be cgi-fcgi. </example>
<example_result></example_result>
</object>

<object id=572> 
<name>XMLWriter::writeRaw</name>
<versions>(PHP 5 >= 5.2.0, PECL xmlwriter >= 2.0.4)</versions>
<short-description>Пишет необработанный XML-текст</short-description>
<description>bool XMLWriter::writeRaw ( string $content ) 
 Процедурный стиль bool xmlwriter_write_raw ( resource $xmlwriter , string $content )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
content - Текстовая строка для записи. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=573> 
<name>PDF_endpath</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>End current path</short-description>
<description>bool PDF_endpath ( resource $p ) 
 Ends the current path without filling or stroking it. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=574> 
<name>ociparse</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_parse()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=575> 
<name>imagettftext</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Write text to the image using TrueType fonts</short-description>
<description>array imagettftext ( resource $image , float $size , float $angle , int $x , int $y , int $color , string $fontfile , string $text ) 
 Writes the given text into the image using TrueType fonts. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
size - Размер шрифта. В зависимости от вашей версии GD, он должен быть указан либо в пикселах (GD1) либо в типографских пунктах (GD2).
angle - The angle in degrees, with 0 degrees being left-to-right reading text. Higher values represent a counter-clockwise rotation. For example, a value of 90 would result in bottom-to-top reading text. 
x - The coordinates given by x and y will define the basepoint of the first character (roughly the lower-left corner of the character). This is different from the imagestring(), where x and y define the upper-left corner of the first character. For example, "top left" is 0, 0. 
y - The y-ordinate. This sets the position of the fonts baseline, not the very bottom of the character. 
color - The color index. Using the negative of a color index has the effect of turning off antialiasing. See imagecolorallocate(). 
fontfile - The path to the TrueType font you wish to use. </parameters>
<output>Returns an array with 8 elements representing four points making the bounding box of the text. The order of the points is lower left, lower right, upper right, upper left. The points are relative to the text regardless of the angle, so "upper left" means in the top left-hand corner when you see the text horizontally. Returns FALSE on error. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=576> 
<name>ncurses_echochar</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Single character output including refresh </short-description>
<description>int ncurses_echochar ( int $character ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>character - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=577> 
<name>gmp_div</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Псевдоним gmp_div_q()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=578> 
<name>socket_listen</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Listens for a connection on a socket</short-description>
<description>bool socket_listen ( resource $socket [, int $backlog = 0 ] ) 
 After the socket socket has been created using socket_create() and bound to a name with socket_bind(), it may be told to listen for incoming connections on socket. 
 socket_listen() is applicable only to sockets of type SOCK_STREAM or SOCK_SEQPACKET. </description>
<parameters>socket - A valid socket resource created with socket_create(). 
backlog - A maximum of backlog incoming connections will be queued for processing. If a connection request arrives with the queue full the client may receive an error with an indication of ECONNREFUSED, or, if the underlying protocol supports retransmission, the request may be ignored so that retries may succeed. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. The error code can be retrieved with socket_last_error(). This code may be passed to socket_strerror() to get a textual explanation of the error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=579> 
<name>ncurses_flash</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Flash terminal screen (visual bell) </short-description>
<description>bool ncurses_flash ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Returns FALSE on success, otherwise TRUE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=580> 
<name>fmod</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает дробный остаток от деления по модулю</short-description>
<description>float fmod ( float $x , float $y ) 
 Возвращает дробный остаток от деления делимого (x) и делителя (y). Остаток (r) определяется так: x = i * y + r, где i - некоторое целое. Если y не равен нулю, то r имеет такой же знак, как x и величину, меньшую или равную величине y. </description>
<parameters>x - Делимое. 
y - Делитель. </parameters>
<output>Остаток от операции деления x/y </output>
<errors></errors>
<example><?php
$x = 5.7;
$y = 1.3;
$r = fmod($x, $y);
// $r равно 0.5, потому что 4 * 1.3 + 0.5 = 5.7
?></example>
<example_result></example_result>
</object>

<object id=581> 
<name>lcg_value</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Комбинированный линейно конгруэнтный генератор</short-description>
<description>float lcg_value ( void ) 
 lcg_value() возвращает псевдослучайное значение в диапазоне(0, 1). Функция комбинирует два КГ с периодами 2^31 - 85 и 2^31 - 249. Период этой функции равен произведению базовых. </description>
<parameters></parameters>
<output>Псевдослучайное число с плавающей точкой в диапазоне (0, 1) </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=582> 
<name>imagepolygon</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Draws a polygon</short-description>
<description>bool imagepolygon ( resource $image , array $points , int $num_points , int $color ) 
 imagepolygon() creates a polygon in the given image. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
points - An array containing the polygon&#039;s vertices, e.g.: points[0] = x0 points[1] = y0 points[2] = x1 points[3] = y1 
num_points - Total number of points (vertices). 
color - A color identifier created with imagecolorallocate(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Create a blank image
$image = imagecreatetruecolor(400, 300);
// Allocate a color for the polygon
$col_poly = imagecolorallocate($image, 255, 255, 255);
// Draw the polygon
imagepolygon($image, array(
        0,   0,
        100, 200,
        300, 200
    ),
    3,
    $col_poly);
// Output the picture to the browser
header('Content-type: image/png');
imagepng($image);
imagedestroy($image);
?></example>
<example_result></example_result>
</object>

<object id=583> 
<name>ifx_close</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Close Informix connection</short-description>
<description>bool ifx_close ([ resource $link_identifier ] ) 
 ifx_close() closes the link to an Informix database that&#039;s associated with the specified link identifier. 
 Note that this isn&#039;t usually necessary, as non-persistent open links are automatically closed at the end of the script&#039;s execution. 
 ifx_close() will not close persistent links generated by ifx_pconnect(). </description>
<parameters>link_identifier - The link identifier. If not specified, the last opened link is assumed. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$conn_id = ifx_connect ("mydb@ol_srv", "itsme", "mypassword");
/* ... some queries and stuff ... */
ifx_close($conn_id);
?></example>
<example_result></example_result>
</object>

<object id=584> 
<name>oci_statement_type</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Возвращает тип выражения</short-description>
<description>string oci_statement_type ( resource $statement ) 
 Возвращает выражение, соответствующее одному из типов параметра statement OCI8. </description>
<parameters>statement - Допустимый идентификатор оператора OCI8, возвращаемый oci_parse(). </parameters>
<output>Возвращает тип параметра statement, который может быть одним из нижеследующих значений: Тип оператора Возвращаемое значение Примечание ALTER   BEGIN   CALL Представлено в PHP 5.2.1 (PECL OCI8 1.2.3) CREATE   DECLARE   DELETE   DROP   INSERT   SELECT   UPDATE   UNKNOWN   </output>
<errors></errors>
<example><?php
$conn = oci_connect('hr', 'welcome', 'localhost/XE');
$stid = oci_parse($conn, 'DELETE FROM departments WHERE department_id = 130;');
if (oci_statement_type($stid) == "DELETE") {
    trigger_error('Вы не имеете прав для удаления записей из таблицы', E_USER_ERROR);
}else {
    oci_execute($stid);  // удалить запись
}
oci_free_statement($stid);
oci_close($conn);
?></example>
<example_result></example_result>
</object>

<object id=585> 
<name>openssl_verify</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Verify signature</short-description>
<description>int openssl_verify ( string $data , string $signature , mixed $pub_key_id [, int $signature_alg = OPENSSL_ALGO_SHA1 ] ) 
 openssl_verify() verifies that the signature is correct for the specified data using the public key associated with pub_key_id. This must be the public key corresponding to the private key used for signing. </description>
<parameters>data - 
signature - 
pub_key_id - 
signature_alg - For more information see the list of Signature Algorithms. </parameters>
<output>Returns 1 if the signature is correct, 0 if it is incorrect, and -1 on error. </output>
<errors></errors>
<example><?php
// $data and $signature are assumed to contain the data and the signature
// fetch public key from certificate and ready it
$fp = fopen("/src/openssl-0.9.6/demos/sign/cert.pem", "r");
$cert = fread($fp, 8192);
fclose($fp);
$pubkeyid = openssl_get_publickey($cert);
// state whether signature is okay or not
$ok = openssl_verify($data, $signature, $pubkeyid);
if ($ok == 1) {
    echo "good";
} elseif ($ok == 0) {
    echo "bad";
} else {
    echo "ugly, error checking signature";
}// free the key from memory
openssl_free_key($pubkeyid);
?></example>
<example_result></example_result>
</object>

<object id=586> 
<name>hw_DocByAnchorObj</name>
<versions>(PHP 4)</versions>
<short-description>Object record object belonging to anchor</short-description>
<description>string hw_docbyanchorobj ( int $connection , int $anchorID ) 
 Returns an th object record of the document to which anchorID belongs. </description>
<parameters>connection - The connection identifier. 
anchorID - The anchor identifier. </parameters>
<output>Returns an object record. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=587> 
<name>get_loaded_extensions</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Returns an array with the names of all modules compiled and loaded</short-description>
<description>array get_loaded_extensions ([ bool $zend_extensions = false ] ) 
 This function returns the names of all the modules compiled and loaded in the PHP interpreter. </description>
<parameters>zend_extensions - Only return Zend extensions, if not then regular extensions, like mysqli are listed. Defaults to FALSE (return regular extensions). </parameters>
<output>Returns an indexed array of all the modules names. </output>
<errors></errors>
<example><?php
print_r(get_loaded_extensions());
?></example>
<example_result>
 
Array
(
   [0] => xml
   [1] => wddx
   [2] => standard
   [3] => session
   [4] => posix
   [5] => pgsql
   [6] => pcre
   [7] => gd
   [8] => ftp
   [9] => db
   [10] => calendar
   [11] => bcmath
)
</example_result>
</object>

<object id=588> 
<name>XMLWriter::startAttributeNS</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Создать стартовый атрибут пространства имен</short-description>
<description>bool XMLWriter::startAttributeNS ( string $prefix , string $name , string $uri ) 
 Процедурный стиль bool xmlwriter_start_attribute_ns ( resource $xmlwriter , string $prefix , string $name , string $uri )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
prefix - Префикс пространства имен. 
name - Имя атрибута. 
uri - URI пространства имен. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=589> 
<name>session_decode</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Decodes session data from a string</short-description>
<description>bool session_decode ( string $data ) 
 session_decode() decodes the session data in data, setting variables stored in the session. </description>
<parameters>data - The encoded data to be stored. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=590> 
<name>xpath_register_ns</name>
<versions>(PHP 4 >= 4.2.0)</versions>
<short-description>Регистрирует пространство имен в переданном XPath контексте </short-description>
<description>bool xpath_register_ns ( XPathContext $xpath_context , string $prefix , string $uri ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=591> 
<name>udm_crc32</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)</versions>
<short-description>Возвращает контрольную сумму CRC32 данной строки</short-description>
<description>int udm_crc32 ( resource $agent , string $str ) 
 Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=592> 
<name>set_include_path</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Sets the include_path configuration option</short-description>
<description>string set_include_path ( string $new_include_path ) 
 Sets the include_path configuration option for the duration of the script. </description>
<parameters>new_include_path - The new value for the include_path </parameters>
<output>Returns the old include_path on success или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Works as of PHP 4.3.0
set_include_path('/usr/lib/pear');
// Works in all PHP versions
ini_set('include_path', '/usr/lib/pear');
?></example>
<example_result></example_result>
</object>

<object id=593> 
<name>uksort</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сортирует массив по ключам, используя пользовательскую функцию для сравнения ключей</short-description>
<description>bool uksort ( array &$array , callback $cmp_function ) 
 uksort() отсортирует массив, используя для сравнения его ключей функцию, предоставленную пользователем. Используйте эту функцию, если массив должен быть отсортирован по какому-нибудь необычному признаку. </description>
<parameters>array - Входной массив. 
cmp_function - Callback-функция, используемая для сравнения. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
function cmp($a, $b)
{    $a = preg_replace('@^(a|an|the) @', '', $a);
    $b = preg_replace('@^(a|an|the) @', '', $b);
    return strcasecmp($a, $b);
}
$a = array("John" => 1, "the Earth" => 2, "an apple" => 3, "a banana" => 4);
uksort($a, "cmp");
foreach ($a as $key => $value) {
    echo "$key: $value\n";
}?></example>
<example_result>
 
an apple: 3
a banana: 4
the Earth: 2
John: 1
</example_result>
</object>

<object id=594> 
<name>parse_ini_file</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Обрабатывает конфигурационный файл</short-description>
<description>array parse_ini_file ( string $filename [, bool $process_sections = false [, int $scanner_mode = INI_SCANNER_NORMAL ]] ) 
 parse_ini_file() загружает ini-файл, указанный в аргументе filename, и возвращает его настройки в виде ассоциативного массива. 
 Структура ini-файла похожа на структуру php.ini. </description>
<parameters>filename - Имя обрабатываемого ini-файла. 
process_sections - Установив параметр process_sections в TRUE, вы получаете многомерный массив, который включает как название отдельных настроек, так и секции. По умолчанию process_sections равен FALSE 
scanner_mode - Может принимать следующие значения: INI_SCANNER_NORMAL (по умолчанию) или INI_SCANNER_RAW. Если указано значение INI_SCANNER_RAW, то значения опций не будут обрабатываться. </parameters>
<output>В случае успеха настройки возвращаются в виде ассоциативного array. В случае ошибки возвращается FALSE. </output>
<errors></errors>
<example>
 ; Это пример файла настроек
; Комментарии начинаются с &#039;;&#039;, как в php.ini

[first_section]
one = 1
five = 5
animal = BIRD

[second_section]
path = "/usr/local/bin"
URL = "http://www.example.com/~username"

[third_section]
phpversion[] = "5.0"
phpversion[] = "5.1"
phpversion[] = "5.2"
phpversion[] = "5.3"
</example>
<example_result>
 
; Это пример файла настроек
; Комментарии начинаются с &#039;;&#039;, как в php.ini

[first_section]
one = 1
five = 5
animal = BIRD

[second_section]
path = "/usr/local/bin"
URL = "http://www.example.com/~username"

[third_section]
phpversion[] = "5.0"
phpversion[] = "5.1"
phpversion[] = "5.2"
phpversion[] = "5.3"
</example_result>
</object>

<object id=595> 
<name>posix_mknod</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Create a special or ordinary file (POSIX.1) </short-description>
<description>bool posix_mknod ( string $pathname , int $mode [, int $major = 0 [, int $minor = 0 ]] ) 
 Creates a special or ordinary file. </description>
<parameters>pathname - The file to create 
mode - This parameter is constructed by a bitwise OR between file type (one of the following constants: POSIX_S_IFREG, POSIX_S_IFCHR, POSIX_S_IFBLK, POSIX_S_IFIFO or POSIX_S_IFSOCK) and permissions. 
major - The major device kernel identifier (required to pass when using S_IFCHR or S_IFBLK). 
minor - The minor device kernel identifier. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$file = '/tmp/tmpfile';  // file name
$type = POSIX_S_IFBLK;   // file type
$permissions = 0777;     // octal
$major = 1;
$minor = 8;              // /dev/random
if (!posix_mknod($file, $type | $permissions, $major, $minor)) {
    die('Error ' . posix_get_last_error() . ': ' . posix_strerror(posix_get_last_error()));
}
?></example>
<example_result></example_result>
</object>

<object id=596> 
<name>fbsql_set_password</name>
<versions>(PHP 5)</versions>
<short-description>Change the password for a given user</short-description>
<description>bool fbsql_set_password ( resource $link_identifier , string $user , string $password , string $old_password ) 
 Changes the password for the given user. </description>
<parameters>link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().
user - The user name. 
password - The new password to be set. 
old_password - The old password to be replaced. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=597> 
<name>fdf_set_javascript_action</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Sets an javascript action of a field</short-description>
<description>bool fdf_set_javascript_action ( resource $fdf_document , string $fieldname , int $trigger , string $script ) 
 Sets a javascript action for the given field. </description>
<parameters>fdf_document - The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string(). 
fieldname - Name of the FDF field, as a string. 
trigger - 
script - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=598> 
<name>session_set_cookie_params</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Set the session cookie parameters</short-description>
<description>void session_set_cookie_params ( int $lifetime [, string $path [, string $domain [, bool $secure = false [, bool $httponly = false ]]]] ) 
 Set cookie parameters defined in the php.ini file. The effect of this function only lasts for the duration of the script. Thus, you need to call session_set_cookie_params() for every request and before session_start() is called. </description>
<parameters>lifetime - Lifetime of the session cookie, defined in seconds. 
path - Path on the domain where the cookie will work. Use a single slash (&#039;/&#039;) for all paths on the domain. 
domain - Cookie domain, for example &#039;www.php.net&#039;. To make cookies visible on all subdomains then the domain must be prefixed with a dot like &#039;.php.net&#039;. 
secure - If TRUE cookie will only be sent over secure connections. 
httponly - If set to TRUE then PHP will attempt to send the httponly flag when setting the session cookie. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=599> 
<name>getmyinode</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the inode of the current script</short-description>
<description>int getmyinode ( void ) 
 Gets the inode of the current script. </description>
<parameters></parameters>
<output>Returns the current script&#039;s inode as an integer, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=600> 
<name>time_sleep_until</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Откладывает исполнение скрипта до заданного времени </short-description>
<description>bool time_sleep_until ( float $timestamp ) 
 Откладывает исполнение скрипта до заданной отметки времени, указанной в параметре timestamp. </description>
<parameters>timestamp - Отметка времени продолжения исполнения скрипта. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors>Если указанная временная отметка timestamp просрочена, то функция создаст исключение уровня E_WARNING. </errors>
<example><?php
//возвращает false и выводит предупреждение
var_dump(time_sleep_until(time()-1));
// может работать только на быстродействующих компьютерах, выполнение отложено до 0.2 секунд
var_dump(time_sleep_until(microtime(true)+0.2));
?></example>
<example_result></example_result>
</object>

<object id=601> 
<name>PDF_show_xy</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Output text at given position</short-description>
<description>bool PDF_show_xy ( resource $p , string $text , float $x , float $y ) 
 Prints text in the current font. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=602> 
<name>variant_set</name>
<versions>(PHP 5)</versions>
<short-description>Assigns a new value for a variant object</short-description>
<description>void variant_set ( variant $variant , mixed $value ) 
 Converts value to a variant and assigns it to the variant object; no new variant object is created, and the old value of variant is freed/released. </description>
<parameters>variant - The variant. 
value - </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=603> 
<name>array_values</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выбирает все значения массива</short-description>
<description>array array_values ( array $input ) 
 array_values() возвращает массив cо всеми элементами массива input. Она также заново индексирует возвращаемый массив числовыми индексами. </description>
<parameters>input - Массив. </parameters>
<output>Возвращает индексированный массив значений. </output>
<errors></errors>
<example><?php
$array = array("size" => "XL", "color" => "gold");
print_r(array_values($array));
?></example>
<example_result>
 
Array
(
    [0] => XL
    [1] => gold
)
</example_result>
</object>

<object id=604> 
<name>ovrimos_close</name>
<versions>(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)</versions>
<short-description>Closes the connection to ovrimos</short-description>
<description>void ovrimos_close ( int $connection ) 
 Closes the specified connection to Ovrimos. This has the effect of rolling back uncommitted transactions. </description>
<parameters>connection - The Ovrimos connection identifier, returned by ovrimos_connect(). </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=605> 
<name>ingres_commit</name>
<versions>(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)</versions>
<short-description>Commit a transaction</short-description>
<description>bool ingres_commit ( resource $link ) 
 ingres_commit() commits the currently open transaction, making all changes made to the database permanent. 
 This closes the transaction. A new transaction can be opened by sending a query with ingres_query(). 
 You can also have the server commit automatically after every query by calling ingres_autocommit() before opening the transaction. 
 By default Ingres will roll back any uncommitted transactions at the end of a request. Use this function or ingres_autocommit() to ensure your that data is committed to the database. </description>
<parameters>link - The connection link identifier </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=606> 
<name>ncurses_standend</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Stop using &#039;standout&#039; attribute </short-description>
<description>int ncurses_standend ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=607> 
<name>imap_body</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Read the message body</short-description>
<description>string imap_body ( resource $imap_stream , int $msg_number [, int $options = 0 ] ) 
 imap_body() returns the body of the message, numbered msg_number in the current mailbox. 
 imap_body() will only return a verbatim copy of the message body. To extract single parts of a multipart MIME-encoded message you have to use imap_fetchstructure() to analyze its structure and imap_fetchbody() to extract a copy of a single body component. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
msg_number - The message number 
options - The optional options are a bit mask with one or more of the following: FT_UID - The msg_number is a UID FT_PEEK - Do not set the \Seen flag if not already set FT_INTERNAL - The return string is in internal format, will not canonicalize to CRLF. </parameters>
<output>Returns the body of the specified message, as a string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=608> 
<name>msg_queue_exists</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Check whether a message queue exists</short-description>
<description>bool msg_queue_exists ( int $key ) 
 Checks whether the message queue key exists. </description>
<parameters>key - Queue key. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=609> 
<name>imagecharup</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Draw a character vertically</short-description>
<description>bool imagecharup ( resource $image , int $font , int $x , int $y , string $c , int $color ) 
 Draws the character c vertically at the specified coordinate on the given image. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
font - Может принимать значения 1, 2, 3, 4, 5 для встроенных шрифтов в кодировкеlatin2 (более высокое число соответствует большему шрифту) или любому из ваших собственных идентификаторов шрифтов,зарегистрированных с помощью imageloadfont().
x - x-coordinate of the start. 
y - y-coordinate of the start. 
c - The character to draw. 
color - A color identifier created with imagecolorallocate(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$im = imagecreate(100, 100);
$string = 'Note that the first letter is a N';
$bg = imagecolorallocate($im, 255, 255, 255);
$black = imagecolorallocate($im, 0, 0, 0);
// prints a black "Z" on a white background
imagecharup($im, 3, 10, 10, $string, $black);
header('Content-type: image/png');
imagepng($im);
?></example>
<example_result></example_result>
</object>

<object id=610> 
<name>dba_nextkey</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Fetch next key</short-description>
<description>string dba_nextkey ( resource $handle ) 
 dba_nextkey() returns the next key of the database and advances the internal key pointer. </description>
<parameters>handle - The database handler, returned by dba_open() or dba_popen(). </parameters>
<output>Returns the key on success или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=611> 
<name>odbc_field_type</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Datatype of a field</short-description>
<description>string odbc_field_type ( resource $result_id , int $field_number ) 
 Gets the SQL type of the field referenced by number in the given result identifier. </description>
<parameters>result_id - The result identifier. 
field_number - The field number. Field numbering starts at 1. </parameters>
<output>Returns the field type as a string, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=612> 
<name>xml_set_processing_instruction_handler</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Установка обработчика инструкций препроцессора (PI) </short-description>
<description>bool xml_set_processing_instruction_handler ( resource $parser , callback $handler ) 
 Задает обработчик инструкций препроцессора (PI) для XML анализатора. parser. 
 Инструкции имеют следующий формат: 
 <?</description>
<parameters>parser - Ссылка на XML анализатор, для которого устанавливается обработчик. 
handler - handler - строка содержащая имя функции, которая должна быть определена на момент вызова функции xml_parse() из анализатора parser. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result>
 <?</example_result>
</object>

<object id=613> 
<name>imap_header</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним imap_headerinfo()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=614> 
<name>mysql_drop_db</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Уничтожает базу данных MySQL</short-description>
<description>bool mysql_drop_db ( string $database_name [, resource $link_identifier ] ) 
 mysql_drop_db() пытается уничтожить базу данных на сервере, на который ссылается переданный дескриптор соединения. Данная функция устарела, используйте вместо нее mysql_query() с запросом DROP DATABASE. </description>
<parameters>database_name - Имя удаляемой базы данных. 
link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Не удалось подключиться к базе данных: ' . mysql_error());
}
$sql = 'DROP DATABASE my_db';
if (mysql_query($sql, $link)) {
    echo "База данных my_db была успешно удалена\n";
} else {
    echo 'Ошибка при удалении базы данных: ' . mysql_error() . "\n";
}?></example>
<example_result></example_result>
</object>

<object id=615> 
<name>odbc_close_all</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Close all ODBC connections</short-description>
<description>void odbc_close_all ( void ) 
 odbc_close_all() will close down all connections to database server(s). </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=616> 
<name>ncurses_getch</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Read a character from keyboard </short-description>
<description>int ncurses_getch ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=617> 
<name>dbx_connect</name>
<versions>(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)</versions>
<short-description>Open a connection/database</short-description>
<description>object dbx_connect ( mixed $module , string $host , string $database , string $username , string $password [, int $persistent ] ) 
 Opens a connection to a database. </description>
<parameters>module - The module parameter can be either a string or a constant, though the latter form is preferred. The possible values are given below, but keep in mind that they only work if the module is actually loaded. 
host - The SQL server host 
database - The database name 
username - The username 
password - The password 
persistent - The persistent parameter can be set to DBX_PERSISTENT, if so, a persistent connection will be created. </parameters>
<output>Returns an object on success, FALSE on error. If a connection has been made but the database could not be selected, the connection is closed and FALSE is returned. </output>
<errors></errors>
<example><?php
$link = dbx_connect(DBX_ODBC, "", "db", "username", "password", DBX_PERSISTENT)
    or die("Could not connect");
echo "Connected successfully";
dbx_close($link);
?></example>
<example_result></example_result>
</object>

<object id=618> 
<name>register_shutdown_function</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Регистрирует функцию, которая выполнится по завершении работы скрипта</short-description>
<description>void register_shutdown_function ( callback $callback [, mixed $parameter [, mixed $... ]] ) 
 Регистрирует функцию callback, которая выполнится после завершения работы скрипта или при вызове функции exit(). 
 Возможна регистрация нескольких подобных функций с помощью register_shutdown_function(), при этом функции будут выполняться в том порядке, в каком они были зарегистрированы. Если вы вызовете exit() в одной из зарегистрированных завершающих функций, процесс будет полностью остановлен и последующие завершающие функции не будут вызваны. </description>
<parameters>callback - Регистрируемая завершающая функция. 
parameter - Разрешается передавать параметры в завершающую функцию, указав их как дополнительные параметры. 
... - </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors>Если передано название несуществующей завершающей функции, то генерируется ошибка уровня E_WARNING. </errors>
<example><?php
function shutdown()
{    // Это наша завершающая функция, 
    // здесь мы можем выполнить кое-какую работу
    // перед тем как скрипт полностью завершится.
    echo 'Скрипт успешно завершился', PHP_EOL;
}
register_shutdown_function('shutdown');
?></example>
<example_result></example_result>
</object>

<object id=619> 
<name>mssql_init</name>
<versions>(PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Initializes a stored procedure or a remote stored procedure</short-description>
<description>resource mssql_init ( string $sp_name [, resource $link_identifier ] ) 
 Initializes a stored procedure or a remote stored procedure. </description>
<parameters>sp_name - Stored procedure name, like ownew.sp_name or otherdb.owner.sp_name. 
link_identifier - A MS SQL link identifier, returned by mssql_connect(). </parameters>
<output>Returns a resource identifier "statement", used in subsequent calls to mssql_bind() and mssql_execute(), or FALSE on errors. </output>
<errors></errors>
<example><?php
// Connect to MSSQL and select the database
$link = mssql_connect('KALLESPC\SQLEXPRESS', 'sa', 'phpfi');
mssql_select_db('php', $link);
// Create a new statement
$stmt = mssql_init('StatementTest', $link);
// Bind values here
// Once values are binded we execute our statement 
// using mssql_execute:
mssql_execute($stmt);
// And we can free it like so:
mssql_free_statement($stmt);
?></example>
<example_result></example_result>
</object>

<object id=620> 
<name>ncurses_savetty</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Saves terminal state </short-description>
<description>bool ncurses_savetty ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Always returns FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=621> 
<name>dba_fetch</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Fetch data specified by key</short-description>
<description>string dba_fetch ( string $key , resource $handle ) string dba_fetch ( string $key , int $skip , resource $handle )</description>
<parameters>key - The key the data is specified by. 
skip - The number of key-value pairs to ignore when using cdb databases. This value is ignored for all other databases which do not support multiple keys with the same name. 
handle - The database handler, returned by dba_open() or dba_popen(). </parameters>
<output>Returns the associated string if the key/data pair is found, FALSE otherwise. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=622> 
<name>fscanf</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Обрабатывает данные из файла в соответствии с форматом</short-description>
<description>mixed fscanf ( resource $handle , string $format [, mixed &$... ] ) 
 Функция fscanf() похожа на sscanf(), но берёт данные для обработки из файла, ассоциируемого с handle, и интерпретирует их согласно формату format, который описан в документации функции sprintf(). 
 Любой пробельный символ в строке формата эквивалентен любому пробельному символу во входящем потоке. Это означает, что даже табуляция \t в строке формата может быть сопоставлена одному символу пробела во входящем потоке данных. 
 Каждый вызов fscanf() читает одну строку из файла. </description>
<parameters>handle - Указатель (resource)на файл, обычно создаваемый с помощью функции fopen().
format - Указанный формат в соответствии с документацией sprintf(). 
... - Необязательные присваиваемые значения. </parameters>
<output>Если в функцию переданы только два аргумента, обработанные значения будут возвращены в виде массива. В ином случае, если были переданы необязательные аргументы, функция вернёт количество присвоенных значений. Необязательные аргументы должны быть переданы по ссылке. </output>
<errors></errors>
<example><?php
$handle = fopen("users.txt", "r");
while ($userinfo = fscanf($handle, "%s\t%s\t%s\n")) {
    list ($name, $profession, $countrycode) = $userinfo;
    //... совершаем какие-либо действия над значениями
}
fclose($handle);
?></example>
<example_result></example_result>
</object>

<object id=623> 
<name>fbsql_fetch_assoc</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Fetch a result row as an associative array</short-description>
<description>array fbsql_fetch_assoc ( resource $result ) 
 Calling fbsql_fetch_assoc() is equivalent to calling fbsql_fetch_array() with FBSQL_ASSOC as second parameter. It only returns an associative array. 
 This is the way fbsql_fetch_array() originally worked. If you need the numeric indices as well as the associative, use fbsql_fetch_array(). 
 An important thing to note is that using fbsql_fetch_assoc() is NOT significantly slower than using fbsql_fetch_row(), while it provides a significant added value. </description>
<parameters>result - Идентификатор результата запроса, полученный изfbsql_query() илиfbsql_db_query().</parameters>
<output>Returns an associative array that corresponds to the fetched row, or FALSE if there are no more rows. </output>
<errors></errors>
<example><?php
fbsql_connect($host, $user, $password);
$result = fbsql_db_query("database", "select * from table");
while ($row = fbsql_fetch_assoc($result)) {
    echo $row["user_id"];
    echo $row["fullname"];
}fbsql_free_result($result);
?></example>
<example_result></example_result>
</object>

<object id=624> 
<name>is_string</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Проверяет, является ли переменная строкой</short-description>
<description>bool is_string ( mixed $var ) 
 Проверяет, является ли данная переменная строкой. </description>
<parameters>var - Проверяемая переменная. </parameters>
<output>Возвращает TRUE, если var является строкой, и FALSE в противном случае. </output>
<errors></errors>
<example><?php
if (is_string("23")) {
    echo "строка\n";
} else {
    echo "не строка\n";
}var_dump(is_string('abc'));
var_dump(is_string("23"));
var_dump(is_string(23.5));
var_dump(is_string(true));
?></example>
<example_result>
 
строка
bool(true)
bool(true)
bool(false)
bool(false)
</example_result>
</object>

<object id=625> 
<name>posix_setsid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Make the current process a session leader</short-description>
<description>int posix_setsid ( void ) 
 Make the current process a session leader. </description>
<parameters></parameters>
<output>Returns the session id, or -1 on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=626> 
<name>filter_has_var</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Проверяет существование переменной указанного типа</short-description>
<description>bool filter_has_var ( int $type , string $variable_name ) </description>
<parameters>type - Один из INPUT_GET, INPUT_POST, INPUT_COOKIE, INPUT_SERVER, INPUT_ENV. 
variable_name - Имя проверяемой переменной. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=627> 
<name>checkdnsrr</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Проверяет записи DNS, соответствующие переданному имени узла интернета или IP-адресу</short-description>
<description>bool checkdnsrr ( string $host [, string $type = "MX" ] ) 
 Ищет записи DNS типа type, соответствующие host. </description>
<parameters>host - Параметр host может быть IP-адресом в виде четырех десятичных чисел, разделенных точками, или именем узла. 
type - Параметр type может быть одним из: A, MX, NS, SOA, PTR, CNAME, AAAA, A6, SRV, NAPTR, TXT or ANY. </parameters>
<output>Возвращает TRUE, если были найдены записи; возвращает FALSE, если записей не было найдено или произошла ошибка. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=628> 
<name>ocifetchinto</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Возвращает следующий ряд в массив (устарела)</short-description>
<description>int ocifetchinto ( resource $statement , array &$result [, int $mode = OCI_ASSOC + OCI_NUM ] ) 
 Данная функция устарела. Рекомендуемые альтернативы: oci_fetch_array(), oci_fetch_object(), oci_fetch_assoc() и oci_fetch_row(). Внимание
 Эта функция УСТАРЕЛА начиная с версии PHP 5.4.0. Использование этой функции не рекомендуется.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=629> 
<name>msql_field_seek</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Set field offset</short-description>
<description>bool msql_field_seek ( resource $result , int $field_offset ) 
 Seeks to the specified field offset. If the next call to msql_fetch_field() won&#039;t include a field offset, this field would be returned. </description>
<parameters>result - Обрабатываемый результат запроса,полученный с помощью функции msql_query().
field_offset - Числовое смещение поля.field_offset начинается с 1.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=630> 
<name>variant_sub</name>
<versions>(PHP 5)</versions>
<short-description>Subtracts the value of the right variant from the left variant value</short-description>
<description>mixed variant_sub ( mixed $left , mixed $right ) 
 Subtracts right from left. </description>
<parameters>left - The left operand. 
right - The right operand. </parameters>
<output>Variant Subtraction Rules If Then Both expressions are of the string type Subtraction One expression is a string type and the other a character Subtraction One expression is numeric and the other is a string Subtraction. Both expressions are numeric Subtraction Either expression is NULL NULL is returned Both expressions are empty Empty string is returned </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=631> 
<name>msql_connect</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Open mSQL connection</short-description>
<description>resource msql_connect ([ string $hostname ] ) 
 msql_connect() establishes a connection to a mSQL server. 
 If a second call is made to msql_connect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned. 
 The link to the server will be closed as soon as the execution of the script ends, unless it&#039;s closed earlier by explicitly calling msql_close(). </description>
<parameters>hostname - The hostname can also include a port number. e.g. hostname,port. </parameters>
<output>Returns a positive mSQL link identifier on success, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=632> 
<name>fbsql_list_dbs</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>List databases available on a FrontBase server</short-description>
<description>resource fbsql_list_dbs ([ resource $link_identifier ] ) 
 Return a result pointer containing the databases available from the current fbsql daemon. Use the fbsql_tablename() to traverse this result pointer. </description>
<parameters>link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Returns a result pointer or FALSE on error. </output>
<errors></errors>
<example><?php
$link = fbsql_connect('localhost', 'myname', 'secret');
$db_list = fbsql_list_dbs($link);
while ($row = fbsql_fetch_object($db_list)) {
    echo $row->Database . "\n";
}?></example>
<example_result>
 
database1
database2
database3
...
</example_result>
</object>

<object id=633> 
<name>ncurses_instr</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Reads string from terminal screen</short-description>
<description>int ncurses_instr ( string &$buffer ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>buffer - The characters. Attributes will be stripped. </parameters>
<output>Returns the number of characters. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=634> 
<name>debug_backtrace</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Выводит стек вызовов функций в массив</short-description>
<description>array debug_backtrace ([ int $options = DEBUG_BACKTRACE_PROVIDE_OBJECT [, int $limit = 0 ]] ) 
 debug_backtrace() выводит стек вызовов функций PHP в массив. </description>
<parameters>options - В версии 5.3.6, этот аргумент является битовой маской для следующих настроек: Настройки debug_backtrace() DEBUG_BACKTRACE_PROVIDE_OBJECT Требуется или нет заполнять данные "объектов". DEBUG_BACKTRACE_IGNORE_ARGS Требуется или нет не выводить данные с индексом "args", то есть списки аргументов всех функций/методов, для уменьшения расхода памяти. До версии 5.3.6 принимаются только значения TRUE или FALSE, которые означают, задана настройка DEBUG_BACKTRACE_PROVIDE_OBJECT или нет соответственно. 
limit - В версии 5.4.0, этот аргумент используется для ограничения количества вызовов функций, которые будут выведены. По умолчанию (limit=0) будет выведен весь стек вызовов. </parameters>
<output>Возвращает массив вложенных ассоциативных массивов (array). Описание элементов массива приведено ниже: </output>
<errors></errors>
<example><?php
// filename: /tmp/a.php
function a_test($str)
{    echo "\nHi: $str";
    var_dump(debug_backtrace());
}
a_test('friend');
?>

<?php
// filename: /tmp/b.php
include_once '/tmp/a.php';
?></example>
<example_result>
 
Hi: friend
array(2) {
[0]=>
array(4) {
    ["file"] => string(10) "/tmp/a.php"
    ["line"] => int(10)
    ["function"] => string(6) "a_test"
    ["args"]=>
    array(1) {
      [0] => &string(6) "friend"
    }
}
[1]=>
array(4) {
    ["file"] => string(10) "/tmp/b.php"
    ["line"] => int(2)
    ["args"] =>
    array(1) {
      [0] => string(10) "/tmp/a.php"
    }
    ["function"] => string(12) "include_once"
  }
}
</example_result>
</object>

<object id=635> 
<name>notes_drop_db</name>
<versions>(PHP 4 >= 4.0.5)</versions>
<short-description>Drop a Lotus Notes database</short-description>
<description>bool notes_drop_db ( string $database_name ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=636> 
<name>session_cache_limiter</name>
<versions>(PHP 4 >= 4.0.3, PHP 5)</versions>
<short-description>Get and/or set the current cache limiter</short-description>
<description>string session_cache_limiter ([ string $cache_limiter ] ) 
 session_cache_limiter() returns the name of the current cache limiter. 
 The cache limiter defines which cache control HTTP headers are sent to the client. These headers determine the rules by which the page content may be cached by the client and intermediate proxies. Setting the cache limiter to nocache disallows any client/proxy caching. A value of public permits caching by proxies and the client, whereas private disallows caching by proxies and permits the client to cache the contents. 
 In private mode, the Expire header sent to the client may cause confusion for some browsers, including Mozilla. You can avoid this problem by using private_no_expire mode. The Expire header is never sent to the client in this mode. 
 The cache limiter is reset to the default value stored in session.cache_limiter at request startup time. Thus, you need to call session_cache_limiter() for every request (and before session_start() is called). </description>
<parameters>cache_limiter - If cache_limiter is specified, the name of the current cache limiter is changed to the new value. </parameters>
<output>Returns the name of the current cache limiter. </output>
<errors></errors>
<example><?php
/* set the cache limiter to 'private' */
session_cache_limiter('private');
$cache_limiter = session_cache_limiter();
echo "The cache limiter is now set to $cache_limiter<br />";
?></example>
<example_result></example_result>
</object>

<object id=637> 
<name>m_transkeyval</name>
<versions>(PHP 5 >= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Add key/value pair to a transaction. Replaces deprecated transparam()</short-description>
<description>int m_transkeyval ( resource $conn , int $identifier , string $key , string $value ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
identifier - 
key - 
value - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=638> 
<name>ncurses_ungetch</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Put a character back into the input stream </short-description>
<description>int ncurses_ungetch ( int $keycode ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>keycode - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=639> 
<name>hw_cp</name>
<versions>(PHP 4)</versions>
<short-description>Copies objects</short-description>
<description>int hw_cp ( int $connection , array $object_id_array , int $destination_id ) 
 Copies the objects with object ids as specified in the second parameter to the collection with the id destination id. </description>
<parameters>connection - The connection identifier. 
object_id_array - An array of object ids. 
destination_id - The target collection id. </parameters>
<output>Returns the number of copied objects. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=640> 
<name>intl_is_failure</name>
<versions>(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)</versions>
<short-description>Check whether the given error code indicates failure</short-description>
<description>bool intl_is_failure ( int $error_code ) 
 </description>
<parameters>error_code - is a value that returned by functions: intl_get_error_code(), collator_get_error_code() . </parameters>
<output>TRUE if it the code indicates some failure, and FALSE in case of success or a warning. </output>
<errors></errors>
<example><?php
function check( $err_code )
{    var_export( intl_is_failure( $err_code ) );
    echo "\n";
}
check( U_ZERO_ERROR );
check( U_USING_FALLBACK_WARNING );
check( U_ILLEGAL_ARGUMENT_ERROR );
?></example>
<example_result>
 
false
false
true
</example_result>
</object>

<object id=641> 
<name>imagefill</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Flood fill</short-description>
<description>bool imagefill ( resource $image , int $x , int $y , int $color ) 
 Performs a flood fill starting at the given coordinate (top left is 0, 0) with the given color in the image. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
x - x-coordinate of start point. 
y - y-coordinate of start point. 
color - The fill color. A color identifier created with imagecolorallocate(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$im = imagecreatetruecolor(100, 100);
// sets background to red
$red = imagecolorallocate($im, 255, 0, 0);
imagefill($im, 0, 0, $red);
header('Content-type: image/png');
imagepng($im);
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=642> 
<name>swf_getframe</name>
<versions>(PHP 4)</versions>
<short-description>Get the frame number of the current frame</short-description>
<description>int swf_getframe ( void ) 
 The swf_getframe() function gets the number of the current frame. </description>
<parameters></parameters>
<output>Returns the current frame number, as an integer. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=643> 
<name>posix_strerror</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Retrieve the system error message associated with the given errno</short-description>
<description>string posix_strerror ( int $errno ) 
 Returns the POSIX system error message associated with the given errno. You may get the errno parameter by calling posix_get_last_error(). </description>
<parameters>errno - A POSIX error number, returned by posix_get_last_error(). If set to 0, then the string "Success" is returned. </parameters>
<output>Returns the error message, as a string. </output>
<errors></errors>
<example>
 </example>
<example_result>
 
No such process
</example_result>
</object>

<object id=644> 
<name>ovrimos_result</name>
<versions>(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)</versions>
<short-description>Retrieves the output column</short-description>
<description>string ovrimos_result ( int $result_id , mixed $field ) 
 Retrieves the output column specified by field. </description>
<parameters>result_id - A result identifier, returned by ovrimos_execute() or ovrimos_exec(). 
field - Either as a string with the field name or as an 1-based index. </parameters>
<output>Returns the column as a string, FALSE on failure. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=645> 
<name>XMLWriter::startCData</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Создать начальный тэг CDATA</short-description>
<description>bool XMLWriter::startCData ( void ) 
 Процедурный стиль bool xmlwriter_start_cdata ( resource $xmlwriter )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=646> 
<name>ftp_alloc</name>
<versions>(PHP 5)</versions>
<short-description>Резервирует место на диске для закачиваемого файла</short-description>
<description>bool ftp_alloc ( resource $ftp_stream , int $filesize [, string &$result ] ) 
 Посылает команду ALLO FTP-серверу для резервирования места под загружаемый файл. 
 Замечание: 
 Многие FTP-серверы не поддерживают эту команду. Такие серверы возвращают код неудачи (FALSE), что означает отсутствие поддержки этой команды, или код успешного выполнения (TRUE), означающий, что в резервировании нет необходимости и клиенту следует продолжать, будто операция была выполнена успешно. По этой причине эту функцию следует использовать с серверами, которые требуют обязательного резервирования. 
 </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером. 
filesize - Количество резервируемых байт. 
result - Текстовое представление ответа сервера будет возвращено по ссылке в аргумент result, если он указан. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$file = "/home/user/myfile";
/* соединение с сервером */
$conn_id = ftp_connect('ftp.example.com');
$login_result = ftp_login($conn_id, 'anonymous', 'user@example.com');
if (ftp_alloc($conn_id, filesize($file), $result)) {
  echo "Место на сервере успешно зарезервировано.  Отправляю $file.\n";
  ftp_put($conn_id, '/incomming/myfile', $file, FTP_BINARY);
} else {
  echo "Не удалось зарезервировать место на сервере. Ответ сервера: $result\n";
}
ftp_close($conn_id);
?></example>
<example_result></example_result>
</object>

<object id=647> 
<name>gettype</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает тип переменной</short-description>
<description>string gettype ( mixed $var ) 
 Возвращает тип PHP-переменной var. Внимание 
 Не используйте gettype() для проверки определенного типа, так как возвращаемая строка может измениться в последующих версиях. Вдобавок, эта операция довольно медленная, так как она использует сравнение строк. 
 Используйте функции is_* вместо нее. </description>
<parameters>var - Переменная, у которой проверяется тип. </parameters>
<output>Возможными значениями возвращаемой строки являются: "boolean" "integer" "double" (по историческим причинам в случае типа float возвращается "double", а не просто "float") "string" "array" "object" "resource" "NULL" "unknown type" </output>
<errors></errors>
<example><?php
$data = array(1, 1., NULL, new stdClass, 'foo');
foreach ($data as $value) {
    echo gettype($value), "\n";
}
?></example>
<example_result>
 
integer
double
NULL
object
string
</example_result>
</object>

<object id=648> 
<name>mb_strrchr</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Finds the last occurrence of a character in a string within another</short-description>
<description>string mb_strrchr ( string $haystack , string $needle [, bool $part = false [, string $encoding ]] ) 
 mb_strrchr() finds the last occurrence of needle in haystack and returns the portion of haystack. If needle is not found, it returns FALSE. </description>
<parameters>haystack - The string from which to get the last occurrence of needle 
needle - The string to find in haystack 
part - Determines which portion of haystack this function returns. If set to TRUE, it returns all of haystack from the beginning to the last occurrence of needle. If set to FALSE, it returns all of haystack from the last occurrence of needle to the end, 
encoding - Character encoding name to use. If it is omitted, internal character encoding is used. </parameters>
<output>Returns the portion of haystack. or FALSE if needle is not found. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=649> 
<name>grapheme_stripos</name>
<versions>(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)</versions>
<short-description>Find position (in grapheme units) of first occurrence of a case-insensitive string</short-description>
<description>int grapheme_stripos ( string $haystack , string $needle [, int $offset = 0 ] ) 
 Find position (in grapheme units) of first occurrence of a case-insensitive string </description>
<parameters>haystack - The string to look in. Must be valid UTF-8. 
needle - The string to look for. Must be valid UTF-8. 
offset - The optional $offset parameter allows you to specify where in haystack to start searching as an offset in grapheme units (not bytes or characters). The position returned is still relative to the beginning of haystack regardless of the value of $offset. </parameters>
<output>Returns the position as an integer. If needle is not found, grapheme_stripos() will return boolean FALSE. </output>
<errors></errors>
<example><?php
$char_a_ring_nfd = "a\xCC\x8A";  // 'LATIN SMALL LETTER A WITH RING ABOVE' (U+00E5) normalization form "D"
$char_o_diaeresis_nfd = "o\xCC\x88"; // 'LATIN SMALL LETTER O WITH DIAERESIS' (U+00F6) normalization form "D"
$char_O_diaeresis_nfd = "O\xCC\x88"; // 'LATIN CAPITAL LETTER O WITH DIAERESIS' (U+00D6) normalization form "D"
print grapheme_stripos( $char_a_ring_nfd . $char_a_ring_nfd . $char_o_diaeresis_nfd, $char_O_diaeresis_nfd);
?></example>
<example_result>
 
2
</example_result>
</object>

<object id=650> 
<name>ncurses_addstr</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Output text at current position </short-description>
<description>int ncurses_addstr ( string $text ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>text - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=651> 
<name>ifx_nullformat</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Sets the default return value on a fetch row</short-description>
<description>bool ifx_nullformat ( int $mode ) 
 Sets the default return value of a NULL-value on a fetch row. </description>
<parameters>mode - Mode "0" returns "", and mode "1" returns "NULL". </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=652> 
<name>crypt</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Необратимое хэширование строки</short-description>
<description>string crypt ( string $str [, string $salt ] ) 
 crypt() возвращает хэшированную строку, полученную с помощью стандартного алгоритма UNIX, основанного на DES, или другого алгоритма, имеющегося в системе. 
 Некоторые операционные системы поддерживают несколько алгоритмов хэширования. Иногда стандартный алгоритм, основанный на DES, заменяется алгоритмом на основе MD5. Вид хэширования определяется переданным аргументом salt (соль). До версии PHP 5.3, PHP определял доступные алгоритмы шифрования во время инсталляции, базируясь на системной функции crypt(). Если соль не указана, будет автоматически сгенерирована стандартная случайная двухсимвольная (DES) либо двенадцатисимвольная (MD5) соль, в зависимости от доступности алгоритма MD5 в crypt(). Предопределенная константа CRYPT_SALT_LENGTH позволяет определить максимально доступную длину соли в соответствии с используемыми алгоритмами. 
 Стандартная функция crypt() на основе DES копирует возвращает соль в качестве первых двух символов возвращаемой строки. Кроме того, она использует только первые восемь символов строки str, поэтому более длинные строки, начинающиеся с тех же восьми символов, сгенерируют один и тот же результат (при использовании одинаковой соли). 
 На системах, где функция crypt() поддерживает несколько алгоритмов хэширования, следующие константы устанавливаются в 0 или 1 в зависимости от доступности соответствующего алгоритма: CRYPT_STD_DES - Стандартное DES-шифрование с двухсимвольной солью из алфавита "./0-9A-Za-z""./0-9A-Za-z". Использование других символов в соли повлечет за собой отказ работы crypt(). CRYPT_EXT_DES - Расширенное DES-шифрование. "Соль" является девятисимвольной строкой, состоящей из символа подчеркивания, за которым следуют 4 байта счетчика итерации и 4 байта соли. Эти данные будут закодированы в виде печатаемых символов, 6 бит на символ, с меньшим значащим символом указанным первым. Значения от 0 до 63 кодируются как "./0-9A-Za-z". Использование других символов в соли повлечет за собой отказ работы crypt(). CRYPT_MD5 - MD5-шифрование с 12-символьной солью, начинающейся с $1$ CRYPT_BLOWFISH - Blowfish-шифрование со следующей солью: "$2a$", весовой параметр из двух цифр, "$" и 22 цифры из алфавита "./0-9A-Za-z". Использование других символов в соли повлечет за собой возвращение пустой строки. Весовой параметр из двух цифр является двоичным логарифмом счетчика итераций низлежащего хэширующего алгоритма, основанного на Blowfish, и должен быть в диапазоне 04-31, значения вне данного диапазона вызовут отказ crypt(). CRYPT_SHA256 - хэш SHA-256 с шестнадцатисимвольной солью, начинающейся с $5$. Если строка с солью начинается с &#039;rounds=<N>$&#039;, число N будет использовано для обозначения количества раундов хэширования, по аналогии с весовым параметром в Blowfish. По умолчанию используемое количество раундов равно 5000, минимально доступно 1000 и максимально 999,999,999. Любой значение вне этого диапазона будет усечено до ближайшего лимита. CRYPT_SHA512 - хэш SHA-512 с шестнадцатисимвольной солью, начинающейся с $6$. Если строка с солью начинается с &#039;rounds=<N>$&#039;, число N будет использовано для обозначения количества раундов хэширования, по аналогии с весовым параметром в Blowfish. По умолчанию используемое количество раундов равно 5000, минимально доступно 1000 и максимально 999,999,999. Любой значение вне этого диапазона будет усечено до ближайшего лимита. 
 Замечание: 
 Начиная с версии PHP 5.3.0, PHP использует свою собственную реализацию, которая будет использована при отсутствии в системе какого-либо алгоритма. </description>
<parameters>str - Хэшируемая строка. 
salt - Необязательный параметр с солью, на которой будет основано хэширование. Если не указан, поведение определяется по наличию реализованных алгоритмов в системе и может привести к неожиданным результатам. </parameters>
<output>Возвращает хэшированную строку или строку короче 13 символов, гарантированно отличающуюся от соли в случае ошибки. </output>
<errors></errors>
<example><?php
$password = crypt('mypassword'); // соль будет сгенерирована автоматически
/* Для проверки пароля в качестве параметра salt следует передавать результат работы
   crypt() целиком во избежание проблем при использовании различных
   алгоритмов (как уже было отмечено выше, стандартный DES-алгоритм
   использует 2-символьную соль, а MD5 - 12-символьную. */
if (crypt($user_input, $password) == $password) {
   echo "Пароль верен!";
}?></example>
<example_result>
 
Стандартный DES: rl.3StKT.4T8M
Расширенный DES: _J9..rasmBYk8r9AiWNc
MD5:             $1$rasmusle$rISCgZzpwk3UhDidwXvin0
Blowfish:        $2a$07$usesomesillystringfore2uDLvp1Ii2e./U9C8sBjqp8I90dH6hi
SHA-256:         $5$rounds=5000$usesomesillystri$KqJWpanXZHKq2BOB43TSaYhEWsQ1Lr5QNyPCDH/Tp.6
SHA-512:         $6$rounds=5000$usesomesillystri$D4IrlXatmP7rx3P3InaxBeoomnAihCKRVQP22JZ6EY47Wc6BkroIuUUBOov1i.S5KPgErtP/EN5mcO.ChWQW21
</example_result>
</object>

<object id=653> 
<name>ibase_errmsg</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Return error messages</short-description>
<description>string ibase_errmsg ( void ) 
 Returns the error message that resulted from the most recent InterBase function call. </description>
<parameters></parameters>
<output>Returns the error message as a string, or FALSE if no error occurred. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=654> 
<name>dbx_sort</name>
<versions>(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)</versions>
<short-description>Sort a result from a dbx_query by a custom sort function </short-description>
<description>bool dbx_sort ( object $result , string $user_compare_function ) 
 Sort a result from a dbx_query() call with a custom sort function. </description>
<parameters>result - A result set returned by dbx_query(). 
user_compare_function - The user-defined comparison function. It must accept two arguments and return an integer less than, equal to, or greater than zero if the first argument is considered to be respectively less than, equal to, or greater than the second. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
function user_re_order($a, $b) 
{    $rv = dbx_compare($a, $b, "parentid", DBX_CMP_DESC);
    if (!$rv) {
        $rv = dbx_compare($a, $b, "id", DBX_CMP_NUMBER);
    }
    return $rv;
}
$link   = dbx_connect(DBX_ODBC, "", "db", "username", "password")
    or die("Could not connect");
$result = dbx_query($link, "SELECT id, parentid, description FROM tbl ORDER BY id");
    // data in $result is now ordered by id
dbx_sort($result, "user_re_order");
    // data in $result is now ordered by parentid (descending), then by id
dbx_close($link);
?></example>
<example_result></example_result>
</object>

<object id=655> 
<name>hw_getusername</name>
<versions>(PHP 4)</versions>
<short-description>Name of currently logged in user</short-description>
<description>string hw_getusername ( int $connection ) 
 Returns the username of the connection. </description>
<parameters>connection - The connection identifier. </parameters>
<output>Returns the username as a string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=656> 
<name>imagetruecolortopalette</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Convert a true color image to a palette image</short-description>
<description>bool imagetruecolortopalette ( resource $image , bool $dither , int $ncolors ) 
 imagetruecolortopalette() converts a truecolor image to a palette image. The code for this function was originally drawn from the Independent JPEG Group library code, which is excellent. The code has been modified to preserve as much alpha channel information as possible in the resulting palette, in addition to preserving colors as well as possible. This does not work as well as might be hoped. It is usually best to simply produce a truecolor output image instead, which guarantees the highest output quality. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
dither - Indicates if the image should be dithered - if it is TRUE then dithering will be used which will result in a more speckled image but with better color approximation. 
ncolors - Sets the maximum number of colors that should be retained in the palette. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Create a new true color image
$im = imagecreatetruecolor(100, 100);
// Convert to palette-based with no dithering and 255 colors
imagetruecolortopalette($im, false, 255);
// Save the image
imagepng($im, './paletteimage.png');
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=657> 
<name>odbc_field_len</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get the length (precision) of a field</short-description>
<description>int odbc_field_len ( resource $result_id , int $field_number ) 
 Gets the length of the field referenced by number in the given result identifier. </description>
<parameters>result_id - The result identifier. 
field_number - The field number. Field numbering starts at 1. </parameters>
<output>Returns the field name as a string, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=658> 
<name>mysql_field_type</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает тип указанного поля из результата запроса</short-description>
<description>string mysql_field_type ( resource $result , int $field_offset ) 
 Функция mysql_field_type() аналогична функции mysql_field_name(). Аргументы одинаковы, но вместо имени колонки возвращается её тип. </description>
<parameters>result - Обрабатываемый результат запроса.Этот результат может быть получен с помощью функции mysql_query().
field_offset - Числовое смещение поля.field_offset начинается с 0. Еслиfield_offset не существует, генерируется ошибка уровняE_WARNING.</parameters>
<output>Поля могут быть следующих типов: "int", "real", "string", "blob" и других, подробно описанных &raquo; документации MySQL. </output>
<errors></errors>
<example><?php
mysql_connect("localhost", "mysql_username", "mysql_password");
mysql_select_db("mysql");
$result = mysql_query("SELECT * FROM func");
$fields = mysql_num_fields($result);
$rows   = mysql_num_rows($result);
$table  = mysql_field_table($result, 0);
echo "Ваша таблица '" . $table . "' содержит " . $fields . " поля и " . $rows . " запись\n";
echo "В таблице есть следующие поля:\n";
for ($i=0; $i < $fields; $i++) {
    $type  = mysql_field_type($result, $i);
    $name  = mysql_field_name($result, $i);
    $len   = mysql_field_len($result, $i);
    $flags = mysql_field_flags($result, $i);
    echo $type . " " . $name . " " . $len . " " . $flags . "\n";
}mysql_free_result($result);
mysql_close();
?></example>
<example_result>
 
Ваша таблица &#039;func&#039; содержит 4 поля и 1 запись
В таблице есть следующие поля:
string name 64 not_null primary_key binary
int ret 1 not_null
string dl 128 not_null
string type 9 not_null enum
</example_result>
</object>

<object id=659> 
<name>enchant_broker_dict_exists</name>
<versions>(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )</versions>
<short-description>Whether a dictionary exists or not. Using non-empty tag</short-description>
<description>bool enchant_broker_dict_exists ( resource $broker , string $tag ) 
 Tells if a dictionary exists or not, using a non-empty tags </description>
<parameters>broker - Broker resource 
tag - non-empty tag in the LOCALE format, ex: us_US, ch_DE, etc. </parameters>
<output>Returns TRUE when the tag exist or FALSE when not. </output>
<errors></errors>
<example><?php
$tag = 'en_US';
$r = enchant_broker_init();
if (enchant_broker_dict_exists($r,$tag)) {
    echo $tag . " dictionary found.\n";
}?></example>
<example_result></example_result>
</object>

<object id=660> 
<name>openssl_digest</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Computes a digest</short-description>
<description>string openssl_digest ( string $data , string $method [, bool $raw_output = false ] ) 
 Computes a digest hash value for the given data using a given method, and returns a raw or binhex encoded string. Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>data - The data. 
method - The digest method. 
raw_output - Setting to TRUE will return as raw output data, otherwise the return value is binhex encoded. </parameters>
<output>Returns the digested hash value on success или FALSE в случае возникновения ошибки. </output>
<errors>Emits an E_WARNING level error if an unknown signature algorithm is passed via the method parameter. </errors>
<example></example>
<example_result></example_result>
</object>

<object id=661> 
<name>imagefilledarc</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Draw a partial arc and fill it</short-description>
<description>bool imagefilledarc ( resource $image , int $cx , int $cy , int $width , int $height , int $start , int $end , int $color , int $style ) 
 Draws a partial arc centered at the specified coordinate in the given image. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
cx - x-coordinate of the center. 
cy - y-coordinate of the center. 
width - The arc width. 
height - The arc height. 
start - The arc start angle, in degrees. 
end - The arc end angle, in degrees. 0° is located at the three-o&#039;clock position, and the arc is drawn clockwise. 
color - A color identifier created with imagecolorallocate(). 
style - A bitwise OR of the following possibilities: IMG_ARC_PIE IMG_ARC_CHORD IMG_ARC_NOFILL IMG_ARC_EDGED IMG_ARC_PIE and IMG_ARC_CHORD are mutually exclusive; IMG_ARC_CHORD just connects the starting and ending angles with a straight line, while IMG_ARC_PIE produces a rounded edge. IMG_ARC_NOFILL indicates that the arc or chord should be outlined, not filled. IMG_ARC_EDGED, used together with IMG_ARC_NOFILL, indicates that the beginning and ending angles should be connected to the center - this is a good way to outline (rather than fill) a &#039;pie slice&#039;. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// create image
$image = imagecreatetruecolor(100, 100);
// allocate some colors
$white    = imagecolorallocate($image, 0xFF, 0xFF, 0xFF);
$gray     = imagecolorallocate($image, 0xC0, 0xC0, 0xC0);
$darkgray = imagecolorallocate($image, 0x90, 0x90, 0x90);
$navy     = imagecolorallocate($image, 0x00, 0x00, 0x80);
$darknavy = imagecolorallocate($image, 0x00, 0x00, 0x50);
$red      = imagecolorallocate($image, 0xFF, 0x00, 0x00);
$darkred  = imagecolorallocate($image, 0x90, 0x00, 0x00);
// make the 3D effect
for ($i = 60; $i > 50; $i--) {
   imagefilledarc($image, 50, $i, 100, 50, 0, 45, $darknavy, IMG_ARC_PIE);
   imagefilledarc($image, 50, $i, 100, 50, 45, 75 , $darkgray, IMG_ARC_PIE);
   imagefilledarc($image, 50, $i, 100, 50, 75, 360 , $darkred, IMG_ARC_PIE);
}
imagefilledarc($image, 50, 50, 100, 50, 0, 45, $navy, IMG_ARC_PIE);
imagefilledarc($image, 50, 50, 100, 50, 45, 75 , $gray, IMG_ARC_PIE);
imagefilledarc($image, 50, 50, 100, 50, 75, 360 , $red, IMG_ARC_PIE);

// flush image
header('Content-type: image/png');
imagepng($image);
imagedestroy($image);
?></example>
<example_result></example_result>
</object>

<object id=662> 
<name>ncurses_assume_default_colors</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Define default colors for color 0 </short-description>
<description>int ncurses_assume_default_colors ( int $fg , int $bg ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>fg - 
bg - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=663> 
<name>imap_scanmailbox</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним imap_listscan()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=664> 
<name>ncurses_scrl</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Scroll window content up or down without changing current position </short-description>
<description>int ncurses_scrl ( int $count ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>count - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=665> 
<name>unpack</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Распаковывает данные из бинарной строки</short-description>
<description>array unpack ( string $format , string $data ) 
 Распаковывает данные из бинарной строки в массив согласно заданному в format формату. 
 Распакованные данные хранятся в ассоциативном массиве. Для осуществления этого необходимо обозначить различные коды форматов и разделить их с помощью слэш /. Можно также передать замещающий аргумент, с помощью которого каждый ключ массива будет иметь порядковый номер после обозначенного имени ключа. </description>
<parameters>format - См. функцию pack() для разъяснения кодов форматов. 
data - Упакованные данные. </parameters>
<output>Возвращает ассоциативный массив, содержащий распакованные элементы бинарной строки. </output>
<errors></errors>
<example><?php
$binarydata = "\x04\x00\xa0\x00";
$array = unpack("cchars/nint", $binarydata);
?></example>
<example_result></example_result>
</object>

<object id=666> 
<name>tmpfile</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Создаёт временный файл</short-description>
<description>resource tmpfile ( void ) 
 Создаёт временный файл с уникальным именем, открывая его в режиме чтения и записи (w+), и возвращает файловый указатель. 
 Этот файл автоматически удаляется после закрытия (использования fclose()) или после завершения работы скрипта. 
 Для дополнительной информации, обратитесь к документации вашей системы по функции tmpfile(3), а также к заголовочному файлу stdio.h. </description>
<parameters></parameters>
<output>Возвращает дескриптор файла, аналогичный тому, который возращает функция fopen() для новых файлов или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$temp = tmpfile();
fwrite($temp, "записываем во временный файл");
fseek($temp, 0);
echo fread($temp, 1024);
fclose($temp); // происходит удаление файла
?></example>
<example_result>
 
записываем во временный файл
</example_result>
</object>

<object id=667> 
<name>strnatcasecmp</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сравнение строк без учета регистра с использованием алгоритма "natural order"</short-description>
<description>int strnatcasecmp ( string $str1 , string $str2 ) 
 Эта функция реализует алгоритм сравнения, упорядочивающий алфавитно-цифровые строки подобно тому, как это сделал бы человек. Эта функция подобна strnatcmp(), за исключением того, что сравнение происходит без учета регистра символов. Для получения дополнительной информации см. &raquo; Natural Order String Comparison </description>
<parameters>str1 - Первая строка. 
str2 - Вторая строка. </parameters>
<output>Подобно другим функциям сравнения строк, данная функция возвращает отрицательное число, если str1 меньше, чем str2, положительное число, если str1 больше, чем str2, и 0 если строки равны. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=668> 
<name>socket_bind</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Binds a name to a socket</short-description>
<description>bool socket_bind ( resource $socket , string $address [, int $port = 0 ] ) 
 Binds the name given in address to the socket described by socket. This has to be done before a connection is be established using socket_connect() or socket_listen(). </description>
<parameters>socket - A valid socket resource created with socket_create(). 
address - If the socket is of the AF_INET family, the address is an IP in dotted-quad notation (e.g. 127.0.0.1). 
port (Optional) - The port parameter is only used when binding an AF_INET socket, and designates the port on which to listen for connections. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Create a new socket
$sock = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);
// An example list of IP addresses owned by the computer
$sourceips['kevin']    = '127.0.0.1';
$sourceips['madcoder'] = '127.0.0.2';
// Bind the source address
socket_bind($sock, $sourceips['madcoder']);
// Connect to destination address
socket_connect($sock, '127.0.0.1', 80);
// Write
$request = 'GET / HTTP/1.1' . "\r\n" .
           'Host: example.com' . "\r\n\r\n";
socket_write($sock, $request);
// Close
socket_close($sock);
?></example>
<example_result></example_result>
</object>

<object id=669> 
<name>xml_error_string</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получение строки ошибки XML анализатора</short-description>
<description>string xml_error_string ( int $code ) 
 Получение строкового представления ошибки XML анализатора в соответствии с переданным кодом ошибки code. </description>
<parameters>code - Код ошибки, возвращаемый функцией xml_get_error_code(). </parameters>
<output>Возвращает строку с текстовым описанием кода ошибки code или FALSE, если описания не найдено. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=670> 
<name>gmp_xor</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Побитовое исключающее ИЛИ</short-description>
<description>resource gmp_xor ( resource $a , resource $b ) 
 Вычисляет побитовое исключающее ИЛИ (XOR) двух GMP чисел. </description>
<parameters>a - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.
b - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.</parameters>
<output>Число GMP. </output>
<errors></errors>
<example><?php
$xor1 = gmp_init("1101101110011101", 2);
$xor2 = gmp_init("0110011001011001", 2);
$xor3 = gmp_xor($xor1, $xor2);
echo gmp_strval($xor3, 2) . "\n";
?></example>
<example_result>
 
1011110111000100
</example_result>
</object>

<object id=671> 
<name>is_bool</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Проверяет, является ли переменная булевой </short-description>
<description>bool is_bool ( mixed $var ) 
 Проверяет, является ли данная переменная булевой. </description>
<parameters>var - Проверяемая переменная. </parameters>
<output>Возвращает TRUE, если var является переменной типа boolean, или FALSE в противном случае. </output>
<errors></errors>
<example><?php
$a = false;
$b = 0;
// Так как $a является булевой переменной, функция вернет true
if (is_bool($a) === true) {
    echo "Да, это булевая переменная";
}
// Так как $b не является булевой переменной, функция вернет false
if (is_bool($b) === false) {
    echo "Нет, это не булевая переменная";
}?></example>
<example_result></example_result>
</object>

<object id=672> 
<name>dba_popen</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Open database persistently</short-description>
<description>resource dba_popen ( string $path , string $mode [, string $handler [, mixed $... ]] ) 
 dba_popen() establishes a persistent database instance for path with mode using handler. </description>
<parameters>path - Commonly a regular path in your filesystem. 
mode - It is r for read access, w for read/write access to an already existing database, c for read/write access and database creation if it doesn&#039;t currently exist, and n for create, truncate and read/write access. 
handler - The name of the handler which shall be used for accessing path. It is passed all optional parameters given to dba_popen() and can act on behalf of them. </parameters>
<output>Returns a positive handle on success или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=673> 
<name>ncurses_update_panels</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Refreshes the virtual screen to reflect the relations between panels in the stack</short-description>
<description>void ncurses_update_panels ( void ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=674> 
<name>fgetc</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Считывает символ из файла</short-description>
<description>string fgetc ( resource $handle ) 
 Считывает символ из переданного указателя на файл. </description>
<parameters>handle - Указатель на файл должен быть корректным и указыватьна файл, успешно открытый функциями fopen() илиfsockopen() (и все еще не закрытым функцией fclose()).</parameters>
<output>Возвращает строку с одним символом, прочтенным из файла, на который указывает handle. Возвращает FALSE при достижении EOF. </output>
<errors></errors>
<example><?php
$fp = fopen('somefile.txt', 'r');
if (!$fp) {
    echo 'Ошибка при открытии файла somefile.txt';
}while (false !== ($char = fgetc($fp))) {
    echo "$char\n";
}?></example>
<example_result></example_result>
</object>

<object id=675> 
<name>sybase_num_fields</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the number of fields in a result set</short-description>
<description>int sybase_num_fields ( resource $result ) 
 sybase_num_fields() returns the number of fields in a result set. </description>
<parameters>result - </parameters>
<output>Returns the number of fields as an integer. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=676> 
<name>udm_check_charset</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)</versions>
<short-description>Проверяет, известен ли данный набор символов mnogosearch</short-description>
<description>bool udm_check_charset ( resource $agent , string $charset ) 
 Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=677> 
<name>stripslashes</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Удаляет экранирование символов</short-description>
<description>string stripslashes ( string $str ) 
 Удаляет экранирующие символы. 
 Замечание: 
 Если включена директива magic_quotes_sybase, вместо обратных слэшей будут удаляться двойные одинарные кавычки. 
 Функцию stripslashes() можно использовать, например, если директива конфигурации magic_quotes_gpc имеет значение on (она включена по умолчанию), и экранирование символов не требуется. Например, данные не вставляются в базу данных, а просто выводятся в браузер. </description>
<parameters>str - Входная строка. </parameters>
<output>Возвращает строку с вырезанными обратными слэшами. (\&#039; становится &#039; и т.п.) Двойные обратные слэши (\\) становятся одинарными (\). </output>
<errors></errors>
<example><?php
$str = "Ваc зовут O\'reilly?";
// выводит: Вас зовут O'reilly?
echo stripslashes($str);
?></example>
<example_result>
 
Array
(
    [0] => f&#039;oo
    [1] => b&#039;ar
    [2] => Array
        (
            [0] => fo&#039;o
            [1] => b&#039;ar
        )

)
</example_result>
</object>

<object id=678> 
<name>ctype_lower</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Проверяет наличие символов в нижнем регистре</short-description>
<description>bool ctype_lower ( string $text ) 
 Проверяет, все ли символы в переданной строке text являются буквами в нижнем регистре. </description>
<parameters>text - Проверяемая строка. </parameters>
<output>Возвращает TRUE, если каждый символ в строке text является буквой в нижнем регистре в текущей локали. </output>
<errors></errors>
<example><?php
$strings = array('aac123', 'qiutoas', 'QASsdks');
foreach ($strings as $testcase) {
    if (ctype_lower($testcase)) {
        echo "Строка $testcase состоит только из букв в нижнем регистре.\n";
    } else {
        echo "Строка $testcase не состоит только из букв в нижнем регистре.\n";
    }
}?></example>
<example_result>
 
Строка aac123 не состоит только из букв в нижнем регистре.
Строка qiutoas состоит только из букв в нижнем регистре.
Строка QASsdks не состоит только из букв в нижнем регистре.
</example_result>
</object>

<object id=679> 
<name>ftp_nb_fput</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Загружает предварительно открытый файл на FTP-сервер в асинхронном режиме</short-description>
<description>int ftp_nb_fput ( resource $ftp_stream , string $remote_file , resource $handle , int $mode [, int $startpos = 0 ] ) 
 ftp_nb_fput() закачивает данные из дескриптора файла в удалённый файл на FTP-сервере. 
 Разница между этой функцией и ftp_fput() заключается в том, что эта функция загружает файл асинхронно, так что ваша программа может совершать другие операции, пока файл закачивается. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером. 
remote_file - Путь к удалённому файлу. 
handle - Открытый файловый дескриптор локального файла. Чтение прекращается при достижении конца файла. 
mode - Режим передачи. Должен быть либо FTP_ASCII, либо FTP_BINARY. 
startpos - Позиция начала загрузки в удаленном файле.</parameters>
<output>Возвращает FTP_FAILED, FTP_FINISHED или FTP_MOREDATA. </output>
<errors></errors>
<example><?php
$file = 'index.php';
$fp = fopen($file, 'r');
$conn_id = ftp_connect($ftp_server);
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);
// Начало закачивания
$ret = ftp_nb_fput($conn_id, $file, $fp, FTP_BINARY);
while ($ret == FTP_MOREDATA) {
   // производим какие-то действия ...
   echo ".";
   // продолжение закачивания ...
   $ret = ftp_nb_continue($conn_id);
}if ($ret != FTP_FINISHED) {
   echo "При закачивании файла произошла ошибка...";
   exit(1);
}
fclose($fp);
?></example>
<example_result></example_result>
</object>

<object id=680> 
<name>swf_shapecurveto</name>
<versions>(PHP 4)</versions>
<short-description>Draw a quadratic bezier curve between two points</short-description>
<description>void swf_shapecurveto ( float $x1 , float $y1 , float $x2 , float $y2 ) 
 Draws a quadratic bezier curve from the current location, though the two given points. 
 The current position is then set to the point defined by the x2 and y2 parameters. </description>
<parameters>x1 - x-coordinate of the first point. 
y1 - y-coordinate of the first point. 
x2 - x-coordinate of the second point. 
y2 - y-coordinate of the second point. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=681> 
<name>ingres_field_precision</name>
<versions>(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)</versions>
<short-description>Get the precision of a field</short-description>
<description>int ingres_field_precision ( resource $result , int $index ) 
 ingres_field_precision() returns the precision of a field. This value is used only for decimal, float, and money SQL data types. For detailed information, see the Ingres OpenAPI User Guide, Appendix "Data Types" in the Ingres documentation. 
 Замечание: Related Configurations
 
 See ingres.array_index_start in Runtime Configuration </description>
<parameters>result - The query result identifier 
index - index is the field whose precision will be retrieved. </parameters>
<output>Returns the field precision as an integer </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=682> 
<name>strtr</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Преобразует заданные символы или заменяет подстроки</short-description>
<description>string strtr ( string $str , string $from , string $to ) string strtr ( string $str , array $replace_pairs )</description>
<parameters>str - Заменяемая строка (string). 
from - Строка (string), которая будет заменена на строку to. 
to - Строка (string), заменяющая строку from. 
replace_pairs - Параметр replace_pairs может быть использован вместо to и from, в этом случае он является массивом (array) и имеет форму array(&#039;from&#039; => &#039;to&#039;, ...). </parameters>
<output>Возвращает строку (string) с произведенными в ней заменами. </output>
<errors></errors>
<example><?php
//В этой форме strtr() осуществляет побайтное преобразование
//Таким образом, здесь подразумевается однобайтная кодировка:
$addr = strtr($addr, "äåö", "aao");
?></example>
<example_result>
 
hello all, I said hi
</example_result>
</object>

<object id=683> 
<name>sybase_fetch_object</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Fetch a row as an object</short-description>
<description>object sybase_fetch_object ( resource $result [, mixed $object ] ) 
 sybase_fetch_object() is similar to sybase_fetch_assoc(), with one difference - an object is returned, instead of an array. 
 Speed-wise, the function is identical to sybase_fetch_array(), and almost as quick as sybase_fetch_row() (the difference is insignificant). </description>
<parameters>result - 
object - Use the second object to specify the type of object you want to return. If this parameter is omitted, the object will be of type stdClass. </parameters>
<output>Returns an object with properties that correspond to the fetched row, or FALSE if there are no more rows. </output>
<errors></errors>
<example><?php
    class Foo {
        var $foo, $bar, $baz;
    }
    // {...]
    $qrh= sybase_query('SELECT foo, bar, baz FROM example');
    $foo= sybase_fetch_object($qrh, 'Foo');
    $bar= sybase_fetch_object($qrh, new Foo());
    // {...]
?></example>
<example_result></example_result>
</object>

<object id=684> 
<name>imagecreatefromgd</name>
<versions>(PHP 4 >= 4.0.7, PHP 5)</versions>
<short-description>Create a new image from GD file or URL</short-description>
<description>resource imagecreatefromgd ( string $filename ) 
 Create a new image from GD file or URL. Подсказка
 Для этой функции вы можете использовать URLв качестве имени файла, если была включена опция fopen wrappers. Смотрите болееподробную информацию об определении имени файла в описании функцииfopen(). Смотрите также список поддерживаемых оберток URL, их возможности, замечания по использованию и списокпредопределенных констант в Поддерживаемые протоколы и обработчики (wrappers).</description>
<parameters>filename - Path to the GD file. </parameters>
<output>Возвращает ресурс изображения в случае успеха, или FALSE в случае ошибки.</output>
<errors></errors>
<example><?php
// Load the gd image
$im = @imagecreatefromgd('./test.gd');
// Test if the image was loaded
if(!is_resource($im))
{     die('Unable to load gd image!');
}
// Do image operations here
// Save the image
imagegd($im, './test_updated.gd');
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=685> 
<name>mb_output_handler</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Callback function converts character encoding in output buffer</short-description>
<description>string mb_output_handler ( string $contents , int $status ) 
 mb_output_handler() is ob_start() callback function. mb_output_handler() converts characters in the output buffer from internal character encoding to HTTP output character encoding. </description>
<parameters>contents - The contents of the output buffer. 
status - The status of the output buffer. </parameters>
<output>The converted string. </output>
<errors></errors>
<example><?php
mb_http_output("UTF-8");
ob_start("mb_output_handler");
?></example>
<example_result></example_result>
</object>

<object id=686> 
<name>date_modify</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Псевдоним DateTime::modify()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=687> 
<name>imagedestroy</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Destroy an image</short-description>
<description>bool imagedestroy ( resource $image ) 
 imagedestroy() frees any memory associated with image image. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// create a 100 x 100 image
$im = imagecreatetruecolor(100, 100);
// alter or save the image
// frees image from memory
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=688> 
<name>empty</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Проверяет, пуста ли переменная</short-description>
<description>bool empty ( mixed $var ) 
 Проверяет, пуста ли переменная. </description>
<parameters>var - Проверяемая переменная </parameters>
<output>Возвращает FALSE, если var содержит непустое и ненулевое значение. </output>
<errors></errors>
<example><?php
$var = 0;
// Принимает значение true, потому что $var пусто
if (empty($var)) {
    echo '$var или 0, или пусто, или вообще не определена';
}
// Принимает значение true, потому что $var определена
if (isset($var)) {
    echo '$var определена, даже если она пустая';
}?></example>
<example_result>
 
bool(false)
bool(false)
bool(false)
bool(false)
bool(false)
bool(false)
</example_result>
</object>

<object id=689> 
<name>swf_actiongotolabel</name>
<versions>(PHP 4)</versions>
<short-description>Display a frame with the specified label</short-description>
<description>void swf_actiongotolabel ( string $label ) 
 The swf_actiongotolabel() function displays the frame with the label given by the label parameter and then stops. </description>
<parameters>label - The frame label. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=690> 
<name>ncurses_getmouse</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Reads mouse event</short-description>
<description>bool ncurses_getmouse ( array &$mevent ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>mevent - Event options will be delivered in this parameter which has to be an array, passed by reference (see example below). </parameters>
<output>Returns FALSE if a mouse event is actually visible in the given window, otherwise returns TRUE. </output>
<errors></errors>
<example><?php
switch (ncurses_getch()){
  case NCURSES_KEY_MOUSE:
    if (!ncurses_getmouse($mevent)){
      if ($mevent["mmask"] & NCURSES_MOUSE_BUTTON1_PRESSED){
        $mouse_x = $mevent["x"]; // Save mouse position
        $mouse_y = $mevent["y"];
      }
    }
  break;
  default:
    /* .... */
}
?></example>
<example_result></example_result>
</object>

<object id=691> 
<name>mysql_unbuffered_query</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Посылает запрос MySQL без авто-обработки результата и его буферизации</short-description>
<description>resource mysql_unbuffered_query ( string $query [, resource $link_identifier ] ) 
 mysql_unbuffered_query() посылает запрос MySQL query без автоматической обработки и буферизации её результата, в отличие от функции mysql_query(). Это позволяет сохранить достаточно большое количество памяти для SQL-запросов, возвращающих большое количество данных. Кроме того, вы можете начать работу с полученными данными сразу после того, как первый ряд был получен: вам не приходится ждать до конца SQL-запроса. При использовании mysql_unbuffered_query() с несколькими соединениями MySQL, вы должны указать необязательный параметр link_identifier. </description>
<parameters>query - Запускаемый SQL-запрос. 
link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Для SELECT, SHOW, DESCRIBE и EXPLAIN запросов mysql_unbuffered_query() возвращает resource в случае успеха, или FALSE в случае ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=692> 
<name>XMLWriter::endDTD</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Завершить текущий DTD</short-description>
<description>bool XMLWriter::endDTD ( void ) 
 Процедурный стиль bool xmlwriter_end_dtd ( resource $xmlwriter )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=693> 
<name>cyrus_close</name>
<versions>(PHP 4 >= 4.1.0, PECL cyrus 1.0)</versions>
<short-description>Закрывает соединение с сервером Cyrus IMAP</short-description>
<description>bool cyrus_close ( resource $connection ) 
 Закрывает соединение с сервером Cyrus IMAP. </description>
<parameters>connection - Дескриптор соединения. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=694> 
<name>sqlite_close</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Закрывает открытую базу данных SQLite</short-description>
<description>void sqlite_close ( resource $dbhandle ) 
 Закрывает базу данных, идентификатор соединения с которой передан через аргумент dbhandle. Если соединение с базой данных было постоянным, также удаляет это соединение из списка постоянных. </description>
<parameters>dbhandle - Ресурс базы данных SQLite, полученный из функции sqlite_open() в случае использования процедурного подхода. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
$dbhandle = sqlite_open('sqlitedb');
sqlite_close($dbhandle);
?></example>
<example_result></example_result>
</object>

<object id=695> 
<name>fbsql_num_fields</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Get number of fields in result</short-description>
<description>int fbsql_num_fields ( resource $result ) 
 Returns the number of fields in the given result set. </description>
<parameters>result - Идентификатор результата запроса, полученный изfbsql_query() илиfbsql_db_query().</parameters>
<output>Returns the number of fields, as an integer. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=696> 
<name>ifx_fieldproperties</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>List of SQL fieldproperties</short-description>
<description>array ifx_fieldproperties ( resource $result_id ) 
 Returns the Informix SQL fieldproperties of every field in the query as an associative array. Properties are encoded as: "SQLTYPE;length;precision;scale;ISNULLABLE" where SQLTYPE = the Informix type like "SQLVCHAR" etc. and ISNULLABLE = "Y" or "N". </description>
<parameters>result_id - result_id is a valid resultid returned by ifx_query() or ifx_prepare() (select type queries only!). </parameters>
<output>Returns an associative array with fieldnames as key and the SQL fieldproperties as data for a query with result_id. Returns FALSE on errors. </output>
<errors></errors>
<example><?php
$properties = ifx_fieldproperties($resultid);
if (!isset($properties)) {
    /* ... error ... */
}
foreach ($properties as $fname => $val) {
    echo "$fname:\t property = $val\n";
}?></example>
<example_result></example_result>
</object>

<object id=697> 
<name>ncurses_noqiflush</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Do not flush on signal characters</short-description>
<description>void ncurses_noqiflush ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=698> 
<name>bzerrstr</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Возвращает строку ошибки работы с bzip2</short-description>
<description>string bzerrstr ( resource $bz ) 
 Возвращает строку с ошибкой bzip2, произошедшей с переданным указателем на файл. </description>
<parameters>bz - Указатель на файл. Должен быть корректным и указывать на файл, успешно открытый bzopen(). </parameters>
<output>Возвращает строку, содержащую сообщение об ошибке. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=699> 
<name>pclose</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Закрывает файловый указатель процесса</short-description>
<description>int pclose ( resource $handle ) 
 Закрывает файловый указатель на канал, открытый при помощи popen(). </description>
<parameters>handle - Файловый указатель должен быть действующим и должен быть получен успешным вызовом функции popen(). </parameters>
<output>Возвращает статус выхода завершающегося процесса. В случае ошибки возвращается -1. </output>
<errors></errors>
<example><?php
$handle = popen('/bin/ls', 'r');
pclose($handle);
?></example>
<example_result></example_result>
</object>

<object id=700> 
<name>ifx_fetch_row</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Get row as an associative array</short-description>
<description>array ifx_fetch_row ( resource $result_id [, mixed $position ] ) 
 Fetches one row of data from the result associated with the specified result identifier. 
 Subsequent calls to ifx_fetch_row() would return the next row in the result set, or FALSE if there are no more rows. </description>
<parameters>result_id - result_id is a valid resultid returned by ifx_query() or ifx_prepare() (select type queries only!). 
position - An optional parameter for a "fetch" operation on "scroll" cursors: NEXT, PREVIOUS, CURRENT, FIRST, LAST or a number. If you specify a number, an "absolute" row fetch is executed. This parameter is optional, and only valid for SCROLL cursors. </parameters>
<output>Returns an associative array that corresponds to the fetched row, or FALSE if there are no more rows. </output>
<errors></errors>
<example><?php
$rid = ifx_prepare ("select * from emp where name like " . $name,
                     $connid, IFX_SCROLL);
if (! $rid) {
    /* ... error ... */
}
$rowcount = ifx_affected_rows($rid);
if ($rowcount > 1000) {
    printf ("Too many rows in result set (%d)\n<br />", $rowcount);
    die ("Please restrict your query<br />\n");
}if (! ifx_do ($rid)) {
   /* ... error ... */
}
$row = ifx_fetch_row ($rid, "NEXT");
while (is_array($row)) {
    for (reset($row); $fieldname=key($row); next($row)) {
        $fieldvalue = $row[$fieldname];
        printf ("%s = %s,", $fieldname, $fieldvalue);
    }
    printf("\n<br />");
    $row = ifx_fetch_row($rid, "NEXT");
}ifx_free_result ($rid);
?></example>
<example_result></example_result>
</object>

<object id=701> 
<name>imagecolorallocatealpha</name>
<versions>(PHP 4 >= 4.3.2, PHP 5)</versions>
<short-description>Allocate a color for an image</short-description>
<description>int imagecolorallocatealpha ( resource $image , int $red , int $green , int $blue , int $alpha ) 
 imagecolorallocatealpha() behaves identically to imagecolorallocate() with the addition of the transparency parameter alpha. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
red - Значение красного компонента цвета.
green - Значение зеленого компонента цвета.
blue - Значение синего компонента цвета.
alpha - A value between 0 and 127. 0 indicates completely opaque while 127 indicates completely transparent. </parameters>
<output>A color identifier or FALSE if the allocation failed. </output>
<errors></errors>
<example><?php
$size = 300;
$image=imagecreatetruecolor($size, $size);
// something to get a white background with black border
$back = imagecolorallocate($image, 255, 255, 255);
$border = imagecolorallocate($image, 0, 0, 0);
imagefilledrectangle($image, 0, 0, $size - 1, $size - 1, $back);
imagerectangle($image, 0, 0, $size - 1, $size - 1, $border);
$yellow_x = 100;
$yellow_y = 75;
$red_x    = 120;
$red_y    = 165;
$blue_x   = 187;
$blue_y   = 125;
$radius   = 150;
// allocate colors with alpha values
$yellow = imagecolorallocatealpha($image, 255, 255, 0, 75);
$red    = imagecolorallocatealpha($image, 255, 0, 0, 75);
$blue   = imagecolorallocatealpha($image, 0, 0, 255, 75);
// drawing 3 overlapped circle
imagefilledellipse($image, $yellow_x, $yellow_y, $radius, $radius, $yellow);
imagefilledellipse($image, $red_x, $red_y, $radius, $radius, $red);
imagefilledellipse($image, $blue_x, $blue_y, $radius, $radius, $blue);
// don't forget to output a correct header!
header('Content-Type: image/png');
// and finally, output the result
imagepng($image);
imagedestroy($image);
?></example>
<example_result></example_result>
</object>

<object id=702> 
<name>mysql_free_result</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Освобождает память от результата запроса</short-description>
<description>bool mysql_free_result ( resource $result ) 
 mysql_free_result() высвободит всю память, занимаемую результатом, на который ссылается переданный дескриптор result. 
 mysql_free_result() нуждается в вызове только в том случае, если вы всерьёз обеспокоены тем, сколько памяти используют ваши запросы к БД, возвращающие большое количество данных. Вся память, используемая для хранения этих данных автоматически очистится в конце работы скрипта. </description>
<parameters>result - Обрабатываемый результат запроса.Этот результат может быть получен с помощью функции mysql_query().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$result = mysql_query("SELECT id,email FROM people WHERE id = '42'");
if (!$result) {
    echo 'Не удалось выполнить запрос: ' . mysql_error();
    exit;
}/* Используем результат, подразумевая, что после этого он нам больше не нужен */
$row = mysql_fetch_assoc($result);
/* Теперь освобождаем результат и продолжаем дальнейшую работу над нашим скриптом */
mysql_free_result($result);
echo $row['id'];
echo $row['email'];
?></example>
<example_result></example_result>
</object>

<object id=703> 
<name>gethostbynamel</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает список адресов IPv4, соответствующих переданному доменному имени узла </short-description>
<description>array gethostbynamel ( string $hostname ) 
 Возвращает список адресов IPv4, в которые разрешается доменное имя узла hostname. </description>
<parameters>hostname - Имя узла. </parameters>
<output>Возвращает массив адресов IPv4 или FALSE, если hostname не может быть разрешено. </output>
<errors></errors>
<example><?php
$hosts = gethostbynamel('www.example.com');
print_r($hosts);
?></example>
<example_result>
 
Array
(
    [0] => 192.0.34.166
)
</example_result>
</object>

<object id=704> 
<name>show_source</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним highlight_file()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=705> 
<name>ibase_connect</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Open a connection to an InterBase database</short-description>
<description>resource ibase_connect ([ string $database [, string $username [, string $password [, string $charset [, int $buffers [, int $dialect [, string $role [, int $sync ]]]]]]]] ) 
 Establishes a connection to an InterBase server. 
 In case a second call is made to ibase_connect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned. The link to the server will be closed as soon as the execution of the script ends, unless it&#039;s closed earlier by explicitly calling ibase_close(). </description>
<parameters>database - The database argument has to be a valid path to database file on the server it resides on. If the server is not local, it must be prefixed with either &#039;hostname:&#039; (TCP/IP), &#039;//hostname/&#039; (NetBEUI) or &#039;hostname@&#039; (IPX/SPX), depending on the connection protocol used. 
username - The user name. Can be set with the ibase.default_user php.ini directive. 
password - The password for username. Can be set with the ibase.default_password php.ini directive. 
charset - charset is the default character set for a database. 
buffers - buffers is the number of database buffers to allocate for the server-side cache. If 0 or omitted, server chooses its own default. 
dialect - dialect selects the default SQL dialect for any statement executed within a connection, and it defaults to the highest one supported by client libraries. Functional only with InterBase 6 and up. 
role - Functional only with InterBase 5 and up. 
sync - </parameters>
<output>Returns an InterBase link identifier on success, or FALSE on error. </output>
<errors>If you get some error like "arithmetic exception, numeric overflow, or string truncation. Cannot transliterate character between character sets" (this occurs when you try use some character with accents) when using this and after ibase_query() you must set the character set (i.e. ISO8859_1 or your current character set). </errors>
<example><?php
$host = 'localhost:/path/to/your.gdb';
$dbh = ibase_connect($host, $username, $password);
$stmt = 'SELECT * FROM tblname';
$sth = ibase_query($dbh, $stmt);
while ($row = ibase_fetch_object($sth)) {
    echo $row->email, "\n";
}ibase_free_result($sth);
ibase_close($dbh);
?></example>
<example_result></example_result>
</object>

<object id=706> 
<name>PDF_delete</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Удаляет объект PDFlib</short-description>
<description>bool PDF_delete ( resource $pdfdoc ) 
 Удаляет объект PDFlib и освобождает все внутренние ресурсы. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=707> 
<name>pspell_clear_session</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Очищает текущую сессию</short-description>
<description>bool pspell_clear_session ( int $dictionary_link ) 
 pspell_clear_session() очищает текущую сессию. Текущий список слов очищается, и, например, если попытаться сохранить его с помощью pspell_save_wordlist(), ничего не произойдет. </description>
<parameters>dictionary_link - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$pspell_config = pspell_config_create("en");
pspell_config_personal($pspell_config, "/var/dictionaries/custom.pws");
$pspell_link = pspell_new_config($pspell_config);
pspell_add_to_personal($pspell_link, "Vlad");
pspell_clear_session($pspell_link);
pspell_save_wordlist($pspell_link);    //Слово "Vlad" не будет сохранено
?></example>
<example_result></example_result>
</object>

<object id=708> 
<name>snmp3_real_walk</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Return all objects including their respective object ID within the specified one</short-description>
<description>array snmp3_real_walk ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] ) 
 The snmp3_real_walk() function is used to traverse over a number of SNMP objects starting from object_id and return not only their values but also their object ids. </description>
<parameters>host - The hostname of the SNMP agent (server). 
sec_name - the security name, usually some kind of username 
sec_level - the security level (noAuthNoPriv|authNoPriv|authPriv) 
auth_protocol - the authentication protocol (MD5 or SHA) 
auth_passphrase - the authentication pass phrase 
priv_protocol - the privacy protocol (DES or AES) 
priv_passphrase - the privacy pass phrase 
object_id - The SNMP object id. 
timeout - The number of microseconds until the first timeout. 
retries - The number of times to retry if timeouts occur. </parameters>
<output>Returns an associative array of the SNMP object ids and their values on success or FALSE on error. In case of an error, an E_WARNING message is shown. </output>
<errors></errors>
<example><?php
 var_export(snmp3_real_walk('localhost', 'james', 'authPriv', 'SHA', 'secret007', 'AES', 'secret007', 'IF-MIB::ifName'));
?></example>
<example_result>
 
array (
  &#039;IF-MIB::ifName.1&#039; => &#039;STRING: lo&#039;,
  &#039;IF-MIB::ifName.2&#039; => &#039;STRING: eth0&#039;,
  &#039;IF-MIB::ifName.3&#039; => &#039;STRING: eth2&#039;,
  &#039;IF-MIB::ifName.4&#039; => &#039;STRING: sit0&#039;,
  &#039;IF-MIB::ifName.5&#039; => &#039;STRING: sixxs&#039;,
)
</example_result>
</object>

<object id=709> 
<name>posix_setgid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Set the GID of the current process</short-description>
<description>bool posix_setgid ( int $gid ) 
 Set the real group ID of the current process. This is a privileged function and needs appropriate privileges (usually root) on the system to be able to perform this function. The appropriate order of function calls is posix_setgid() first, posix_setuid() last. 
 Замечание: 
 If the caller is a super user, this will also set the effective group id. </description>
<parameters>gid - The group id. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=710> 
<name>ibase_blob_echo</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Output blob contents to browser</short-description>
<description>bool ibase_blob_echo ( string $blob_id ) bool ibase_blob_echo ( resource $link_identifier , string $blob_id )</description>
<parameters>link_identifier - An InterBase link identifier. If omitted, the last opened link is assumed. 
blob_id - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=711> 
<name>serialize</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Генерирует пригодное для хранения представление переменной</short-description>
<description>string serialize ( mixed $value ) 
 Генерирует пригодное для хранения представление переменной 
 Это полезно для хранения или передачи значений PHP между скриптами без потери их типа и структуры. 
 Для превращения сериализованной строки обратно в PHP-значение, используйте функцию unserialize(). </description>
<parameters>value - Значение, которое необходимо сериализовать. serialize() обрабатывает все типы, кроме resource. Возможно также сериализовать массивы, которые содержат ссылки на себя. Циклические ссылки внутри сериализуемого массива/объекта также сохраняются. Любые другие ссылки будут потеряны. </parameters>
<output>Возвращает строку, содержащую потоковое представление переменной value, которая может быть сохранена где угодно. </output>
<errors></errors>
<example><?php
// $session_data содержит многомерный массив с сессионной
// информацией о текущем пользователе. Мы используем serialize() для сохранения
// этой информации в базе данных в конце запроса.
$conn = odbc_connect("webdb", "php", "chicken");
$stmt = odbc_prepare($conn,
      "UPDATE sessions SET data = ? WHERE id = ?");
$sqldata = array (serialize($session_data), $_SERVER['PHP_AUTH_USER']);
if (!odbc_execute($stmt, $sqldata)) {
    $stmt = odbc_prepare($conn,
     "INSERT INTO sessions (id, data) VALUES(?, ?)");
    if (!odbc_execute($stmt, $sqldata)) {
        /* Код, выполняемый при ошибке.. */
    }
}?></example>
<example_result></example_result>
</object>

<object id=712> 
<name>dba_replace</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Replace or insert entry</short-description>
<description>bool dba_replace ( string $key , string $value , resource $handle ) 
 dba_replace() replaces or inserts the entry described with key and value into the database specified by handle. </description>
<parameters>key - The key of the entry to be replaced. 
value - The value to be replaced. 
handle - The database handler, returned by dba_open() or dba_popen(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=713> 
<name>hw_getremotechildren</name>
<versions>(PHP 4)</versions>
<short-description>Gets children of remote document</short-description>
<description>mixed hw_getremotechildren ( int $connection , string $object_record ) 
 Returns the children of a remote document. Children of a remote document are remote documents itself. This makes sense if a database query has to be narrowed and is explained in Hyperwave Programmers&#039; Guide. 
 If you want to use this function you should be very familiar with HGIs. You should also consider to use PHP instead of Hyperwave to access external sources. Adding database support by a Hyperwave gateway should be more difficult than doing it in PHP. </description>
<parameters>connection - The connection identifier. 
object_record - The object record. </parameters>
<output>If the number of children is 1 the function will return the document itself formatted by the Hyperwave Gateway Interface (HGI). If the number of children is greater than 1 it will return an array of object record with each maybe the input value for another call to hw_getremotechildren(). Those object records are virtual and do not exist in the Hyperwave server, therefore they do not have a valid object ID. How exactly such an object record looks like is up to the HGI. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=714> 
<name>mssql_pconnect</name>
<versions>(PHP 4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Open persistent MS SQL connection</short-description>
<description>resource mssql_pconnect ([ string $servername [, string $username [, string $password [, bool $new_link = false ]]]] ) 
 mssql_pconnect() acts very much like mssql_connect() with two major differences. 
 First, when connecting, the function would first try to find a (persistent) link that&#039;s already open with the same host, username and password. If one is found, an identifier for it will be returned instead of opening a new connection. 
 Second, the connection to the SQL server will not be closed when the execution of the script ends. Instead, the link will remain open for future use (mssql_close() will not close links established by mssql_pconnect()). 
 This type of links is therefore called &#039;persistent&#039;. </description>
<parameters>servername - The MS SQL server. It can also include a port number. e.g. hostname:port. 
username - The username. 
password - The password. 
new_link - If a second call is made to mssql_pconnect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned. This parameter modifies this behavior and makes mssql_pconnect() always open a new link, even if mssql_pconnect() was called before with the same parameters. </parameters>
<output>Returns a positive MS SQL persistent link identifier on success, or FALSE on error. </output>
<errors></errors>
<example><?php
// Connect to MSSQL and select the database
$link1 = mssql_pconnect('MANGO\SQLEXPRESS', 'sa', 'phpfi');
mssql_select_db('php', $link1);
// Create a new link
$link2 = mssql_pconnect('MANGO\SQLEXPRESS', 'sa', 'phpfi', true);
mssql_select_db('random', $link2);
?></example>
<example_result></example_result>
</object>

<object id=715> 
<name>fdf_enum_values</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Call a user defined function for each document value </short-description>
<description>bool fdf_enum_values ( resource $fdf_document , callback $function [, mixed $userdata ] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=716> 
<name>pspell_store_replacement</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Сохраняет замещающую пару для слова</short-description>
<description>bool pspell_store_replacement ( int $dictionary_link , string $misspelled , string $correct ) 
 pspell_store_replacement() сохраняет замещающую пару для слова, так что замена позднее может быть возвращена функцией pspell_suggest(). Чтобы использовать преимущества этой функции, следует открыть словарь с помощью pspell_new_personal(). Чтобы навсегда сохранить замещающую пару, необходимо использовать pspell_config_personal() и pspell_config_repl() для того, чтобы указать путь, куда сохранить пользовательские списки слов, а затем воспользоваться pspell_save_wordlist() для записи изменений на диск. </description>
<parameters>dictionary_link - Ссылка на словарь, открытый с помощью pspell_new_personal() 
misspelled - Слово с ошибкой. 
correct - Исправленное написание для слова с ошибкой (misspelled). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$pspell_config = pspell_config_create("en");
pspell_config_personal($pspell_config, "/var/dictionaries/custom.pws");
pspell_config_repl($pspell_config, "/var/dictionaries/custom.repl");
$pspell_link = pspell_new_config($pspell_config);
pspell_store_replacement($pspell_link, $misspelled, $correct);
pspell_save_wordlist($pspell_link);
?></example>
<example_result></example_result>
</object>

<object id=717> 
<name>udm_errno</name>
<versions>(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)</versions>
<short-description>Получает номер ошибки mnoGoSearch</short-description>
<description>int udm_errno ( resource $agent ) 
 Получает числовой код ошибки агента. </description>
<parameters>agent - Ссылка на идентификатор агента, полученная после вызова udm_alloc_agent(). </parameters>
<output>Возвращает номер ошибки mnoGoSearch; либо нуль, если ошибки нет. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=718> 
<name>oci_num_fields</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Возвращает количество полей в результате запроса</short-description>
<description>int oci_num_fields ( resource $statement ) 
 Получает число столбцов в запросе, заданном в statement. </description>
<parameters>statement - Идентификатор допустимого OCI запроса. </parameters>
<output>Возвращает число затронутых строк в виде integer, либо FALSE при ошибке. </output>
<errors></errors>
<example><?php   
    echo "<pre>\n";   
    $conn = oci_connect("scott", "tiger");
    $stmt = oci_parse($conn, "select * from emp");
    
    oci_execute($stmt);
    
    while (oci_fetch($stmt)) {
        echo "\n";   
        $ncols = oci_num_fields($stmt);
        for ($i = 1; $i <= $ncols; $i++) {
            $column_name  = oci_field_name($stmt, $i);
            $column_value = oci_result($stmt, $i);
            echo $column_name . ': ' . $column_value . "\n";
        }
        echo "\n";
    }
    
    oci_free_statement($stmt);  
    oci_close($conn);   
    
    echo "</pre>";
?></example>
<example_result></example_result>
</object>

<object id=719> 
<name>ldap_sasl_bind</name>
<versions>(PHP 5)</versions>
<short-description>Привязать к LDAP директории, используя SASL</short-description>
<description>bool ldap_sasl_bind ( resource $link [, string $binddn = NULL [, string $password = NULL [, string $sasl_mech = NULL [, string $sasl_realm = NULL [, string $sasl_authc_id = NULL [, string $sasl_authz_id = NULL [, string $props = NULL ]]]]]]] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=720> 
<name>ingres_query</name>
<versions>(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)</versions>
<short-description>Send an SQL query to Ingres</short-description>
<description>mixed ingres_query ( resource $link , string $query [, array $params [, string $types ]] ) 
 ingres_query() sends the given query to the Ingres server. 
 The query becomes part of the currently open transaction. If there is no open transaction, ingres_query() opens a new transaction. To close the transaction, you can call either ingres_commit() to commit the changes made to the database or ingres_rollback() to cancel these changes. When the script ends, any open transaction is rolled back (by calling ingres_rollback()). You can also use ingres_autocommit() before opening a new transaction to have every SQL query immediately committed. 
 Замечание: Related Configurations
 
 See also the ingres.describe, ingres.scrollable and ingres.utf8 directives in Runtime Configuration </description>
<parameters>link - The connection link identifier. 
query - A valid SQL query (see the Ingres SQL reference guide) in the Ingres documentation. 
params - An array of parameter values to be used with the query 
types - A string containing a sequence of types for the parameter values passed. When ingres.describe is enabled, this parameter can be ignored as the driver automatically fetches the expected parameter types from the server. </parameters>
<output>ingres_query() returns a query result identifier on success else it returns FALSE. To see if an error occurred use ingres_errno(), ingres_error() or ingres_errsqlstate(). </output>
<errors></errors>
<example><?php
$link = ingres_connect("demodb");
$result = ingres_query($link, "select * from user_profile");
while ($row = ingres_fetch_row($result)) {
    echo $row[1];
    echo $row[2];
}?></example>
<example_result></example_result>
</object>

<object id=721> 
<name>libxml_clear_errors</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Очистка буфера ошибок libxml </short-description>
<description>void libxml_clear_errors ( void ) 
 libxml_clear_errors() очищает буфер ошибок libxml. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=722> 
<name>mysqli_enable_rpl_parse</name>
<versions>(PHP 5)</versions>
<short-description>Включает разбор RPL</short-description>
<description>bool mysqli_enable_rpl_parse ( mysqli $link ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=723> 
<name>bcadd</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сложить 2 числа произвольной точности </short-description>
<description>string bcadd ( string $left_operand , string $right_operand [, int $scale ] ) 
 Складывает left_operand с right_operand. </description>
<parameters>left_operand - Левый операнд (слагаемое) в виде строки. 
right_operand - Правый операнд (слагаемое) в виде строки. 
scale - Этот необязательный параметр используется для установки количества знаков после десятичного разделителя в результате.Вы также можете установить этот параметр глобально для всех функций с помощью bcscale().</parameters>
<output>Сумма слагаемых в виде строки. </output>
<errors></errors>
<example><?php
$a = '1.234';
$b = '5';
echo bcadd($a, $b);     // 6
echo bcadd($a, $b, 4);  // 6.2340
?></example>
<example_result></example_result>
</object>

<object id=724> 
<name>print_r</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выводит удобочитаемую информацию о переменной </short-description>
<description>mixed print_r ( mixed $expression [, bool $return = false ] ) 
 print_r() выводит информацию о переменной в удобочитаемом виде. 
 print_r(), var_dump() и var_export() могут также показывать защищенные (protected) и закрытые (private) атрибуты объектов в PHP 5. Статические элементы класса не будут отображены. 
 Следует помнить, что print_r() установит внутренний указатель массива в его конец. Используйте функцию reset() для установки его в начало массива. </description>
<parameters>expression - Выражение для вывода на экран. 
return - Если вы хотите перехватить вывод print_r(), используйте параметр return. Если его значение равно TRUE, то print_r() вернет результат вывода вместо вывода в браузер (который производится по умолчанию). </parameters>
<output>Если в функцию передаются значения типов string, integer или float, будет напечатано само значение. Если передается массив array, значения будут напечатаны в формате, показывающем ключи и элементы массива. Аналогичный формат вывода используется для объектов. </output>
<errors></errors>
<example><pre>
<?php
$a = array ('a' => 'apple', 'b' => 'banana', 'c' => array ('x', 'y', 'z'));
print_r ($a);
?>
</pre></example>
<example_result>
 
<pre>
Array
(
    [a] => apple
    [b] => banana
    [c] => Array
        (
            [0] => x
            [1] => y
            [2] => z
        )
)
</pre>
</example_result>
</object>

<object id=725> 
<name>vpopmail_add_domain</name>
<versions>(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)</versions>
<short-description>Add a new virtual domain</short-description>
<description>bool vpopmail_add_domain ( string $domain , string $dir , int $uid , int $gid ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=726> 
<name>ob_clean</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Очищает (стирает) буфер вывода</short-description>
<description>void ob_clean ( void ) 
 Эта функция удаляет содержимое выходного буфера. 
 Эта функция не уничтожает буфер вывода, как это делает ob_end_clean(). </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=727> 
<name>imap_sort</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets and sort messages</short-description>
<description>array imap_sort ( resource $imap_stream , int $criteria , int $reverse [, int $options = 0 [, string $search_criteria = NULL [, string $charset = NIL ]]] ) 
 Gets and sorts message numbers by the given parameters. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
criteria - Criteria can be one (and only one) of the following: SORTDATE - message Date SORTARRIVAL - arrival date SORTFROM - mailbox in first From address SORTSUBJECT - message subject SORTTO - mailbox in first To address SORTCC - mailbox in first cc address SORTSIZE - size of message in octets 
reverse - Set this to 1 for reverse sorting 
options - The options are a bitmask of one or more of the following: SE_UID - Return UIDs instead of sequence numbers SE_NOPREFETCH - Don&#039;t prefetch searched messages 
search_criteria - 
charset - </parameters>
<output>Returns an array of message numbers sorted by the given parameters. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=728> 
<name>snmp_set_oid_output_format</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Set the OID output format </short-description>
<description>bool snmp_set_oid_output_format ( int $oid_format = SNMP_OID_OUTPUT_MODULE ) 
 snmp_set_oid_output_format() sets the output format to be full or numeric. </description>
<parameters>oid_format OID .1.3.6.1.2.1.1.3.0 representation for various oid_format values SNMP_OID_OUTPUT_FULL.iso.org.dod.internet.mgmt.mib-2.system.sysUpTime.sysUpTimeInstance SNMP_OID_OUTPUT_NUMERIC.1.3.6.1.2.1.1.3.0 - Begining from PHP 5.4.0 four additional constants available: SNMP_OID_OUTPUT_MODULEDISMAN-EVENT-MIB::sysUpTimeInstance SNMP_OID_OUTPUT_SUFFIXsysUpTimeInstance SNMP_OID_OUTPUT_UCDsystem.sysUpTime.sysUpTimeInstance SNMP_OID_OUTPUT_NONEUndefined </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
 snmp_read_mib("/usr/share/mibs/netsnmp/NET-SNMP-TC");
 // default or SNMP_OID_OUTPUT_MODULE in PHP >= 5.3.6
 print_r( snmprealwalk('localhost', 'public', 'RFC1213-MIB::sysObjectID') );
 snmp_set_oid_output_format(SNMP_OID_OUTPUT_NUMERIC);
 print_r( snmprealwalk('localhost', 'public', 'RFC1213-MIB::sysObjectID') );
 snmp_set_oid_output_format(SNMP_OID_OUTPUT_FULL);
 print_r( snmprealwalk('localhost', 'public', 'RFC1213-MIB::sysObjectID') );
?></example>
<example_result>
 
 Array
 (
    [RFC1213-MIB::sysObjectID.0] => OID: NET-SNMP-TC::linux
 )
 Array
 (
    [.1.3.6.1.2.1.1.2.0] => OID: .1.3.6.1.4.1.8072.3.2.10
 )
 Array
 (
    [.iso.org.dod.internet.mgmt.mib-2.system.sysObjectID.0] => OID: .iso.org.dod.internet.private.enterprises.netSnmp.netSnmpEnumerations.netSnmpAgentOIDs.linux
 )
</example_result>
</object>

<object id=729> 
<name>snmpset</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Set the value of an SNMP object</short-description>
<description>bool snmpset ( string $host , string $community , string $object_id , string $type , mixed $value [, int $timeout = 1000000 [, int $retries = 5 ]] ) 
 snmpset() is used to set the value of an SNMP object specified by the object_id. </description>
<parameters>host - The hostname of the SNMP agent (server). 
community - The write community. 
object_id - The SNMP object id. 
type - MIB указывает тип идентификатора каждого объекта. Он должен быть указан в виде одного символа изследующего списка.
value - The new value. 
timeout - The number of microseconds until the first timeout. 
retries - The number of times to retry if timeouts occur. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
  snmpset("localhost", "public", "IF-MIB::ifAlias.3", "s", "foo");
?></example>
<example_result></example_result>
</object>

<object id=730> 
<name>array_combine</name>
<versions>(PHP 5)</versions>
<short-description>Создает новый массив, используя один массив в качестве ключей, а другой в качестве соответствующих значений</short-description>
<description>array array_combine ( array $keys , array $values ) 
 Создает array, используя значения массива keys в качестве ключей и значения масссива values в качестве соответствующих значений. </description>
<parameters>keys - Массив ключей. Некорректные значения для ключей будут преобразованы в string. 
values - Массив значений </parameters>
<output>Возвращает скомбинированный array, либо FALSE, если количество элементов в массивах не совпадает. </output>
<errors>Генерирует ошибку уровня E_WARNING, если количество элементов в keys и values не совпадает. </errors>
<example><?php
$a = array('green', 'red', 'yellow');
$b = array('avocado', 'apple', 'banana');
$c = array_combine($a, $b);
print_r($c);
?></example>
<example_result>
 
Array
(
    [green]  => avocado
    [red]    => apple
    [yellow] => banana
)
</example_result>
</object>

<object id=731> 
<name>dba_optimize</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Optimize database</short-description>
<description>bool dba_optimize ( resource $handle ) 
 dba_optimize() optimizes the underlying database. </description>
<parameters>handle - The database handler, returned by dba_open() or dba_popen(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=732> 
<name>ifx_create_blob</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Creates an blob object</short-description>
<description>int ifx_create_blob ( int $type , int $mode , string $param ) 
 Creates a blob object. </description>
<parameters>type - 1 = TEXT, 0 = BYTE 
mode - 0 = blob-object holds the content in memory, 1 = blob-object holds the content in file. 
param - if mode = 0: pointer to the content, if mode = 1: pointer to the filestring. </parameters>
<output>Returns the new BLOB object-id, or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=733> 
<name>readline_callback_handler_install</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Initializes the readline callback interface and terminal, prints the prompt and returns immediately</short-description>
<description>bool readline_callback_handler_install ( string $prompt , callback $callback ) 
 Sets up a readline callback interface then prints prompt and immediately returns. Calling this function twice without removing the previous callback interface will automatically and conveniently overwrite the old interface. 
 The callback feature is useful when combined with stream_select() as it allows interleaving of IO and user input, unlike readline(). </description>
<parameters>prompt - The prompt message. 
callback - The callback function takes one parameter; the user input returned. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=734> 
<name>oci_cancel</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Заканчивает процесс чтения из курсора</short-description>
<description>bool oci_cancel ( resource $statement ) 
 Сбрасывает курсор, освобождая все связанные ресурсы и отменяет возможность читать из него. </description>
<parameters>statement - Запрос OCI. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=735> 
<name>shmop_size</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Возвращает размер блока в разделяемой памяти</short-description>
<description>int shmop_size ( int $shmid ) 
 shmop_size() используется для получения размера блока разделяемой памяти в байтах. </description>
<parameters>shmid - Идентификатор блока памяти, возвращаемый функцией shmop_open() </parameters>
<output>Результатом является целое число, отражающее количество байт, зарезервированных в разделяемой памяти для конкретного блока. </output>
<errors></errors>
<example><?php
$shm_size = shmop_size($shm_id);
?></example>
<example_result></example_result>
</object>

<object id=736> 
<name>yaz_present</name>
<versions>(PHP 4 >= 4.0.5, PECL yaz >= 0.9.0)</versions>
<short-description>Prepares for retrieval (Z39.50 present) </short-description>
<description>bool yaz_present ( resource $id ) 
 This function prepares for retrieval of records after a successful search. 
 The yaz_range() function should be called prior to this function to specify the range of records to be retrieved. </description>
<parameters>id - The connection resource returned by yaz_connect(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=737> 
<name>mysqli_rpl_probe</name>
<versions>(PHP 5)</versions>
<short-description>RPL probe</short-description>
<description>bool mysqli_rpl_probe ( mysqli $link ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=738> 
<name>timezone_transitions_get</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Псевдоним DateTimeZone::getTransitions()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=739> 
<name>ibase_pconnect</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Open a persistent connection to an InterBase database</short-description>
<description>resource ibase_pconnect ([ string $database [, string $username [, string $password [, string $charset [, int $buffers [, int $dialect [, string $role [, int $sync ]]]]]]]] ) 
 Opens a persistent connection to an InterBase database. 
 ibase_pconnect() acts very much like ibase_connect() with two major differences. 
 First, when connecting, the function will first try to find a (persistent) link that&#039;s already opened with the same parameters. If one is found, an identifier for it will be returned instead of opening a new connection. 
 Second, the connection to the InterBase server will not be closed when the execution of the script ends. Instead, the link will remain open for future use (ibase_close() will not close links established by ibase_pconnect()). This type of link is therefore called &#039;persistent&#039;. </description>
<parameters>database - The database argument has to be a valid path to database file on the server it resides on. If the server is not local, it must be prefixed with either &#039;hostname:&#039; (TCP/IP), &#039;//hostname/&#039; (NetBEUI) or &#039;hostname@&#039; (IPX/SPX), depending on the connection protocol used. 
username - The user name. Can be set with the ibase.default_user php.ini directive. 
password - The password for username. Can be set with the ibase.default_password php.ini directive. 
charset - charset is the default character set for a database. 
buffers - buffers is the number of database buffers to allocate for the server-side cache. If 0 or omitted, server chooses its own default. 
dialect - dialect selects the default SQL dialect for any statement executed within a connection, and it defaults to the highest one supported by client libraries. Functional only with InterBase 6 and up. 
role - Functional only with InterBase 5 and up. 
sync - </parameters>
<output>Returns an InterBase link identifier on success, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=740> 
<name>GregorianToJD</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Преобразует дату по Григорианскому календарю в количество дней в Юлианском летоисчислении </short-description>
<description>int gregoriantojd ( int $month , int $day , int $year ) 
 Разрешенный диапазон дат для Григорианского календаря с 4714 года до н.э. по 9999 год н.э. 
 Несмотря на возможность обработки дат вплоть до 4714 года до н.э., такое использование имеет мало смысла. Григорианский календарь не существовал до 15 октября 1582 года (или 5 октября 1582 в Юлианском календаре). Некоторые страны не переходили на этот календарь очень долгое время. Например, Великобритания совершила переход в 1752 году, СССР в 1918г., Греция в 1923г. Большинство стран Европы предпочитали Юлианский календарь Григорианскому. </description>
<parameters>month - Месяц в виде числа от 1 (январь) до 12 (декабрь) 
day - День в виде числа от 1 до 31 
year - Года в виде числа от -4714 до 9999 </parameters>
<output>Число дней (integer) в Юлианском летоисчислении для даты по Григорианскому календарю. </output>
<errors></errors>
<example><?php
$jd = GregorianToJD(10, 11, 1970);
echo "$jd\n";
$gregorian = JDToGregorian($jd);
echo "$gregorian\n";
?></example>
<example_result></example_result>
</object>

<object id=741> 
<name>date_diff</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Псевдоним DateTime::diff()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=742> 
<name>gmp_sqrtrem</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Квадратный корень с остатком</short-description>
<description>array gmp_sqrtrem ( resource $a ) 
 Вычисляет квадратный корень числа, с остатком. </description>
<parameters>a - Число, из которого извлекается корень. </parameters>
<output>Возвращает массив, в котором первый элемент - целая часть корня из числа a, а второй - остаток (т.е. разность чисел a и квадрата первого элемента массива). </output>
<errors></errors>
<example><?php
list($sqrt1, $sqrt1rem) = gmp_sqrtrem("9");
list($sqrt2, $sqrt2rem) = gmp_sqrtrem("7");
list($sqrt3, $sqrt3rem) = gmp_sqrtrem("1048576");
echo gmp_strval($sqrt1) . ", " . gmp_strval($sqrt1rem) . "\n";
echo gmp_strval($sqrt2) . ", " . gmp_strval($sqrt2rem) . "\n";
echo gmp_strval($sqrt3) . ", " . gmp_strval($sqrt3rem) . "\n";
?></example>
<example_result>
 
3, 0
2, 3
1024, 0
</example_result>
</object>

<object id=743> 
<name>ncurses_mouseinterval</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Set timeout for mouse button clicks </short-description>
<description>int ncurses_mouseinterval ( int $milliseconds ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>milliseconds - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=744> 
<name>is_finite</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Проверяет, является ли значение допустимым конечным числом</short-description>
<description>bool is_finite ( float $val ) 
 Проверяет, является ли val допустимым конечным числом на данной платформе. </description>
<parameters>val - Проверяемое значение </parameters>
<output>TRUE, если val является допустимым конечным числом в разрешенном для PHP float диапазоне для данной платформы, и FALSE в противном случае. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=745> 
<name>udm_set_agent_param</name>
<versions>(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)</versions>
<short-description>Set mnoGoSearch agent session parameters</short-description>
<description>bool udm_set_agent_param ( resource $agent , int $var , string $val ) 
 Defines mnoGoSearch session parameters. </description>
<parameters>agent - A link to Agent, received after call to udm_alloc_agent(). 
var - The following parameters and their values are available: UDM_PARAM_PAGE_NUM - used to choose search results page number (results are returned by pages beginning from 0, with UDM_PARAM_PAGE_SIZE results per page). UDM_PARAM_PAGE_SIZE - number of search results displayed on one page. UDM_PARAM_SEARCH_MODE - search mode. The following values available: UDM_MODE_ALL - search for all words; UDM_MODE_ANY - search for any word; UDM_MODE_PHRASE - phrase search; UDM_MODE_BOOL - boolean search. See udm_find() for details on boolean search. UDM_PARAM_CACHE_MODE - turns on or off search result cache mode. When enabled, the search engine will store search results to disk. In case a similar search is performed later, the engine will take results from the cache for faster performance. Available values: UDM_CACHE_ENABLED, UDM_CACHE_DISABLED. UDM_PARAM_TRACK_MODE - turns on or off trackquery mode. Since version 3.1.2 mnoGoSearch has a query tracking support. Note that tracking is implemented in SQL version only and not available in built-in database. To use tracking, you have to create tables for tracking support. For MySQL, use create/mysql/track.txt. When doing a search, front-end uses those tables to store query words, a number of found documents and current Unix timestamp in seconds. Available values: UDM_TRACK_ENABLED, UDM_TRACK_DISABLED. UDM_PARAM_PHRASE_MODE - defines whether index database using phrases ("phrase" parameter in indexer.conf). Possible values: UDM_PHRASE_ENABLED and UDM_PHRASE_DISABLED. Please note, that if phrase search is enabled (UDM_PHRASE_ENABLED), it is still possible to do search in any mode (ANY, ALL, BOOL or PHRASE). In 3.1.10 version of mnoGoSearch phrase search is supported only in sql and built-in database modes, while beginning with 3.1.11 phrases are supported in cachemode as well. Examples of phrase search: "Arizona desert" - This query returns all indexed documents that contain "Arizona desert" as a phrase. Notice that you need to put double quotes around the phrase UDM_PARAM_CHARSET - defines local charset. Available values: set of charsets supported by mnoGoSearch, e.g. koi8-r, cp1251, ... UDM_PARAM_STOPFILE - Defines name and path to stopwords file. (There is a small difference with mnoGoSearch - while in mnoGoSearch if relative path or no path entered, it looks for this file in relation to UDM_CONF_DIR, the module looks for the file in relation to current path, i.e. to the path where the PHP script is executed.) UDM_PARAM_STOPTABLE - Load stop words from the given SQL table. You may use several StopwordTable commands. This command has no effect when compiled without SQL database support. UDM_PARAM_WEIGHT_FACTOR - represents weight factors for specific document parts. Currently body, title, keywords, description, url are supported. To activate this feature please use degrees of 2 in *Weight commands of the indexer.conf. Let&#039;s imagine that we have these weights: 
 URLWeight 1 BodyWeight 2 TitleWeight 4 KeywordWeight 8 DescWeight 16 As far as indexer uses bit OR operation for word weights when some word presents several time in the same document, it is possible at search time to detect word appearance in different document parts. Word which appears only in the body will have 00000010 aggregate weight (in binary notation). Word used in all document parts will have 00011111 aggregate weight. This parameter&#039;s value is a string of hex digits ABCDE. Each digit is a factor for corresponding bit in word weight. For the given above weights configuration: 
 E is a factor for weight 1 (URL Weight bit) D is a factor for weight 2 (BodyWeight bit) C is a factor for weight 4 (TitleWeight bit) B is a factor for weight 8 (KeywordWeight bit) A is a factor for weight 16 (DescWeight bit) Examples: UDM_PARAM_WEIGHT_FACTOR=00001 will search through URLs only. UDM_PARAM_WEIGHT_FACTOR=00100 will search through Titles only. UDM_PARAM_WEIGHT_FACTOR=11100 will search through Title,Keywords,Description but not through URL and Body. UDM_PARAM_WEIGHT_FACTOR=F9421 will search through: 
 Description with factor 15 (F hex) Keywords with factor 9 Title with factor 4 Body with factor 2 URL with factor 1 If UDM_PARAM_WEIGHT_FACTOR variable is omitted, original weight value is taken to sort results. For a given above weight configuration it means that document description has a most big weight 16. UDM_PARAM_WORD_MATCH - word match. You may use this parameter to choose word match type. This feature works only in "single" and "multi" modes using SQL based and built-in database. It does not work in cachemode and other modes since they use word CRC and do not support substring search. Available values: UDM_MATCH_BEGIN - word beginning match; UDM_MATCH_END - word ending match; UDM_MATCH_WORD - whole word match; UDM_MATCH_SUBSTR - word substring match. UDM_PARAM_MIN_WORD_LEN - defines minimal word length. Any word shorter this limit is considered to be a stopword. Please note that this parameter value is inclusive, i.e. if UDM_PARAM_MIN_WORD_LEN=3, a word 3 characters long will not be considered a stopword, while a word 2 characters long will be. Default value is 1. UDM_PARAM_ISPELL_PREFIXES - Possible values: UDM_PREFIXES_ENABLED and UDM_PREFIXES_DISABLED, that respectively enable or disable using prefixes. E.g. if a word "tested" is in search query, also words like "test", "testing", etc. Only suffixes are supported by default. Prefixes usually change word meanings, for example if somebody is searching for the word "tested" one hardly wants "untested" to be found. Prefixes support may also be found useful for site&#039;s spelling checking purposes. In order to enable ispell, you have to load ispell data with udm_load_ispell_data(). UDM_PARAM_CROSS_WORDS - enables or disables crosswords support. Possible values: UDM_CROSS_WORDS_ENABLED and UDM_CROSS_WORDS_DISABLED. The crosswords feature allows to assign words between <a href="xxx"> and </a> also to a document this link leads to. It works in SQL database mode and is not supported in built-in database and Cachemode. UDM_PARAM_VARDIR - specifies a custom path to directory where indexer stores data when using built-in database and in cache mode. By default /var directory of mnoGoSearch installation is used. Can have only string values. 
val - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=746> 
<name>connection_aborted</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Проверяет подключение клиента</short-description>
<description>int connection_aborted ( void ) 
 Проверяет подключен ли клиент. </description>
<parameters></parameters>
<output>Возвращает 1, если клиент отключен, 0 в другом случае. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=747> 
<name>swf_actionplay</name>
<versions>(PHP 4)</versions>
<short-description>Start playing the flash movie from the current frame</short-description>
<description>void swf_actionplay ( void ) 
 Start playing the flash movie from the current frame. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=748> 
<name>proc_close</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Завершает процесс, открытый при помощи функции proc_open()</short-description>
<description>int proc_close ( resource $process ) 
 Функция proc_close() похожа на функцию pclose(), за исключением того, что она работает только с процессами, открытыми при помощи функции proc_open(). Функция proc_close() ожидает завершения процесса и возвращает его код возврата. Если вы открывали пайпы у этого процесса, вы должны закрыть их при помощи функции fclose() перед тем, как вызывать эту функцию для того, чтобы избежать полной остановки программы: дочерние процессы могут быть неспособны завершиться, если пайпы открыты. </description>
<parameters>process - Дескриптор типа resource, открытый при помощи proc_open(), который будет закрыт. </parameters>
<output>Возвращает код завершения процесса, который был запущен. В случае ошибки возвращается -1. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=749> 
<name>ingres_field_type</name>
<versions>(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)</versions>
<short-description>Get the type of a field in a query result</short-description>
<description>string ingres_field_type ( resource $result , int $index ) 
 Get the type of a field in a query result. 
 Замечание: Related Configurations
 
 See ingres.array_index_start in Runtime Configuration </description>
<parameters>result - The query result identifier 
index - index is the field whose type will be retrieved. </parameters>
<output>ingres_field_type() returns the type of a field in a query result или FALSE в случае возникновения ошибки. Examples of types returned are IIAPI_BYTE_TYPE, IIAPI_CHA_TYPE, IIAPI_DTE_TYPE, IIAPI_FLT_TYPE, IIAPI_INT_TYPE, IIAPI_VCH_TYPE. Some of these types can map to more than one SQL type depending on the length of the field (see ingres_field_length()). For example IIAPI_FLT_TYPE can be a float4 or a float8. For detailed information, see the Ingres OpenAPI User Guide, Appendix "Data Types" in the Ingres documentation. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=750> 
<name>ingres_autocommit</name>
<versions>(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)</versions>
<short-description>Switch autocommit on or off</short-description>
<description>bool ingres_autocommit ( resource $link ) 
 ingres_autocommit() is called before opening a transaction (before the first call to ingres_query() or just after a call to ingres_rollback() or ingres_commit()) to switch the autocommit mode of the server on or off (when the script begins the autocommit mode is off). 
 When autocommit mode is on, every query is automatically committed by the server, as if ingres_commit() was called after every call to ingres_query(). To see if autocommit is enabled use, ingres_autocommit_state(). 
 By default Ingres will rollback any uncommitted transactions at the end of a request. Use this function or ingres_commit() to ensure your data is committed to the database. </description>
<parameters>link - The connection link identifier </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=751> 
<name>mysqli_disable_rpl_parse</name>
<versions>(PHP 5)</versions>
<short-description>Блокировать разбор RPL</short-description>
<description>bool mysqli_disable_rpl_parse ( mysqli $link ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=752> 
<name>realpath_cache_size</name>
<versions>(PHP 5 >= 5.3.2)</versions>
<short-description>Получает размер кэша реального пути</short-description>
<description>int realpath_cache_size ( void ) 
 Получает объем памяти, используемой при кэшировании реального пути. </description>
<parameters></parameters>
<output>Возвращает объем использованной памяти для кэширования реального пути. </output>
<errors></errors>
<example><?php
var_dump(realpath_cache_size());
?></example>
<example_result>
 
int(412)
</example_result>
</object>

<object id=753> 
<name>ncurses_panel_below</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Returns the panel below panel</short-description>
<description>resource ncurses_panel_below ( resource $panel ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>panel - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=754> 
<name>mcrypt_enc_get_iv_size</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Returns the size of the IV of the opened algorithm</short-description>
<description>int mcrypt_enc_get_iv_size ( resource $td ) 
 This function returns the size of the IV of the algorithm specified by the encryption descriptor in bytes. An IV is used in cbc, cfb and ofb modes, and in some algorithms in stream mode. </description>
<parameters>td - The encryption descriptor. </parameters>
<output>Returns the size of the IV, or 0 if the IV is ignored by the algorithm. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=755> 
<name>strstr</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Находит первое вхождение подстроки</short-description>
<description>string strstr ( string $haystack , mixed $needle [, bool $before_needle = false ] ) 
 Возвращает подстроку строки haystack начиная с первого вхождения needle до конца строки haystack. 
 Замечание: 
 Эта функция учитывает регистр символов. Для поиска без учета регистра используйте stristr(). 
 Замечание: 
 Если нужно лишь определить, встречается ли подстрока needle в haystack, используйте более быструю и менее ресурсоемкую функцию strpos(). </description>
<parameters>haystack - Входная строка. 
needle - Если needle не является строкой, он приводится к целому и трактуется как код символа. 
before_needle - Если установлен в TRUE, strstr() возвращает часть строки haystack до первого вхождения needle. </parameters>
<output>Возвращает часть строки, или FALSE, если needle не найдена. </output>
<errors></errors>
<example><?php
$email  = 'name@example.com';
$domain = strstr($email, '@');
echo $domain; // выводит @example.com
$user = strstr($email, '@', true); // Начиная с PHP 5.3.0
echo $user; // выводит name
?></example>
<example_result></example_result>
</object>

<object id=756> 
<name>msession_disconnect</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)</versions>
<short-description>Close connection to msession server</short-description>
<description>void msession_disconnect ( void ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=757> 
<name>fbsql_set_characterset</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Change input/output character set</short-description>
<description>void fbsql_set_characterset ( resource $link_identifier , int $characterset [, int $in_out_both ] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=758> 
<name>yaz_itemorder</name>
<versions>(PHP 4 >= 4.0.5, PECL yaz >= 0.9.0)</versions>
<short-description>Prepares for Z39.50 Item Order with an ILL-Request package </short-description>
<description>void yaz_itemorder ( resource $id , array $args ) 
 This function prepares for an Extended Services request using the Profile for the Use of Z39.50 Item Order Extended Service to Transport ILL (Profile/1). See &raquo; this and the &raquo; specification. </description>
<parameters>id - The connection resource returned by yaz_connect(). 
args - Must be an associative array with information about the Item Order request to be sent. The key of the hash is the name of the corresponding ASN.1 tag path. For example, the ISBN below the Item-ID has the key item-id,ISBN. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=759> 
<name>imagecreatetruecolor</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Create a new true color image</short-description>
<description>resource imagecreatetruecolor ( int $width , int $height ) 
 imagecreatetruecolor() returns an image identifier representing a black image of the specified size. 
 Depending on your PHP and GD versions this function is defined or not. With PHP 4.0.6 through 4.1.x this function always exists if the GD module is loaded, but calling it without GD2 being installed PHP will issue a fatal error and exit. With PHP 4.2.x this behaviour is different in issuing a warning instead of an error. Other versions only define this function, if the correct GD version is installed. </description>
<parameters>width - Image width. 
height - Image height. </parameters>
<output>Возвращает ресурс изображения в случае успеха, или FALSE в случае ошибки.</output>
<errors></errors>
<example><?php
header ('Content-Type: image/png');
$im = @imagecreatetruecolor(120, 20)
      or die('Cannot Initialize new GD image stream');
$text_color = imagecolorallocate($im, 233, 14, 91);
imagestring($im, 1, 5, 5,  'A Simple Text String', $text_color);
imagepng($im);
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=760> 
<name>spl_autoload_register</name>
<versions>(PHP 5 >= 5.1.2)</versions>
<short-description>Register given function as __autoload() implementation</short-description>
<description>bool spl_autoload_register ([ callback $autoload_function [, bool $throw = true [, bool $prepend = false ]]] ) 
 Register a function with the spl provided __autoload stack. If the stack is not yet activated it will be activated. 
 If your code has an existing __autoload function then this function must be explicitly registered on the __autoload stack. This is because spl_autoload_register() will effectively replace the engine cache for the __autoload function by either spl_autoload() or spl_autoload_call(). 
 If there must be multiple autoload functions, spl_autoload_register() allows for this. It effectively creates a queue of autoload functions, and runs through each of them in the order they are defined. By contrast, __autoload() may only be defined once. </description>
<parameters>autoload_function - The autoload function being registered. If no parameter is provided, then the default implementation of spl_autoload() will be registered. 
throw - This parameter specifies whether spl_autoload_register() should throw exceptions when the autoload_function cannot be registered. 
prepend - If true, spl_autoload_register() will prepend the autoloader on the autoload stack instead of appending it. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
namespace Foobar;
class Foo {
    static public function test($name) {
        print '[['. $name .']]';
    }
}
spl_autoload_register(__NAMESPACE__ .'\Foo::test'); // As of PHP 5.3.0
new InexistentClass;
?></example>
<example_result>
 
[[Foobar\InexistentClass]]
Fatal error: Class &#039;Foobar\InexistentClass&#039; not found in ...
</example_result>
</object>

<object id=761> 
<name>gzfile</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Считывает весь gz-файл в массив</short-description>
<description>array gzfile ( string $filename [, int $use_include_path = 0 ] ) 
 Аналогична readgzfile(), но возвращает файл, разбитый построчно на массив. </description>
<parameters>filename - Имя файла. 
use_include_path - Если вы хотите, чтобы также проверялось наличие файла в директориях include_path, установите значение этого аргумента в 1. </parameters>
<output>Массив строк файла, в каждом элементе массива находится одна строка. </output>
<errors></errors>
<example><?php
$lines = gzfile('somefile.gz');
foreach ($lines as $line) {
    echo $line;
}?></example>
<example_result></example_result>
</object>

<object id=762> 
<name>oci_fetch_row</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Возвращает следующую строку из результата запроса в виде нумерованного массива</short-description>
<description>array oci_fetch_row ( resource $statement ) 
 Возвращает нумерованный массив, содержащий следующую строку из результата запроса. Каждый массив соответствует столбцу строки. Эта функция обычно вызывается в цикле пока не возвращает FALSE, если в результате запроса больше нет строк. 
 Вызов oci_fetch_row() аналогичен вызову oci_fetch_array() с флагом OCI_NUM + OCI_RETURN_NULLS. </description>
<parameters>statement - Корректный идентификатор выражения OCI8, полученный изoci_parse() и исполненный функцией oci_execute(), или идентификатор выраженияREF CURSOR.</parameters>
<output>Возвращает нумерованный массив. Если в statement больше нет срок возвращает FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=763> 
<name>bzdecompress</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Распаковывает данные, сжатые с использованием bzip2</short-description>
<description>mixed bzdecompress ( string $source [, int $small = 0 ] ) 
 bzdecompress() распаковывает переданную строку, содержащую сжатые bzip2 данные. </description>
<parameters>source - Распаковываемая строка. 
small - Если TRUE, то будет использован альтернативный алгоритм распаковки, использующий меньше памяти (максимально требуемая память находится в районе 2300K), но работает приблизительно вдвое медленее. </parameters>
<output>Распакованная строка или код ошибки в случае неудачного завершения работы. </output>
<errors></errors>
<example><?php
$start_str = "This is not an honest face?";
$bzstr = bzcompress($start_str);
echo "Compressed String: ";
echo $bzstr;
echo "\n<br />\n";
$str = bzdecompress($bzstr);
echo "Decompressed String: ";
echo $str;
echo "\n<br />\n";
?></example>
<example_result></example_result>
</object>

<object id=764> 
<name>yaz_close</name>
<versions>(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)</versions>
<short-description>Закрывает соединение YAZ</short-description>
<description>bool yaz_close ( resource $id ) 
 Закрывает соединение, определяемое параметром id. 
 Замечание: 
 Функция закроет только непостоянные соединения, открытые функцией yaz_connect() с параметром persistent установленным в значение FALSE. </description>
<parameters>id - Дескриптор соединения, возвращаемый yaz_connect(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=765> 
<name>msql_fieldname</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Alias of msql_field_name()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=766> 
<name>dngettext</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Версия dgettext для множественного числа</short-description>
<description>string dngettext ( string $domain , string $msgid1 , string $msgid2 , int $n ) 
 Функция dngettext() позволяет переопределить текущий домен domain для одного сообщения во множественном числе. </description>
<parameters>domain - Домен. 
msgid1 - 
msgid2 - 
n - </parameters>
<output>В случае успеха возвращает значение типа string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=767> 
<name>ncurses_wattrset</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Set the attributes for a window</short-description>
<description>int ncurses_wattrset ( resource $window , int $attrs ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>window - 
attrs - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=768> 
<name>msql_list_fields</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>List result fields</short-description>
<description>resource msql_list_fields ( string $database , string $tablename [, resource $link_identifier ] ) 
 msql_list_fields() returns information about the given table. </description>
<parameters>database - The name of the database. 
tablename - The name of the table. 
link_identifier - Соединение mSQL.Если не указан, используется последнее соединение, открытое msql_connect().Если такое соединение не было найдено, функция попытается установить новое, как если бы была вызвана функцияmsql_connect(), и использовать его.</parameters>
<output>Returns a result set which may be traversed with any function that fetches result sets, such as msql_fetch_array(). On failure, this function will return FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=769> 
<name>posix_initgroups</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Calculate the group access list</short-description>
<description>bool posix_initgroups ( string $name , int $base_group_id ) 
 Calculates the group access list for the user specified in name. </description>
<parameters>name - The user to calculate the list for. 
base_group_id - Typically the group number from the password file. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=770> 
<name>session_regenerate_id</name>
<versions>(PHP 4 >= 4.3.2, PHP 5)</versions>
<short-description>Update the current session id with a newly generated one </short-description>
<description>bool session_regenerate_id ([ bool $delete_old_session = false ] ) 
 session_regenerate_id() will replace the current session id with a new one, and keep the current session information. </description>
<parameters>delete_old_session - Whether to delete the old associated session file or not. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
session_start();
$old_sessionid = session_id();
session_regenerate_id();
$new_sessionid = session_id();
echo "Old Session: $old_sessionid<br />";
echo "New Session: $new_sessionid<br />";
print_r($_SESSION);
?></example>
<example_result></example_result>
</object>

<object id=771> 
<name>pg_num_rows</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает количество строк в выборке</short-description>
<description>int pg_num_rows ( resource $result ) 
 pg_num_rows() возвращает количество строк в результате запроса PostgreSQL. 
 Замечание: 
 Ранее функция называлась pg_numrows(). </description>
<parameters>result - Результат запроса PostgreSQL, возвращаемый функциями pg_query(), pg_query_params() или pg_execute() (и прочими). </parameters>
<output>Количество строк в выборке. В случае ошибки возвращает -1. </output>
<errors></errors>
<example><?php
$result = pg_query($conn, "SELECT 1");
$rows = pg_num_rows($result);
echo "Возвращено строк: " . $rows . ".\n";
?></example>
<example_result>
 
Возвращено строк: 1.
</example_result>
</object>

<object id=772> 
<name>msql_numrows</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Alias of msql_num_rows()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=773> 
<name>fopen</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Открывает файл или URL</short-description>
<description>resource fopen ( string $filename , string $mode [, bool $use_include_path = false [, resource $context ]] ) 
 fopen() закрепляет именованный ресурс, указанный в аргументе filename, за потоком. </description>
<parameters>filename - Если filename передан в форме "scheme://...", он считается URL&#039;ом и PHP проведёт поиск обработчика протокола (также известного как "обертка") для этой схемы. Если ни одна обёртка не закреплена за протоколом, PHP выдаст замечание, чтобы помочь вам отследить потенциальную проблему в вашем скрипте и затем продолжит выполнение, как если бы filename указывал на обыкновенный файл. </parameters>
<output>Возвращает указатель на файл в случае успешной работы, или FALSE в случае ошибки. </output>
<errors>Если открыть файл не удалось, будет сгенерирована ошибка уровня E_WARNING. Вы можете использовать оператор @ для подавления этой ошибки. </errors>
<example><?php
$handle = fopen("/home/rasmus/file.txt", "r");
$handle = fopen("/home/rasmus/file.gif", "wb");
$handle = fopen("http://www.example.com/", "r");
$handle = fopen("ftp://user:password@example.com/somefile.txt", "w");
?></example>
<example_result></example_result>
</object>

<object id=774> 
<name>hw_mapid</name>
<versions>(PHP 4)</versions>
<short-description>Maps global id on virtual local id</short-description>
<description>int hw_mapid ( int $connection , int $server_id , int $object_id ) 
 Maps a global object id on any hyperwave server, even those you did not connect to with hw_connect(), onto a virtual object id. 
 This virtual object id can then be used as any other object id, e.g. to obtain the object record with hw_getobject(). 
 Note: In order to use this function you will have to set the F_DISTRIBUTED flag, which can currently only be set at compile time in hg_comm.c. It is not set by default. Read the comment at the beginning of hg_comm.c </description>
<parameters>connection - The connection identifier. 
server_id - The server id is the first part of the global object id (GOid) of the object which is actually the IP number as an integer. 
object_id - The object identifier. </parameters>
<output>Returns the virtual object id. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=775> 
<name>imageline</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Draw a line</short-description>
<description>bool imageline ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color ) 
 Draws a line between the two given points. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
x1 - x-coordinate for first point. 
y1 - y-coordinate for first point. 
x2 - x-coordinate for second point. 
y2 - y-coordinate for second point. 
color - The line color. A color identifier created with imagecolorallocate(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
function imagelinethick($image, $x1, $y1, $x2, $y2, $color, $thick = 1)
{    /* this way it works well only for orthogonal lines
    imagesetthickness($image, $thick);
    return imageline($image, $x1, $y1, $x2, $y2, $color);
    */
    if ($thick == 1) {
        return imageline($image, $x1, $y1, $x2, $y2, $color);
    }
    $t = $thick / 2 - 0.5;
    if ($x1 == $x2 || $y1 == $y2) {
        return imagefilledrectangle($image, round(min($x1, $x2) - $t), round(min($y1, $y2) - $t), round(max($x1, $x2) + $t), round(max($y1, $y2) + $t), $color);
    }
    $k = ($y2 - $y1) / ($x2 - $x1); //y = kx + q
    $a = $t / sqrt(1 + pow($k, 2));
    $points = array(
        round($x1 - (1+$k)*$a), round($y1 + (1-$k)*$a),
        round($x1 - (1-$k)*$a), round($y1 - (1+$k)*$a),
        round($x2 + (1+$k)*$a), round($y2 - (1-$k)*$a),
        round($x2 + (1-$k)*$a), round($y2 + (1+$k)*$a),
    );
    imagefilledpolygon($image, $points, 4, $color);
    return imagepolygon($image, $points, 4, $color);
}
?></example>
<example_result></example_result>
</object>

<object id=776> 
<name>com_set</name>
<versions>(PHP 4)</versions>
<short-description>Assigns a value to a COM component&#039;s property</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=777> 
<name>ob_tidyhandler</name>
<versions>(PHP 5)</versions>
<short-description>Функция обратного вызова ob_start для восстановление буфера</short-description>
<description>string ob_tidyhandler ( string $input [, int $mode ] ) 
 Функция обратного вызова ob_start() для восстановление буфера. </description>
<parameters>input - Буфер. 
mode - Режим буфера. </parameters>
<output>Возвращает видоизмененный буфер. </output>
<errors></errors>
<example><?php
ob_start('ob_tidyhandler');
echo '<p>test</i>';
?></example>
<example_result>
 
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
<head>
<title></title>
</head>
<body>
<p>test</p>
</body>
</html>
</example_result>
</object>

<object id=778> 
<name>get_magic_quotes_runtime</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the current active configuration setting of magic_quotes_runtime</short-description>
<description>int get_magic_quotes_runtime ( void ) 
 Returns the current active configuration setting of magic_quotes_runtime. </description>
<parameters></parameters>
<output>Returns 0 if magic_quotes_runtime is off, 1 otherwise. </output>
<errors></errors>
<example><?php
// Check if magic_quotes_runtime is active
if(get_magic_quotes_runtime())
{    // Deactivate
    set_magic_quotes_runtime(false);
}?></example>
<example_result></example_result>
</object>

<object id=779> 
<name>recode_file</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Recode from file to file according to recode request</short-description>
<description>bool recode_file ( string $request , resource $input , resource $output ) 
 Recode the file referenced by file handle input into the file referenced by file handle output according to the recode request. </description>
<parameters>request - The desired recode request type 
input - A local file handle resource for the input 
output - A local file handle resource for the output </parameters>
<output>Returns FALSE, if unable to comply, TRUE otherwise. </output>
<errors></errors>
<example><?php
$input = fopen('input.txt', 'r');
$output = fopen('output.txt', 'w');
recode_file("us..flat", $input, $output);
?></example>
<example_result></example_result>
</object>

<object id=780> 
<name>fread</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Бинарно-безопасное чтение файла</short-description>
<description>string fread ( resource $handle , int $length ) 
 fread() читает до length байт из файлового указателя handle. Чтение останавливается как только было достигнуто одно из следующих условий: было прочитано length байт достигнут EOF (конец файла) стал доступен пакет или произошел таймаут сокета (для сетевых потоков) если читаемый поток является буферизованным и не представляет собой обычный файл, то за один раз максимум читается количество байт, равное размеру одной порции данных (обычно это 8192), однако, в зависимости от ранее буферизованных данных размер возвращаемых данных может быть больше размера одной порции данных. </description>
<parameters>handle - Указатель (resource)на файл, обычно создаваемый с помощью функции fopen().
length - length указывает размер прочитанных данных в байтах. </parameters>
<output>Возвращает прочтенную строку или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// получает содержимое файла в строку
$filename = "/usr/local/something.txt";
$handle = fopen($filename, "r");
$contents = fread($handle, filesize($filename));
fclose($handle);
?></example>
<example_result></example_result>
</object>

<object id=781> 
<name>get_object_vars</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает свойства указанного объекта</short-description>
<description>array get_object_vars ( object $object ) 
 Возвращает видимые нестатические свойства указанного объекта object в соответствии с областью видимости. </description>
<parameters>object - Экземпляр объекта </parameters>
<output>Возвращает ассоциативный массив нестатических свойств объекта object, доступных в данной области видимости. Если свойству не было присвоено значение, оно будет возвращено со значением NULL. </output>
<errors></errors>
<example><?php
class foo {
    private $a;
    public $b = 1;
    public $c;
    private $d;
    static $e;
    public function test() {
        var_dump(get_object_vars($this));
    }
}
$test = new foo;
var_dump(get_object_vars($test));
$test->test();
?></example>
<example_result>
 
array(2) {
  ["b"]=>
  int(1)
  ["c"]=>
  NULL
}
array(4) {
  ["a"]=>
  NULL
  ["b"]=>
  int(1)
  ["c"]=>
  NULL
  ["d"]=>
  NULL
}
</example_result>
</object>

<object id=782> 
<name>convert_uudecode</name>
<versions>(PHP 5)</versions>
<short-description>Декодирует строку из формата uuencode в обычный вид</short-description>
<description>string convert_uudecode ( string $data ) 
 convert_uudecode() декодирует строку из формата uuencode в обычный вид. </description>
<parameters>data - Данные в формате uuencode. </parameters>
<output>Возвращает декодированные данные в виде строки. </output>
<errors></errors>
<example><?php
/* Догадаетесь, что выведет этот код? :) */
echo convert_uudecode("+22!L;W9E(%!(4\"$`\n`");
?></example>
<example_result></example_result>
</object>

<object id=783> 
<name>sqlite_udf_decode_binary</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Декодирует бинарные данные, переданные в качестве параметров в UDF</short-description>
<description>string sqlite_udf_decode_binary ( string $data ) 
 Декодирует бинарные данные, переданные в качестве параметров в UDF. 
 Эту функцию следует применять к аргументам, переданным в UDF, если в этих аргументах могут содержаться бинарные данные. 
 PHP не осуществляет данные операции кодирования и декодирования автоматически, так как это негативно сказывается на производительности. </description>
<parameters>data - Закодированные данные, которые будут раскодированы. Кодирование должно было быть осуществлено с помощью функций sqlite_udf_encode_binary() или sqlite_escape_string(). </parameters>
<output>The decoded string. </output>
<errors></errors>
<example><?php
$data = array(
   'one',
   'two',
   'three',
   'four',
   'five',
   'six',
   'seven',
   'eight',
   'nine',
   'ten',
   );
$db = sqlite_open(':memory:');
sqlite_query($db, "CREATE TABLE strings(a)");
foreach ($data as $str) {
    $str = sqlite_escape_string($str);
    sqlite_query($db, "INSERT INTO strings VALUES ('$str')");
}
function max_len_step(&$context, $string) 
{    $string = sqlite_udf_decode_binary($string);
    if (strlen($string) > $context) {
        $context = strlen($string);
    }
}
function max_len_finalize(&$context) 
{    return $context;
}
sqlite_create_aggregate($db, 'max_len', 'max_len_step', 'max_len_finalize');
var_dump(sqlite_array_query($db, 'SELECT max_len(a) from strings'));
?></example>
<example_result></example_result>
</object>

<object id=784> 
<name>XMLWriter::endComment</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 1.0.0)</versions>
<short-description>Завершить комментарий</short-description>
<description>bool XMLWriter::endComment ( void ) 
 Процедурный стиль bool xmlwriter_end_comment ( resource $xmlwriter )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=785> 
<name>openssl_x509_export_to_file</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Exports a certificate to file</short-description>
<description>bool openssl_x509_export_to_file ( mixed $x509 , string $outfilename [, bool $notext = TRUE ] ) 
 openssl_x509_export_to_file() stores x509 into a file named by outfilename in a PEM encoded format. </description>
<parameters>x509 - Для списка корректных значений смотрите Параметры ключей/сертификатов. 
outfilename - Path to the output file. 
notext - Необязательный параметр notext влияет на детализацию сообщений вывода; если он установлен в FALSE,то в вывод добавляется дополнительная человекочитаемая информация. Значением по умолчаниюnotext является TRUE.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=786> 
<name>zip_entry_open</name>
<versions>(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)</versions>
<short-description>Открывает директорию для чтения</short-description>
<description>bool zip_entry_open ( resource $zip , resource $zip_entry [, string $mode ] ) 
 Открывает директорию, входящую в ZIP-архив, для чтения. </description>
<parameters>zip - Дескритор, возвращаемый функцией zip_open(). 
zip_entry - Дескриптор директории, возвращаемый функцией zip_read(). 
mode - Доступные режимы приведены в документации к функции fopen(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=787> 
<name>ibase_param_info</name>
<versions>(PHP 5)</versions>
<short-description>Return information about a parameter in a prepared query</short-description>
<description>array ibase_param_info ( resource $query , int $param_number ) 
 Returns an array with information about a parameter after a query has been prepared. </description>
<parameters>query - An InterBase prepared query handle. 
param_number - Parameter offset. </parameters>
<output>Returns an array with the following keys: name, alias, relation, length and type. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=788> 
<name>sqlite_key</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Возвращает текущую позицию указателя</short-description>
<description>int sqlite_key ( resource $result ) 
 Объектно-ориентированный стиль (метод): int SQLiteResult::key ( void )</description>
<parameters>result - Ресурс результата SQLite. Этот параметр не требуется при использовании объектно-ориентированного метода. </parameters>
<output>Возвращает текущую позицию указателя в буферизованном результирующем наборе result. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=789> 
<name>gzinflate</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Распаковывает строку</short-description>
<description>string gzinflate ( string $data [, int $length = 0 ] ) 
 Распаковывает сжатую строку. </description>
<parameters>data - Данные, сжатые функцией gzdeflate(). 
length - Максимальный размер данных для распаковки. </parameters>
<output>Распакованные данные или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$compressed   = gzdeflate('Сожми меня', 9);
$uncompressed = gzinflate($compressed);
echo $uncompressed;
?></example>
<example_result></example_result>
</object>

<object id=790> 
<name>sybase_unbuffered_query</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Send a Sybase query and do not block</short-description>
<description>resource sybase_unbuffered_query ( string $query , resource $link_identifier [, bool $store_result ] ) 
 sybase_unbuffered_query() sends a query to the currently active database on the server that&#039;s associated with the specified link identifier. If the link identifier isn&#039;t specified, the last opened link is assumed. If no link is open, the function tries to establish a link as if sybase_connect() was called, and use it. 
 Unlike sybase_query(), sybase_unbuffered_query() reads only the first row of the result set. sybase_fetch_array() and similar function read more rows as needed. sybase_data_seek() reads up to the target row. The behavior may produce better performance for large result sets. 
 sybase_num_rows() will only return the correct number of rows if all result sets have been read. To Sybase, the number of rows is not known and is therefore computed by the client implementation. 
 Замечание: 
 If you don&#039;t read all of the resultsets prior to executing the next query, PHP will raise a warning and cancel all of the pending results. To get rid of this, use sybase_free_result() which will cancel pending results of an unbuffered query. </description>
<parameters>query - 
link_identifier - 
store_result - The optional store_result can be FALSE to indicate the resultsets shouldn&#039;t be fetched into memory, thus minimizing memory usage which is particularly interesting with very large resultsets. </parameters>
<output>Returns a positive Sybase result identifier on success, or FALSE on error. </output>
<errors></errors>
<example><?php
$dbh = sybase_connect('SYBASE', '', '');
$q = sybase_unbuffered_query('select firstname, lastname from huge_table', $dbh, false);
sybase_data_seek($q, 10000);
$i = 0;
while ($row = sybase_fetch_row($q)) {
    echo $row[0], ' ', $row[1], '<br />';
    if ($i++ > 40000) {
        break;
    }
}
sybase_free_result($q);
sybase_close($dbh);
?></example>
<example_result></example_result>
</object>

<object id=791> 
<name>ldap_mod_add</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Добавить значения атрибута к текущим атрибутам</short-description>
<description>bool ldap_mod_add ( resource $link_identifier , string $dn , array $entry ) 
 Добавляет один или более атрибутов к указанному dn. Эта функция выполняет модификацию на уровне атрибута, а не на уровене объектов. На уровне объектов добавление осуществляются функцией ldap_add(). </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
dn - Отличительное имя LDAP объекта. 
entry - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=792> 
<name>JDToJulian</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Переводит число дней в Юлианском летоисчислении в дату по Юлианскому календарю </short-description>
<description>string jdtojulian ( int $julianday ) 
 Переводит число дней в Юлианском летоисчислении в строку содержащую дату по Юлианскому календарю в формате "месяц/день/год". </description>
<parameters>julianday - Номер дня в Юлианском летоисчислении </parameters>
<output>Дата по Юлианскому календарю в виде строки формата "месяц/день/год" </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=793> 
<name>imap_rename</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним imap_renamemailbox()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=794> 
<name>PDF_add_bookmark</name>
<versions>(PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0)</versions>
<short-description>Add bookmark for current page [deprecated]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=795> 
<name>PDF_translate</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set origin of coordinate system</short-description>
<description>bool PDF_translate ( resource $p , float $tx , float $ty ) 
 Translates the origin of the coordinate system. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=796> 
<name>quoted_printable_decode</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Преобразует строку, закодированную методом quoted-printable в 8-битовую строку</short-description>
<description>string quoted_printable_decode ( string $str ) 
 Эта функция возращает 8-битную бинарную строку, соответствующую указанной строке в кодировке quoted-printable (в соответствии с разделом 6.7 &raquo; RFC2045, а не разделом 4.5.2 &raquo; RFC2821, т.е. дополнительные точки не будут вырезаны из начала строки). 
 Эта функция подобна функции imap_qprint(), но не требует для своей работы модуля IMAP. </description>
<parameters>str - Входная строка. </parameters>
<output>Возвращает 8-битную бинарную строку. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=797> 
<name>ncurses_mvvline</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Set new position and draw a vertical line using an attributed character and max. n characters long </short-description>
<description>int ncurses_mvvline ( int $y , int $x , int $attrchar , int $n ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>y - 
x - 
attrchar - 
n - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=798> 
<name>ncurses_deleteln</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Delete line at current position, move rest of screen up </short-description>
<description>bool ncurses_deleteln ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Returns FALSE on success, otherwise TRUE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=799> 
<name>proc_open</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Выполняет команду и открывает указатель на файл для ввода/вывода </short-description>
<description>resource proc_open ( string $cmd , array $descriptorspec , array &$pipes [, string $cwd [, array $env [, array $other_options ]]] ) 
 proc_open() аналогична popen() но предоставляет намного больше контроля над исполнением программы. </description>
<parameters>cmd - Команда для выполнения 
descriptorspec - Массив, ключи которого представляют собой номер дескриптора, а значение описывает, как PHP должен передать этот дескриптор дочернему процессу. 0 - stdin, 1 - stdout и 2 - stderr. 
pipes - Будет задан массивом указателей на файлы, соответствующие созданным каналам передачи данных PHP. 
cwd - Рабочая директория команды. Это должен быть абсолютный путь к директории или NULL, если требуется использовать директорию по умолчанию (рабочая директория текущего PHP процесса). 
env - Массив переменных окружения для запускаемой команды или NULL, если требуется использовать то же окружение, что и у текущего PHP процесса. 
other_options - Позволяет задать дополнительные настройки. На данный момент поддерживаются следующие настройки: suppress_errors (только для Windows): при установке в TRUE не будут показываться ошибки, возникающие в ходе работы функции bypass_shell (только для Windows): при установке в TRUE процесс будет запущен в обход оболочки cmd.exe context: контекст потока, используемый при создании файлов (созданный функцией (stream_context_create()) </parameters>
<output>Возвращает ресурс, представляющий процесс. Этот ресурс необходимо освобождать функцией proc_close() по завершении работы с ним. В случае ошибки возвращает FALSE. </output>
<errors></errors>
<example><?php
$descriptorspec = array(
   0 => array("pipe", "r"),  // stdin - канал, из которого дочерний процесс будет читать
   1 => array("pipe", "w"),  // stdout - канал, в который дочерний процесс будет записывать 
   2 => array("file", "/tmp/error-output.txt", "a") // stderr - файл для записи
);
$cwd = '/tmp';
$env = array('some_option' => 'aeiou');
$process = proc_open('php', $descriptorspec, $pipes, $cwd, $env);
if (is_resource($process)) {
    // $pipes теперь выглядит так:
    // 0 => записывающий обработчик, подключенный к дочернему stdin
    // 1 => читающий обработчик, подключенный к дочернему stdout
    // Вывод сообщений об ошибках будет добавляться в /tmp/error-output.txt
    fwrite($pipes[0], '<?php print_r($_ENV); ?>');
    fclose($pipes[0]);
    echo stream_get_contents($pipes[1]);
    fclose($pipes[1]);
    // Важно закрывать все каналы перед вызовом
    // proc_close во избежание мертвой блокировки
    $return_value = proc_close($process);
    echo "команда вернула $return_value\n";
}?></example>
<example_result>
 
Array
(
    [some_option] => aeiou
    [PWD] => /tmp
    [SHLVL] => 1
    [_] => /usr/local/bin/php
)
команда вернула 0
</example_result>
</object>

<object id=800> 
<name>get_class_vars</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает объявленные по умолчанию свойства класса</short-description>
<description>array get_class_vars ( string $class_name ) 
 Возвращает объявленные по умолчанию свойства указанного класса. </description>
<parameters>class_name - Имя класса </parameters>
<output>Возвращает ассоциативный массив объявленных свойств класса, видимых из текущей области видимости, с их значением по умолчанию. Получившиеся элементы массива имеют форму varname => value. </output>
<errors></errors>
<example><?php
class myclass {
    var $var1; // переменная не имеет начального значения...
    var $var2 = "xyz";
    var $var3 = 100;
    private $var4; // PHP 5
    // конструктор
    function myclass() {
        // change some properties
        $this->var1 = "foo";
        $this->var2 = "bar";
        return true;
    }
}
$my_class = new myclass();
$class_vars = get_class_vars(get_class($my_class));
foreach ($class_vars as $name => $value) {
    echo "$name : $value\n";
}
?></example>
<example_result>
 
// До PHP 4.2.0
var2 : xyz
var3 : 100

// Начиная с PHP 4.2.0
var1 :
var2 : xyz
var3 : 100
</example_result>
</object>

<object id=801> 
<name>aggregate_methods_by_regexp</name>
<versions>(PHP 4 >= 4.2.0)</versions>
<short-description>Selective class methods aggregation to an object using a regular expression </short-description>
<description>void aggregate_methods_by_regexp ( object $object , string $class_name , string $regexp [, bool $exclude = false ] ) 
 Aggregates methods from a class to an existing object using a regular expression to match method names. 
 The class constructor or methods whose names start with an underscore character (_), which are considered private to the aggregated class, are always excluded. </description>
<parameters>object - 
class_name - 
regexp - 
exclude - The optional parameter exclude is used to decide whether the regular expression will select the names of methods to include in the aggregation (i.e. exclude is FALSE), or to exclude from the aggregation (exclude is TRUE). </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=802> 
<name>assert_options</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Set/get the various assert flags</short-description>
<description>mixed assert_options ( int $what [, mixed $value ] ) 
 Set the various assert() control options or just query their current settings. </description>
<parameters>what - Assert Options Option INI Setting Default value Description ASSERT_ACTIVE assert.active 1 enable assert() evaluation ASSERT_WARNING assert.warning 1 issue a PHP warning for each failed assertion ASSERT_BAIL assert.bail 0 terminate execution on failed assertions ASSERT_QUIET_EVAL assert.quiet_eval 0 disable error_reporting during assertion expression evaluation ASSERT_CALLBACK assert.callback (NULL) Callback to call on failed assertions 
value - An optional new value for the option. </parameters>
<output>Returns the original setting of any option or FALSE on errors. </output>
<errors></errors>
<example><?php
// This is our function to handle 
// assert failures
function assert_failure()
{    echo 'Assert failed';
}
// This is our test function
function test_assert($parameter)
{    assert(is_bool($parameter));
}
// Set our assert options
assert_options(ASSERT_ACTIVE,   true);
assert_options(ASSERT_BAIL,     true);
assert_options(ASSERT_WARNING,  false);
assert_options(ASSERT_CALLBACK, 'assert_failure');
// Make an assert that would fail
test_assert(1);
// This is never reached due to ASSERT_BAIL 
// being true
echo 'Never reached';
?></example>
<example_result></example_result>
</object>

<object id=803> 
<name>ncurses_delch</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Delete character at current position, move rest of line left </short-description>
<description>bool ncurses_delch ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Returns FALSE on success, TRUE otherwise. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=804> 
<name>wddx_serialize_vars</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Serialize variables into a WDDX packet</short-description>
<description>string wddx_serialize_vars ( mixed $var_name [, mixed $... ] ) 
 Creates a WDDX packet with a structure that contains the serialized representation of the passed variables. </description>
<parameters>var_name - Can be either a string naming a variable or an array containing strings naming the variables or another array, etc. 
... - </parameters>
<output>Returns the WDDX packet, or FALSE on error. </output>
<errors></errors>
<example><?php
$a = 1;
$b = 5.5;
$c = array("blue", "orange", "violet");
$d = "colors";
$clvars = array("c", "d");
echo wddx_serialize_vars("a", "b", $clvars);
?></example>
<example_result>
 
<wddxPacket version=&#039;1.0&#039;><header/><data><struct><var name=&#039;a&#039;><number>1</number></var>
<var name=&#039;b&#039;><number>5.5</number></var><var name=&#039;c&#039;><array length=&#039;3&#039;>
<string>blue</string><string>orange</string><string>violet</string></array></var>
<var name=&#039;d&#039;><string>colors</string></var></struct></data></wddxPacket>
</example_result>
</object>

<object id=805> 
<name>ncurses_top_panel</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Moves a visible panel to the top of the stack</short-description>
<description>int ncurses_top_panel ( resource $panel ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>panel - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=806> 
<name>ifxus_free_slob</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Deletes the slob object</short-description>
<description>bool ifxus_free_slob ( int $bid ) 
 Deletes the slob object. </description>
<parameters>bid - An existing slob id. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=807> 
<name>ibase_add_user</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Add a user to a security database (only for IB6 or later)</short-description>
<description>bool ibase_add_user ( resource $service_handle , string $user_name , string $password [, string $first_name [, string $middle_name [, string $last_name ]]] ) 
 PHP 4 uses server, dba_user_name and dba_user_password instead of service_handle parameter. Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=808> 
<name>variant_idiv</name>
<versions>(PHP 5)</versions>
<short-description>Converts variants to integers and then returns the result from dividing them</short-description>
<description>mixed variant_idiv ( mixed $left , mixed $right ) 
 Converts left and right to integer values, and then performs integer division. </description>
<parameters>left - The left operand. 
right - The right operand. </parameters>
<output>Variant Integer Division Rules If Then Both expressions are of the string, date, character, boolean type Division and integer is returned One expression is a string type and the other a character Division One expression is numeric and the other is a string Division Both expressions are numeric Division Either expression is NULL NULL is returned Both expressions are empty A com_exception with code DISP_E_DIVBYZERO is thrown </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=809> 
<name>imap_search</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>This function returns an array of messages matching the given search criteria</short-description>
<description>array imap_search ( resource $imap_stream , string $criteria [, int $options = SE_FREE [, string $charset = NIL ]] ) 
 This function performs a search on the mailbox currently opened in the given IMAP stream. 
 For example, to match all unanswered messages sent by Mom, you&#039;d use: "UNANSWERED FROM mom". Searches appear to be case insensitive. This list of criteria is from a reading of the UW c-client source code and may be incomplete or inaccurate (see also &raquo; RFC2060, section 6.4.4). </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
criteria - A string, delimited by spaces, in which the following keywords are allowed. Any multi-word arguments (e.g. FROM "joey smith") must be quoted. Results will match all criteria entries. ALL - return all messages matching the rest of the criteria ANSWERED - match messages with the \\ANSWERED flag set BCC "string" - match messages with "string" in the Bcc: field BEFORE "date" - match messages with Date: before "date" BODY "string" - match messages with "string" in the body of the message CC "string" - match messages with "string" in the Cc: field DELETED - match deleted messages FLAGGED - match messages with the \\FLAGGED (sometimes referred to as Important or Urgent) flag set FROM "string" - match messages with "string" in the From: field KEYWORD "string" - match messages with "string" as a keyword NEW - match new messages OLD - match old messages ON "date" - match messages with Date: matching "date" RECENT - match messages with the \\RECENT flag set SEEN - match messages that have been read (the \\SEEN flag is set) SINCE "date" - match messages with Date: after "date" SUBJECT "string" - match messages with "string" in the Subject: TEXT "string" - match messages with text "string" TO "string" - match messages with "string" in the To: UNANSWERED - match messages that have not been answered UNDELETED - match messages that are not deleted UNFLAGGED - match messages that are not flagged UNKEYWORD "string" - match messages that do not have the keyword "string" UNSEEN - match messages which have not been read yet 
options - Valid values for options are SE_UID, which causes the returned array to contain UIDs instead of messages sequence numbers. 
charset - </parameters>
<output>Returns an array of message numbers or UIDs. </output>
<errors></errors>
<example><?php
$conn   = imap_open('{imap.example.com:993/imap/ssl}INBOX', 'foo@example.com', 'pass123', OP_READONLY);
$some   = imap_search($conn, 'SUBJECT "HOWTO be Awesome" SINCE "8 August 2008"', SE_UID);
$msgnos = imap_search($conn, 'ALL');
$uids   = imap_search($conn, 'ALL', SE_UID);
print_r($some);
print_r($msgnos);
print_r($uids);
?></example>
<example_result>
 
Array
(
    [0] => 4
    [1] => 6
    [2] => 11
)
Array
(
    [0] => 1
    [1] => 2
    [2] => 3
    [3] => 4
    [4] => 5
    [5] => 6
)
Array
(
    [0] => 1
    [1] => 4
    [2] => 6
    [3] => 8
    [4] => 11
    [5] => 12
)
</example_result>
</object>

<object id=810> 
<name>imap_getsubscribed</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>List all the subscribed mailboxes</short-description>
<description>array imap_getsubscribed ( resource $imap_stream , string $ref , string $pattern ) 
 Gets information about the subscribed mailboxes. 
 Identical to imap_getmailboxes(), except that it only returns mailboxes that the user is subscribed to. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
ref - ref should normally be just the server specification as described in imap_open() 
pattern - Определяет начало поиска в иерархии почтовых ящиков.</parameters>
<output>Returns an array of objects containing mailbox information. Each object has the attributes name, specifying the full name of the mailbox; delimiter, which is the hierarchy delimiter for the part of the hierarchy this mailbox is in; and attributes. Attributes is a bitmask that can be tested against: LATT_NOINFERIORS - This mailbox has no "children" (there are no mailboxes below this one). LATT_NOSELECT - This is only a container, not a mailbox - you cannot open it. LATT_MARKED - This mailbox is marked. Only used by UW-IMAPD. LATT_UNMARKED - This mailbox is not marked. Only used by UW-IMAPD. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=811> 
<name>odbc_primarykeys</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the primary keys for a table</short-description>
<description>resource odbc_primarykeys ( resource $connection_id , string $qualifier , string $owner , string $table ) 
 Returns a result identifier that can be used to fetch the column names that comprise the primary key for a table. </description>
<parameters>connection_id - Идентификатор соединения ODBC,за подробностями обращайтесь к odbc_connect().
qualifier - 
owner - 
table - </parameters>
<output>Returns an ODBC result identifier или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=812> 
<name>ncurses_erase</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Erase terminal screen </short-description>
<description>bool ncurses_erase ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=813> 
<name>xslt_error</name>
<versions>(PHP 4 >= 4.0.3)</versions>
<short-description>Возвращает сообщение об ошибке </short-description>
<description>string xslt_error ( resource $xh ) 
 Возвращает строку, содержащую описание последней ошибки, произошедшей в процессе работы XSLT-процессора. </description>
<parameters>xh - Ресурс XSLT-процессора, возвращаемый функцией xslt_create(). </parameters>
<output>Возвращает сообщение об ошибке в виде строки. </output>
<errors></errors>
<example><?php
$xh = xslt_create();
$result = xslt_process($xh, 'dog.xml', 'pets.xsl');
if (!$result) {
    die(sprintf("Невозможно преобразовать XSLT документ [%d]: %s",
                xslt_errno($xh), xslt_error($xh)));
}
echo $result;
xslt_free($xh);
?></example>
<example_result></example_result>
</object>

<object id=814> 
<name>msql_tablename</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Alias of msql_result()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=815> 
<name>pcntl_sigtimedwait</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Waits for signals, with a timeout</short-description>
<description>int pcntl_sigtimedwait ( array $set [, array &$siginfo [, int $seconds = 0 [, int $nanoseconds = 0 ]]] ) 
 The pcntl_sigtimedwait() function operates in exactly the same way as pcntl_sigwaitinfo() except that it takes two additional parameters, seconds and nanoseconds, which enable an upper bound to be placed on the time for which the script is suspended. </description>
<parameters>set - Array of signals to wait for. 
siginfo - The siginfo is set to an array containing informations about the signal. See pcntl_sigwaitinfo(). 
seconds - Timeout in seconds. 
nanoseconds - Timeout in nanoseconds. </parameters>
<output>On success, pcntl_sigtimedwait() returns a signal number. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=816> 
<name>oci_set_client_identifier</name>
<versions>(PHP 5.3.2, PECL OCI8 >= 1.4.0)</versions>
<short-description>Задает идентификатор клиента </short-description>
<description>bool oci_set_client_identifier ( resource $connection , string $client_identifier ) 
 Устанавливает идентификатор клиента, используемый различными компонентами базы данных для идентификации различных пользователей тонких клиентов, которые авторизуются в базе данных как один пользователь. 
 Идентификатор клиента регистрируется в базе данных во время очередного запроса от PHP, например, когда запускается SQL выражение. 
 Этот идентификатор может быть извлечен из административных представлений (view) базы данных, таких как V$SESSION. Его можно использовать с помощью DBMS_MONITOR.CLIENT_ID_TRACE_ENABLE для трассировки. Также идентификатор может использоваться в целях аудита. 
 Значение можно устанавливать и через постоянные соединения. </description>
<parameters>connection - Идентификатор соединения Oracle,возвращаемый oci_connect(), oci_pconnect(),или oci_new_connect().
client_identifier - Задаваемая пользователем строка до 64 байт. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Найдем логин пользователя
session_start();
$un = my_validate_session($_SESSION['username']);
$c = oci_connect('myschema', 'welcome', 'localhost/XE');
// Сообщим его базе данных
oci_set_client_identifier($c, $un);
// Следующий запрос к БД заодно установит идентификатор
$s = oci_parse($c, 'select mydata from mytable');
oci_execute($s);
// ...
?></example>
<example_result></example_result>
</object>

<object id=817> 
<name>filepro_rowcount</name>
<versions>(PHP 4, PHP 5 <= 5.1.6)</versions>
<short-description>Find out how many rows are in a filePro database</short-description>
<description>int filepro_rowcount ( void ) 
 Returns the number of rows in the opened filePro database. 
 Замечание: Когда опция safe mode включена, PHP проверяет,имеют ли файлы/каталоги, с которыми вы собираетесь работать, такойже UID (владельца), как и выполняемый скрипт. </description>
<parameters></parameters>
<output>Returns the number of rows in the opened filePro database, or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=818> 
<name>FrenchToJD</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Преобразует дату Французского республиканского календаря в количество дней в Юлианском летоисчислении </short-description>
<description>int frenchtojd ( int $month , int $day , int $year ) 
 Преобразует дату Французского республиканского календаря в количество дней в Юлианском летоисчислении. 
 Функция преобразует даты только с 1 по 14 годов (Григорианские даты с 22 сентября 1792г. по 22 сентября 1806г.) Это с лихвой покрывает период, когда этот календарь использовался. </description>
<parameters>month - Месяц в виде числа от 1 (для месяца Vendémiaire) до 13 (для периода 5-6 дней в конце каждого года) 
day - День в виде числа от 1 до 30 
year - Год в виде числа между 1 и 14 </parameters>
<output>Число (integer) дней в Юлианском летоисчислении для заданной даты по Французскому республиканскому календарю. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=819> 
<name>fwrite</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Бинарно-безопасная запись в файл</short-description>
<description>int fwrite ( resource $handle , string $string [, int $length ] ) 
 fwrite() записывает содержимое string в файловый поток handle. </description>
<parameters>handle - Указатель (resource)на файл, обычно создаваемый с помощью функции fopen().
string - Записываемая строка. 
length - Если передан аргумент length, запись остановится после того, как length байтов будут записаны или будет достигнут конец строки string, смотря что произойдёт первым. </parameters>
<output>Запись в сетевой поток может прекратиться до того, как будут записаны все данные. Это можно контролировать с помощью проверки возвращаемого значения функции fwrite(): <?php
function fwrite_stream($fp, $string) {
    for ($written = 0; $written < strlen($string); $written += $fwrite) {
        $fwrite = fwrite($fp, substr($string, $written));
        if ($fwrite === false) {
            return $written;
        }
    }
    return $written;
}?> </output>
<errors></errors>
<example><?php
$filename = 'test.txt';
$somecontent = "Добавить это к файлу\n";
// Вначале давайте убедимся, что файл существует и доступен для записи.
if (is_writable($filename)) {
    // В нашем примере мы открываем $filename в режиме "записи в конец".
    // Таким образом, смещение установлено в конец файла и
    // наш $somecontent допишется в конец при использовании fwrite().
    if (!$handle = fopen($filename, 'a')) {
         echo "Не могу открыть файл ($filename)";
         exit;
    }
    // Записываем $somecontent в наш открытый файл.
    if (fwrite($handle, $somecontent) === FALSE) {
        echo "Не могу произвести запись в файл ($filename)";
        exit;
    }
    echo "Ура! Записали ($somecontent) в файл ($filename)";
    fclose($handle);
} else {
    echo "Файл $filename недоступен для записи";
}?></example>
<example_result></example_result>
</object>

<object id=820> 
<name>ocierror</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_error()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=821> 
<name>lcfirst</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Преобразует первый символ строки в нижний регистр</short-description>
<description>string lcfirst ( string $str ) 
 Возвращает строку str, первый символ которой был преобразован в нижний регистр, если этот символ является буквой. 
 Принадлежность того или иного символа к буквенным определяется с учетом текущей локали. Это означает, что, например, в используемой по умолчанию локали "C", символ ä не будет преобразован. </description>
<parameters>str - Входная строка. </parameters>
<output>Возвращает результирующую строку. </output>
<errors></errors>
<example><?php
$foo = 'HelloWorld';
$foo = lcfirst($foo);             // helloWorld
$bar = 'HELLO WORLD!';
$bar = lcfirst($bar);             // hELLO WORLD!
$bar = lcfirst(strtoupper($bar)); // hELLO WORLD!
?></example>
<example_result></example_result>
</object>

<object id=822> 
<name>date_interval_create_from_date_string</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Псевдоним DateInterval::createFromDateString()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=823> 
<name>pg_cancel_query</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Остановка асинхронного запроса. </short-description>
<description>bool pg_cancel_query ( resource $connection ) 
 pg_cancel_query() отменяет выполнение асинхронного запроса, отправленного функциями pg_send_query(), pg_send_query_params() или pg_send_execute(). Невозможно завершить выполнение запроса, запущенное функцией pg_query(). </description>
<parameters>connection - Ресурс соединения с базой данных PostgreSQL. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Could not connect");
  if (!pg_connection_busy($dbconn)) {
      pg_send_query($dbconn, "select * from authors; select count(*) from authors;");
  }
  
  $res1 = pg_get_result($dbconn);
  echo "Первый запрос к pg_get_result(): $res1\n";
  $rows1 = pg_num_rows($res1);
  echo "$res1 получил $rows1 записей\n\n";
  
  // Остановка выполняющегося в данный момент запроса. 
  // Последует второй запрос, если, конечно, он еще выполняется.  
  pg_cancel_query($dbconn);
?></example>
<example_result>
 
Первый запрос к pg_get_result(): Resource id #3
Resource id #3 получил 3 записей
</example_result>
</object>

<object id=824> 
<name>pg_field_table</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Возвращает наименование или идентификатор таблицы, содержащей заданное поле</short-description>
<description>mixed pg_field_table ( resource $result , int $field_number [, bool $oid_only = false ] ) 
 pg_field_table() возвращает имя таблицы, которой принадлежит заданное поле. Если в качестве аргумента oid_only передается TRUE, функция вернет oid-идентификатор таблицы. </description>
<parameters>result - Ресурс результата запроса PostgreSQL, возвращаемый функциями pg_query(), pg_query_params() или pg_execute() (в числе прочих). 
field_number - Порядковый номер поля результата запроса, начиная с нуля. 
oid_only - По-умолчанию функция возвращает название таблицы, содержащей заданное поле. Если параметр oid_only равен TRUE, то функция вернет oid таблицы. </parameters>
<output>При успешном завершении название таблицы или ее oid. Либо FALSE при неудаче. </output>
<errors></errors>
<example><?php
$dbconn = pg_connect("dbname=publisher") or die("Невозможно соединиться с базой");
$res = pg_query($dbconn, "SELECT bar FROM foo");
echo pg_field_table($res, 0);
echo pg_field_table($res, 0, true);
$res = pg_query($dbconn, "SELECT version()");
var_dump(pg_field_table($res, 0));
?></example>
<example_result>
 
foo
14379580

bool(false)
</example_result>
</object>

<object id=825> 
<name>swf_ortho</name>
<versions>(PHP 4 >= 4.0.1)</versions>
<short-description>Defines an orthographic mapping of user coordinates onto the current viewport</short-description>
<description>void swf_ortho ( float $xmin , float $xmax , float $ymin , float $ymax , float $zmin , float $zmax ) 
 Defines an 3D orthographic mapping of user coordinates onto the current viewport. </description>
<parameters>xmin - 
xmax - 
ymin - 
ymax - 
zmin - 
zmax - </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=826> 
<name>grapheme_extract</name>
<versions>(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)</versions>
<short-description>Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8.</short-description>
<description>string grapheme_extract ( string $haystack , int $size [, int $extract_type [, int $start = 0 [, int &$next ]]] ) 
 Function to extract a sequence of default grapheme clusters from a text buffer, which must be encoded in UTF-8. </description>
<parameters>haystack - String to search. 
size - Maximum number items - based on the $extract_type - to return. 
extract_type - Defines the type of units referred to by the $size parameter: 
start - Starting position in $haystack in bytes - if given, it must be zero or a positive value that is less than or equal to the length of $haystack in bytes. If $start does not point to the first byte of a UTF-8 character, the start position is moved to the next character boundary. 
next - Reference to a value that will be set to the next starting position. When the call returns, this may point to the first byte position past the end of the string. </parameters>
<output>A string starting at offset $start and ending on a default grapheme cluster boundary that conforms to the $size and $extract_type specified. </output>
<errors></errors>
<example><?php
$char_a_ring_nfd = "a\xCC\x8A";  // 'LATIN SMALL LETTER A WITH RING ABOVE' (U+00E5) normalization form "D"
$char_o_diaeresis_nfd = "o\xCC\x88"; // 'LATIN SMALL LETTER O WITH DIAERESIS' (U+00F6) normalization form "D"
print urlencode(grapheme_extract( $char_a_ring_nfd . $char_o_diaeresis_nfd, 1, GRAPHEME_EXTR_COUNT, 2));
?></example>
<example_result>
 
o%CC%88
</example_result>
</object>

<object id=827> 
<name>ocifreestatement</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_free_statement()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=828> 
<name>PDF_setlinewidth</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set line width</short-description>
<description>bool PDF_setlinewidth ( resource $p , float $width ) 
 Sets the current line width. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=829> 
<name>fbsql_result</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Get result data</short-description>
<description>mixed fbsql_result ( resource $result [, int $row [, mixed $field ]] ) 
 Returns the contents of one cell from a FrontBase result set. 
 When working on large result sets, you should consider using one of the functions that fetch an entire row (specified below). As these functions return the contents of multiple cells in one function call, they&#039;re MUCH quicker than fbsql_result(). 
 Calls to fbsql_result() should not be mixed with calls to other functions that deal with the result set. </description>
<parameters>result - Идентификатор результата запроса, полученный изfbsql_query() илиfbsql_db_query().
row - 
field - Can be the field&#039;s offset, or the field&#039;s name, or the field&#039;s table dot field&#039;s name (tablename.fieldname). </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=830> 
<name>dbplus_lockrel</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Request write lock on relation</short-description>
<description>int dbplus_lockrel ( resource $relation ) 
 Requests a write lock on the given relation. 
 Other clients may still query the relation, but can&#039;t alter it while it is locked. </description>
<parameters>relation - A relation opened by dbplus_open(). </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=831> 
<name>ming_keypress</name>
<versions>(PHP 5 <= 5.3.0, PECL ming SVN)</versions>
<short-description>Returns the action flag for keyPress(char)</short-description>
<description>int ming_keypress ( string $char ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=832> 
<name>stream_wrapper_unregister</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Отменяет регистрацию обертки URL</short-description>
<description>bool stream_wrapper_unregister ( string $protocol ) 
 Позволяет вам отключить уже определённую обёртку потока. Как только обёртка будет отключена, вы можете перезаписать её пользовательской обёрткой, используя stream_wrapper_register() или включить её повторно, используя stream_wrapper_restore(). </description>
<parameters>protocol - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=833> 
<name>sqlite_field_name</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Возвращает имя указанного поля</short-description>
<description>string sqlite_field_name ( resource $result , int $field_index ) 
 Объектно-ориентированный стиль (метод): string SQLiteResult::fieldName ( int $field_index )</description>
<parameters>result - Ресурс результата SQLite. Этот параметр не требуется при использовании объектно-ориентированного метода. 
field_index - Порядковый номер поля в результирующем наборе. </parameters>
<output>Возвращает имя поля в результирующем наборе SQLite по указанному порядковому номеру поля, или FALSE в случае ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=834> 
<name>urldecode</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Декодирование URL-кодированной строки</short-description>
<description>string urldecode ( string $str ) 
 Декодирует любые %## кодированные последовательности в данной строке. Символ "плюс" (&#039;+&#039;) декодируется в символ пробела. </description>
<parameters>str - Строка, которая должны быть декодирована. </parameters>
<output>Возвращает декодированную строку. </output>
<errors></errors>
<example><?php
$a = explode('&', $QUERY_STRING);
$i = 0;
while ($i < count($a)) {
    $b = split('=', $a[$i]);
    echo 'Value for parameter ', htmlspecialchars(urldecode($b[0])),
         ' is ', htmlspecialchars(urldecode($b[1])), "<br />\n";
    $i++;
}?></example>
<example_result></example_result>
</object>

<object id=835> 
<name>XMLWriter::writeDTDEntity</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Записать полный тэг DTD записи</short-description>
<description>bool XMLWriter::writeDTDEntity ( string $name , string $content , bool $pe , string $pubid , string $sysid , string $ndataid ) 
 Процедурный стиль bool xmlwriter_write_dtd_entity ( resource $xmlwriter , string $name , string $content , bool $pe , string $pubid , string $sysid , string $ndataid )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
name - Имя записи. 
content - Содержимое записи. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=836> 
<name>is_infinite</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Проверяет, является ли значение бесконечным</short-description>
<description>bool is_infinite ( float $val ) 
 Возвращает TRUE, если val является бесконечностью (положительной или отрицательной), например, как результат вычисления log(0) или любые другие значения, слишком большие, чтобы уместиться в float на данной платформе. </description>
<parameters>val - Проверяемое значение </parameters>
<output>TRUE если val является бесконечным, и FALSE в противном случае. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=837> 
<name>ncurses_mvaddstr</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Move position and add string </short-description>
<description>int ncurses_mvaddstr ( int $y , int $x , string $s ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>y - 
x - 
s - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=838> 
<name>hash_final</name>
<versions>(PHP 5 >= 5.1.2, PECL hash >= 1.1)</versions>
<short-description>Завершает инкриментальное хеширование и возвращает результат в виде хеш-кода</short-description>
<description>string hash_final ( resource $context [, bool $raw_output = false ] ) </description>
<parameters>context - Содержимое хеша, возвращаемое hash_init(). 
raw_output - Когда установлено в TRUE, выводит необработанные двоичные данные. При FALSE, выводит данные в шестнадцатеричной кодировке в нижнем регистре. </parameters>
<output>Возвращает строку содержащую вычисленный хеш-код в шестнадцатеричной кодировке в нижнем регистре. Если raw_output задан как TRUE, то возвращается хеш-код в виде бинарных данных. </output>
<errors></errors>
<example><?php
$ctx = hash_init('sha1');
hash_update($ctx, 'Наглый коричневый лисёнок прыгает вокруг ленивой собаки.');
echo hash_final($ctx);
?></example>
<example_result>
 
dc495843a3a90b46c12e254102599571fa83a737
</example_result>
</object>

<object id=839> 
<name>str_ireplace</name>
<versions>(PHP 5)</versions>
<short-description>Регистро-независимый вариант функции str_replace()</short-description>
<description>mixed str_ireplace ( mixed $search , mixed $replace , mixed $subject [, int &$count ] ) 
 Эта функция возвращает строку или массив, в котором все вхождения search в subject заменены на replace (без учета регистра символов). Если не нужны сложные правила поиска/замены, использование этой функции предпочтительнее preg_replace() с модификатором i. </description>
<parameters>search - Искомое значение, также известное как needle (иголка). Для множества искомых значений можно использовать массив. 
replace - Значение замены, будет использовано для замены искомых значений search. Для множества значений можно использовать массив. 
subject - Строка или массив, в котором производится поиск и замена, также известный как haystack (стог сена). 
count - Если передан, то будет установлен в количество произведенных замен. </parameters>
<output>Возвращает строку или массив с замененными значениями. </output>
<errors></errors>
<example><?php
$bodytag = str_ireplace("%body%", "black", "<body text=%BODY%>");
?></example>
<example_result></example_result>
</object>

<object id=840> 
<name>array_diff_uassoc</name>
<versions>(PHP 5)</versions>
<short-description>Вычисляет расхождение массивов с дополнительной проверкой индекса, осуществляемой при помощи callback-функции </short-description>
<description>array array_diff_uassoc ( array $array1 , array $array2 [, array $... ], callback $key_compare_func ) 
 Сравнивает array1 c array2 и возвращает разницу. В отличие от array_diff(), для сравнения используются ключи. 
 В отличие от array_diff_assoc(), для сравнения ключей используется пользовательская функция, а не встроенная. </description>
<parameters>array1 - Исходный массив 
array2 - Массив, с которым идет сравнение 
... - Дополнительные массивы, с которыми осуществляется сравнение 
key_compare_func - Используемая callback-функция. Данная функция должна возвращать целое число, меньшее, равное, либо большее нуля, если первый аргумент соответственно считается меньшим, равным, либо большим, чем второй. </parameters>
<output>Возвращает array, содержащий все элементы array1, которых нет во всех остальных массивах. </output>
<errors></errors>
<example>
 "a" => "green" существует в обоих массивах и поэтому отсутствует в выводе функции. Наоборот, пара 0 => "red" находится в выводе функции, так как второй аргумент "red" имеет ключ, равный 1. </example>
<example_result>
 
Array
(
    [b] => brown
    [c] => blue
    [0] => red
)
</example_result>
</object>

<object id=841> 
<name>swf_shapelineto</name>
<versions>(PHP 4)</versions>
<short-description>Draw a line</short-description>
<description>void swf_shapelineto ( float $x , float $y ) 
 Draws a line to the x and y coordinates. The current position is then set to that point. </description>
<parameters>x - x-coordinate of the target. 
y - y-coordinate of the target. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=842> 
<name>openssl_pkcs12_export_to_file</name>
<versions>(PHP 5 >= 5.2.2)</versions>
<short-description>Exports a PKCS#12 Compatible Certificate Store File</short-description>
<description>bool openssl_pkcs12_export_to_file ( mixed $x509 , string $filename , mixed $priv_key , string $pass [, array $args ] ) 
 openssl_pkcs12_export_to_file() stores x509 into a file named by filename in a PKCS#12 file format. </description>
<parameters>x509 - Для списка корректных значений смотрите Параметры ключей/сертификатов. 
filename - Path to the output file. 
priv_key - Private key component of PKCS#12 file. 
pass - Encryption password for unlocking the PKCS#12 file. 
args - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=843> 
<name>vpopmail_add_alias_domain</name>
<versions>(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)</versions>
<short-description>Add an alias for a virtual domain</short-description>
<description>bool vpopmail_add_alias_domain ( string $domain , string $aliasdomain ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=844> 
<name>m_getcell</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Get a specific cell from a comma delimited response by column name</short-description>
<description>string m_getcell ( resource $conn , int $identifier , string $column , int $row ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
identifier - 
column - 
row - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=845> 
<name>iconv_substr</name>
<versions>(PHP 5)</versions>
<short-description>Получение части строки</short-description>
<description>string iconv_substr ( string $str , int $offset [, int $length = iconv_strlen($str, $charset) [, string $charset = ini_get("iconv.internal_encoding") ]] ) 
 Получает часть строки str, определенную параметрами offset и length. </description>
<parameters>str - Изначальная строка. 
offset - Если offset неотрицателен, iconv_substr() получает часть строки str начиная с символа с порядковым номером offset (нумерация начинается с нуля). 
length - Если length задан и положителен, возвращаемое значение содержит не более length символов, начиная с offset (зависит от длины строки string). 
charset - Если параметр charset не указан, предполагается, что строка string имеет кодировку iconv.internal_encoding. </parameters>
<output>Возвращает часть строки str, определенную параметрами offset и length. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=846> 
<name>socket_recv</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Receives data from a connected socket </short-description>
<description>int socket_recv ( resource $socket , string &$buf , int $len , int $flags ) 
 The socket_recv() function receives len bytes of data in buf from socket. socket_recv() can be used to gather data from connected sockets. Additionally, one or more flags can be specified to modify the behaviour of the function. 
 buf is passed by reference, so it must be specified as a variable in the argument list. Data read from socket by socket_recv() will be returned in buf. </description>
<parameters>socket - The socket must be a socket resource previously created by socket_create(). 
buf - The data received will be fetched to the variable specified with buf. If an error occurs, if the connection is reset, or if no data is available, buf will be set to NULL. 
len - Up to len bytes will be fetched from remote host. 
flags - The value of flags can be any combination of the following flags, joined with the binary OR (|) operator. </parameters>
<output>socket_recv() returns the number of bytes received, or FALSE if there was an error. The actual error code can be retrieved by calling socket_last_error(). This error code may be passed to socket_strerror() to get a textual explanation of the error. </output>
<errors></errors>
<example>
 Примеры to use socket_recv(). </example>
<example_result>
 
<h2>TCP/IP Connection</h2>
OK.
Attempting to connect to &#039;208.77.188.166&#039; on port &#039;80&#039;...OK.
Sending HTTP HEAD request...OK.
Reading response:

Closing socket...HTTP/1.1 200 OK
Date: Mon, 14 Sep 2009 08:56:36 GMT
Server: Apache/2.2.3 (Red Hat)
Last-Modified: Tue, 15 Nov 2005 13:24:10 GMT
ETag: "b80f4-1b6-80bfd280"
Accept-Ranges: bytes
Content-Length: 438
Connection: close
Content-Type: text/html; charset=UTF-8

OK.
</example_result>
</object>

<object id=847> 
<name>file_get_contents</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Читает содержимое файла в строку</short-description>
<description>string file_get_contents ( string $filename [, bool $use_include_path = false [, resource $context [, int $offset = -1 [, int $maxlen ]]]] ) 
 Данная функция похожа на функцию file() с той только разницей, что file_get_contents() возвращает содержимое файла в строке, начиная с указанного смещения offset и до maxlen байт. В случае неудачи, file_get_contents() вернёт FALSE. 
 Использование функции file_get_contents() наиболее предпочтительно в случае необходимости получить содержимое файла целиком, поскольку для улучшения производительности функция использует технику отображения файла в память (memory mapping), если она поддерживается вашей операционной системой. 
 Замечание: 
 Если вы открываете URI содержащий спецсимволы, такие как пробел, вам нужно закодировать URI при помощи urlencode(). </description>
<parameters>filename - Имя читаемого файла. 
use_include_path 
 Замечание: - Начиная с версии PHP 5 можно использовать константу FILE_USE_INCLUDE_PATH для поиска файла в include path. 
context - Корректный ресурс контекста, созданный с помощью функции stream_context_create(). Если в использовании особого контекста нет необходимости, можно пропустить этот параметр передав в него значение NULL. 
offset - Смещение, с которого начнется чтение оригинального потока. 
maxlen - Максимальный размер читаемых данных. По умолчанию чтение осуществляется пока не будет достигнут конец файла. Учтите, что этот параметр применяется и к потоку с фильтрами. </parameters>
<output>Функция возвращает прочтенные данные или FALSE в случае возникновения ошибки. </output>
<errors>Будет сгенерирована ошибка уровня E_WARNING, если параметр maxlength меньше нуля или offset превышает длину потока. </errors>
<example><?php
$homepage = file_get_contents('http://www.example.com/');
echo $homepage;
?></example>
<example_result>
 
string(14) "lle Bjori Ro"
</example_result>
</object>

<object id=848> 
<name>tan</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Тангенс</short-description>
<description>float tan ( float $arg ) 
 tan() возвращает тангенс параметра arg. Параметр arg задаётся в радианах. </description>
<parameters>arg - Значение в радианах </parameters>
<output>Тангенс угла arg </output>
<errors></errors>
<example><?php
echo tan(M_PI_4); // 1
?></example>
<example_result></example_result>
</object>

<object id=849> 
<name>dba_insert</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Insert entry</short-description>
<description>bool dba_insert ( string $key , string $value , resource $handle ) 
 dba_insert() inserts the entry described with key and value into the database. </description>
<parameters>key - The key of the entry to be inserted. If this key already exist in the database, this function will fail. Use dba_replace() if you need to replace an existent key. 
value - The value to be inserted. 
handle - The database handler, returned by dba_open() or dba_popen(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=850> 
<name>fbsql_tablename</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Псевдоним fbsql_table_name()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=851> 
<name>dbplus_chdir</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Get/Set database virtual current directory</short-description>
<description>string dbplus_chdir ([ string $newdir ] ) 
 Changes the virtual current directory where relation files will be looked for by dbplus_open(). </description>
<parameters>newdir - The new directory for relation files. You can omit this parameter to query the current working directory. </parameters>
<output>Returns the absolute path of the current directory. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=852> 
<name>oci_fetch_array</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Возвращает следующую строку из результата запроса в виде ассоциативного или нумерованного массива </short-description>
<description>array oci_fetch_array ( resource $statement [, int $mode ] ) 
 Возвращает массив, содержащий следующую строку результата запроса. Каждый элемент массива соответствует одному полю из строки. Эта функция обычно вызывается в цикле, пока она не вернет FALSE, который указывает на отсутствие последующих строк. 
 За подробностями по операции отображения типов данных,осуществляемым расширением OCI8, обратитесь к типам данных, поддерживаемых драйвером </description>
<parameters>statement - Корректный идентификатор выражения OCI8, полученный изoci_parse() и исполненный функцией oci_execute(), или идентификатор выраженияREF CURSOR.
mode - Необязательный второй параметр может состоять из любой комбинации следующих констант: oci_fetch_array() Modes Константа Описание OCI_BOTH Возвращает массив как с ассоциативными и числовыми индексами. Эта константа то же самое что и OCI_ASSOC + OCI_NUM, и она используется по умолчанию. OCI_ASSOC Возвращает ассоциативный массив. OCI_NUM Возвращает нумерованный массив. OCI_RETURN_NULLS Создает элементы для полей равных NULL. Значение элемента будет равно PHP NULL. OCI_RETURN_LOBS Возвращает содержимое полей типа LOB, вместо LOB указателя. </parameters>
<output>Возвращает массив с ассоциативными и/или числовыми ключами. Если больше нет строк в statement, то возвращается FALSE. </output>
<errors></errors>
<example><?php
$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $e = oci_error();
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}
$stid = oci_parse($conn, 'SELECT department_id, department_name FROM departments');
oci_execute($stid);
while (($row = oci_fetch_array($stid, OCI_BOTH))) {
    // Используйте название полей в верхнем регистре для ассоциативных индексов
    echo $row[0] . " и " . $row['DEPARTMENT_ID']   . " идентичны<br>\n";
    echo $row[1] . " и " . $row['DEPARTMENT_NAME'] . " идентичны<br>\n";
}
oci_free_statement($stid);
oci_close($conn);
?></example>
<example_result></example_result>
</object>

<object id=853> 
<name>grapheme_strripos</name>
<versions>(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)</versions>
<short-description>Find position (in grapheme units) of last occurrence of a case-insensitive string</short-description>
<description>int grapheme_strripos ( string $haystack , string $needle [, int $offset = 0 ] ) 
 Find position (in grapheme units) of last occurrence of a case-insensitive string </description>
<parameters>haystack - The string to look in. Must be valid UTF-8. 
needle - The string to look for. Must be valid UTF-8. 
offset - The optional $offset parameter allows you to specify where in $haystack to start searching as an offset in grapheme units (not bytes or characters). The position returned is still relative to the beginning of haystack regardless of the value of $offset. </parameters>
<output>Returns the position as an integer. If needle is not found, grapheme_strripos() will return boolean FALSE. </output>
<errors></errors>
<example><?php
$char_a_ring_nfd = "a\xCC\x8A";  // 'LATIN SMALL LETTER A WITH RING ABOVE' (U+00E5) normalization form "D"
$char_o_diaeresis_nfd = "o\xCC\x88"; // 'LATIN SMALL LETTER O WITH DIAERESIS' (U+00F6) normalization form "D"
$char_O_diaeresis_nfd = "O\xCC\x88"; // 'LATIN CAPITAL LETTER O WITH DIAERESIS' (U+00D6) normalization form "D"
print grapheme_strripos( $char_a_ring_nfd . $char_o_diaeresis_nfd . $char_o_diaeresis_nfd, $char_O_diaeresis_nfd);
?></example>
<example_result>
 
2
</example_result>
</object>

<object id=854> 
<name>fbsql_set_transaction</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Set the transaction locking and isolation</short-description>
<description>void fbsql_set_transaction ( resource $link_identifier , int $locking , int $isolation ) 
 Sets the transaction locking and isolation. </description>
<parameters>link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().
locking - The type of locking to be set. It can be one of the following constants: FBSQL_LOCK_DEFERRED, FBSQL_LOCK_OPTIMISTIC, or FBSQL_LOCK_PESSIMISTIC. 
isolation - The type of isolation to be set. It can be one of the following constants: FBSQL_ISO_READ_UNCOMMITTED, FBSQL_ISO_READ_COMMITTED, FBSQL_ISO_REPEATABLE_READ, FBSQL_ISO_SERIALIZABLE, or FBSQL_ISO_VERSIONED. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=855> 
<name>dio_read</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)</versions>
<short-description>Reads bytes from a file descriptor</short-description>
<description>string dio_read ( resource $fd [, int $len = 1024 ] ) 
 The function dio_read() reads and returns len bytes from file with descriptor fd. </description>
<parameters>fd - The file descriptor returned by dio_open(). 
len - The number of bytes to read. If not specified, dio_read() reads 1K sized block. </parameters>
<output>The bytes read from fd. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=856> 
<name>pspell_config_create</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Создает конфигурацию, используемую для открытия словаря</short-description>
<description>int pspell_config_create ( string $language [, string $spelling [, string $jargon [, string $encoding ]]] ) 
 Создает конфигурацию, используемую для открытия словаря. 
 pspell_config_create() обладает синтаксисом, очень похожим на синтаксис pspell_new(). Фактически, использование pspell_config_create() сразу после pspell_new_config() даст точно такой же результат. Однако, после создания новой конфигурации, также можно использовать функции pspell_config_*() до вызова pspell_new_config() для получения преимуществ от некоторой дополнительной функциональности. 
 Более подробную информацию и примеры можно найти в руководстве по pspell на сайте:&raquo; http://aspell.net/. </description>
<parameters>language - Параметр language - это код языка, который состоит из двухбуквенного кода языка по стандарту ISO 639 и необязательного двубуквенного кода страны по стандарту ISO 3166 после тире или подчеркивания. 
spelling - Параметр spelling определяет вариант проверки орфографии для языков с более чем одним вариантом правописания, таких, как английский. Известные значения: &#039;american&#039;, &#039;british&#039;, и &#039;canadian&#039;. 
jargon - Параметр jargon содержит дополнительную информацию для различения двух различных списков слов, имеющих одинаковые параметры language и spelling. 
encoding - Параметр encoding - это кодировка, в которой, как ожидается, даны слова. Допустимые значения: &#039;utf-8&#039;, &#039;iso8859-*&#039;, &#039;koi8-r&#039;, &#039;viscii&#039;, &#039;cp1252&#039;, &#039;machine unsigned 16&#039;, &#039;machine unsigned 32&#039;. Это параметр ещё не проверен достаточно хорошо, поэтому будьте осторожны при его использовании. </parameters>
<output>Возвращает идентификатор конфигурации pspell, или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$pspell_config = pspell_config_create("en");
pspell_config_personal($pspell_config, "/var/dictionaries/custom.pws");
pspell_config_repl($pspell_config, "/var/dictionaries/custom.repl");
$pspell_link = pspell_new_personal($pspell_config, "en");
?></example>
<example_result></example_result>
</object>

<object id=857> 
<name>posix_get_last_error</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Retrieve the error number set by the last posix function that failed</short-description>
<description>int posix_get_last_error ( void ) 
 Retrieve the error number set by the last posix function that failed. The system error message associated with the errno may be checked with posix_strerror(). </description>
<parameters></parameters>
<output>Returns the errno (error number) set by the last posix function that failed. If no errors exist, 0 is returned. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=858> 
<name>msql_close</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Close mSQL connection</short-description>
<description>bool msql_close ([ resource $link_identifier ] ) 
 msql_close() closes the non-persistent connection to the mSQL server that&#039;s associated with the specified link identifier. 
 Using msql_close() isn&#039;t usually necessary, as non-persistent open links are automatically closed at the end of the script&#039;s execution. See also freeing resources. </description>
<parameters>link_identifier - Соединение mSQL.Если не указан, используется последнее соединение, открытое msql_connect().Если такое соединение не было найдено, функция попытается установить новое, как если бы была вызвана функцияmsql_connect(), и использовать его.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=859> 
<name>pi</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает число Пи</short-description>
<description>float pi ( void ) 
 Возвращает приближённое значение числа Пи с точностью, определяемой директивой precision в php.ini, значение по умолчанию которой 14. Константа M_PI даёт идентичный результат. </description>
<parameters></parameters>
<output>Приближенное значение числа Пи, представленное как float. </output>
<errors></errors>
<example><?php
echo pi(); // 3.1415926535898
echo M_PI; // 3.1415926535898
?></example>
<example_result></example_result>
</object>

<object id=860> 
<name>imagestring</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Draw a string horizontally</short-description>
<description>bool imagestring ( resource $image , int $font , int $x , int $y , string $string , int $color ) 
 Draws a string at the given coordinates. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
font - Может принимать значения 1, 2, 3, 4, 5 для встроенных шрифтов в кодировкеlatin2 (более высокое число соответствует большему шрифту) или любому из ваших собственных идентификаторов шрифтов,зарегистрированных с помощью imageloadfont().
x - x-coordinate of the upper left corner. 
y - y-coordinate of the upper left corner. 
string - The string to be written. 
color - A color identifier created with imagecolorallocate(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Create a 100*30 image
$im = imagecreate(100, 30);
// White background and blue text
$bg = imagecolorallocate($im, 255, 255, 255);
$textcolor = imagecolorallocate($im, 0, 0, 255);
// Write the string at the top left
imagestring($im, 5, 0, 0, 'Hello world!', $textcolor);
// Output the image
header('Content-type: image/png');
imagepng($im);
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=861> 
<name>oci_define_by_name</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Сопоставляет переменную PHP столбцу результата запроса</short-description>
<description>bool oci_define_by_name ( resource $statement , string $column_name , mixed &$variable [, int $type = SQLT_CHR ] ) 
 Сопоставляет переменную PHP столбцу результата запроса, полученного с помощью oci_fetch(). 
 Вызов oci_define_by_name() должен производиться до запуска oci_execute(). </description>
<parameters>statement - Корректный идентификатор выражения OCI8, полученный изoci_parse() и исполненный функцией oci_execute(), или идентификатор выраженияREF CURSOR.
column_name - Имя столбца использованного в запросе. 
variable - Переменная PHP, предназначенная для хранения возвращенного значения. 
type - Тип возвращаемых данных. Обычно не требуется. Имейте ввиду, что преобразования Oracle-данных не производятся. К примеру, SQLT_INT будет проигнорировано и возвращенные данные будут по прежнему в виде SQLT_CHR. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $e = oci_error();
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}
$sql = 'SELECT location_id, city FROM locations WHERE location_id < 1200';
$stid = oci_parse($conn, $sql);
// Переменные ДОЛЖНЫ быть определены перед запуском
oci_define_by_name($stid, 'LOCATION_ID', $locid);
oci_define_by_name($stid, 'CITY', $city);
oci_execute($stid);
//  Каждый результат запроса помещает в заранее определенную переменную следующую строку данных
while (oci_fetch($stid)) {
    echo "Location id $locid is $city<br>\n";
}
// Выведет:
//   Location id 1000 is Roma
//   Location id 1100 is Venice
oci_free_statement($stid);
oci_close($conn);
?></example>
<example_result></example_result>
</object>

<object id=862> 
<name>imap_binary</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Convert an 8bit string to a base64 string</short-description>
<description>string imap_binary ( string $string ) 
 Convert an 8bit string to a base64 string according to &raquo; RFC2045, Section 6.8. </description>
<parameters>string - The 8bit string </parameters>
<output>Returns a base64 encoded string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=863> 
<name>hw_InCollections</name>
<versions>(PHP 4)</versions>
<short-description>Check if object ids in collections</short-description>
<description>array hw_incollections ( int $connection , array $object_id_array , array $collection_id_array , int $return_collections ) 
 Checks whether a set of objects (documents or collections) specified by the object_id_array is part of the collections listed in collection_id_array. </description>
<parameters>connection - The connection identifier. 
object_id_array - An array of object ids. 
collection_id_array - An array of collection ids. 
return_collections - When set to 0, the subset of object ids that is part of the collections (i.e., the documents or collections that are children of one or more collections of collection ids or their subcollections, recursively) is returned as an array. </parameters>
<output>Returns an array of object ids. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=864> 
<name>in_array</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Проверяет, присутствует ли в массиве значение</short-description>
<description>bool in_array ( mixed $needle , array $haystack [, bool $strict = FALSE ] ) 
 Ищет в haystack значение needle. Если strict не установлен, то при поиске будет использовано нестрогое сравнение. </description>
<parameters>needle - Искомое значение. 
haystack - Массив. 
strict - Если третий параметр strict установлен в TRUE тогда функция in_array() также проверит соответствие типов параметра needle и соответствующего значения массива haystack. </parameters>
<output>Возвращает TRUE, если needle был найден в массиве, и FALSE в обратном случае. </output>
<errors></errors>
<example><?php
$os = array("Mac", "NT", "Irix", "Linux");
if (in_array("Irix", $os)) {
    echo "Нашел Irix";
}if (in_array("mac", $os)) {
    echo "Нашел mac";
}?></example>
<example_result>
 
Нашел Irix
</example_result>
</object>

<object id=865> 
<name>define</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Определяет именованную константу</short-description>
<description>bool define ( string $name , mixed $value [, bool $case_insensitive = false ] ) 
 Определяет именованную константу при запуске. </description>
<parameters>name - Имя константы. 
value - Значение константы, допустимы скалярные величины и null. Допустимые скалярные значения: integer, float, string или boolean. Возможно определить константы типа resource, однако это не рекомендуется и может вызвать неопределенные последствия. 
case_insensitive - Если параметр установлен как TRUE, то константа будет определена без учета регистра. По умолчанию регистр учитывается, т.е. CONSTANT и Constant могут содержать различные значения. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
define("CONSTANT", "Hello world.");
echo CONSTANT; // выводит "Hello world."
echo Constant; // выводит "Constant" а также уведомление.
define("GREETING", "Hello you.", true);
echo GREETING; // выводит "Hello you."
echo Greeting; // выводит "Hello you."
?></example>
<example_result></example_result>
</object>

<object id=866> 
<name>xmlrpc_parse_method_descriptions</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Декодирует XML в список описаний методов</short-description>
<description>array xmlrpc_parse_method_descriptions ( string $xml ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=867> 
<name>variant_cmp</name>
<versions>(PHP 5)</versions>
<short-description>Compares two variants</short-description>
<description>int variant_cmp ( mixed $left , mixed $right [, int $lcid [, int $flags ]] ) 
 Compares left with right. 
 This function will only compare scalar values, not arrays or variant records. </description>
<parameters>left - The left operand. 
right - The right operand. 
lcid - A valid Locale Identifier to use when comparing strings (this affects string collation). 
flags - flags can be one or more of the following values OR&#039;d together, and affects string comparisons: Variant Comparision Flags value meaning NORM_IGNORECASE Compare case insensitively NORM_IGNORENONSPACE Ignore nonspacing characters NORM_IGNORESYMBOLS Ignore symbols NORM_IGNOREWIDTH Ignore string width NORM_IGNOREKANATYPE Ignore Kana type NORM_IGNOREKASHIDA Ignore Arabic kashida characters </parameters>
<output>Returns one of the following: Variant Comparision Results value meaning VARCMP_LT left is less than right VARCMP_EQ left is equal to right VARCMP_GT left is greater than right VARCMP_NULL Either left, right or both are NULL </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=868> 
<name>urlencode</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>URL-кодирование строки</short-description>
<description>string urlencode ( string $str ) 
 Эта функция удобна, когда закодированная строка будет использоваться в запросе, как часть URL, также это удобный способ для передачи переменных другим страницам. </description>
<parameters>str - Строка, которая должны быть закодирована. </parameters>
<output>Возвращает строку, в которой все не цифробуквенные символы, кроме -_. должны быть заменены знаком процента (%), за которым следует два шестнадцатеричных числа, а пробелы кодируются как знак сложения (+). Строка кодируется тем же способом, что и POST данные WWW-формы, то есть по типу контента application/x-www-form-urlencoded. Это отличается от &raquo; RFC 3986 кодирования (см. rawurlencode() ) тем, что, по историческим соображениям, пробелы кодируются как знак "плюс" (+). </output>
<errors></errors>
<example><?php
echo '<a href="mycgi?foo=', urlencode($userinput), '">';
?></example>
<example_result></example_result>
</object>

<object id=869> 
<name>odbc_num_rows</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Number of rows in a result</short-description>
<description>int odbc_num_rows ( resource $result_id ) 
 Gets the number of rows in a result. For INSERT, UPDATE and DELETE statements odbc_num_rows() returns the number of rows affected. For a SELECT clause this can be the number of rows available. </description>
<parameters>result_id - The result identifier returned by odbc_exec(). </parameters>
<output>Returns the number of rows in an ODBC result. This function will return -1 on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=870> 
<name>ob_end_flush</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сброс (отправка) буфера вывода и отключение буферизации вывода</short-description>
<description>bool ob_end_flush ( void ) 
 Эта функция отправит содержимое буфера вывода (если оно имеется) и отключит эту буферизацию вывода. Если вы хотите использовать содержимое буфера, то вам необходимо вызвать ob_get_contents() перед ob_end_flush(), т.к. все содержимое буфера удаляется при вызове ob_end_flush(). 
 Замечание: Эта функция аналогична ob_get_flush(), за исключением того, что ob_get_flush() возвращает содержимое буфера в виде строки. </description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. Основной причиной неудачного завершения работы функции является ее вызов без активной буферизации или если буфер не может быть удален (специальный тип буфера). </output>
<errors>Если функция завершается ошибкой генерируется E_NOTICE. </errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=871> 
<name>mysqli_rpl_parse_enabled</name>
<versions>(PHP 5)</versions>
<short-description>Check if RPL parse is enabled</short-description>
<description>int mysqli_rpl_parse_enabled ( mysqli $link ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=872> 
<name>oci_rollback</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Откатывает транзакции, ожидающие обработки</short-description>
<description>bool oci_rollback ( resource $connection ) 
 Данная функция откатывает все незафиксированные изменения соединения Oracle connection и завершает транзакцию. Она также освобождает все установленные блокировки. Удаляются все Oracle SAVEPOINTS. 
 Транзакция начинается при первом SQL-запросе, изменяющим данные, который был запущен с помощью функции oci_execute() и флага OCI_NO_AUTO_COMMIT. Последующие изменения данных от других запросов также становятся частью данной транзакции. Изменения, сделанные в транзакции, являются временными до тех пор, пока транзакция не будет зафиксирована или будет произведен ее откат. Другие пользователи базы данных не смогут увидеть изменения до их фиксации. 
 При вставке или обновлении данных рекомендуется использовать транзакции для сохранения целостности данных и увеличения производительности. </description>
<parameters>connection - Идентификатор соединения Oracle, полученный из функций oci_connect(), oci_pconnect() или oci_new_connect(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Вставка в несколько таблиц, откат изменений в случае ошибки
$conn = oci_connect('hr', 'welcome', 'localhost/XE');
$stid = oci_parse($conn, "INSERT INTO mysalary (id, name) VALUES (1, 'Chris')");
// Флаг OCI_NO_AUTO_COMMIT сообщает Oracle не фиксировать запрос INSERT при его поступлении
// Для PHP <= 5.3.1 используйте OCI_DEFAULT, эти два флага эквивалентны
$r = oci_execute($stid, OCI_NO_AUTO_COMMIT);
if (!$r) {
    $e = oci_error($stid);
    trigger_error(htmlentities($e['message']), E_USER_ERROR);
}
$stid = oci_parse($conn, 'INSERT INTO myschedule (startday) VALUES (12)');
$r = oci_execute($stid, OCI_NO_AUTO_COMMIT);
if (!$r) {
    $e = oci_error($stid);
    oci_rollback($conn);  // откат изменений из обоих таблиц
    trigger_error(htmlentities($e['message']), E_USER_ERROR);
}
// Фиксация изменений в обоих таблицах
$r = oci_commit($conn);
if (!r) {
    $e = oci_error($conn);
    trigger_error(htmlentities($e['message']), E_USER_ERROR);
}
?></example>
<example_result></example_result>
</object>

<object id=873> 
<name>openssl_pkey_export</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Gets an exportable representation of a key into a string</short-description>
<description>bool openssl_pkey_export ( mixed $key , string &$out [, string $passphrase [, array $configargs ]] ) 
 openssl_pkey_export() exports key as a PEM encoded string and stores it into out (which is passed by reference). 
 Замечание: Для корректной работы этой функции должен существовать правильный openssl.cnf. Для более подробной информации смотрите замечания под разделом установки. </description>
<parameters>key - 
out - 
passphrase - The key is optionally protected by passphrase. 
configargs - configargs can be used to fine-tune the export process by specifying and/or overriding options for the openssl configuration file. See openssl_csr_new() for more information about configargs. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=874> 
<name>ldap_rename</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Изменить имя записи</short-description>
<description>bool ldap_rename ( resource $link_identifier , string $dn , string $newrdn , string $newparent , bool $deleteoldrdn ) 
 Переименование/перемещение записи, определённой dn. </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
dn - Отличительное имя LDAP объекта. 
newrdn - Новое RDN. 
newparent - Новая родительская/превосходящая запись. 
deleteoldrdn - Если TRUE, старые значения RDN удаляются, иначе старые значения RDN сохраняются как неуникальные значения записи. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=875> 
<name>odbc_result_all</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Print result as HTML table</short-description>
<description>int odbc_result_all ( resource $result_id [, string $format ] ) 
 Prints all rows from a result identifier produced by odbc_exec(). The result is printed in HTML table format. </description>
<parameters>result_id - The result identifier. 
format - Additional overall table formatting. </parameters>
<output>Returns the number of rows in the result or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=876> 
<name>enchant_dict_describe</name>
<versions>(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )</versions>
<short-description>Describes an individual dictionary</short-description>
<description>mixed enchant_dict_describe ( resource $dict ) 
 Returns the details of the dictionary. </description>
<parameters>dict - Dictinaray resource </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example>
 enchant_broker_dict_exists() and show the detail of it. </example>
<example_result>
 
Array
(
    [lang] => en_US
    [name] => aspell
    [desc] => Aspell Provider
    [file] => /usr/lib/enchant/libenchant_aspell.so
)
</example_result>
</object>

<object id=877> 
<name>sybase_min_client_severity</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Sets minimum client severity</short-description>
<description>void sybase_min_client_severity ( int $severity ) 
 sybase_min_client_severity() sets the minimum client severity level. </description>
<parameters>severity - </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=878> 
<name>gmp_powm</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Возводит число в степень и производит деление по модулю</short-description>
<description>resource gmp_powm ( resource $base , resource $exp , resource $mod ) 
 Вычисляет (base возводится в степень exp) остаток от целочисленного деления на mod. Если exp отрицателен, результат не определен. </description>
<parameters>base - Основание степени. 
exp - Положительный показатель степени, в которую возводится base. 
mod - Делитель, остаток от целочисленного деления на который будет возвращен. </parameters>
<output>Новое GMP число (результат операции). </output>
<errors></errors>
<example><?php
$pow1 = gmp_powm("2", "31", "2147483649");
echo gmp_strval($pow1) . "\n";
?></example>
<example_result>
 
2147483648
</example_result>
</object>

<object id=879> 
<name>yaz_wait</name>
<versions>(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)</versions>
<short-description>Ожидает выполнения запросов Z39.50 серверами</short-description>
<description>mixed yaz_wait ([ array &$options ] ) 
 Функция выполняет сетевое (блокирующее) действие до завершения запроса, подготовленного функциями yaz_connect(), yaz_search(), yaz_present(), yaz_scan() and yaz_itemorder(). 
 yaz_wait() прекращает работу и возвращает результат после того как все сервера или завершат выполнение всех запросов или прервут их (в случае ошибок). </description>
<parameters>options - Ассоциативный массив параметров: timeout 
 Устанавливает время ожидания в секундах. Если сервер не отвечает по прошествии этого времени, он считается нерабочим и yaz_wait() прекращает работу. По умолчанию ожидание составляет 15 секунд. 
event - Имеет логический тип. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. В случае, если установлен параметр event, возвращает ресурс или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=880> 
<name>PDF_begin_page</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Start new page [deprecated]</short-description>
<description>bool PDF_begin_page ( resource $pdfdoc , float $width , float $height ) 
 Adds a new page to the document. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. 
 This function is deprecated since PDFlib version 6, use PDF_begin_page_ext() instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=881> 
<name>PDF_save</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Save graphics state</short-description>
<description>bool PDF_save ( resource $p ) 
 Saves the current graphics state. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=882> 
<name>socket_getsockname</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Queries the local side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type</short-description>
<description>bool socket_getsockname ( resource $socket , string &$addr [, int &$port ] ) 
 Замечание: socket_getsockname() should not be used with AF_UNIX sockets created with socket_connect(). Only sockets created with socket_accept() or a primary server socket following a call to socket_bind() will return meaningful values. </description>
<parameters>socket - A valid socket resource created with socket_create() or socket_accept(). 
addr - If the given socket is of type AF_INET or AF_INET6, socket_getsockname() will return the local IP address in appropriate notation (e.g. 127.0.0.1 or fe80::1) in the address parameter and, if the optional port parameter is present, also the associated port. 
port - If provided, this will hold the associated port. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. socket_getsockname() may also return FALSE if the socket type is not any of AF_INET, AF_INET6, or AF_UNIX, in which case the last socket error code is not updated. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=883> 
<name>session_get_cookie_params</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get the session cookie parameters</short-description>
<description>array session_get_cookie_params ( void ) 
 Gets the session cookie parameters. </description>
<parameters></parameters>
<output>Returns an array with the current session cookie information, the array contains the following items: "lifetime" - The lifetime of the cookie in seconds. "path" - The path where information is stored. "domain" - The domain of the cookie. "secure" - The cookie should only be sent over secure connections. "httponly" - The cookie can only be accessed through the HTTP protocol. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=884> 
<name>pspell_config_runtogether</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Рассматривает объединённые слова как правильные сложные слова</short-description>
<description>bool pspell_config_runtogether ( int $dictionary_link , bool $flag ) 
 Эта функция определяет, будут ли объединённые слова рассматриваться как правильные сложные слова. Так, "thecat" будет считаться правильным сложным словом, хотя между артиклем и словом должен быть пробел. Изменение этой установки влияет только на результаты, возвращаемые функцией pspell_check(); pspell_suggest() будет продолжать выдавать варианты исправления. 
 pspell_config_runtogether() должна быть использована для конфигурации до вызова pspell_new_config(). </description>
<parameters>dictionary_link - 
flag - TRUE если объединенные слова должны рассматриваться как правильные сложные слова, FALSE в противном случае. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$pspell_config = pspell_config_create("en");
pspell_config_runtogether($pspell_config, true);
$pspell_link = pspell_new_config($pspell_config);
pspell_check($pspell_link, "thecat");
?></example>
<example_result></example_result>
</object>

<object id=885> 
<name>highlight_file</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Подсветка синтаксиса файла</short-description>
<description>mixed highlight_file ( string $filename [, bool $return = false ] ) 
 Выводит или возвращает версию с подсветкой синтаксиса кода, содержащегося в файле filename, используя цвета определенные во встроенной подсветке синтаксиса PHP. 
 Большинство серверов сконфигурированы автоматически подсвечивать файлы с расширением phps. К примеру, при отображении файла example.phps будет выведен код с подсветкой синтаксиса. Для включения добавьте следующую строку в httpd.conf: 
 AddType application/x-httpd-php-source .phps</description>
<parameters>filename - Путь к подсвечиваемому PHP файлу. 
return - Установите в этот параметр TRUE для того чтобы функция возвращала подсвеченный код. </parameters>
<output>Если в return установлено TRUE, то подсвеченный код возвращается в виде строки, а не отображается. В другом случае будет возвращено TRUE, либо FALSE при ошибке. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=886> 
<name>stream_socket_sendto</name>
<versions>(PHP 5)</versions>
<short-description>Отправляет сообщение в сокет, независимо от того, подсоединён он или нет </short-description>
<description>int stream_socket_sendto ( resource $socket , string $data [, int $flags = 0 [, string $address ]] ) 
 Отпралвяет указанные данные data через сокет socket. </description>
<parameters>socket - Сокет, через который будут отправлены данные data. 
data - Отправляемые данные. 
flags - Значение параметра flags может быть комбинацией следующего: возможные значения для параметра flags STREAM_OOB Обрабатывать OOB (out-of-band, внеполосные) данные. 
address - Адрес, указанный при создании потокового сокета, будет использоваться до тех пор, пока не указан альтернативный адрес в параметре address. </parameters>
<output>Возвращает код результата, как целое число. </output>
<errors></errors>
<example><?php
/* Открыть сокет на 1234-м порту на localhost */
$socket = stream_socket_client('tcp://127.0.0.1:1234');
/* Отправить обычные данные через обычные каналы. */
fwrite($socket, "Передача обычных данных.");
/* Отправляем внеполосные данные. */
stream_socket_sendto($socket, "Внеполосные данные.", STREAM_OOB);
/* Закрыть сокет */
fclose($socket);
?></example>
<example_result></example_result>
</object>

<object id=887> 
<name>fileinode</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает индексный дескриптор файла</short-description>
<description>int fileinode ( string $filename ) 
 Возвращает индексный дескриптор файла. </description>
<parameters>filename - Путь к файлу. </parameters>
<output>Возвращает номер индексного дескриптора файла, или FALSE в случае возникновения ошибки. </output>
<errors>В случае неудачного завершения работы генерируется ошибка уровня E_WARNING.</errors>
<example><?php
$filename = 'index.php';
if (getmyinode() == fileinode($filename)) {
    echo 'Вы проверяете текущий файл.';
}?></example>
<example_result></example_result>
</object>

<object id=888> 
<name>date_date_set</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Псевдоним DateTime::setDate()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=889> 
<name>swf_viewport</name>
<versions>(PHP 4)</versions>
<short-description>Select an area for future drawing</short-description>
<description>void swf_viewport ( float $xmin , float $xmax , float $ymin , float $ymax ) 
 Selects an area for future drawing for xmin to xmax and ymin to ymax, if this function is not called the area defaults to the size of the screen. </description>
<parameters>xmin - 
xmax - 
ymin - 
ymax - </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=890> 
<name>JulianToJD</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Переводит дату по Юлианскому календарю в число дней в Юлианском летоисчислении </short-description>
<description>int juliantojd ( int $month , int $day , int $year ) 
 Диапазон возможных дат для Юлианского календаря: с 4713 года до н.э. по 9999 год н.э. 
 Несмотря на то, что функция может обрабатывать даты вплоть до 4713 года до н.э., практически преобразование для таких ранних дат не имеет смысла. Календарь был создан в 46 году до н.э., но некоторые детали еще дорабатывались по крайней мере до 8 года н.э., а по некоторым данным до 4 века. Также, начало года различалось от одной культуры к другой - не везде Январь был первым месяцем года. Предостережение 
 Помните, что на данный момент общепринятым в мире считается Григорианский календарь. Функция gregoriantojd() может преобразовывать даты по этому календарю в число дней в Юлианском летоисчислении. </description>
<parameters>month - Месяц в виде числа от 1 (Январь) до 12 (Декабрь) 
day - День в виде числа от 1 до 31 
year - Год в виде числа между -4713 и 9999 </parameters>
<output>Юлианский день в виде числа для заданной даты по Юлианскому календарю. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=891> 
<name>mb_strtoupper</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Make a string uppercase</short-description>
<description>string mb_strtoupper ( string $str [, string $encoding = mb_internal_encoding() ] ) 
 Returns str with all alphabetic characters converted to uppercase. </description>
<parameters>str - The string being uppercased. 
encoding - Параметр encodingпредставляет собой символьную кодировку. Если он опущен, вместо него будет использовано значение внутренней кодировки.</parameters>
<output>str with all alphabetic characters converted to uppercase. </output>
<errors></errors>
<example><?php
$str = "Mary Had A Little Lamb and She LOVED It So";
$str = mb_strtoupper($str);
echo $str; // Prints MARY HAD A LITTLE LAMB AND SHE LOVED IT SO
?></example>
<example_result></example_result>
</object>

<object id=892> 
<name>m_responseparam</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Get a custom response parameter</short-description>
<description>string m_responseparam ( resource $conn , int $identifier , string $key ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
identifier - 
key - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=893> 
<name>mb_stripos</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Finds position of first occurrence of a string within another, case insensitive</short-description>
<description>int mb_stripos ( string $haystack , string $needle [, int $offset [, string $encoding ]] ) 
 mb_stripos() returns the numeric position of the first occurrence of needle in the haystack string. Unlike mb_strpos(), mb_stripos() is case-insensitive. If needle is not found, it returns FALSE. </description>
<parameters>haystack - The string from which to get the position of the first occurrence of needle 
needle - The string to find in haystack 
offset - The position in haystack to start searching 
encoding - Character encoding name to use. If it is omitted, internal character encoding is used. </parameters>
<output>Return the numeric position of the first occurrence of needle in the haystack string, or FALSE if needle is not found. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=894> 
<name>mb_encoding_aliases</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Получает псевдонимы известного типа кодировки</short-description>
<description>array mb_encoding_aliases ( string $encoding ) 
 Возвращает массив псевдонимов для известного типа кодировки encoding. </description>
<parameters>encoding - Кодировка, для которой ищутся псевдонимы. </parameters>
<output>В случае успеха возвращает индексный массив с псевдонимами кодировки, или FALSE в случае возникновения ошибки </output>
<errors>Вызывает ошибку уровня E_WARNING, если кодировка encoding не известна. </errors>
<example><?php
$encoding        = 'ASCII';
$known_encodings = mb_list_encodings();
if (in_array($encoding, $known_encodings)) {
    $aliases = mb_encoding_aliases($encoding);
    print_r($aliases);
} else {
    echo "Неизвестная кодировка ($encoding).\n";
}
?></example>
<example_result>
 
Array
(
    [0] => ANSI_X3.4-1968
    [1] => iso-ir-6
    [2] => ANSI_X3.4-1986
    [3] => ISO_646.irv:1991
    [4] => US-ASCII
    [5] => ISO646-US
    [6] => us
    [7] => IBM367
    [8] => cp367
    [9] => csASCII
)
</example_result>
</object>

<object id=895> 
<name>ifx_num_rows</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Count the rows already fetched from a query</short-description>
<description>int ifx_num_rows ( resource $result_id ) 
 Gives the number of rows fetched so far for a query with result_id after a ifx_query() or ifx_do() query. </description>
<parameters>result_id - result_id is a valid resultid returned by ifx_query() or ifx_prepare() (select type queries only!). </parameters>
<output>Returns the number of fetched rows or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=896> 
<name>session_register</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Register one or more global variables with the current session</short-description>
<description>bool session_register ( mixed $name [, mixed $... ] ) 
 session_register() accepts a variable number of arguments, any of which can be either a string holding the name of a variable or an array consisting of variable names or other arrays. For each name, session_register() registers the global variable with that name in the current session. 
 You can also create a session variable by simply setting the appropriate member of the $_SESSION or $HTTP_SESSION_VARS (PHP < 4.1.0) array. <?php
// Use of session_register() is deprecated
$barney = "A big purple dinosaur.";
session_register("barney");
// Use of $_SESSION is preferred, as of PHP 4.1.0
$_SESSION["zim"] = "An invader from another planet.";
// The old way was to use $HTTP_SESSION_VARS
$HTTP_SESSION_VARS["spongebob"] = "He's got square pants.";
?></description>
<parameters>name - A string holding the name of a variable or an array consisting of variable names or other arrays. 
... - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=897> 
<name>mysqli_fetch</name>
<versions>(PHP 5)</versions>
<short-description>Синоним для mysqli_stmt_fetch()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=898> 
<name>fdf_get_file</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает значение ключа /F</short-description>
<description>string fdf_get_file ( resource $fdf_document ) 
 Получает значение ключа /F. </description>
<parameters>fdf_document - Дескриптор FDF-документа, возвращенный функциями fdf_create(), fdf_open() или fdf_open_string(). </parameters>
<output>Возвращает значение ключа в виде строки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=899> 
<name>msession_inc</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)</versions>
<short-description>Increment value in session</short-description>
<description>string msession_inc ( string $session , string $name ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=900> 
<name>get_defined_constants</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Returns an associative array with the names of all the constants and their values</short-description>
<description>array get_defined_constants ([ bool $categorize = false ] ) 
 Returns the names and values of all the constants currently defined. This includes those created by extensions as well as those created with the define() function. </description>
<parameters>categorize - Causing this function to return a multi-dimensional array with categories in the keys of the first dimension and constants and their values in the second dimension. <?php
define("MY_CONSTANT", 1);
print_r(get_defined_constants(true));
?> 
 Результатом выполнения данного примерабудет что-то подобное:</parameters>
<output></output>
<errors></errors>
<example><?php
print_r(get_defined_constants());
?></example>
<example_result>
 
Array
(
    [Core] => Array
        (
            [E_ERROR] => 1
            [E_WARNING] => 2
            [E_PARSE] => 4
            [E_NOTICE] => 8
            [E_CORE_ERROR] => 16
            [E_CORE_WARNING] => 32
            [E_COMPILE_ERROR] => 64
            [E_COMPILE_WARNING] => 128
            [E_USER_ERROR] => 256
            [E_USER_WARNING] => 512
            [E_USER_NOTICE] => 1024
            [E_ALL] => 2047
            [TRUE] => 1
        )

    [pcre] => Array
        (
            [PREG_PATTERN_ORDER] => 1
            [PREG_SET_ORDER] => 2
            [PREG_OFFSET_CAPTURE] => 256
            [PREG_SPLIT_NO_EMPTY] => 1
            [PREG_SPLIT_DELIM_CAPTURE] => 2
            [PREG_SPLIT_OFFSET_CAPTURE] => 4
            [PREG_GREP_INVERT] => 1
        )

    [user] => Array
        (
            [MY_CONSTANT] => 1
        )

)
</example_result>
</object>

<object id=901> 
<name>intl_get_error_code</name>
<versions>(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)</versions>
<short-description>Get the last error code</short-description>
<description>int intl_get_error_code ( void ) 
 Useful to handle errors occurred in static methods when there&#039;s no object to get error code from. </description>
<parameters></parameters>
<output>Error code returned by the last API function call. </output>
<errors></errors>
<example><?php
$coll = collator_create( '<bad_param>' );
if( !$coll ) {
    handle_error( intl_get_error_code() );
}?></example>
<example_result></example_result>
</object>

<object id=902> 
<name>cyrus_bind</name>
<versions>(PHP 4 >= 4.1.0, PECL cyrus 1.0)</versions>
<short-description>Привязать обратные вызовы для Cyrus IMAP соединения</short-description>
<description>bool cyrus_bind ( resource $connection , array $callbacks ) 
 Привязывает обратные вызовы для Cyrus IMAP соединения. </description>
<parameters>connection - Дескриптор соединения. 
callbacks - Массив обратных вызовов. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=903> 
<name>mssql_field_seek</name>
<versions>(PHP 4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Seeks to the specified field offset</short-description>
<description>bool mssql_field_seek ( resource $result , int $field_offset ) 
 Seeks to the specified field offset. If the next call to mssql_fetch_field() won&#039;t include a field offset, this field would be returned. </description>
<parameters>result - The result resource that is being evaluated. This result comes from a call to mssql_query(). 
field_offset - The field offset, starts at 0. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Connect to MSSQL and select the database
mssql_connect('MANGO\SQLEXPRESS', 'sa', 'phpfi');
mssql_select_db('php');
// Send a select query to MSSQL
$query = mssql_query('SELECT * FROM [php].[dbo].[persons]');
// Construct table
echo '<h3>Table structure for \'persons\'</h3>';
echo '<table border="1">';
// Table header
echo '<thead>';
echo '<tr>';
echo '<td>Field name</td>';
echo '<td>Data type</td>';
echo '<td>Max length</td>';
echo '</tr>';
echo '</thead>';
// Dump all fields
echo '<tbody>';
for ($i = 0; $i < mssql_num_fields($query); ++$i) {
    // Fetch the field information, notice the 
    // field_offset parameter is not set. See 
    // the mssql_field_seek call below
    $field = mssql_fetch_field($query);
    // Print the row
    echo '<tr>';
    echo '<td>' . $field->name . '</td>';
    echo '<td>' . strtoupper($field->type) . '</td>';
    echo '<td>' . $field->max_length . '</td>';
    echo '</tr>';
    // Move the internal seek pointer to the next
    // row in the result set
    mssql_field_seek($query, $i + 1);
}
echo '</tbody>';
echo '</table>';
// Free the query result
mssql_free_result($query);
?></example>
<example_result></example_result>
</object>

<object id=904> 
<name>ncurses_mvhline</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Set new position and draw a horizontal line using an attributed character and max. n characters long </short-description>
<description>int ncurses_mvhline ( int $y , int $x , int $attrchar , int $n ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>y - 
x - 
attrchar - 
n - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=905> 
<name>uasort</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сортирует массив, используя пользовательскую функцию для сравнения элементов с сохранением ключей</short-description>
<description>bool uasort ( array &$array , callback $cmp_function ) 
 Эта функция сортирует массив таким образом, что его индексы сохраняют отношения с элементами, с которыми ранее были ассоциированы, с помощью callback-функции, предоставленной пользователем. 
 Это обычно используется при сортировке ассоциативных массивов, в которых важен актуальный порядок элементов. </description>
<parameters>array - Входной массив. 
cmp_function - Смотрите функции usort() и uksort() для примеров callback-функций сортировки, предоставленных пользователем. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Функция сравнения
function cmp($a, $b) {
    if ($a == $b) {
        return 0;
    }
    return ($a < $b) ? -1 : 1;
}
// Сортируемый массив
$array = array('a' => 4, 'b' => 8, 'c' => -1, 'd' => -9, 'e' => 2, 'f' => 5, 'g' => 3, 'h' => -4);
print_r($array);
// Сортируем и выводим получившийся массив
uasort($array, 'cmp');
print_r($array);
?></example>
<example_result>
 
Array
(
    [a] => 4
    [b] => 8
    [c] => -1
    [d] => -9
    [e] => 2
    [f] => 5
    [g] => 3
    [h] => -4
)
Array
(
    [d] => -9
    [h] => -4
    [c] => -1
    [e] => 2
    [g] => 3
    [a] => 4
    [f] => 5
    [b] => 8
)
</example_result>
</object>

<object id=906> 
<name>odbc_procedures</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get the list of procedures stored in a specific data source</short-description>
<description>resource odbc_procedures ( resource $connection_id ) resource odbc_procedures ( resource $connection_id , string $qualifier , string $owner , string $name )</description>
<parameters>connection_id - Идентификатор соединения ODBC,за подробностями обращайтесь к odbc_connect().
qualifier - The qualifier. 
owner - The owner. Этот параметр принимает следующие шаблоны поиска:"%" соответствующий нулю или более символам, и "_" соответствующий ровно одному символу. 
name - The name. Этот параметр принимает следующие шаблоны поиска:"%" соответствующий нулю или более символам, и "_" соответствующий ровно одному символу. </parameters>
<output>Returns an ODBC result identifier containing the information или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=907> 
<name>imap_rfc822_parse_adrlist</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Parses an address string</short-description>
<description>array imap_rfc822_parse_adrlist ( string $address , string $default_host ) 
 Parses the address string as defined in &raquo; RFC2822 and for each address. </description>
<parameters>address - A string containing addresses 
default_host - The default host name </parameters>
<output>Returns an array of objects. The objects properties are: </output>
<errors></errors>
<example><?php
$address_string = "Joe Doe <doe@example.com>, postmaster@example.com, root";
$address_array  = imap_rfc822_parse_adrlist($address_string, "example.com");
if (!is_array($address_array) || count($address_array) < 1) {
    die("something is wrong\n");
}
foreach ($address_array as $id => $val) {
    echo "# $id\n";
    echo "  mailbox : " . $val->mailbox . "\n";
    echo "  host    : " . $val->host . "\n";
    echo "  personal: " . $val->personal . "\n";
    echo "  adl     : " . $val->adl . "\n";
}?></example>
<example_result>
 
# 0
  mailbox : doe
  host    : example.com
  personal: Joe Doe
  adl     : 
# 1
  mailbox : postmaster
  host    : example.com
  personal: 
  adl     : 
# 2
  mailbox : root
  host    : example.com
  personal: 
  adl     :

</example_result>
</object>

<object id=908> 
<name>hw_GetObjectByQueryCollObj</name>
<versions>(PHP 4)</versions>
<short-description>Search object in collection</short-description>
<description>array hw_getobjectbyquerycollobj ( int $connection , int $objectID , string $query , int $max_hits ) 
 Searches for objects in collection with ID objectID and returns an array of object records. </description>
<parameters>connection - The connection identifier. 
objectID - The collection id. 
query - The query will only work with indexed attributes. 
max_hits - The maximum number of matches is limited to max_hits. If max_hits is set to -1 the maximum number of matches is unlimited. </parameters>
<output>Returns an array of object records. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=909> 
<name>yaz_schema</name>
<versions>(PHP 4 >= 4.2.0, PECL yaz >= 0.9.0)</versions>
<short-description>Specifies schema for retrieval </short-description>
<description>void yaz_schema ( resource $id , string $schema ) 
 yaz_schema() specifies the schema for retrieval. 
 This function should be called before yaz_search() or yaz_present(). </description>
<parameters>id - The connection resource returned by yaz_connect(). 
schema - Must be specified as an OID (Object Identifier) in a raw dot-notation (like 1.2.840.10003.13.4) or as one of the known registered schemas: GILS-schema, Holdings, Zthes, ... </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=910> 
<name>socket_select</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Runs the select() system call on the given arrays of sockets with a specified timeout</short-description>
<description>int socket_select ( array &$read , array &$write , array &$except , int $tv_sec [, int $tv_usec = 0 ] ) 
 socket_select() accepts arrays of sockets and waits for them to change status. Those coming with BSD sockets background will recognize that those socket resource arrays are in fact the so-called file descriptor sets. Three independent arrays of socket resources are watched. </description>
<parameters>read - The sockets listed in the read array will be watched to see if characters become available for reading (more precisely, to see if a read will not block - in particular, a socket resource is also ready on end-of-file, in which case a socket_read() will return a zero length string). 
write - The sockets listed in the write array will be watched to see if a write will not block. 
except - The sockets listed in the except array will be watched for exceptions. 
tv_sec - The tv_sec and tv_usec together form the timeout parameter. The timeout is an upper bound on the amount of time elapsed before socket_select() return. tv_sec may be zero , causing socket_select() to return immediately. This is useful for polling. If tv_sec is NULL (no timeout), socket_select() can block indefinitely. 
tv_usec - </parameters>
<output>On success socket_select() returns the number of socket resources contained in the modified arrays, which may be zero if the timeout expires before anything interesting happens. On error FALSE is returned. The error code can be retrieved with socket_last_error(). </output>
<errors></errors>
<example><?php
/* Prepare the read array */
$read   = array($socket1, $socket2);
$write  = NULL;
$except = NULL;
$num_changed_sockets = socket_select($read, $write, $except, 0);
if ($num_changed_sockets === false) {
    /* Error handling */
} else if ($num_changed_sockets > 0) {
    /* At least at one of the sockets something interesting happened */
}
?></example>
<example_result></example_result>
</object>

<object id=911> 
<name>odbc_procedurecolumns</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Retrieve information about parameters to procedures</short-description>
<description>resource odbc_procedurecolumns ( resource $connection_id ) resource odbc_procedurecolumns ( resource $connection_id , string $qualifier , string $owner , string $proc , string $column )</description>
<parameters>connection_id - Идентификатор соединения ODBC,за подробностями обращайтесь к odbc_connect().
qualifier - The qualifier. 
owner - The owner. Этот параметр принимает следующие шаблоны поиска:"%" соответствующий нулю или более символам, и "_" соответствующий ровно одному символу. 
proc - The proc. Этот параметр принимает следующие шаблоны поиска:"%" соответствующий нулю или более символам, и "_" соответствующий ровно одному символу. 
column - The column. Этот параметр принимает следующие шаблоны поиска:"%" соответствующий нулю или более символам, и "_" соответствующий ровно одному символу. </parameters>
<output>Returns the list of input and output parameters, as well as the columns that make up the result set for the specified procedures. Returns an ODBC result identifier или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=912> 
<name>mysql_escape_string</name>
<versions>(PHP 4 >= 4.0.3, PHP 5)</versions>
<short-description>Экранирует строку для использования в mysql_query</short-description>
<description>string mysql_escape_string ( string $unescaped_string ) 
 Функция экранирует unescaped_string таким образом, после чего её можно безопасно использовать в mysql_query(). Данная функция устарела. 
 Функция идентична mysql_real_escape_string(), исключая тот факт, что mysql_real_escape_string() принимает параметром ещё и идентификатор соединения и экранирует строку с учетом текущей кодировки. mysql_escape_string() не делает этого и результат работы не зависит от кодировки, в который вы работаете с БД. Внимание
 С версии PHP 5.3.0 эта функция считаетсяУСТАРЕВШЕЙ. Крайне не рекомендуется полагаться на эту возможность.</description>
<parameters>unescaped_string - Экранируемая строка. </parameters>
<output>Возвращает экранируемую строку. </output>
<errors></errors>
<example><?php
$item = "Zak's Laptop";
$escaped_item = mysql_escape_string($item);
printf("Escaped string: %s\n", $escaped_item);
?></example>
<example_result>
 
Escaped string: Zak\&#039;s Laptop
</example_result>
</object>

<object id=913> 
<name>mysql_field_table</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает название таблицы, которой принадлежит указанное поле</short-description>
<description>string mysql_field_table ( resource $result , int $field_offset ) 
 Возвращает название таблицы, которой принадлежит указанное поле. </description>
<parameters>result - Обрабатываемый результат запроса.Этот результат может быть получен с помощью функции mysql_query().
field_offset - Числовое смещение поля.field_offset начинается с 0. Еслиfield_offset не существует, генерируется ошибка уровняE_WARNING.</parameters>
<output>Имя таблицы в случае успеха. </output>
<errors></errors>
<example><?php
$query = "SELECT account.*, country.* FROM account, country WHERE country.name = 'Portugal' AND account.country_id = country.id";
// получаем результат из базы данных
$result = mysql_query($query);
// выводит имя таблицы и имя поля
for ($i = 0; $i < mysql_num_fields($result); ++$i) {
    $table = mysql_field_table($result, $i);
    $field = mysql_field_name($result, $i);
    echo  "$table: $field\n";
}
?></example>
<example_result></example_result>
</object>

<object id=914> 
<name>stream_socket_get_name</name>
<versions>(PHP 5)</versions>
<short-description>Извлекает название локального или удалённого сокета</short-description>
<description>string stream_socket_get_name ( resource $handle , bool $want_peer ) 
 Возвращает локальное или удалённое название указанного сокетного соединения. </description>
<parameters>handle - Сокет, название которого нужно получить. 
want_peer - Если установлено в TRUE, то удалённое название сокета будет возвращено, если установлено в FALSE, то локальное название сокета будет возвращено. </parameters>
<output>Название сокета. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=915> 
<name>yp_cat</name>
<versions>(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5)</versions>
<short-description>Return an array containing the entire map</short-description>
<description>array yp_cat ( string $domain , string $map ) 
 Returns all map entries. </description>
<parameters>domain - The NIS domain name. 
map - The NIS map. </parameters>
<output>Returns an array of all map entries, the maps key values as array indices and the maps entries as array data. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=916> 
<name>curl_copy_handle</name>
<versions>(PHP 5)</versions>
<short-description>Копирует дескриптор cURL вместе со всеми его настройками</short-description>
<description>resource curl_copy_handle ( resource $ch ) 
 Копирует дескриптор cURL сохраняя его настройки. </description>
<parameters>ch - Дескриптор cURL, полученный из curl_init().</parameters>
<output>Возвращает новый дескриптор cURL. </output>
<errors></errors>
<example><?php
// создание нового ресурса cURL
$ch = curl_init();
// установка URL и других соответствующих параметров
curl_setopt($ch, CURLOPT_URL, 'http://www.example.com/');
curl_setopt($ch, CURLOPT_HEADER, 0);
// копирование дескриптора
$ch2 = curl_copy_handle($ch);
// загрузка URL (http://www.example.com/) и ее передача в браузер
curl_exec($ch2);
// закрытие ресурсов cURL и освобождение системных ресурсов
curl_close($ch2);
curl_close($ch);
?></example>
<example_result></example_result>
</object>

<object id=917> 
<name>setrawcookie</name>
<versions>(PHP 5)</versions>
<short-description>Посылает cookie не преобразовывая значение</short-description>
<description>bool setrawcookie ( string $name [, string $value [, int $expire = 0 [, string $path [, string $domain [, bool $secure = false [, bool $httponly = false ]]]]]] ) 
 Функция setrawcookie() является полным аналогом функции setcookie(), исключая то, что значение cookie не будет автоматическипреобразовано при отправке браузеру. </description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=918> 
<name>ftp_rename</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Переименовывает файл или директорию на FTP-сервере</short-description>
<description>bool ftp_rename ( resource $ftp_stream , string $oldname , string $newname ) 
 ftp_rename() переименовывает файл или директорию на FTP-сервере. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером. 
oldname - Старое имя файла/директории. 
newname - Новое имя. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$old_file = 'somefile.txt.bak';
$new_file = 'somefile.txt';
// установка соединения
$conn_id = ftp_connect($ftp_server);
// проверка имени пользователя и пароля
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);
// попытка переименовать $olf_file в $new_file
if (ftp_rename($conn_id, $old_file, $new_file)) {
 echo "Файл $old_file переименован в $new_file\n";
} else {
 echo "Не удалось переименовать $old_file в $new_file\n";
}
// закрытие соединения
ftp_close($conn_id);
?></example>
<example_result></example_result>
</object>

<object id=919> 
<name>swf_modifyobject</name>
<versions>(PHP 4)</versions>
<short-description>Modify an object</short-description>
<description>void swf_modifyobject ( int $depth , int $how ) 
 Updates the position and/or color of the object at the specified depth. </description>
<parameters>depth - The depth, as an integer. 
how - Determines what is updated. how can either be the constant MOD_MATRIX or MOD_COLOR or it can be a combination of both. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=920> 
<name>htmlentities</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Преобразует все возможные символы в соответствующие HTML-сущности</short-description>
<description>string htmlentities ( string $string [, int $flags = ENT_COMPAT | ENT_HTML401 [, string $charset [, bool $double_encode = true ]]] ) 
 Эта функция идентична htmlspecialchars() за исключением того, что htmlentities() преобразует все символы в соответствющие HTML-сущности (для тех символов, для которых HTML сущности существуют). 
 Если же вы хотите раскодировать строку (наоборот), используйте html_entity_decode(). </description>
<parameters>string - Входная строка. 
flags - Битовая маска из нижеуказанных флагов, определяющих режим обработки кавычек, некорректных кодовых последовательностей и используемый тип документа. По умолчанию используется ENT_COMPAT | ENT_HTML401. Доступные значения параметра flags Название константы Описание ENT_COMPAT Преобразует двойные кавычки, одинарные кавычки не изменяются. ENT_QUOTES Преобразует как двойные, так и одинарные кавычки. ENT_NOQUOTES Оставляет без изменения как двойные, так и одинарные кавычки. ENT_IGNORE Молча отбрасывает некорректные кодовые последовательности вместо возврата пустой строки. Данная возможность предоставляется в целях обратной совместимости, избегайте ее использования, т.к. она может внести уязвимости в ваш код. ENT_SUBSTITUTE Заменяет некорреткные кодовые последовательности символом замены Юникода U+FFFD в случае использования UTF-8 и &#FFFD; при использовании другой кодировки, вместо возврата пустой строки. ENT_DISALLOWED Заменяет кодовые последовательности, несоответствующие указанному типу документа символом замены Юникода U+FFFD в случае использования UTF-8 и &#FFFD; при использовании другой кодировки. ENT_HTML401 Обработка кода в соответствии с HTML 4.01. ENT_XML1 Обработка кода в соответствии с XML 1. ENT_XHTML Обработка кода в соответствии с XHTML. ENT_HTML5 Обработка кода в соответствии с HTML 5. 
charset - Подобно htmlspecialchars(), необязательный третий аргумент charset определяет кодировку, используемую при преобразовании. По умолчанию, в настоящее время используется кодировка ISO-8859-1. Однако, наиболее вероятно это значение изменится в будущих версиях PHP; строго рекомендуется указывать кодировку вручную при использовании данной функции. 
double_encode - При выключении параметра double_encode PHP не будет преобразовывать существующие html-сущности. По умолчанию преобразуется все без ограничений. </parameters>
<output>Возвращает преобразованную строку. </output>
<errors></errors>
<example><?php
$str = "A 'quote' is <b>bold</b>";
// выводит: A 'quote' is <b>bold</b>
echo htmlentities($str);
// выводит: A &#039;quote&#039; is <b>bold</b>
echo htmlentities($str, ENT_QUOTES);
?></example>
<example_result></example_result>
</object>

<object id=921> 
<name>posix_access</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Determine accessibility of a file </short-description>
<description>bool posix_access ( string $file [, int $mode = POSIX_F_OK ] ) 
 posix_access() checks the user&#039;s permission of a file. </description>
<parameters>file - The name of the file to be tested. 
mode - A mask consisting of one or more of POSIX_F_OK, POSIX_R_OK, POSIX_W_OK and POSIX_X_OK. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=922> 
<name>socket_create_pair</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Creates a pair of indistinguishable sockets and stores them in an array</short-description>
<description>bool socket_create_pair ( int $domain , int $type , int $protocol , array &$fd ) 
 socket_create_pair() creates two connected and indistinguishable sockets, and stores them in fd. This function is commonly used in IPC (InterProcess Communication). </description>
<parameters>domain - The domain parameter specifies the protocol family to be used by the socket. See socket_create() for the full list. 
type - The type parameter selects the type of communication to be used by the socket. See socket_create() for the full list. 
protocol - The protocol parameter sets the specific protocol within the specified domain to be used when communicating on the returned socket. The proper value can be retrieved by name by using getprotobyname(). If the desired protocol is TCP, or UDP the corresponding constants SOL_TCP, and SOL_UDP can also be used. 
fd - Reference to an array in which the two socket resources will be inserted. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$sockets = array();
/* On Windows we need to use AF_INET */
$domain = (strtoupper(substr(PHP_OS, 0, 3)) == 'WIN' ? AF_INET : AF_UNIX);
/* Setup socket pair */
if (socket_create_pair($domain, SOCK_STREAM, 0, $sockets) === false) {
    echo "socket_create_pair failed. Reason: ".socket_strerror(socket_last_error());
}/* Send and Recieve Data */
if (socket_write($sockets[0], "ABCdef123\n", strlen("ABCdef123\n")) === false) {
    echo "socket_write() failed. Reason: ".socket_strerror(socket_last_error($sockets[0]));
}if (($data = socket_read($sockets[1], strlen("ABCdef123\n"), PHP_BINARY_READ)) === false) {
    echo "socket_read() failed. Reason: ".socket_strerror(socket_last_error($sockets[1]));
}var_dump($data);
/* Close sockets */
socket_close($sockets[0]);
socket_close($sockets[1]);
?></example>
<example_result></example_result>
</object>

<object id=923> 
<name>wddx_packet_start</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Starts a new WDDX packet with structure inside it</short-description>
<description>resource wddx_packet_start ([ string $comment ] ) 
 Start a new WDDX packet for incremental addition of variables. It automatically creates a structure definition inside the packet to contain the variables. </description>
<parameters>comment - An optional comment string. </parameters>
<output>Returns a packet ID for use in later functions, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=924> 
<name>openssl_sign</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Generate signature</short-description>
<description>bool openssl_sign ( string $data , string &$signature , mixed $priv_key_id [, int $signature_alg = OPENSSL_ALGO_SHA1 ] ) 
 openssl_sign() computes a signature for the specified data by using SHA1 for hashing followed by encryption using the private key associated with priv_key_id. Note that the data itself is not encrypted. </description>
<parameters>data - 
signature - If the call was successful the signature is returned in signature. 
priv_key_id - 
signature_alg - For more information see the list of Signature Algorithms. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// $data is assumed to contain the data to be signed
// fetch private key from file and ready it
$fp = fopen("/src/openssl-0.9.6/demos/sign/key.pem", "r");
$priv_key = fread($fp, 8192);
fclose($fp);
$pkeyid = openssl_get_privatekey($priv_key);
// compute signature
openssl_sign($data, $signature, $pkeyid);
// free the key from memory
openssl_free_key($pkeyid);
?></example>
<example_result></example_result>
</object>

<object id=925> 
<name>vprintf</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Выводит отформатированную строку</short-description>
<description>int vprintf ( string $format , array $args ) 
 Выводит значения массива, отформатированные в соответствии с аргументом format, описанном в документации функции sprintf(). 
 Эта функция подобна printf(), но она принимает не переменное число аргументов, а массив. </description>
<parameters>format - Описание параметра format смотрите в документации к функции sprintf(). 
args - </parameters>
<output>Возвращает длину выведенной строки. </output>
<errors></errors>
<example><?php
vprintf("%04d-%02d-%02d", explode('-', '1988-8-1')); // 1988-08-01
?></example>
<example_result></example_result>
</object>

<object id=926> 
<name>ibase_free_result</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Free a result set</short-description>
<description>bool ibase_free_result ( resource $result_identifier ) 
 Frees a result set. </description>
<parameters>result_identifier - A result set created by ibase_query() or ibase_execute(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=927> 
<name>ncurses_addchstr</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Add attributed string at current position </short-description>
<description>int ncurses_addchstr ( string $s ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>s - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=928> 
<name>header</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Send a raw HTTP header</short-description>
<description>void header ( string $string [, bool $replace = true [, int $http_response_code ]] ) 
 header() is used to send a raw HTTP header. See the &raquo; HTTP/1.1 specification for more information on HTTP headers. 
 Remember that header() must be called before any actual output is sent, either by normal HTML tags, blank lines in a file, or from PHP. It is a very common error to read code with include(), or require(), functions, or another file access function, and have spaces or empty lines that are output before header() is called. The same problem exists when using a single PHP/HTML file. <html>
<?php
/* This will give an error. Note the output
 * above, which is before the header() call */
header('Location: http://www.example.com/');
?></description>
<parameters>string - The header string. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example>
 &raquo; Content-Disposition header to supply a recommended filename and force the browser to display the save dialog. </example>
<example_result></example_result>
</object>

<object id=929> 
<name>hw_GetChildColl</name>
<versions>(PHP 4)</versions>
<short-description>Object ids of child collections</short-description>
<description>array hw_getchildcoll ( int $connection , int $objectID ) 
 Returns object ids. Each object ID belongs to a child collection of the collection with ID objectID. The function will not return child documents. </description>
<parameters>connection - The connection identifier. 
objectID - The object identifier. </parameters>
<output>Returns an array of object ids. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=930> 
<name>fdf_header</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Sets FDF-specific output headers</short-description>
<description>void fdf_header ( void ) 
 This is a convenience function to set appropriate HTTP headers for FDF output. It sets the Content-type: to application/vnd.fdf. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=931> 
<name>snmpgetnext</name>
<versions>(PHP 5)</versions>
<short-description>Fetch the SNMP object which follows the given object id </short-description>
<description>string snmpgetnext ( string $host , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] ) 
 The snmpgetnext() function is used to read the value of the SNMP object that follows the specified object_id. </description>
<parameters>host - The hostname of the SNMP agent (server).
community - The read community.
object_id - The SNMP object id which precedes the wanted one.
timeout - The number of microseconds until the first timeout.
retries - The number of times to retry if timeouts occur.</parameters>
<output>Returns SNMP object value on success or FALSE on error. In case of an error, an E_WARNING message is shown. </output>
<errors></errors>
<example><?php
$nameOfSecondInterface = snmpgetnetxt('localhost', 'public', 'IF-MIB::ifName.1';
?></example>
<example_result></example_result>
</object>

<object id=932> 
<name>snmp_set_quick_print</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Set the value of quick_print within the UCD SNMP library </short-description>
<description>bool snmp_set_quick_print ( bool $quick_print ) 
 Sets the value of quick_print within the UCD SNMP library. When this is set (1), the SNMP library will return &#039;quick printed&#039; values. This means that just the value will be printed. When quick_print is not enabled (default) the UCD SNMP library prints extra information including the type of the value (i.e. IpAddress or OID). Additionally, if quick_print is not enabled, the library prints additional hex values for all strings of three characters or less. 
 By default the UCD SNMP library returns verbose values, quick_print is used to return only the value. 
 Currently strings are still returned with extra quotes, this will be corrected in a later release. </description>
<parameters>quick_print - </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
snmp_set_quick_print(0);
$a = snmpget("127.0.0.1", "public", ".1.3.6.1.2.1.2.2.1.9.1");
echo "$a\n";
snmp_set_quick_print(1);
$a = snmpget("127.0.0.1", "public", ".1.3.6.1.2.1.2.2.1.9.1");
echo "$a\n";
?></example>
<example_result>
 
&#039;Timeticks: (0) 0:00:00.00&#039;
&#039;0:00:00.00&#039;
</example_result>
</object>

<object id=933> 
<name>posix_seteuid</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Set the effective UID of the current process</short-description>
<description>bool posix_seteuid ( int $uid ) 
 Set the real user ID of the current process. This is a privileged function and needs appropriate privileges (usually root) on the system to be able to perform this function. </description>
<parameters>uid - The user id. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=934> 
<name>oci_set_action</name>
<versions>(PHP 5.3.2, PECL OCI8 >= 1.4.0)</versions>
<short-description>Задает имя для действия </short-description>
<description>bool oci_set_action ( resource $connection , string $action_name ) 
 Присваивает имя действию для трассировки Oracle. 
 Присвоенное имя регистрируется в базе данных во время очередного запроса от PHP, например, когда запускается SQL выражение. 
 Имя действия может быть извлечено из административных представлений (view) базы данных, таких как V$SESSION. Его можно использовать для трассировки и мониторинга, например, с помощью V$SQLAREA и DBMS_MONITOR.SERV_MOD_ACT_STAT_ENABLE. 
 Значение можно устанавливать и через постоянные соединения. </description>
<parameters>connection - Идентификатор соединения Oracle,возвращаемый oci_connect(), oci_pconnect(),или oci_new_connect().
action_name - Задаваемая пользователем строка до 32 байт. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$c = oci_connect('hr', 'welcome', 'localhost/XE');
// Запись действия
oci_set_action($c, 'Friend Lookup');
// Код, осуществляющий запрос к БД, например выборка:
$s = oci_parse($c, 'select * from dual');
oci_execute($s);
oci_fetch_all($s, $res);
sleep(30);
?></example>
<example_result>
 
// Пока скрипт выполняется, администратор может наблюдать выполнение действий:

sqlplus system/welcome
SQL> select action from v$session;
</example_result>
</object>

<object id=935> 
<name>ncurses_nocbreak</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Switch terminal to cooked mode </short-description>
<description>bool ncurses_nocbreak ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Returns TRUE if any error occurred, otherwise FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=936> 
<name>ibase_execute</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Execute a previously prepared query</short-description>
<description>resource ibase_execute ( resource $query [, mixed $bind_arg [, mixed $... ]] ) 
 Execute a query prepared by ibase_prepare(). 
 This is a lot more effective than using ibase_query() if you are repeating a same kind of query several times with only some parameters changing. </description>
<parameters>query - An InterBase query prepared by ibase_prepare(). 
bind_arg - 
... - </parameters>
<output>If the query raises an error, returns FALSE. If it is successful and there is a (possibly empty) result set (such as with a SELECT query), returns a result identifier. If the query was successful and there were no results, returns TRUE. </output>
<errors></errors>
<example><?php
$dbh = ibase_connect($host, $username, $password);
$updates = array(
    1 => 'Eric',
    5 => 'Filip',
    7 => 'Larry'
);
$query = ibase_prepare($dbh, "UPDATE FOO SET BAR = ? WHERE BAZ = ?");
foreach ($updates as $baz => $bar) {
    ibase_execute($query, $bar, $baz);
}
?></example>
<example_result></example_result>
</object>

<object id=937> 
<name>getmxrr</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает запись MX, соответствующую переданному доменному имени узла</short-description>
<description>bool getmxrr ( string $hostname , array &$mxhosts [, array &$weight ] ) 
 Ищет в DNS записи MX, соответствующие hostname. </description>
<parameters>hostname - Доменное имя узла 
mxhosts - Список найденных записей MX, помещенный в массив mxhosts. 
weight - Если передан массив weight, то он будет заполнен полученной информацией о приоритетах. </parameters>
<output>Возвращает TRUE, если были найдены записи; возвращает FALSE, если записей не было найдено или произошла ошибка. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=938> 
<name>JewishToJD</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Переводит дату по Иудейскому календарю в число дней в Юлианском летоисчислении </short-description>
<description>int jewishtojd ( int $month , int $day , int $year ) 
 Несмотря на то, что функция может обрабатывать даты вплоть до 1-го года (3761 до н.э.), практически преобразование для таких ранних дат не имеет смысла. Иудейский календарь использовался несколько тысяч лет, но давние времена не было формулы для расчета начала месяца. Новый месяц начинался с того момента как впервые можно было наблюдать новую луну. </description>
<parameters>month - Номер месяца в виде числа от 1 до 13 
day - Номер дня в виде числа от 1 до 30 
year - Год в виде числа от 1 до 9999 </parameters>
<output>Номер дня в Юлианском летоисчислении в виде числа для заданной иудейской даты. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=939> 
<name>PDF_get_buffer</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Get PDF output buffer</short-description>
<description>string PDF_get_buffer ( resource $p ) 
 Fetches the buffer containing the generated PDF data. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=940> 
<name>posix_getgid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Return the real group ID of the current process</short-description>
<description>int posix_getgid ( void ) 
 Return the numeric real group ID of the current process. </description>
<parameters></parameters>
<output>Returns the real group id, as an integer. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=941> 
<name>gmp_div_r</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Остаток от деления чисел</short-description>
<description>resource gmp_div_r ( resource $n , resource $d [, int $round = GMP_ROUND_ZERO ] ) 
 Вычисляет остаток от деления нацело числа n на d. Если число n отлично от нуля, результат будет иметь знак этого числа. </description>
<parameters>n - Делимое. 
d - Делитель числа n. 
round - В документации к функции gmp_div_q() приведено описание аргумента round. </parameters>
<output>Остаток в виде GMP числа. </output>
<errors></errors>
<example><?php
     $div = gmp_div_r("105", "20");
     echo gmp_strval($div) . "\n";
     ?></example>
<example_result>
 
 5
     </example_result>
</object>

<object id=942> 
<name>get_magic_quotes_gpc</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the current configuration setting of magic_quotes_gpc</short-description>
<description>int get_magic_quotes_gpc ( void ) 
 Returns the current configuration setting of magic_quotes_gpc 
 Keep in mind that attempting to set magic_quotes_gpc at runtime will not work. 
 For more information about magic_quotes, see this security section. </description>
<parameters></parameters>
<output>Returns 0 if magic_quotes_gpc is off, 1 otherwise. </output>
<errors></errors>
<example><?php
echo get_magic_quotes_gpc();         // 1
echo $_POST['lastname'];             // O\'reilly
echo addslashes($_POST['lastname']); // O\\\'reilly
if (get_magic_quotes_gpc()) {
    $lastname = stripslashes($_POST['lastname']);
}else {
    $lastname = $_POST['lastname'];
}
// If using MySQL
$lastname = mysql_real_escape_string($lastname);
echo $lastname; // O\'reilly
$sql = "INSERT INTO lastnames (lastname) VALUES ('$lastname')";
?></example>
<example_result></example_result>
</object>

<object id=943> 
<name>gmp_pow</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Возводит число в степень</short-description>
<description>resource gmp_pow ( resource $base , int $exp ) 
 Возводит число base в степень exp. </description>
<parameters>base - Основание степени. 
exp - Положительный показатель степени числа base. </parameters>
<output>Новое (результирующее) GMP число. Результатом примера 0^0 будет 1. </output>
<errors></errors>
<example><?php
$pow1 = gmp_pow("2", 31);
echo gmp_strval($pow1) . "\n";
$pow2 = gmp_pow("0", 0);
echo gmp_strval($pow2) . "\n";
$pow3 = gmp_pow("2", -1); // Отрицательный показатель степени вызовет предупреждение
echo gmp_strval($pow3) . "\n";
?></example>
<example_result>
 
2147483648
1
</example_result>
</object>

<object id=944> 
<name>__halt_compiler</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Останавливает работу компилятора</short-description>
<description>void __halt_compiler ( void ) 
 Останавливает работу компилятора. Эта функция может быть полезна при внедрении данных в PHP скрипты, как в файлы инсталляции. 
 Начальная позиция данных в байтах может быть определена константой __COMPILER_HALT_OFFSET__, которая может быть определена только если в файле имеется функция __halt_compiler(). </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
// Открывает указанный файл
$fp = fopen(__FILE__, 'r');
// Ищет в файле указатель данных
fseek($fp, __COMPILER_HALT_OFFSET__);
// Выводит данные
var_dump(stream_get_contents($fp));
// Останавливает работу скрипта
__halt_compiler(); the installation data (eg. tar, gz, PHP, etc.)</example>
<example_result></example_result>
</object>

<object id=945> 
<name>odbc_columnprivileges</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Lists columns and associated privileges for the given table</short-description>
<description>resource odbc_columnprivileges ( resource $connection_id , string $qualifier , string $owner , string $table_name , string $column_name ) 
 Lists columns and associated privileges for the given table. </description>
<parameters>connection_id - Идентификатор соединения ODBC,за подробностями обращайтесь к odbc_connect().
qualifier - The qualifier. 
owner - The owner. 
table_name - The table name. 
column_name - The column_name argument accepts search patterns (&#039;%&#039; to match zero or more characters and &#039;_&#039; to match a single character). </parameters>
<output>Returns an ODBC result identifier или FALSE в случае возникновения ошибки. This result identifier can be used to fetch a list of columns and associated privileges. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=946> 
<name>ibase_set_event_handler</name>
<versions>(PHP 5)</versions>
<short-description>Register a callback function to be called when events are posted</short-description>
<description>resource ibase_set_event_handler ( callback $event_handler , string $event_name1 [, string $event_name2 [, string $... ]] ) resource ibase_set_event_handler ( resource $connection , callback $event_handler , string $event_name1 [, string $event_name2 [, string $... ]] )</description>
<parameters>event_handler - The callback is called with the event name and the link resource as arguments whenever one of the specified events is posted by the database. 
event_name1 - An event name. 
event_name2 - At most 15 events allowed. </parameters>
<output>The return value is an event resource. This resource can be used to free the event handler using ibase_free_event_handler(). </output>
<errors></errors>
<example><?php
function event_handler($event_name, $link)
{    if ($event_name == "NEW ORDER") {
        // process new order
        ibase_query($link, "UPDATE orders SET status='handled'");
    } else if ($event_name == "DB_SHUTDOWN") {
        // free event handler
        return false;
    }
}
ibase_set_event_handler($link, "event_handler", "NEW_ORDER", "DB_SHUTDOWN");
?></example>
<example_result></example_result>
</object>

<object id=947> 
<name>stream_socket_accept</name>
<versions>(PHP 5)</versions>
<short-description>Принимает соединение на сокете, созданном c помощью функции stream_socket_server()</short-description>
<description>resource stream_socket_accept ( resource $server_socket [, float $timeout = ini_get("default_socket_timeout") [, string &$peername ]] ) 
 Принимает соединение на сокете, предварительно созданном с помощью функции stream_socket_server(). </description>
<parameters>server_socket - Серверный сокет для принятия соединения. 
timeout - Заменяет тайм-аут подключения сокета по умолчанию. Время должно быть указано в секундах. 
peername - Будет присвоено имя (адрес) клиента, который подсоединился, если оно содержится и доступно из выбранного транспорта. </parameters>
<output>Возвращает поток принятого соединения с сокетом или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=948> 
<name>bcsub</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Вычитает одно число с произвольной точностью из другого </short-description>
<description>string bcsub ( string $left_operand , string $right_operand [, int $scale ] ) 
 Вычитает число right_operand из left_operand. </description>
<parameters>left_operand - Левый операнд (уменьшаемое) в виде строки. 
right_operand - Правый операнд (вычитаемое) в виде строки. 
scale - Этот необязательный параметр используется для установки количества знаков после десятичного разделителя в результате.Вы также можете установить этот параметр глобально для всех функций с помощью bcscale().</parameters>
<output>Разность в виде строки. </output>
<errors></errors>
<example><?php
$a = '1.234';
$b = '5';
echo bcsub($a, $b);     // -3
echo bcsub($a, $b, 4);  // -3.7660
?></example>
<example_result></example_result>
</object>

<object id=949> 
<name>ncurses_termattrs</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Returns a logical OR of all attribute flags supported by terminal </short-description>
<description>bool ncurses_termattrs ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=950> 
<name>ibase_gen_id</name>
<versions>(PHP 5)</versions>
<short-description>Increments the named generator and returns its new value</short-description>
<description>mixed ibase_gen_id ( string $generator [, int $increment = 1 [, resource $link_identifier = NULL ]] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output>Returns new generator value as integer, or as string if the value is too big. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=951> 
<name>snmpwalkoid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Query for a tree of information about a network entity </short-description>
<description>array snmpwalkoid ( string $hostname , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] ) 
 snmpwalkoid() function is used to read all object ids and their respective values from an SNMP agent specified by hostname. 
 The existence of snmpwalkoid() and snmpwalk() has historical reasons. Both functions are provided for backward compatibility. Use snmprealwalk() instead. </description>
<parameters>hostname - The SNMP agent. 
community - The read community. 
object_id - If NULL, object_id is taken as the root of the SNMP objects tree and all objects under that tree are returned as an array. 
timeout - The number of microseconds until the first timeout. 
retries - The number of times to retry if timeouts occur. </parameters>
<output>Returns an associative array with object ids and their respective object value starting from the object_id as root or FALSE on error. </output>
<errors></errors>
<example><?php
$a = snmpwalkoid("127.0.0.1", "public", ""); 
for (reset($a); $i = key($a); next($a)) {
    echo "$i: $a[$i]<br />\n";
}?></example>
<example_result></example_result>
</object>

<object id=952> 
<name>xmlrpc_decode_request</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Декодирует XML в нативные типы PHP</short-description>
<description>mixed xmlrpc_decode_request ( string $xml , string &$method [, string $encoding ] ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=953> 
<name>openssl_x509_checkpurpose</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Verifies if a certificate can be used for a particular purpose</short-description>
<description>int openssl_x509_checkpurpose ( mixed $x509cert , int $purpose [, array $cainfo = array() [, string $untrustedfile ]] ) 
 openssl_x509_checkpurpose() examines a certificate to see if it can be used for the specified purpose. </description>
<parameters>x509cert - The examined certificate. 
purpose - openssl_x509_checkpurpose() purposes Constant Description X509_PURPOSE_SSL_CLIENT Can the certificate be used for the client side of an SSL connection? X509_PURPOSE_SSL_SERVER Can the certificate be used for the server side of an SSL connection? X509_PURPOSE_NS_SSL_SERVER Can the cert be used for Netscape SSL server? X509_PURPOSE_SMIME_SIGN Can the cert be used to sign S/MIME email? X509_PURPOSE_SMIME_ENCRYPT Can the cert be used to encrypt S/MIME email? X509_PURPOSE_CRL_SIGN Can the cert be used to sign a certificate revocation list (CRL)? X509_PURPOSE_ANY Can the cert be used for Any/All purposes? These options are not bitfields - you may specify one only! 
cainfo - cainfo should be an array of trusted CA files/dirs as described in Certificate Verification. 
untrustedfile - If specified, this should be the name of a PEM encoded file holding certificates that can be used to help verify the certificate, although no trust is placed in the certificates that come from that file. </parameters>
<output>Returns TRUE if the certificate can be used for the intended purpose, FALSE if it cannot, or -1 on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=954> 
<name>stream_filter_register</name>
<versions>(PHP 5)</versions>
<short-description>Регистрирует потоковый фильтр, определённый пользователем</short-description>
<description>bool stream_filter_register ( string $filtername , string $classname ) 
 stream_filter_register() позволяет вам реализовать ваш собственный фильтр на любом зарегистрированном потоке, используемом со всеми другими функциями файловой системы (такими как fopen(), fread() и т. д.). </description>
<parameters>filtername - Название регистрируемого фильтра. 
classname - Для того, чтобы реализовать фильтр, вам нужно определить класс как расширение php_user_filter c функциями-членами как указано ниже. При выполнении операций чтения/записи на потоке, к которому прикреплён ваш фильтр, PHP будет передавать данные через ваш фильтр (и через любые другие фильтры, прикреплённые к потоку) так что данные могут быть изменены как требуется. Вы должны реализовать методы точно как описано ниже. Иная реализация приведёт к непредсказуемому поведению. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example>
 strtoupper на файловом потоке foo-bar.txt, который будет переводить в заглавные все буквы, которые пишутся/читаются из этого потока. </example>
<example_result>
 
LINE1
WORD - 2
EASY AS 123
</example_result>
</object>

<object id=955> 
<name>ncurses_bkgdset</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Control screen background </short-description>
<description>void ncurses_bkgdset ( int $attrchar ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>attrchar - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=956> 
<name>m_getcommadelimited</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Get the RAW comma delimited data returned from MCVE</short-description>
<description>string m_getcommadelimited ( resource $conn , int $identifier ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
identifier - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=957> 
<name>odbc_next_result</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Checks if multiple results are available</short-description>
<description>bool odbc_next_result ( resource $result_id ) 
 Checks if there are more result sets available as well as allowing access to the next result set via odbc_fetch_array(), odbc_fetch_row(), odbc_result(), etc. </description>
<parameters>result_id - The result identifier. </parameters>
<output>Returns TRUE if there are more result sets, FALSE otherwise. </output>
<errors></errors>
<example><?php
$r_Connection = odbc_connect($dsn, $username, $password);
$s_SQL = <<<END_SQL
SELECT 'A'
SELECT 'B'
SELECT 'C'
END_SQL;
$r_Results = odbc_exec($r_Connection, $s_SQL);
$a_Row1 = odbc_fetch_array($r_Results);
$a_Row2 = odbc_fetch_array($r_Results);
echo "Dump first result set";
var_dump($a_Row1, $a_Row2);
echo "Get second results set ";
var_dump(odbc_next_result($r_Results));
$a_Row1 = odbc_fetch_array($r_Results);
$a_Row2 = odbc_fetch_array($r_Results);
echo "Dump second result set ";
var_dump($a_Row1, $a_Row2);
echo "Get third results set ";
var_dump(odbc_next_result($r_Results));
$a_Row1 = odbc_fetch_array($r_Results);
$a_Row2 = odbc_fetch_array($r_Results);
echo "Dump third result set ";
var_dump($a_Row1, $a_Row2);
echo "Try for a fourth result set ";
var_dump(odbc_next_result($r_Results));
?></example>
<example_result>
 
Dump first result set array(1) {
  ["A"]=>
  string(1) "A"
}
bool(false)
Get second results set bool(true)
Dump second result set array(1) {
  ["B"]=>
  string(1) "B"
}
bool(false)
Get third results set bool(true)
Dump third result set array(1) {
  ["C"]=>
  string(1) "C"
}
bool(false)
Try for a fourth result set bool(false)
</example_result>
</object>

<object id=958> 
<name>hw_Free_Document</name>
<versions>(PHP 4)</versions>
<short-description>Frees hw_document</short-description>
<description>bool hw_free_document ( int $hw_document ) 
 Frees the memory occupied by the Hyperwave document. </description>
<parameters>hw_document - The document identifier. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=959> 
<name>ibase_modify_user</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Modify a user to a security database (only for IB6 or later)</short-description>
<description>bool ibase_modify_user ( resource $service_handle , string $user_name , string $password [, string $first_name [, string $middle_name [, string $last_name ]]] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=960> 
<name>curl_multi_add_handle</name>
<versions>(PHP 5)</versions>
<short-description>Добавляет обычный cURL дескриптор к набору cURL дескрипторов</short-description>
<description>int curl_multi_add_handle ( resource $mh , resource $ch ) 
 Добавляет дескриптор ch к набору дескрипторов mh </description>
<parameters>mh - Мульти-дескриптор cURL, полученный из curl_multi_init().
ch - Дескриптор cURL, полученный из curl_init().</parameters>
<output>Возвращает 0 при успехе, или один из кодов ошибок CURLM_XXX. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=961> 
<name>mb_language</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Set/Get current language</short-description>
<description>mixed mb_language ([ string $language ] ) 
 Set/Get the current language. </description>
<parameters>language - Used for encoding e-mail messages. Valid languages are "Japanese", "ja","English","en" and "uni" (UTF-8). mb_send_mail() uses this setting to encode e-mail. </parameters>
<output>If language is set and language is valid, it returns TRUE. Otherwise, it returns FALSE. When language is omitted, it returns the language name as a string. If no language is set previously, it then returns FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=962> 
<name>sybase_num_rows</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get number of rows in a result set</short-description>
<description>int sybase_num_rows ( resource $result ) 
 sybase_num_rows() returns the number of rows in a result set. </description>
<parameters>result - </parameters>
<output>Returns the number of rows as an integer. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=963> 
<name>dbase_numfields</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает количество полей базы данных</short-description>
<description>int dbase_numfields ( int $dbase_identifier ) 
 Получает количество полей (колонок) в указанной базе данных. 
 Замечание: 
 Поле номеруются от 0 до dbase_numfields($db)-1, тогда как записи базы данных от 1 до dbase_numrecords($db). </description>
<parameters>dbase_identifier - Идентификатор базы данных, возвращаемый функцией dbase_open() или dbase_create(). </parameters>
<output>Количество полей в базе данных, или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
//открытие БД для чтения
$db = dbase_open('.\tmp\test.dbf', 0);
//если соединение успешно, то выполняем действия
if ($db) {
  //получение количества записей БД
  $record_numbers = dbase_numrecords($db);
  //получение количества полей БД
  $nf  = dbase_numfields($db);
  //вывод всех записей БД
  //построчный обход
  for ($j = 1;  $j <= $record_numbers;  $j++) {
    //вывод номера строки
    echo $j."=>" ;
    //получение строки по номеру (индексу)
    $rec = dbase_get_record($db, $j);
    
    //обход по столбцам
    for ($i = 0; $i < $nf; $i++) {
      //вывод данных поля
      echo $rec[$i], "\t";
    }
  echo "<br>";
  }
dbase_close($db);
} else echo "Не удалось подключиться к БД";
?></example>
<example_result></example_result>
</object>

<object id=964> 
<name>pathinfo</name>
<versions>(PHP 4 >= 4.0.3, PHP 5)</versions>
<short-description>Возвращает информацию о пути к файлу</short-description>
<description>mixed pathinfo ( string $path [, int $options = PATHINFO_DIRNAME | PATHINFO_BASENAME | PATHINFO_EXTENSION | PATHINFO_FILENAME ] ) 
 pathinfo() возвращает информацию о path в виде ассоциативного массива или строки в зависимости от options. </description>
<parameters>path - Анализируемый путь. 
options - Если указан, то задает для возврата отдельный элемент: один из следующих PATHINFO_DIRNAME, PATHINFO_BASENAME, PATHINFO_EXTENSION и PATHINFO_FILENAME. </parameters>
<output>Если параметр options не передан, то возвращаемый ассоциативный массив (array) будет содержать следующие элементы: dirname, basename, extension (если есть) и filename. </output>
<errors></errors>
<example><?php
$path_parts = pathinfo('/www/htdocs/inc/lib.inc.php');
echo $path_parts['dirname'], "\n";
echo $path_parts['basename'], "\n";
echo $path_parts['extension'], "\n";
echo $path_parts['filename'], "\n"; // начиная с PHP 5.2.0
?></example>
<example_result>
 
/www/htdocs/inc
lib.inc.php
php
lib.inc
</example_result>
</object>

<object id=965> 
<name>hw_GetObjectByQueryObj</name>
<versions>(PHP 4)</versions>
<short-description>Search object</short-description>
<description>array hw_getobjectbyqueryobj ( int $connection , string $query , int $max_hits ) 
 Searches for objects on the whole server and returns an array of object records. </description>
<parameters>connection - The connection identifier. 
query - The query will only work with indexed attributes. 
max_hits - The maximum number of matches is limited to max_hits. If max_hits is set to -1 the maximum number of matches is unlimited. </parameters>
<output>Returns an array of object records. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=966> 
<name>mb_strwidth</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Return width of string</short-description>
<description>int mb_strwidth ( string $str [, string $encoding ] ) 
 Returns the width of string str. 
 Multi-byte characters are usually twice the width of single byte characters. 
 Characters width Chars Width U+0000 - U+0019 0 U+0020 - U+1FFF 1 U+2000 - U+FF60 2 U+FF61 - U+FF9F 1 U+FFA0 - 2 </description>
<parameters>str - The string being decoded. 
encoding - Параметр encodingпредставляет собой символьную кодировку. Если он опущен, вместо него будет использовано значение внутренней кодировки.</parameters>
<output>The width of string str. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=967> 
<name>tidy_error_count</name>
<versions>(PHP 5, PECL tidy >= 0.5.2)</versions>
<short-description>Возвращает число ошибок Tidy, встретившихся при рассмотрении документа</short-description>
<description>int tidy_error_count ( tidy $object ) 
 Возвращает число ошибок Tidy, встретившихся при рассмотрении документа. </description>
<parameters>object - Объект Tidy. </parameters>
<output>Возвращает число ошибок Tidy. </output>
<errors></errors>
<example><?php
$html = '<p>test</i>
<bogustag>bogus</bogustag>';
$tidy = tidy_parse_string($html);
echo tidy_error_count($tidy) . "\n"; //1
echo $tidy->errorBuffer;
?></example>
<example_result>
 
1
line 1 column 1 - Warning: missing <!DOCTYPE> declaration
line 1 column 8 - Warning: discarding unexpected </i>
line 2 column 1 - Error: <bogustag> is not recognized!
line 2 column 1 - Warning: discarding unexpected <bogustag>
line 2 column 16 - Warning: discarding unexpected </bogustag>
line 1 column 1 - Warning: inserting missing &#039;title&#039; element
</example_result>
</object>

<object id=968> 
<name>finfo_file</name>
<versions>(PHP >= 5.3.0, PECL fileinfo >= 0.1.0)</versions>
<short-description>Возвращает информацио о файле</short-description>
<description>string finfo_file ( resource $finfo , string $file_name = NULL [, int $options = FILEINFO_NONE [, resource $context = NULL ]] ) 
 Объектно-ориентированный стиль string finfo::file ( string $file_name = NULL [, int $options = FILEINFO_NONE [, resource $context = NULL ]] )</description>
<parameters>finfo - Ресурс Fileinfo, полученный функцией finfo_open(). 
file_name - Название проверяемого файла. 
options - Одна из нескольких констант Fileinfo. 
context - Для описания contexts, смотрите Stream Функции. </parameters>
<output>Возвращает текстовое описание содержимого файла filename, или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$finfo = finfo_open(FILEINFO_MIME_TYPE); // возвращает mime-тип
foreach (glob("*") as $filename) {
    echo finfo_file($finfo, $filename) . "\n";
}finfo_close($finfo);
?></example>
<example_result>
 
text/html
image/gif
application/vnd.ms-excel
</example_result>
</object>

<object id=969> 
<name>imagecolorexactalpha</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Get the index of the specified color + alpha</short-description>
<description>int imagecolorexactalpha ( resource $image , int $red , int $green , int $blue , int $alpha ) 
 Returns the index of the specified color+alpha in the palette of the image. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
red - Значение красного компонента цвета.
green - Значение зеленого компонента цвета.
blue - Значение синего компонента цвета.
alpha - A value between 0 and 127. 0 indicates completely opaque while 127 indicates completely transparent. </parameters>
<output>Returns the index of the specified color+alpha in the palette of the image, or -1 if the color does not exist in the image&#039;s palette. </output>
<errors></errors>
<example><?php
// Setup an image
$im = imagecreatefrompng('./gdlogo.png');
$colors   = Array();
$colors[] = imagecolorexactalpha($im, 255, 0, 0, 0);
$colors[] = imagecolorexactalpha($im, 0, 0, 0, 127);
$colors[] = imagecolorexactalpha($im, 255, 255, 255, 55);
$colors[] = imagecolorexactalpha($im, 100, 255, 52, 20);
print_r($colors);
// Free from memory
imagedestroy($im);
?></example>
<example_result>
 
Array
(
    [0] => 16711680
    [1] => 2130706432
    [2] => 939524095
    [3] => 342163252
)
</example_result>
</object>

<object id=970> 
<name>gc_enable</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Activates the circular reference collector</short-description>
<description>void gc_enable ( void ) 
 Activates the circular reference collector, setting zend.enable_gc to 1. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=971> 
<name>vpopmail_error</name>
<versions>(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)</versions>
<short-description>Get text message for last vpopmail error</short-description>
<description>string vpopmail_error ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=972> 
<name>PDF_rect</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Рисует прямоугольник</short-description>
<description>bool PDF_rect ( resource $p , float $x , float $y , float $width , float $height ) 
 Рисует прямоугольник. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=973> 
<name>mb_http_output</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Set/Get HTTP output character encoding</short-description>
<description>mixed mb_http_output ([ string $encoding ] ) 
 Set/Get the HTTP output character encoding. Output after this function is converted to encoding. </description>
<parameters>encoding - If encoding is set, mb_http_output() sets the HTTP output character encoding to encoding. </parameters>
<output>If encoding is omitted, mb_http_output() returns the current HTTP output character encoding. Otherwise, Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=974> 
<name>dba_close</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Close a DBA database</short-description>
<description>void dba_close ( resource $handle ) 
 dba_close() closes the established database and frees all resources of the specified database handle. </description>
<parameters>handle - The database handler, returned by dba_open() or dba_popen(). </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=975> 
<name>grapheme_stristr</name>
<versions>(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)</versions>
<short-description>Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack.</short-description>
<description>string grapheme_stristr ( string $haystack , string $needle [, bool $before_needle = false ] ) 
 Returns part of haystack string from the first occurrence of case-insensitive needle to the end of haystack. </description>
<parameters>haystack - The input string. Must be valid UTF-8. 
needle - The string to look for. Must be valid UTF-8. 
before_needle - If TRUE, grapheme_strstr() returns the part of the haystack before the first occurrence of the needle. </parameters>
<output>Returns the portion of $haystack, or FALSE if $needle is not found. </output>
<errors></errors>
<example><?php
$char_a_ring_nfd = "a\xCC\x8A";  // 'LATIN SMALL LETTER A WITH RING ABOVE' (U+00E5) normalization form "D"
$char_o_diaeresis_nfd = "o\xCC\x88"; // 'LATIN SMALL LETTER O WITH DIAERESIS' (U+00F6) normalization form "D"
$char_O_diaeresis_nfd = "O\xCC\x88"; // 'LATIN CAPITAL LETTER O WITH DIAERESIS' (U+00D6) normalization form "D"
print urlencode(grapheme_stristr( $char_a_ring_nfd . $char_o_diaeresis_nfd . $char_a_ring_nfd, $char_O_diaeresis_nfd));
?></example>
<example_result>
 
o%CC%88a%CC%8A
</example_result>
</object>

<object id=976> 
<name>gzrewind</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Перемещает указатель на позицию в gz-файле в начало</short-description>
<description>bool gzrewind ( resource $zp ) 
 Устанавливает указатель на позицию файла на начало потока этого файла. </description>
<parameters>zp - Указатель на gz-файл, возвращённый, после его успешного открытия, функцией gzopen(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=977> 
<name>bcscale</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Задает количество чисел после десятичной точки по умолчанию для всех bc math функций. </short-description>
<description>bool bcscale ( int $scale ) 
 Задает количество чисел после десятичной точки по умолчанию для bc math функций, которые не могут явно получить это число в виде аргумента. </description>
<parameters>scale - Масштаб, число знаков после запятой. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// масштаб по умолчанию : 3
bcscale(3);
echo bcdiv('105', '6.55957'); // 16.007
// то же самое без bcscale()
echo bcdiv('105', '6.55957', 3); // 16.007
?></example>
<example_result></example_result>
</object>

<object id=978> 
<name>PDF_clip</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Clip to current path</short-description>
<description>bool PDF_clip ( resource $p ) 
 Uses the current path as clipping path, and terminate the path. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=979> 
<name>date_timestamp_set</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Псевдоним DateTime::setTimestamp()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=980> 
<name>time_nanosleep</name>
<versions>(PHP 5)</versions>
<short-description>Откладывает исполнение на заданное число секунд и наносекунд</short-description>
<description>mixed time_nanosleep ( int $seconds , int $nanoseconds ) 
 Откладывает исполнение программы на заданные в параметрах seconds и nanoseconds число секунд и наносекунд соответственно. </description>
<parameters>seconds - Должно быть целым положительным числом. 
nanoseconds - Должно быть целым положительным числом, меньшим одного миллиарда. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Внимание! Если будет возвращен массив, то такая функция не сработает как ожидалось
if (time_nanosleep(0, 500000000)) {
    echo "Задержка на пол-секунды.\n";
}
// Так лучше:
if (time_nanosleep(0, 500000000) === true) {
    echo "Задержка на пол-секунды.\n";
}
// И так лучше всего:
$nano = time_nanosleep(2, 100000);
if ($nano === true) {
    echo "Задержка на 2 секунды, 100 микросекунд.\n";
} elseif ($nano === false) {
    echo "Задержка не удалась.\n";
} elseif (is_array($nano)) {
    $seconds = $nano['seconds'];
    $nanoseconds = $nano['nanoseconds'];
    echo "Прервано сигналом.\n";
    echo "Осталось: $seconds секунд, $nanoseconds наносекунд.";
}?></example>
<example_result></example_result>
</object>

<object id=981> 
<name>mcrypt_generic_end</name>
<versions>(PHP 4 >= 4.0.2, PHP 5 <= 5.1.6)</versions>
<short-description>This function terminates encryption</short-description>
<description>bool mcrypt_generic_end ( resource $td ) 
 Внимание 
 This function is deprecated, use mcrypt_generic_deinit() instead. It can cause crashes when used with mcrypt_module_close() due to multiple buffer frees. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=982> 
<name>udm_load_ispell_data</name>
<versions>(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)</versions>
<short-description>Загружает ispell-данные</short-description>
<description>bool udm_load_ispell_data ( resource $agent , int $var , string $val1 , string $val2 , int $flag ) 
 udm_load_ispell_data() загружает ispell-данные. 
 После использования этой функции, для того, чтобы освободить память, выделенную для ispell-данных, пожалуйста, используйте функцию udm_free_ispell_data(), даже если вы используете режим UDM_ISPELL_TYPE_SERVER. </description>
<parameters>agent - Ссылка на идентификатор агента, полученная после вызова udm_alloc_agent(). 
var - Указывает источник ispell-данных. Может принимать следующие значения: UDM_ISPELL_TYPE_DB - указывает, что ispell-данные должны быть загружены из SQL. В этом случае параметры val1 и val2 игнорируются и должны быть пустыми. flag должен быть равен 1. 
 Замечание: 
 flag указывает, что после загрузки ispell-данных из определённого ресурса они должны быть отсортированы (это необходимо для корректной работы ispell). В случае загрузки ispell-данных из файлов может быть несколько вызовов функции udm_load_ispell_data(), так что нет смысла сортировать данные после каждого вызова, кроме последнего. Поскольку в режиме db все данные загружаются одним вызовом, этот параметр должен иметь значение 1. В этом режиме, в случае ошибки, например, если ispell-таблицы отсутствуют, функция возвратит FALSE, а код и сообщение об ошибке будут доступны через udm_error() и udm_errno(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
if (! udm_load_ispell_data($udm, UDM_ISPELL_TYPE_DB, '', '', 1)) {
  printf("Ошибка #%d: '%s'\n", udm_errno($udm), udm_error($udm));
  exit;
}?></example>
<example_result></example_result>
</object>

<object id=983> 
<name>nl2br</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Вставляет HTML-код разрыва строки перед каждым переводом строки</short-description>
<description>string nl2br ( string $string [, bool $is_xhtml = true ] ) 
 Возвращает строку string, в которой перед каждым переводом строки (\r\n, \n\r, \n и \r) вставлен &#039;<br />&#039; или &#039;<br>&#039;. </description>
<parameters>string - Входная строка. 
is_xhtml - Использовать совместимые с XHTML переводы строк или нет. </parameters>
<output>Возвращает измененную строку. </output>
<errors></errors>
<example><?php
echo nl2br("foo - это вам не\n bar");
?></example>
<example_result>
 
foo - это вам не<br />
 bar
</example_result>
</object>

<object id=984> 
<name>variant_not</name>
<versions>(PHP 5)</versions>
<short-description>Performs bitwise not negation on a variant</short-description>
<description>mixed variant_not ( mixed $variant ) 
 Performs bitwise not negation on variant and returns the result. </description>
<parameters>variant - The variant. </parameters>
<output>Returns the bitwise not negation. If variant is NULL, the result will also be NULL. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=985> 
<name>m_deletetrans</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Delete specified transaction from MCVE_CONN structure</short-description>
<description>bool m_deletetrans ( resource $conn , int $identifier ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
identifier - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=986> 
<name>mysql_get_server_info</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Возвращает информацию о сервере MySQL</short-description>
<description>string mysql_get_server_info ([ resource $link_identifier ] ) 
 Возвращает версию сервера MySQL. </description>
<parameters>link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Возвращает версию сервера MySQL в случае успеха или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Ошибка соединения: ' . mysql_error());
}printf("Версия сервера MySQL: %s\n", mysql_get_server_info());
?></example>
<example_result>
 
Версия сервера MySQL: 4.0.1-alpha
</example_result>
</object>

<object id=987> 
<name>filepro_fieldcount</name>
<versions>(PHP 4, PHP 5 <= 5.1.6)</versions>
<short-description>Find out how many fields are in a filePro database</short-description>
<description>int filepro_fieldcount ( void ) 
 Returns the number of fields (columns) in the opened filePro database. </description>
<parameters></parameters>
<output>Returns the number of fields in the opened filePro database, or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=988> 
<name>gc_collect_cycles</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Forces collection of any existing garbage cycles</short-description>
<description>int gc_collect_cycles ( void ) 
 Forces collection of any existing garbage cycles. </description>
<parameters></parameters>
<output>Returns number of collected cycles. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=989> 
<name>cyrus_authenticate</name>
<versions>(PHP 4 >= 4.1.0, PECL cyrus 1.0)</versions>
<short-description>Аутентификация на сервере Cyrus IMAP</short-description>
<description>void cyrus_authenticate ( resource $connection [, string $mechlist [, string $service [, string $user [, int $minssf [, int $maxssf [, string $authname [, string $password ]]]]]]] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=990> 
<name>notes_mark_unread</name>
<versions>(PHP 4 >= 4.0.5)</versions>
<short-description>Mark a note_id as unread for the User user_name</short-description>
<description>bool notes_mark_unread ( string $database_name , string $user_name , string $note_id ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=991> 
<name>session_unset</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Free all session variables</short-description>
<description>void session_unset ( void ) 
 The session_unset() function frees all session variables currently registered. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=992> 
<name>array_unshift</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Добавляет один или несколько элементов в начало массива</short-description>
<description>int array_unshift ( array &$array , mixed $var [, mixed $... ] ) 
 array_unshift() добавляет переданные в качестве аргументов элементы в начало массива array. Обратите внимание, что список элементов добавляется целиком, то есть порядок элементов сохраняется. Все числовые ключи будут изменены таким образом, что нумерация массива будет начинаться с нуля, в то время как строковые ключи останутся прежними. </description>
<parameters>array - Входной массив. 
var - Добавляемая в начало переменная. </parameters>
<output>Возвращает новое количество элементов в array. </output>
<errors></errors>
<example><?php
$queue = array("orange", "banana");
array_unshift($queue, "apple", "raspberry");
print_r($queue);
?></example>
<example_result>
 
Array
(
    [0] => apple
    [1] => raspberry
    [2] => orange
    [3] => banana
)
</example_result>
</object>

<object id=993> 
<name>overload</name>
<versions>(PHP 4 >= 4.3.0)</versions>
<short-description>Enable property and method call overloading for a class</short-description>
<description>void overload ( string $class_name ) 
 The overload() function will enable property and method call overloading for a class identified by class_name. </description>
<parameters>class_name - The overloaded class name, as a string </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=994> 
<name>arsort</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сортирует массив в обратном порядке, сохраняя ключи</short-description>
<description>bool arsort ( array &$array [, int $sort_flags = SORT_REGULAR ] ) 
 Эта функция сортирует массив в обратном порядке таким образом, что сохраняются отношения между ключами и значениями. 
 Она полезна, в основном, при сортировке ассоциативных массивов, когда важно сохранить отношение ключ => значение. </description>
<parameters>array - Входной массив. 
sort_flags - Вы можете изменить поведение сортировки, используя дополнительный параметр sort_flags, подробнее см. sort(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$fruits = array("d" => "lemon", "a" => "orange", "b" => "banana", "c" => "apple");
arsort($fruits);
foreach ($fruits as $key => $val) {
    echo "$key = $val\n";
}?></example>
<example_result>
 
a = orange
d = lemon
b = banana
c = apple
</example_result>
</object>

<object id=995> 
<name>msql_field_name</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get the name of the specified field in a result</short-description>
<description>string msql_field_name ( resource $result , int $field_offset ) 
 msql_field_name() gets the name of the specified field index. </description>
<parameters>result - Обрабатываемый результат запроса,полученный с помощью функции msql_query().
field_offset - Числовое смещение поля.field_offset начинается с 1.</parameters>
<output>The name of the field или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=996> 
<name>openssl_free_key</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Free key resource</short-description>
<description>void openssl_free_key ( resource $key_identifier ) 
 openssl_free_key() frees the key associated with the specified key_identifier from memory. </description>
<parameters>key_identifier - </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=997> 
<name>hw_Connect</name>
<versions>(PHP 4)</versions>
<short-description>Opens a connection</short-description>
<description>int hw_connect ( string $host , int $port [, string $username ], string $password ) 
 Opens a connection to a Hyperwave server. You can have multiple connections open at once. </description>
<parameters>host - The server host name. 
port - The server port number. 
username - The Hyperwave user name. If omitted, no identification with the server will be done. It is similar to identify as user anonymous. 
password - The password for username. Keep in mind, that the password is not encrypted. </parameters>
<output>Returns a connection index on success, or FALSE if the connection could not be made. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=998> 
<name>strrchr</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Находит последнее вхождение символа в строке</short-description>
<description>string strrchr ( string $haystack , mixed $needle ) 
 Возвращает подстроку строки haystack начиная с последнего вхождения needle до конца строки. </description>
<parameters>haystack - Строка, в которой производится поиск 
needle - Если needle состоит более чем из одного символа, используется только первый символ. Это поведение отличается от strstr(). </parameters>
<output>Функция возвращает фрагмент строки, или FALSE, если подстрока needle не найдена. </output>
<errors></errors>
<example><?php
// получить последнюю директорию из $PATH
$dir = substr(strrchr($PATH, ":"), 1);
// получить все после последнего перевода строки
$text = "Line 1\nLine 2\nLine 3";
$last = substr(strrchr($text, 10), 1 );
?></example>
<example_result></example_result>
</object>

<object id=999> 
<name>mysql_get_host_info</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Возвращает информацию о соединении с MySQL</short-description>
<description>string mysql_get_host_info ([ resource $link_identifier ] ) 
 Описывает тип используемого соединения, указанного переданным дескриптором соединения, включая имя хоста. </description>
<parameters>link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Возвращает строку, описывающую тип используемого соединения, указанного переданным дескриптором соединения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Ошибка соединения: ' . mysql_error());
}printf("Тип соединения с MySQL: %s\n", mysql_get_host_info());
?></example>
<example_result>
 
Тип соединения с MySQL: Localhost via UNIX socket
</example_result>
</object>

<object id=1000> 
<name>ifx_num_fields</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Returns the number of columns in the query</short-description>
<description>int ifx_num_fields ( resource $result_id ) 
 After preparing or executing a query, this call gives you the number of columns in the query. </description>
<parameters>result_id - result_id is a valid resultid returned by ifx_query() or ifx_prepare() (select type queries only!). </parameters>
<output>Returns the number of columns in query for result_id, or FALSE on errors. </output>
<errors></errors>
<example><?php
$conn_id = ifx_connect("db", "user", "password");
$res_id = ifx_query("select * from systables", $conn_id);
echo ifx_num_fields($res_id);
?></example>
<example_result></example_result>
</object>

<object id=1001> 
<name>is_callable</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Проверяет, может ли значение переменной быть вызвано в качестве функции </short-description>
<description>bool is_callable ( callback $name [, bool $syntax_only = false [, string &$callable_name ]] ) 
 Проверяет, может ли значение переменной быть вызвано в качестве функции. С помощью данной функции можно проверить, что простая переменная содержит корректное имя функции, или что массив содержит правильно заданный объект и имя функции. </description>
<parameters>name - Может быть как именем функции, заданным строковой переменной, так и объектом и именем вызываемого метода, например: array($SomeObject, &#039;MethodName&#039;) </parameters>
<output>Возвращает TRUE, если name может быть вызвана, или FALSE в противном случае. </output>
<errors></errors>
<example><?php
//  Как проверить переменную, чтобы узнать, может ли она быть вызвана
//  как функция.
//
//  Простая переменная, содержащая имя функции
//
function someFunction() 
{}
$functionVariable = 'someFunction';
var_dump(is_callable($functionVariable, false, $callable_name));  // bool(true)
echo $callable_name, "\n";  // someFunction
//
//  Массив, содержащий метод класса
//
class someClass {
  function someMethod() 
  {
  }
}
$anObject = new someClass();
$methodVariable = array($anObject, 'someMethod');
var_dump(is_callable($methodVariable, true, $callable_name));  //  bool(true)
echo $callable_name, "\n";  //  someClass::someMethod
?></example>
<example_result></example_result>
</object>

<object id=1002> 
<name>gethostname</name>
<versions>(PHP >= 5.3.0)</versions>
<short-description>Получает имя хоста</short-description>
<description>string gethostname ( void ) 
 Функция gethostname() получает стандартное имя хоста для локального компьютера. </description>
<parameters></parameters>
<output>Возвращает строку с именем хоста либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
echo gethostname(); // может вывести, н-р.: sandie
// Или вариант, который также работает в версиях до PHP 5.3
echo php_uname('n'); // может вывести, н-р.: sandie
?></example>
<example_result></example_result>
</object>

<object id=1003> 
<name>PDF_setlinecap</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set linecap parameter</short-description>
<description>bool PDF_setlinecap ( resource $p , int $linecap ) 
 Sets the linecap parameter to control the shape at the end of a path with respect to stroking. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1004> 
<name>strrpos</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает позицию последнего вхождения подстроки в строке</short-description>
<description>int strrpos ( string $haystack , string $needle [, int $offset = 0 ] ) 
 Ищет позицию последнего вхождения подстроки needle в строку haystack. </description>
<parameters>haystack - Строка, в которой производится поиск. 
needle - Если needle не является строкой, то он приводится к целому и трактуется как код символа. 
offset - Если указан, то поиск начнется с данного количества символов с начала строки. Если передано отрицательное значение, поиск начнется с указанного количества символов от конца строки, но по прежнему будет производится поиск последнего вхождения. </parameters>
<output>Возвращает номер позиции последнего вхождения needle относительно начала строки haystack (независимо от направления поиска и смещения (offset)). Также обратите внимание на то, что позиция строки отсчитывается от 0, а не от 1. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=1005> 
<name>sort</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сортирует массив</short-description>
<description>bool sort ( array &$array [, int $sort_flags = SORT_REGULAR ] ) 
 Эта функция сортирует массив. После завершения работы функции элементы массива будут расположены в порядке возрастания. </description>
<parameters>array - Входной массив. 
sort_flags - Дополнительный второй параметр sort_flags можно использовать для изменения поведения сортировки, используя следующие значения: </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$fruits = array("lemon", "orange", "banana", "apple");
sort($fruits);
foreach ($fruits as $key => $val) {
    echo "fruits[" . $key . "] = " . $val . "\n";
}
?></example>
<example_result>
 
fruits[0] = apple
fruits[1] = banana
fruits[2] = lemon
fruits[3] = orange
</example_result>
</object>

<object id=1006> 
<name>ingres_num_fields</name>
<versions>(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)</versions>
<short-description>Get the number of fields returned by the last query</short-description>
<description>int ingres_num_fields ( resource $result ) 
 ingres_num_fields() returns the number of fields in the results returned by the Ingres server after a call to ingres_query(). </description>
<parameters>result - The query result identifier </parameters>
<output>Returns the number of fields </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1007> 
<name>ocicolumnsize</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_field_size()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1008> 
<name>jdtounix</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Переводит число дней в Юлианском летоисчислении в метку времени Unix </short-description>
<description>int jdtounix ( int $jday ) 
 Эта функция вернет метку времени Unix соответствующую номеру дня в Юлианском летоисчислении, заданному в jday либо FALSE, если jday лежит за пределами эпохи Unix (годы по Григорианскому календарю между 1970 и 2037 или 2440588 <= jday <= 2465342 ). Будет возвращено локальное время (не GMT). </description>
<parameters>jday - Номер дня в Юлианском летоисчислении между 2440588 и 2465342. </parameters>
<output>Метка времени Unix на момент начала юлианского дня. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1009> 
<name>pfsockopen</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Открывает постоянное соединение с Интернет или сокетом Unix домена</short-description>
<description>resource pfsockopen ( string $hostname [, int $port = -1 [, int &$errno [, string &$errstr [, float $timeout = ini_get("default_socket_timeout") ]]]] ) 
 Эта функция является полным аналогом функции fsockopen() с той лишь разницей, что соединение не закрывается после завершения работы скрипта. Это версия функции fsockopen() с возможностью постоянного подключения. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1010> 
<name>array_unique</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Убирает повторяющиеся значения из массива</short-description>
<description>array array_unique ( array $array [, int $sort_flags = SORT_STRING ] ) 
 Принимает входной array и возвращает новый массив без повторяющихся значений. 
 Обратите внимание, что ключи сохранятся. array_unique() сначала сортирует значения как строки, сохраняет первый встреченный ключ для каждого значения и игнорирует все последующие ключи. Это не означает, что первый ключ каждого значения неотсортированного array будет сохранён. 
 Замечание: Два элемента считаются одинаковыми в том и только в том случае, если (string) $elem1 === (string) $elem2. Другими словами: если у них одинаковое строковое представление. Будет использован первый элемент. </description>
<parameters>array - Входной массив. 
sort_flags - Можно испольовать необязательный второй параметр sort_flags для изменения поведения сортировки с помощью следующих значений: </parameters>
<output>Возвращает отфильтрованный массив. </output>
<errors></errors>
<example><?php
$input = array("a" => "green", "red", "b" => "green", "blue", "red");
$result = array_unique($input);
print_r($result);
?></example>
<example_result>
 
Array
(
    [a] => green
    [0] => red
    [1] => blue
)
</example_result>
</object>

<object id=1011> 
<name>readline_info</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets/sets various internal readline variables</short-description>
<description>mixed readline_info ([ string $varname [, string $newvalue ]] ) 
 Gets or sets various internal readline variables. </description>
<parameters>varname - A variable name. 
newvalue - If provided, this will be the new value of the setting. </parameters>
<output>If called with no parameters, this function returns an array of values for all the setting readline uses. The elements will be indexed by the following values: done, end, erase_empty_line, library_version, line_buffer, mark, pending_input, point, prompt, readline_name, and terminal_name. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1012> 
<name>getrandmax</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Вовзращает максимально возможное случайное число</short-description>
<description>int getrandmax ( void ) 
 Возвращает максимальное значение, которое может быть получено функцией rand(). </description>
<parameters></parameters>
<output>Максимально возможное случайное значение, возвращаемое функцией rand() </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1013> 
<name>pg_update</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Обновление данных в таблице </short-description>
<description>mixed pg_update ( resource $connection , string $table_name , array $data , array $condition [, int $options = PGSQL_DML_EXEC ] ) 
 pg_update() заменяет записи в таблице, удовлетворяющие условиям condition данными data. Если задан аргумент options, данные будут преобразованы функцией pg_convert(), которой будут переданы параметры из этого аргумента. Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>connection - Ресурс соединения с базой данных PostgreSQL. 
table_name - Имя таблицы, в которой обновляются записи. 
data - Массив (array), ключи которого соответствуют именам колонок таблицы table_name, а значения заменят данные в этих колонках. 
condition - Массив (array), ключи которого соответствуют именам колонок таблицы table_name. Будут обновлены только те строки, значения полей которых совпадут со значениями массива. 
options - Одна из констант PGSQL_CONV_OPTS, PGSQL_DML_NO_CONV, PGSQL_DML_EXEC, PGSQL_DML_STRING, либо их комбинация. Если options содержит PGSQL_DML_STRING, функция вернет строку. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. Функция вернет строку (string), если константа PGSQL_DML_STRING содержится в options. </output>
<errors></errors>
<example><?php 
  $db = pg_connect('dbname=foo');
  $data = array('field1'=>'AA', 'field2'=>'BB');
  
  // Это безопасно с тех пор как $_POST преобразуется автоматически 
  $res = pg_update($db, 'post_log', $_POST, $data);
  if ($res) {
      echo "Данные обновлены: $res\n";
  } else {
      echo "Должно быть переданы неверные данные\n";
  }
?></example>
<example_result></example_result>
</object>

<object id=1014> 
<name>ocinumcols</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_num_fields()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1015> 
<name>image_type_to_extension</name>
<versions>(PHP 5)</versions>
<short-description>Get file extension for image type</short-description>
<description>string image_type_to_extension ( int $imagetype [, bool $include_dot = TRUE ] ) 
 Returns the extension for the given IMAGETYPE_XXX constant. </description>
<parameters>imagetype - One of the IMAGETYPE_XXX constant. 
include_dot - Whether to prepend a dot to the extension or not. Default to TRUE. </parameters>
<output>A string with the extension corresponding to the given image type. </output>
<errors></errors>
<example><?php
// Create image instance
$im = imagecreatetruecolor(100, 100);
// Save image
imagepng($im, './test' . image_type_to_extension(IMAGETYPE_PNG));
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=1016> 
<name>oci_field_precision</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Возвращает точность поля</short-description>
<description>int oci_field_precision ( resource $statement , int $field ) 
 Возвращает точность поля field. 
 Для полей типа FLOAT точность больше нуля, а масштаб равен -127. Если точность поля равна нулю, то тип поля - NUMBER. Иначе же, тип поля может быть описан как NUMBER(precision, scale). </description>
<parameters>statement - Идентификатор допустимого OCI запроса. 
field - Может быть номером поля (нумерация начинается с 1) или именем. </parameters>
<output>Возвращает точность в виде числа, или FALSE при ошибках. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1017> 
<name>atan2</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Арктангенс двух переменных</short-description>
<description>float atan2 ( float $y , float $x ) 
 Функция вычисляет арктангенс переменных x и y. Это подобно вычислению арктангенса y / x, за исключением того, что знаки обоих аргументов используются для вычисления квадранта результата. 
 Функция возвращает значение в радианах в диапазоне от -PI до PI (включительно). </description>
<parameters>y - Делитель 
x - Делимое </parameters>
<output>Арктангенс y/x в радианах. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1018> 
<name>strftime</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Форматирует текущую дату/время с учетом текущих настроек локали</short-description>
<description>string strftime ( string $format [, int $timestamp = time() ] ) 
 Форматирует дату/время с учетом текущих настроек локали. Названия месяцев, дней недели и других языко-зависимых строк будут взяты в соответствии с текущими настройками локали, установленной с помощью функции setlocale(). 
 Ваша C-библиотека может не поддерживать все форматирующие параметры, в этом случае они будут недоступны функции strftime(). Кроме того, не все платформы поддерживают отрицательные метки времени, так что поддерживаемый диапазон дат на этих платформах будет ограничен Эпохой Unix. Это значит, что %e, %T, %R и %D (а возможно и другие параметры), как и даты до Jan 1, 1970, не поддерживаются Windows, некоторыми версиями Linux и некоторыми другими операционными системами. Список форматирующих символов, поддерживаемых Windows, можно найти на &raquo; сайте MSDN. </description>
<parameters>format - Распознаются следующие символы в строке format format Описание Пример возвращаемых значений День --- --- %a Сокращенное название дня недели От Sun до Sat %A Полное название дня недели От Sunday до Saturday %d Двухзначное представление дня месяца (с ведущими нулями) От 01 до 31 %e День месяца, с ведущим пробелом, если он состоит из одной цифры. На Windows реализован не так, как описано. Подробнее смотрите ниже. От 1 до 31 %j Порядковый номер в году, 3 цифры с ведущими нулями От 001 до 366 %u Порядковый номер дня недели согласно стандарту ISO-8601 От 1 (понедельник) до 7 (воскресенье) %w Порядковый номер дня недели От 0 (воскресенье) до 6 (суббота) Неделя --- --- %U Порядковый номер недели в указанном году, начиная с первого воскресенья в качестве первой недели 13 (для полной 13-й недели года) %V Порядковый номер недели в указанном году в соответствии со стандартом ISO-8601:1988, счет начинается с той недели, которая содержит минимум 4 дня, неделя начинается с понедельника От 01 до 53 (где 53 указывает на перекрывающуюся неделю) %W Порядковый номер недели в указанном году, начиная с первого понедельника в качестве первой недели 46 (для 46-й недели года, начинающейся с понедельника) Месяц --- --- %b Аббревиатура названия месяца, в соответствии с настройками локали От Jan до Dec %B Полное название месяца, в соответствии с настройками локали От January до December %h Аббревиатура названия месяца, в соответствии с настройками локали (псевдоним %b) От Jan до Dec %m Двухзначный порядковый номер месяца От 01 (январь) до 12 (декабрь) Год --- --- %C Двухзначный порядковый номер столетия (год, деленный на 100, усеченный до целого) 19 для 20-го века %g Двухзначный номер года в соответствии со стандартом ISO-8601:1988 (см. %V) Пример: 09 для недели 6 января 2009 %G Полная четырехзначная версия %g Пример: 2008 для недели 3 января 2009 %y Двухзначный порядковый номер года Пример: 09 для 2009, 79 для 1979 %Y Четырехзначный номер года Пример: 2038 Время --- --- %H Двухзначный номер часа в 24-часовом формате От 00 до 23 %I Двухзначный номер часа в 12-часовом формате От 01 до 12 %l (строчная &#039;L&#039;) Час в 12-часовом формате, с пробелом перед одиночной цифрой От 1 до 12 %M Двухзначный номер минуты От 00 до 59 %p &#039;AM&#039; или &#039;PM&#039; в верхнем регистре, в зависимости от указанного времени Пример: AM для 00:31, PM для 22:23 %P &#039;am&#039; или &#039;pm&#039; в зависимости от указанного времени Пример: am для 00:31, pm для 22:23 %r Тоже что и "%I:%M:%S %p" Пример: 09:34:17 PM для 21:34:17 %R Тоже что и "%H:%M" Пример: 00:35 для 12:35 AM, 16:44 для 4:44 PM %S Двухзначный номер секунды От 00 до 59 %T Тоже что и "%H:%M:%S" Пример: 21:34:17 для 09:34:17 PM %X Предпочитаемое отображение времени в зависимости от локали, без даты Example: 03:59:16 or 15:59:16 %z Смещение временной зоны относительно UTC либо аббревиатура (в зависимости от операционной системы) Пример: -0500 или EST для Eastern Time %Z Смещение временной зоны/аббревиатура, НЕ выдаваемая опцией %z (в зависимости от операционной системы) Пример: -0500 или EST для Eastern Time Метки даты и времени --- --- %c Предпочитаемое отображение даты и времени, в зависимости от текущей локали Пример: Tue Feb 5 00:45:10 2009 для 5 февраля 2009 00:45:10 %D Тоже что и "%m/%d/%y" Пример: 02/05/09 для 5 февраля 2009 %F Тоже что и "%Y-%m-%d" (обычно используется в метках времени баз данных) Пример: 2009-02-05 для 5 февраля 2009 %s Метка времени Эпохи Unix (тоже что и функция time()) Пример: 305815200 для 10 сентября 1979 08:40:00 %x Предпочитаемое отображение даты, без времени Пример: 02/05/09 для 5 февраля 2009 Различное --- --- %n Символ перевода строки ("\n") --- %t Символ табуляции ("\t") --- %% Символ процента ("%") --- </parameters>
<output>Возвращает строку, отформатированную в соответствии с параметром format, используя указанную временную метку timestamp или текущее время, если метка не была указана. Названия месяцев, дней недели и других языко-зависимых строк будут взяты в соответствии с текущими настройками локали, установленной с помощью функции setlocale(). </output>
<errors>Каждый вызов к функциям даты/времени при неправильных настройках временной зоны сгенерирует ошибку уровня E_NOTICE,и/или ошибку уровня E_STRICT или E_WARNING при использовании системныхнастроек или переменной окружения TZ. Смотрите также date_default_timezone_set()</errors>
<example><?php
setlocale(LC_TIME, "C");
echo strftime("%A");
setlocale(LC_TIME, "fi_FI");
echo strftime(" по-фински - %A,");
setlocale(LC_TIME, "fr_FR");
echo strftime(" по-французски - %A и");
setlocale(LC_TIME, "de_DE");
echo strftime(" по-немецки - %A.\n");
?></example>
<example_result>
 
Известный формат   : &#039;A&#039; = &#039;Friday&#039;            ( Полное название дня )
Известный формат   : &#039;B&#039; = &#039;December&#039;          ( Полное имя месяца, в зависимости от локали )
Известный формат   : &#039;H&#039; = &#039;11&#039;                ( Двухзначный номер часа в 24-часовом формате )
Известный формат   : &#039;I&#039; = &#039;11&#039;                ( Двухзначный номер часа в 12-часовом формате )
Известный формат   : &#039;M&#039; = &#039;24&#039;                ( Двухзначный номер минуты )
Известный формат   : &#039;S&#039; = &#039;44&#039;                ( Двухзначный номер секунды )
Известный формат   : &#039;U&#039; = &#039;48&#039;                ( Номер недели указанного года, начиная с первого воскресенья в качестве первой недели )
Известный формат   : &#039;W&#039; = &#039;48&#039;                ( Номер недели указанного года, начиная с первого понедельника в качестве первой недели )
Известный формат   : &#039;X&#039; = &#039;11:24:44&#039;          ( Предпочитаемое отображение времени в зависимости от локали, без даты )
Известный формат   : &#039;Y&#039; = &#039;2010&#039;              ( Четырехзначный номер года )
Известный формат   : &#039;Z&#039; = &#039;GMT Standard Time&#039; ( Смещение временной зоны/аббревиатура, НЕ выдаваемая %z (зависит от операционной системы) )
Известный формат   : &#039;a&#039; = &#039;Fri&#039;               ( Сокращенное название дня недели )
Известный формат   : &#039;b&#039; = &#039;Dec&#039;               ( Сокращенное название месяца в зависимости от локали )
Известный формат   : &#039;c&#039; = &#039;12/03/10 11:24:44&#039; ( Предпочитаемое отображение даты и времени в зависимости от локали )
Известный формат   : &#039;d&#039; = &#039;03&#039;                ( Двухзначный номер дня месяца (с ведущими нулями) )
Известный формат   : &#039;j&#039; = &#039;337&#039;               ( Номер дня в году, 3 цифры с ведущими нулями )
Известный формат   : &#039;m&#039; = &#039;12&#039;                ( Двухзначный номер месяца )
Известный формат   : &#039;p&#039; = &#039;AM&#039;                ( "AM" или "PM" в зависимости от указанного времени, в верхнем регистре )
Известный формат   : &#039;w&#039; = &#039;5&#039;                 ( Номер дня недели )
Известный формат   : &#039;x&#039; = &#039;12/03/10&#039;          ( Предпочитаемое отображение даты в зависимости от локали, без времени )
Известный формат   : &#039;y&#039; = &#039;10&#039;                ( Двухзначный номер года )
Известный формат   : &#039;z&#039; = &#039;GMT Standard Time&#039; ( Смещение временной зоны относительно UTC или аббревиатура (зависит от операционной системы) )
Известный формат   : &#039;%&#039; = &#039;%&#039;                 ( Символ процента ("%") )
Неизвестный формат : &#039;C&#039;                       ( Двухзначный номер столетия (год, деленный на 100, усеченный до целого) )
Неизвестный формат : &#039;D&#039;                       ( Тоже что и "%m/%d/%y" )
Неизвестный формат : &#039;E&#039;
Неизвестный формат : &#039;F&#039;                       ( Тоже что и "%Y-%m-%d" )
Неизвестный формат : &#039;G&#039;                       ( Четырехзначная версия %g )
Неизвестный формат : &#039;J&#039;
Неизвестный формат : &#039;K&#039;
Неизвестный формат : &#039;L&#039;
Неизвестный формат : &#039;N&#039;
Неизвестный формат : &#039;O&#039;
Неизвестный формат : &#039;P&#039;                       ( "am" или "pm" в зависимости от текущего времени, в нижнем регистре )
Неизвестный формат : &#039;Q&#039;
Неизвестный формат : &#039;R&#039;                       ( Тоже что и "%H:%M" )
Неизвестный формат : &#039;T&#039;                       ( Тоже что и "%H:%M:%S" )
Неизвестный формат : &#039;V&#039;                       ( Порядковый номер недели в указанном году в соответствии со стандартом ISO-8601:1988, счет начинается с той недели, которая содержит минимум 4 дня, неделя начинается с понедельника )
Неизвестный формат : &#039;e&#039;                       ( День месяца, с ведущим пробелом, если он состоит из одной цифры )
Неизвестный формат : &#039;f&#039;
Неизвестный формат : &#039;g&#039;                       ( Двухзначный номер года в соответствии со стандартом ISO-8601:1988 (см. %V) )
Неизвестный формат : &#039;h&#039;                       ( Сокращенное название месяца в зависимости от локали (псевдоним %b) )
Неизвестный формат : &#039;i&#039;
Неизвестный формат : &#039;k&#039;
Неизвестный формат : &#039;l&#039;                       ( Номер часа в 12-часовом формате, с ведущим пробелом, если он состоит из одной цифры )
Неизвестный формат : &#039;n&#039;                       ( Символ новой строки ("\n") )
Неизвестный формат : &#039;o&#039;
Неизвестный формат : &#039;q&#039;
Неизвестный формат : &#039;r&#039;                       ( Тоже что и "%I:%M:%S %p" )
Неизвестный формат : &#039;s&#039;                       ( Временная метка Эпохи Unix )
Неизвестный формат : &#039;t&#039;                       ( Символ табуляции ("\t") )
Неизвестный формат : &#039;u&#039;                       ( Номер дня недели в соответствии со стандартом ISO-8601 )
Неизвестный формат : &#039;v&#039;
</example_result>
</object>

<object id=1019> 
<name>oci_bind_array_by_name</name>
<versions>(PHP 5 >= 5.1.2, PECL OCI8 >= 1.2.0)</versions>
<short-description>Связывает PHP массив с массивом Oracle PL/SQL </short-description>
<description>bool oci_bind_array_by_name ( resource $statement , string $name , array &$var_array , int $max_table_length [, int $max_item_length = -1 [, int $type = SQLT_AFC ]] ) 
 Связывает PHP массив var_array с указателем Oracle name на массив Oracle PL/SQL. Направление, ввод или вывод, для которого будет использоваться массив будет определяться во время выполнения. </description>
<parameters>statement - Идентификатор допустимого OCI выражения. 
name - Указатель на массив Oracle. 
var_array - Массив. 
max_table_length - Задает максимальный размер для исходного и результирующего массивов. 
max_item_length - Задает максимальный размер значений массива. Если не задано или равно -1, oci_bind_array_by_name() найдет самый большой элемент в исходном массиве и использует его размер в качестве этой настройки. 
type - Используется для задания типа значений PL/SQL массива. См. список ниже: </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$c = oci_connect("scott", "tiger");
$create = "CREATE TABLE bind_example(name VARCHAR(20))";
$statement = oci_parse($c, $create);
oci_execute($statement);
$create_pkg = "
CREATE OR REPLACE PACKAGE ARRAYBINDPKG1 AS
  TYPE ARRTYPE IS TABLE OF VARCHAR(20) INDEX BY BINARY_INTEGER;
  PROCEDURE iobind(c1 IN OUT ARRTYPE);
END ARRAYBINDPKG1;";
$statement = oci_parse($c, $create_pkg);
oci_execute($statement);
$create_pkg_body = "
CREATE OR REPLACE PACKAGE BODY ARRAYBINDPKG1 AS
  CURSOR CUR IS SELECT name FROM bind_example;
  PROCEDURE iobind(c1 IN OUT ARRTYPE) IS
    BEGIN
    FOR i IN 1..5 LOOP
      INSERT INTO bind_example VALUES (c1(i));
    END LOOP;
    IF NOT CUR%ISOPEN THEN
      OPEN CUR;
    END IF;
    FOR i IN REVERSE 1..5 LOOP
      FETCH CUR INTO c1(i);
      IF CUR%NOTFOUND THEN
        CLOSE CUR;
        EXIT;
      END IF;
    END LOOP;
  END iobind;
END ARRAYBINDPKG1;";
$statement = oci_parse($c, $create_pkg_body);
oci_execute($statement);
$statement = oci_parse($c, "BEGIN ARRAYBINDPKG1.iobind(:c1); END;");
$array = array("one", "two", "three", "four", "five");
oci_bind_array_by_name($statement, ":c1", $array, 5, -1, SQLT_CHR);
oci_execute($statement);
var_dump($array);
?></example>
<example_result></example_result>
</object>

<object id=1020> 
<name>hw_GetParents</name>
<versions>(PHP 4)</versions>
<short-description>Object ids of parents</short-description>
<description>array hw_getparents ( int $connection , int $objectID ) 
 Returns the object identifiers of the parents of an object. </description>
<parameters>connection - The connection identifier. 
objectID - The object identifier. </parameters>
<output>Returns an indexed array of object ids. Each object id belongs to a parent of the object with ID objectID. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1021> 
<name>ncurses_use_default_colors</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Assign terminal default colors to color id -1 </short-description>
<description>bool ncurses_use_default_colors ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1022> 
<name>openssl_pkcs12_read</name>
<versions>(PHP 5 >= 5.2.2)</versions>
<short-description>Parse a PKCS#12 Certificate Store into an array</short-description>
<description>bool openssl_pkcs12_read ( string $pkcs12 , array &$certs , string $pass ) 
 openssl_pkcs12_read() parses the PKCS#12 certificate store supplied by pkcs12 into a array named certs. </description>
<parameters>pkcs12 - 
certs - On success, this will hold the Certificate Store Data. 
pass - Encryption password for unlocking the PKCS#12 file. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1023> 
<name>iptcparse</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Parse a binary IPTC block into single tags.</short-description>
<description>array iptcparse ( string $iptcblock ) 
 Parses an &raquo; IPTC block into its single tags. </description>
<parameters>iptcblock - A binary IPTC block. </parameters>
<output>Returns an array using the tagmarker as an index and the value as the value. It returns FALSE on error or if no IPTC data was found. </output>
<errors></errors>
<example><?php
$size = getimagesize('./test.jpg', $info);
if(isset($info['APP13']))
{    $iptc = iptcparse($info['APP13']);
    var_dump($iptc);
}?></example>
<example_result></example_result>
</object>

<object id=1024> 
<name>dbx_fetch_row</name>
<versions>(PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)</versions>
<short-description>Fetches rows from a query-result that had the DBX_RESULT_UNBUFFERED flag set</short-description>
<description>mixed dbx_fetch_row ( object $result_identifier ) 
 dbx_fetch_row() fetches rows from a result identifier that had the DBX_RESULT_UNBUFFERED flag set. 
 When the DBX_RESULT_UNBUFFERED is not set in the query, dbx_fetch_row() will fail as all rows have already been fetched into the results data property. 
 As a side effect, the rows property of the query-result object is incremented for each successful call to dbx_fetch_row(). </description>
<parameters>result_identifier - A result set returned by dbx_query(). </parameters>
<output>Returns an object on success that contains the same information as any row would have in the dbx_query() result data property, including columns accessible by index or fieldname when the flags for dbx_query() were set that way. </output>
<errors></errors>
<example><?php
$result = dbx_query($link, 'SELECT id, parentid, description FROM table', DBX_RESULT_UNBUFFERED);
echo "<table>\n";
while ($row = dbx_fetch_row($result)) {
    echo "<tr>\n";
    foreach ($row as $field) {
        echo "<td>$field</td>";
    }
    echo "</tr>\n";
}echo "</table>\n";
?></example>
<example_result></example_result>
</object>

<object id=1025> 
<name>imap_num_msg</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the number of messages in the current mailbox</short-description>
<description>int imap_num_msg ( resource $imap_stream ) 
 Gets the number of messages in the current mailbox. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().</parameters>
<output>Return the number of messages in the current mailbox, as an integer. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1026> 
<name>oci_bind_by_name</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Прикрепляет переменную PHP к соответствующей метке в SQL-выражении</short-description>
<description>bool oci_bind_by_name ( resource $statement , string $bv_name , mixed &$variable [, int $maxlength = -1 [, int $type = SQLT_CHR ]] ) 
 Прикрепляет переменную variable к метке bv_name. Такое прикрепеление позволяет повысить производительность и избежать SQL-инъекций. 
 Прикрепление переменной позволяет базе данных повторно использовать кэшированные контекстные выражения от предыдущих запросов, даже если они первоначально были запущены другим пользователем или процессом. Это также снижает риск SQL-инъекций, поскольку данные в таком случае никогда не рассматриваются как инструкции SQL. Данные не требуется экранировать или заключать в кавычки. 
 Прикрепленные PHP-переменные могут быть изменены и снова выполнены без необходимости повторной обработки запроса или повторного прикрепления. 
 В Oracle, прикрепление переменных обычно разделяют на IN (прикрепляет значения, передаваемые в базу данных) и OUT (прикрепляет значения, возвращаемые PHP). Переменная может быть одновременно IN и OUT. Независимо от этого, характер прикрепленния переменных будет определен во время выполнения. 
 Необходимо указать maxlength при использовании OUT-привязки, что позволяет PHP зарезервировать больше памяти для хранения возвращаемого значения 
 Для IN-привязки рекомендуется также указать параметр maxlength, если выражение выполняется несколько раз с раздичными значениями PHP-переменной. В противном случае, Oracle может урезать размер данных до размера первоначального значения переменной PHP. Если максимальная длина значения неизвестна, рекомендуется вызывать oci_bind_by_name() перед каждым вызовом oci_execute(). Прикрепление неоправданно большой переменной повлияет на процесс сохранения базы данных. 
 Вид прикрепления указывает Oracle как работать с памятью при чтении данных. Для IN-прикрепления адрес в памяти должен содержать допустимые данные при вызове oci_execute(). Это значит, что значение переменной должно находиться в памяти во время исполнения. Если это не так, возможны некорректные результаты или ошибки наподобие "ORA-01460: unimplemented or unreasonable conversion requested" (запрошены невыполнимые или некорректные преобразования) Для OUT-прикрепления основным признаком является установка значения в переменную PHP. 
 Для многократно выполняемого выражения, привязка одних и тех же значений может уменьшить возможности оптимизатора Oracle по выработке наилучшего варианта выполнения инструкции. Длительное прикрепление выражений, которые редко исполняются, может также не принести пользы. Тем не менее, в обоих случаях, прикрепление является более безопасным, чем конкатенация строки запроса и непроверенных пользовательских данных. </description>
<parameters>statement - Допустимый идентификатор выражения OCI8. 
bv_name - Метка с префиксом в виде двоеточия, используемая в выражении. Двоеточие опционально в bv_name. Oracle не использует знак вопроса для меток. 
variable - Переменная PHP, ассоциированная с bv_name 
maxlength - Устанавливает максимальный размер данных. Если указать -1, функция будет использовать текущий размер переменной variable в качестве максимального. При этом переменная variable должна существовать и содержать данные во время вызова oci_bind_by_name(). 
type - Тип данных, к которому Oracle будет приводить значения. По умолчанию type имеет значение SQLT_CHR. Oracle приводит данные от данного типа к типу поля (или типу переменной PL/SQL), если это возможно. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Создание таблицы:
//   CREATE TABLE mytab (id NUMBER, text VARCHAR2(40));
$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $m = oci_error();
    trigger_error(htmlentities($m['message']), E_USER_ERROR);
}
$stid = oci_parse($conn,"INSERT INTO mytab (id, text) VALUES(:id_bv, :text_bv)");
$id = 1;
$text = "Data to insert     ";
oci_bind_by_name($stid, ":id_bv", $id);
oci_bind_by_name($stid, ":text_bv", $text);
oci_execute($stid);
// В таблице содержится: 1, 'Data to insert     '
?></example>
<example_result></example_result>
</object>

<object id=1027> 
<name>pcntl_wtermsig</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Returns the signal which caused the child to terminate</short-description>
<description>int pcntl_wtermsig ( int $status ) 
 Returns the number of the signal that caused the child process to terminate. This function is only useful if pcntl_wifsignaled() returned TRUE. </description>
<parameters>status - Параметр status - этопараметр статуса, передаваемый для успешного вызова функции pcntl_waitpid().</parameters>
<output>Returns the signal number, as an integer. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1028> 
<name>dbplus_prev</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Get previous tuple from relation</short-description>
<description>int dbplus_prev ( resource $relation , array &$tuple ) 
 Reads the data for the previous tuple for the given relation, makes it the current tuple and will pass it back as an associative array in tuple. </description>
<parameters>relation - A relation opened by dbplus_open(). 
tuple - </parameters>
<output>Returns DBPLUS_ERR_NOERR on success or a db++ error code on failure. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1029> 
<name>yp_all</name>
<versions>(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5)</versions>
<short-description>Traverse the map and call a function on each entry</short-description>
<description>void yp_all ( string $domain , string $map , string $callback ) 
 Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>domain - The NIS domain name. 
map - The NIS map. 
callback - </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1030> 
<name>header_remove</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Удаляет предварительно установленные заголовки</short-description>
<description>void header_remove ([ string $name ] ) 
 Удаляет предварительно установленный функцией header() HTTP заголовок. </description>
<parameters>name - Имя удаляемого заголовка. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
header("X-Foo: Bar");
header("X-Bar: Baz");
header_remove("X-Foo"); 
?></example>
<example_result>
 
X-Bar: Baz
</example_result>
</object>

<object id=1031> 
<name>mysql_fetch_object</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Обрабатывает ряд результата запроса и возвращает объект</short-description>
<description>object mysql_fetch_object ( resource $result [, string $class_name [, array $params ]] ) 
 Возвращает объект со свойствами, соответствующими колонкам в обработанном ряду и сдвигает внутренний указатель результата вперед. </description>
<parameters>result - Обрабатываемый результат запроса.Этот результат может быть получен с помощью функции mysql_query().
class_name - Имя класса. Будет создан экземпляр указанного класса, заполнен свойствами и возвращен. Если не указан, возвращается экземпляр stdClass. 
params - Необязательный массив (array) параметров, передаваемых в конструктор создаваемого экземпляра class_name. </parameters>
<output>Возвращает объект (object) со строковыми свойствами, соответствующими полученному ряду, или FALSE, если рядов больше нет. </output>
<errors></errors>
<example><?php
mysql_connect("hostname", "user", "password");
mysql_select_db("mydb");
$result = mysql_query("select * from mytable");
while ($row = mysql_fetch_object($result)) {
    echo $row->user_id;
    echo $row->fullname;
}mysql_free_result($result);
?></example>
<example_result></example_result>
</object>

<object id=1032> 
<name>error_get_last</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Получение информации о последней произошедшей ошибке </short-description>
<description>array error_get_last ( void ) 
 Получает информацию о последней произошедшей ошибке. </description>
<parameters></parameters>
<output>Возвращает ассоциативный массив с описанием последней произошедшей ошибки. Ключи массива: "type", "message", "file" и "line". Если ошибка произошла во внутренней функции PHP, элемент с ключом "message" будет начинаться с имени этой функции. Возвращает NULL, если ошибок еще не произошло. </output>
<errors></errors>
<example><?php
echo $a;
print_r(error_get_last());
?></example>
<example_result>
 
Array
(
    [type] => 8
    [message] => Undefined variable: a
    [file] => C:\WWW\index.php
    [line] => 2
)
</example_result>
</object>

<object id=1033> 
<name>odbc_setoption</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Adjust ODBC settings</short-description>
<description>bool odbc_setoption ( resource $id , int $function , int $option , int $param ) 
 This function allows fiddling with the ODBC options for a particular connection or query result. It was written to help find work around to problems in quirky ODBC drivers. You should probably only use this function if you are an ODBC programmer and understand the effects the various options will have. You will certainly need a good ODBC reference to explain all the different options and values that can be used. Different driver versions support different options. 
 Because the effects may vary depending on the ODBC driver, use of this function in scripts to be made publicly available is strongly discouraged. Also, some ODBC options are not available to this function because they must be set before the connection is established or the query is prepared. However, if on a particular job it can make PHP work so your boss doesn&#039;t tell you to use a commercial product, that&#039;s all that really matters. </description>
<parameters>id - Is a connection id or result id on which to change the settings. For SQLSetConnectOption(), this is a connection id. For SQLSetStmtOption(), this is a result id. 
function - Is the ODBC function to use. The value should be 1 for SQLSetConnectOption() and 2 for SQLSetStmtOption(). 
option - The option to set. 
param - The value for the given option. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// 1. Option 102 of SQLSetConnectOption() is SQL_AUTOCOMMIT.
//    Value 1 of SQL_AUTOCOMMIT is SQL_AUTOCOMMIT_ON.
//    This example has the same effect as
//    odbc_autocommit($conn, true);
odbc_setoption($conn, 1, 102, 1);
// 2. Option 0 of SQLSetStmtOption() is SQL_QUERY_TIMEOUT.
//    This example sets the query to timeout after 30 seconds.
$result = odbc_prepare($conn, $sql);
odbc_setoption($result, 2, 0, 30);
odbc_execute($result);
?></example>
<example_result></example_result>
</object>

<object id=1034> 
<name>ucwords</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Преобразует в верхний регистр первый символ каждого слова в строке</short-description>
<description>string ucwords ( string $str ) 
 Возвращает строку str, в которой первый символ каждого слова переведен в верхний регистр, если этот символ является буквой. 
 Эта функция считает словами последовательности символов, разделенных пробельными символами, которыми являются пробел, разрыв страницы, перевод строки, возврат каретки, горизонтальная и вертикальная табуляция. </description>
<parameters>str - Входная строка. </parameters>
<output>Возвращает модифицированную строку. </output>
<errors></errors>
<example><?php
$foo = 'hello world!';
$foo = ucwords($foo);             // Hello World!
$bar = 'HELLO WORLD!';
$bar = ucwords($bar);             // HELLO WORLD!
$bar = ucwords(strtolower($bar)); // Hello World!
?></example>
<example_result></example_result>
</object>

<object id=1035> 
<name>openssl_x509_parse</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Parse an X509 certificate and return the information as an array</short-description>
<description>array openssl_x509_parse ( mixed $x509cert [, bool $shortnames = true ] ) 
 openssl_x509_parse() returns information about the supplied x509cert, including fields such as subject name, issuer name, purposes, valid from and valid to dates etc. </description>
<parameters>x509cert - 
shortnames - shortnames controls how the data is indexed in the array - if shortnames is TRUE (the default) then fields will be indexed with the short name form, otherwise, the long name form will be used - e.g.: CN is the shortname form of commonName. </parameters>
<output>The structure of the returned data is (deliberately) not yet documented, as it is still subject to change. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1036> 
<name>mssql_next_result</name>
<versions>(PHP 4 >= 4.0.5, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Move the internal result pointer to the next result</short-description>
<description>bool mssql_next_result ( resource $result_id ) 
 When sending more than one SQL statement to the server or executing a stored procedure with multiple results, it will cause the server to return multiple result sets. This function will test for additional results available form the server. If an additional result set exists it will free the existing result set and prepare to fetch the rows from the new result set. </description>
<parameters>result_id - The result resource that is being evaluated. This result comes from a call to mssql_query(). </parameters>
<output>Returns TRUE if an additional result set was available or FALSE otherwise. </output>
<errors></errors>
<example><?php
// Connect to MSSQL and select the database
$link = mssql_connect('MANGO\SQLEXPRESS', 'sa', 'phpfi');
mssql_select_db('php', $link);
// Send a query to MSSQL
$sql = 'SELECT [name], [age] FROM [php].[dbo].[persons]';
$query = mssql_query($sql, $link);
// Iterate through returned records
do {
    while ($row = mssql_fetch_row($query)) {
        // Handle record ...
    }
} while (mssql_next_result($query));
// Clean up
mssql_free_result($query);
mssql_close($link);
?></example>
<example_result></example_result>
</object>

<object id=1037> 
<name>ldap_set_rebind_proc</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Установить функцию обратного вызова для повторного связывания при ссылочном поиске</short-description>
<description>bool ldap_set_rebind_proc ( resource $link , callback $callback ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1038> 
<name>ibase_blob_cancel</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Cancel creating blob</short-description>
<description>bool ibase_blob_cancel ( resource $blob_handle ) 
 This function will discard a BLOB if it has not yet been closed by ibase_blob_close(). </description>
<parameters>blob_handle - A BLOB handle opened with ibase_blob_create(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1039> 
<name>ibase_num_fields</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get the number of fields in a result set</short-description>
<description>int ibase_num_fields ( resource $result_id ) 
 Get the number of fields in a result set. </description>
<parameters>result_id - An InterBase result identifier. </parameters>
<output>Returns the number of fields as an integer. </output>
<errors></errors>
<example><?php
$rs = ibase_query("SELECT * FROM tablename");
$coln = ibase_num_fields($rs);
for ($i = 0; $i < $coln; $i++) {
    $col_info = ibase_field_info($rs, $i);
    echo "name: " . $col_info['name'] . "\n";
    echo "alias: " . $col_info['alias'] . "\n";
    echo "relation: " . $col_info['relation'] . "\n";
    echo "length: " . $col_info['length'] . "\n";
    echo "type: " . $col_info['type'] . "\n";
}?></example>
<example_result></example_result>
</object>

<object id=1040> 
<name>ifx_update_char</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Updates the content of the char object</short-description>
<description>bool ifx_update_char ( int $bid , string $content ) 
 Updates the content of the char object for the given char object bid. </description>
<parameters>bid - A char object identifier. 
content - The new data, as a string. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1041> 
<name>ifxus_close_slob</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Deletes the slob object</short-description>
<description>bool ifxus_close_slob ( int $bid ) 
 Deletes the slob object on the given slob object-id bid. </description>
<parameters>bid - An existing slob id. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1042> 
<name>tidy_config_count</name>
<versions>(PHP 5, PECL tidy >= 0.5.2)</versions>
<short-description>Возвращает число ошибок конфигурации Tidy, встретившихся при рассмотрении документа</short-description>
<description>int tidy_config_count ( tidy $object ) 
 Возвращает число ошибок в конфигурации заданного объекта tidy. </description>
<parameters>object - Объект Tidy. </parameters>
<output>Возвращает число ошибок. </output>
<errors></errors>
<example><?php
$html = '<p>test</I>';
$config = array('doctype' => 'bogus');
$tidy = tidy_parse_string($html, $config);
/* Выведет 1, потому как 'bogus' некорректное объявление типа документа */
echo tidy_config_count($tidy);
?></example>
<example_result></example_result>
</object>

<object id=1043> 
<name>msession_set_data</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)</versions>
<short-description>Set data session unstructured data</short-description>
<description>bool msession_set_data ( string $session , string $value ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1044> 
<name>hw_GetChildDocColl</name>
<versions>(PHP 4)</versions>
<short-description>Object ids of child documents of collection</short-description>
<description>array hw_getchilddoccoll ( int $connection , int $objectID ) 
 Returns array of object ids for child documents of a collection. </description>
<parameters>connection - The connection identifier. 
objectID - The object identifier. </parameters>
<output>Returns an array of object ids. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1045> 
<name>array_flip</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Меняет местами ключи с их значениями в массиве</short-description>
<description>array array_flip ( array $trans ) 
 Функция array_flip() возвращает array наоборот, то есть ключи массива trans становятся значениями, а значения массива trans становятся ключами. 
 Обратите внимание, что значения массива trans должны быть корректными ключами, то есть они должны иметь тип integer или string. Если значение имеет неверный тип, будет выдано предупреждение и данная пара ключ/значение не будет обработана. 
 Если значение встречается несколько раз, для обработки будет использоваться последний встреченный ключ, а все остальные будут потеряны. </description>
<parameters>trans - Массив переворачиваемых пар ключ/значение. </parameters>
<output>Возвращает перевернутый массив в случае успеха, или NULL в случае ошибки. </output>
<errors></errors>
<example><?php
$trans = array_flip($trans);
$original = strtr($str, $trans);
?></example>
<example_result>
 
Array
(
    [1] => b
    [2] => c
)
</example_result>
</object>

<object id=1046> 
<name>read_exif_data</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Псевдоним exif_read_data()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1047> 
<name>udm_alloc_agent</name>
<versions>(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)</versions>
<short-description>Allocate mnoGoSearch session</short-description>
<description>resource udm_alloc_agent ( string $dbaddr [, string $dbmode ] ) 
 Allocate a mnoGoSearch session. </description>
<parameters>dbaddr - dbaddr - URL-style database description, with options (type, host, database name, port, user and password) to connect to SQL database. Do not matter for built-in text files support. Format for dbaddr: DBType:[//[DBUser[:DBPass]@]DBHost[:DBPort]]/DBName/. Currently supported DBType values are: mysql, pgsql, msql, solid, mssql, oracle, and ibase. Actually, it does not matter for native libraries support, but ODBC users should specify one of the supported values. If your database type is not supported, you may use unknown instead. 
dbmode - dbmode - You may select the SQL database mode of words storage. Possible values of dbmode are: single, multi, crc, or crc-multi. When single is specified, all words are stored in the same table. If multi is selected, words will be located in different tables depending of their lengths. "multi" mode is usually faster, but requires more tables in the database. If "crc" mode is selected, mnoGoSearch will store 32 bit integer word IDs calculated by CRC32 algorithm instead of words. This mode requires less disk space and it is faster comparing with "single" and "multi" modes. crc-multi uses the same storage structure with the "crc" mode, but also stores words in different tables depending on words lengths like in "multi" mode. </parameters>
<output>Returns a mnogosearch agent identifier on success, FALSE on failure. This function creates a session with database parameters. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1048> 
<name>ncurses_resetty</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Restores saved terminal state </short-description>
<description>bool ncurses_resetty ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Always returns FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1049> 
<name>openssl_pkcs12_export</name>
<versions>(PHP 5 >= 5.2.2)</versions>
<short-description>Exports a PKCS#12 Compatible Certificate Store File to variable.</short-description>
<description>bool openssl_pkcs12_export ( mixed $x509 , string &$out , mixed $priv_key , string $pass [, array $args ] ) 
 openssl_pkcs12_export() stores x509 into a string named by out in a PKCS#12 file format. </description>
<parameters>x509 - Для списка корректных значений смотрите Параметры ключей/сертификатов. 
out - On success, this will hold the PKCS#12. 
priv_key - Private key component of PKCS#12 file. 
pass - Encryption password for unlocking the PKCS#12 file. 
args - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1050> 
<name>snmp_get_valueretrieval</name>
<versions>(PHP 4 >= 4.3.3, PHP 5)</versions>
<short-description>Return the method how the SNMP values will be returned </short-description>
<description>int snmp_get_valueretrieval ( void ) </description>
<parameters></parameters>
<output>OR-ed combitantion of constants ( SNMP_VALUE_LIBRARY or SNMP_VALUE_PLAIN ) with possible SNMP_VALUE_OBJECT set. </output>
<errors></errors>
<example><?php
 $ret = snmpget('localhost', 'public', 'IF-MIB::ifName.1');
 if (snmp_get_valueretrieval() & SNMP_VALUE_OBJECT) {
   echo $ret->value;
 } else {
   echo $ret;
 }
?></example>
<example_result></example_result>
</object>

<object id=1051> 
<name>mb_convert_case</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Производит смену регистра символов в строке </short-description>
<description>string mb_convert_case ( string $str , int $mode = MB_CASE_UPPER [, string $encoding = mb_internal_encoding() ] ) 
 Производит смену регистра символов в строке string в соответствии с режимом mode. </description>
<parameters>str - Строка (string) для преобразования. 
mode - Режим смены регистра. Это может быть одна из констант MB_CASE_UPPER, MB_CASE_LOWER или MB_CASE_TITLE. 
encoding - Параметр encodingпредставляет собой символьную кодировку. Если он опущен, вместо него будет использовано значение внутренней кодировки.</parameters>
<output>Строка string преобразованная в соответствии с режимом mode. </output>
<errors></errors>
<example><?php
$str = "у мэри был маленький ягненок и она его очень любила";
$str = mb_convert_case($str, MB_CASE_UPPER, "UTF-8");
echo $str; // Выведет У МЭРИ БЫЛ МАЛЕНЬКИЙ ЯГНЕНОК И ОНА ЕГО ОЧЕНЬ ЛЮБИЛА
$str = mb_convert_case($str, MB_CASE_TITLE, "UTF-8");
echo $str; // Выведет У Мэри Был Маленький Ягненок И Она Его Очень Любила
?></example>
<example_result></example_result>
</object>

<object id=1052> 
<name>fdf_set_submit_form_action</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Sets a submit form action of a field</short-description>
<description>bool fdf_set_submit_form_action ( resource $fdf_document , string $fieldname , int $trigger , string $script , int $flags ) 
 Sets a submit form action for the given field. </description>
<parameters>fdf_document - The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string(). 
fieldname - Name of the FDF field, as a string. 
trigger - 
script - 
flags - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1053> 
<name>realpath</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает канонизированный абсолютный путь к файлу</short-description>
<description>string realpath ( string $path ) 
 realpath() раскрывает все символические ссылки, переходы типа &#039;/./&#039;, &#039;/../&#039; и лишние символы &#039;/&#039; в пути path, возвращая канонизированный абсолютный путь к файлу. </description>
<parameters>path - Проверяемый путь. 
 Замечание: 
 Несмотря на то, что путь должен быть указан, переданное значение может быть пустой строкой или NULL. В этих случаях оно будет интерпретировано в качестве текущей директории. </parameters>
<output>В случае успеха возвращает канонизированный абсолютный путь. Результирующий путь не содержит символических ссылок и компонентов наподобие &#039;/./&#039; или &#039;/../&#039;. </output>
<errors></errors>
<example><?php
chdir('/var/www/');
echo realpath('./../../etc/passwd');
?></example>
<example_result>
 
/etc/passwd
</example_result>
</object>

<object id=1054> 
<name>msession_find</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)</versions>
<short-description>Find all sessions with name and value</short-description>
<description>array msession_find ( string $name , string $value ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1055> 
<name>fdf_set_file</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Set PDF document to display FDF data in</short-description>
<description>bool fdf_set_file ( resource $fdf_document , string $url [, string $target_frame ] ) 
 Selects a different PDF document to display the form results in then the form it originated from. </description>
<parameters>fdf_document - The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string(). 
url - Should be given as an absolute URL. 
target_frame - Use this parameter to specify the frame in which the document will be displayed. You can also set the default value for this parameter using fdf_set_target_frame(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
  /* set content type for Adobe FDF */
  fdf_header();
  /* start new fdf */
  $fdf = fdf_create();
  /* set field "foo" to value "bar" */
  fdf_set_value($fdf, "foo", "bar");
  /* tell client to display FDF data using "fdf_form.pdf" */
  fdf_set_file($fdf, "http://www.example.com/fdf_form.pdf");
  /* output fdf */
  fdf_save($fdf);
  /* clean up */
  fdf_close($fdf);
?></example>
<example_result></example_result>
</object>

<object id=1056> 
<name>set_error_handler</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Задает определенный пользователем обработчик ошибок </short-description>
<description>mixed set_error_handler ( callback $error_handler [, int $error_types = E_ALL | E_STRICT ] ) 
 Задает пользовательскую функцию (error_handler), как обработчик ошибок в скрипте. 
 Эта функция используется для определения собственного обработчика ошибок времени выполнения скрипта. Например, если требуется очистить данные/файлы, когда произошла критическая ошибка, или если нужно переключить тип ошибки, исходя из каких-то условий (используя функцию trigger_error()). 
 Важно помнить, что стандартный обработчик ошибок PHP не будет обрабатывать никакие типы ошибок, определенные в error_types, пока callback-функция не вернет FALSE. Пользовательский обработчик будет вызываться при любой ошибке, независимо от настроек, заданных функцией error_reporting(). Однако, вы можете прочитать текущее значение error_reporting и задать в обработчике соответствующие действия. В частности, это значение будет равно 0, если выражение, вызвавшее ошибку, начинается с оператора контроля ошибок @. 
 Также важно помнить, что на совести обработчика лежит вызов функции die() в случае необходимости. Если происходит возврат их обработчика ошибок, управление передается следующему выражению, стоящему за тем, что вызвало ошибку. 
 Ошибки следующих типов не могут быть обработаны пользователем: E_ERROR, E_PARSE, E_CORE_ERROR, E_CORE_WARNING, E_COMPILE_ERROR, E_COMPILE_WARNING, и большинство E_STRICT ошибок, произошедших в файле, где вызвана функция set_error_handler(). 
 Если ошибки возникают до запуска скрипта (например, пока файл загружается), пользовательский обработчик не будет вызываться, если на этот момент он еще не зарегистрирован. </description>
<parameters>error_handler - Пользовательская функция должна принимать два аргумента: код ошибки и строку с ее описанием. Также есть три необязательных аргумента: имя файла, в котором произошла ошибка; номер строки, в которой произошла ошибка; контекст, в котором произошла ошибка (массив, указывающий на действующую таблицу символов в точке, где произошла ошибка). Функция может быть представлена в таком виде: </parameters>
<output>Возвращает строку содержащую предыдущий заданный обработчик ошибок (если есть). Если на данный момент используется встроенный обработчик, функция вернет NULL. В случае ошибки в работе самой функции, например, недопустимый обратный вызов, функция также вернет NULL. Если предыдущий определенный обработчик является методом класса, функция вернет массив содержащий имя класса и имя метода. </output>
<errors></errors>
<example>
 </example>
<example_result>
 
vector a
Array
(
    [0] => 2
    [1] => 3
    [2] => foo
    [3] => 5.5
    [4] => 43.3
    [5] => 21.11
)
----
vector b - a notice (b = log(PI) * a)
<b>My NOTICE</b> [1024]  Значение на позиции 2 не является числом, будет использован 0 (ноль)<br />
Array
(
    [0] => 2.2894597716988
    [1] => 3.4341896575482
    [2] => 0
    [3] => 6.2960143721717
    [4] => 49.566804057279
    [5] => 24.165247890281
)
----
vector c - a warning
<b>My WARNING</b> [512] Некорректный входной вектор, пропущен массив значений<br />
NULL
----
vector d - fatal error
<b>My ERROR</b> [256] log(x) for x <= 0 is undefined, you used: scale = -2.5<br />
  Фатальная ошибка в строке 35 файла trigger_error.php, PHP 5.2.1 (FreeBSD)<br />
Завершение работы...<br />
</example_result>
</object>

<object id=1057> 
<name></name>
<versions>(PHP 4, PHP5)</versions>
<short-description></short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1058> 
<name>grapheme_strstr</name>
<versions>(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)</versions>
<short-description>Returns part of haystack string from the first occurrence of needle to the end of haystack.</short-description>
<description>string grapheme_strstr ( string $haystack , string $needle [, bool $before_needle = false ] ) 
 Returns part of haystack string from the first occurrence of needle to the end of haystack. </description>
<parameters>haystack - The input string. Must be valid UTF-8. 
needle - The string to look for. Must be valid UTF-8. 
before_needle - If TRUE, grapheme_strstr() returns the part of the haystack before the first occurrence of the needle. </parameters>
<output>Returns the portion of string, or FALSE if needle is not found. </output>
<errors></errors>
<example><?php
$char_a_ring_nfd = "a\xCC\x8A";  // 'LATIN SMALL LETTER A WITH RING ABOVE' (U+00E5) normalization form "D"
$char_o_diaeresis_nfd = "o\xCC\x88"; // 'LATIN SMALL LETTER O WITH DIAERESIS' (U+00F6) normalization form "D"
print urlencode(grapheme_stristr( $char_a_ring_nfd . $char_o_diaeresis_nfd . $char_a_ring_nfd, $char_o_diaeresis_nfd));
?></example>
<example_result>
 
o%CC%88a%CC%8A
</example_result>
</object>

<object id=1059> 
<name>ftp_chmod</name>
<versions>(PHP 5)</versions>
<short-description>Устанавливает права доступа к файлу</short-description>
<description>int ftp_chmod ( resource $ftp_stream , int $mode , string $filename ) 
 Устанавливает права доступа к указанному удалённому файлу в значение mode. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером 
mode - Новые права доступа, указанные в виде восьмеричного значения. 
filename - Удалённый файл. </parameters>
<output>Возвращает новые права доступа к файлу в случае успеха или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$file = 'public_html/index.php';
// установка соединения
$conn_id = ftp_connect($ftp_server);
// вход с именем пользователя и паролем
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass); 
// попытка изменить права доступа к файлу $file на 644
if (ftp_chmod($conn_id, 0644, $file) !== false) {
 echo "Права доступа к файлу $file успешно изменены на 644\n";
} else {
 echo "Не удалось изменить права доступа к файлу $file\n";
}
// закрытие соединения
ftp_close($conn_id);
?></example>
<example_result></example_result>
</object>

<object id=1060> 
<name>imap_mail</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Send an email message</short-description>
<description>bool imap_mail ( string $to , string $subject , string $message [, string $additional_headers = NULL [, string $cc = NULL [, string $bcc = NULL [, string $rpath = NULL ]]]] ) 
 This function allows sending of emails with correct handling of Cc and Bcc receivers. 
 The parameters to, cc and bcc are all strings and are all parsed as &raquo; RFC822 address lists. </description>
<parameters>to - The receiver 
subject - The mail subject 
message - The mail body 
additional_headers - As string with additional headers to be set on the mail 
cc - 
bcc - The receivers specified in bcc will get the mail, but are excluded from the headers. 
rpath - Use this parameter to specify return path upon mail delivery failure. This is useful when using PHP as a mail client for multiple users. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1061> 
<name>pg_lo_create</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Создает большой объект</short-description>
<description>int pg_lo_create ([ resource $connection [, mixed $object_id ]] ) int pg_lo_create ( mixed $object_id )</description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). 
object_id - Если задан аргумент object_id, функция попытается создать объект с этим идентификатором, в противном случае будет использован свободный идентификатор, назначенный сервером. Этот аргумент появился в PHP 5.3 и основан на функционале, впервые реализованном в PostgreSQL 8.1. </parameters>
<output>OID большого объекта, либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
   $database = pg_connect("dbname=jacarta");
   pg_query($database, "begin");
   $oid = pg_lo_create($database);
   echo "$oid\n";
   $handle = pg_lo_open($database, $oid, "w");
   echo "$handle\n";
   pg_lo_write($handle, "large object data");
   pg_lo_close($handle);
   pg_query($database, "commit");
?></example>
<example_result></example_result>
</object>

<object id=1062> 
<name>ldap_get_values_len</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получить все бинарные значения из записи результата</short-description>
<description>array ldap_get_values_len ( resource $link_identifier , resource $result_entry_identifier , string $attribute ) 
 Читает все значения атрибута в записи результата. 
 Эта функция используется точно также как и ldap_get_values() за исключением того, что обрабатывает двоичные данные, а не строковые. </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
result_entry_identifier - 
attribute - </parameters>
<output>Возвращает массив значений для атрибута в случае успеха и FALSE в случае ошибки. Отдельные значения доступны по целочисленному индексу в массиве. Первый индекс 0. Число значений может быть найдено по индексу "count" в результирующем массиве. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1063> 
<name>pg_result_error</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает сообщение об ошибке, связанной с запросом результата </short-description>
<description>string pg_result_error ( resource $result ) 
 pg_result_error() возвращает сообщение о любой ошибке, связанной с ресурсом result. Таким образом, возможно получить более верное сообщение об ошибке, чем при использовании pg_last_error(). 
 Функция pg_result_error_field() может дать гораздо более детальную информацию об ошибке, чем pg_result_error(). 
 Так как pg_query() возвращает FALSE в случае ошибки запроса, необходимо использовать pg_send_query() и pg_get_result() для получения дескриптора результата. </description>
<parameters>result - Ресурс результата запроса PostgreSQL, возвращенный pg_query(), pg_query_params() или pg_execute() (и прочими). </parameters>
<output>Возвращает строку (string) если есть ошибка, связанная с параметром result, иначе FALSE. </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Could not connect");
  if (!pg_connection_busy($dbconn)) {
      pg_send_query($dbconn, "select * from doesnotexist;");
  }
  
  $res1 = pg_get_result($dbconn);
  echo pg_result_error($res1);
?></example>
<example_result></example_result>
</object>

<object id=1064> 
<name>base64_encode</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Kодирует данные алгоритмом MIME base64</short-description>
<description>string base64_encode ( string $data ) 
 Кодирует data алгоритмом base64. 
 Это кодирование разработано для корректной передачи бинарных данных по протоколам, не поддерживающим 8-битную передачу, например для отправки бинарных файлов в теле письма. 
 Данные кодированные алгоритмом Base64 увеличиваются в объеме на 33% по сравнению с оригинальными данными. </description>
<parameters>data - Данные для кодирования. </parameters>
<output>Кодированные данные, как строку или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$str = 'Строка в кодировке UTF-8';
echo base64_encode($str);
?></example>
<example_result>
 
0KHRgtGA0L7QutCwINCyINC60L7QtNC40YDQvtCy0LrQtSBVVEYtOA==
</example_result>
</object>

<object id=1065> 
<name>hw_New_Document</name>
<versions>(PHP 4)</versions>
<short-description>Create new document</short-description>
<description>int hw_new_document ( string $object_record , string $document_data , int $document_size ) 
 Returns a new Hyperwave document with the given document data and object record. 
 This function does not insert the document into the Hyperwave server. </description>
<parameters>object_record - The object record. 
document_data - The document data. 
document_size - The document size. Must be the length of document_data. </parameters>
<output>Returns the new Hyperwave document. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1066> 
<name>mt_rand</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Генерирует случайное значение методом mt</short-description>
<description>int mt_rand ( void ) int mt_rand ( int $min , int $max )</description>
<parameters>min - Необязательный параметр: минимальное значение случайного числа (по умолчанию: 0) 
max - Необязательный параметр: максимальное значение случайного числа (по умолчанию: mt_getrandmax()) </parameters>
<output>Случайное целое значение между min (или 0) и max (или mt_getrandmax(), включительно) </output>
<errors></errors>
<example><?php
echo mt_rand() . "\n";
echo mt_rand() . "\n";
echo mt_rand(5, 15);
?></example>
<example_result>
 
1604716014
1478613278
6
</example_result>
</object>

<object id=1067> 
<name>pcntl_setpriority</name>
<versions>(PHP 5)</versions>
<short-description>Change the priority of any process</short-description>
<description>bool pcntl_setpriority ( int $priority [, int $pid = getmypid() [, int $process_identifier = PRIO_PROCESS ]] ) 
 pcntl_setpriority() sets the priority of pid. </description>
<parameters>priority - priority is generally a value in the range -20 to 20. The default priority is 0 while a lower numerical value causes more favorable scheduling. Because priority levels can differ between system types and kernel versions, please see your system&#039;s setpriority(2) man page for specific details. 
pid - If not specified, the pid of the current process is used. 
process_identifier - One of PRIO_PGRP, PRIO_USER or PRIO_PROCESS. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1068> 
<name>ucfirst</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Преобразует первый символ строки в верхний регистр</short-description>
<description>string ucfirst ( string $str ) 
 Возвращает строку str, в которой первый символ переведен в верхний регистр, если этот символ является буквой. 
 Принадлежность того или иного символа к буквенным определяется с учетом текущей локали. Это означает, что, например, в используемой по умолчанию локали "C", символ ä не будет преобразован. </description>
<parameters>str - Входная строка. </parameters>
<output>Возвращает результирующую строку. </output>
<errors></errors>
<example><?php
$foo = 'hello world!';
$foo = ucfirst($foo);             // Hello world!
$bar = 'HELLO WORLD!';
$bar = ucfirst($bar);             // HELLO WORLD!
$bar = ucfirst(strtolower($bar)); // Hello world!
?></example>
<example_result></example_result>
</object>

<object id=1069> 
<name>closedir</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Освобождает дескриптор каталога</short-description>
<description>void closedir ([ resource $dir_handle ] ) 
 Закрывает поток, связанный с каталогом и переданный в качестве параметра dir_handle. Перед использованием данной функции, поток должен быть открыт с помощью функции opendir(). </description>
<parameters>dir_handle - Дескриптор каталога (resource) предварительно открытый с помощью opendir(). Если дескриптор каталога не указан, используется последний дескриптор, открытый функцией opendir(). </parameters>
<output></output>
<errors></errors>
<example><?php
$dir = "/etc/php5/";
// Открываем известную директорию, читаем ее в переменную и закрываем
if (is_dir($dir)) {
    if ($dh = opendir($dir)) {
        $directory = readdir($dh);
        closedir($dh);
    }
}?></example>
<example_result></example_result>
</object>

<object id=1070> 
<name>m_monitor</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Perform communication with MCVE (send/receive data) Non-blocking</short-description>
<description>int m_monitor ( resource $conn ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().</parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1071> 
<name>ncurses_attron</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Turn on the given attributes</short-description>
<description>int ncurses_attron ( int $attributes ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>attributes - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1072> 
<name>pg_result_seek</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Смещает указатель на строку выборки в ресурсе результата запроса </short-description>
<description>bool pg_result_seek ( resource $result , int $offset ) 
 pg_result_seek() устанавливает смещение внутреннего указателя на строку результата запроса. </description>
<parameters>result - Ресурс результата запроса PostgreSQL, возвращаемый функциями pg_query(), pg_query_params() или pg_execute() (в числе прочих). 
offset - Количество строк, на которое требуется сместить внутренний указатель ресурса result. Строки нумеруются с нуля. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Подключение к базе данных
$conn = pg_pconnect("dbname=publisher");
// Выполнение запроса
$result = pg_query($conn, "SELECT author, email FROM authors");
// Перемещаемся сразу на третью строку 
// (допускаем, что в результате есть хотя бы три строки)
pg_result_seek($result, 2);
// Выбираем третью строку из результата
$row = pg_fetch_row($result);
 
?></example>
<example_result></example_result>
</object>

<object id=1073> 
<name>msql_query</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Send mSQL query</short-description>
<description>resource msql_query ( string $query [, resource $link_identifier ] ) 
 msql_query() sends a query to the currently active database on the server that&#039;s associated with the specified link identifier. </description>
<parameters>query - The SQL query. 
link_identifier - Соединение mSQL.Если не указан, используется последнее соединение, открытое msql_connect().Если такое соединение не было найдено, функция попытается установить новое, как если бы была вызвана функцияmsql_connect(), и использовать его.</parameters>
<output>Returns a positive mSQL query identifier on success, or FALSE on error. </output>
<errors></errors>
<example><?php 
$link = msql_connect("dbserver")
   or die("unable to connect to msql server: " . msql_error());
msql_select_db("db", $link)
   or die("unable to select database 'db': " . msql_error());
$result = msql_query("SELECT * FROM table WHERE id=1", $link);
if (!$result) {
   die("query failed: " . msql_error());
}
while ($row = msql_fetch_array($result)) {
    echo $row["id"];
}?></example>
<example_result></example_result>
</object>

<object id=1074> 
<name>imagefilledpolygon</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Draw a filled polygon</short-description>
<description>bool imagefilledpolygon ( resource $image , array $points , int $num_points , int $color ) 
 imagefilledpolygon() creates a filled polygon in the given image. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
points - An array containing the x and y coordinates of the polygons vertices consecutively. 
num_points - Total number of vertices, which must be at least 3. 
color - A color identifier created with imagecolorallocate(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// set up array of points for polygon
$values = array(
            40,  50,  // Point 1 (x, y)
            20,  240, // Point 2 (x, y)
            60,  60,  // Point 3 (x, y)
            240, 20,  // Point 4 (x, y)
            50,  40,  // Point 5 (x, y)
            10,  10   // Point 6 (x, y)
            );
// create image
$image = imagecreatetruecolor(250, 250);
// allocate colors
$bg   = imagecolorallocate($image, 0, 0, 0);
$blue = imagecolorallocate($image, 0, 0, 255);
// fill the background
imagefilledrectangle($image, 0, 0, 249, 249, $bg);
// draw a polygon
imagefilledpolygon($image, $values, 6, $blue);
// flush image
header('Content-type: image/png');
imagepng($image);
imagedestroy($image);
?></example>
<example_result></example_result>
</object>

<object id=1075> 
<name>mb_substitute_character</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Set/Get substitution character</short-description>
<description>mixed mb_substitute_character ([ mixed $substrchar ] ) 
 Specifies a substitution character when input character encoding is invalid or character code does not exist in output character encoding. Invalid characters may be substituted NULL (no output), string or integer value (Unicode character code value). 
 This setting affects mb_convert_encoding(), mb_convert_variables(), mb_output_handler(), and mb_send_mail(). </description>
<parameters>substrchar - Specify the Unicode value as an integer, or as one of the following strings: "none" : no output "long" : Output character code value (Example: U+3000, JIS+7E7E) "entity" : Output character entity (Example: Ȁ) </parameters>
<output>If substchar is set, it returns TRUE for success, otherwise returns FALSE. If substchar is not set, it returns the Unicode value, or "none" or "long". </output>
<errors></errors>
<example><?php
/* Set with Unicode U+3013 (GETA MARK) */
mb_substitute_character(0x3013);
/* Set hex format */
mb_substitute_character("long");
/* Display current setting */
echo mb_substitute_character();
?></example>
<example_result></example_result>
</object>

<object id=1076> 
<name>fam_next_event</name>
<versions>(PHP 5 <= 5.0.5)</versions>
<short-description>Get next pending FAM event</short-description>
<description>array fam_next_event ( resource $fam ) 
 Returns the next pending FAM event. 
 The function will block until an event is available which can be checked for using fam_pending(). </description>
<parameters>fam - A resource representing a connection to the FAM service returned by fam_open() </parameters>
<output>Returns an array that contains a FAM event code in the &#039;code&#039; element, the path of the file this event applies to in the &#039;filename&#039; element and optionally a hostname in the &#039;hostname&#039; element. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1077> 
<name>imap_getmailboxes</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Read the list of mailboxes, returning detailed information on each one</short-description>
<description>array imap_getmailboxes ( resource $imap_stream , string $ref , string $pattern ) 
 Gets information on the mailboxes. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
ref - ref should normally be just the server specification as described in imap_open() 
pattern - Определяет начало поиска в иерархии почтовых ящиков.</parameters>
<output>Returns an array of objects containing mailbox information. Each object has the attributes name, specifying the full name of the mailbox; delimiter, which is the hierarchy delimiter for the part of the hierarchy this mailbox is in; and attributes. Attributes is a bitmask that can be tested against: 
 LATT_NOINFERIORS - This mailbox contains, and may not contain any "children" (there are no mailboxes below this one). Calling imap_createmailbox() will not work on this mailbox. </output>
<errors></errors>
<example><?php
$mbox = imap_open("{imap.example.org}", "username", "password", OP_HALFOPEN)
      or die("can't connect: " . imap_last_error());
$list = imap_getmailboxes($mbox, "{imap.example.org}", "*");
if (is_array($list)) {
    foreach ($list as $key => $val) {
        echo "($key) ";
        echo imap_utf7_decode($val->name) . ",";
        echo "'" . $val->delimiter . "',";
        echo $val->attributes . "<br />\n";
    }
} else {
    echo "imap_getmailboxes failed: " . imap_last_error() . "\n";
}
imap_close($mbox);
?></example>
<example_result></example_result>
</object>

<object id=1078> 
<name>array_change_key_case</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Меняет регистр ключей в массиве</short-description>
<description>array array_change_key_case ( array $input [, int $case = CASE_LOWER ] ) 
 Возвращает массив input, все ключи которого преобразованы в нижний или верхний регистр. Числовые ключи останутся нетронутыми. </description>
<parameters>input - Обрабатываемый массив 
case - Либо CASE_UPPER, либо CASE_LOWER (используется по умолчанию) </parameters>
<output>Возвращает массив с ключами, преобразованными в верхний или нижний регистр, либо FALSE, если input не является массивом. </output>
<errors>Генерирует ошибку уровня E_WARNING, если input не является массивом. </errors>
<example><?php
$input_array = array("FirSt" => 1, "SecOnd" => 4);
print_r(array_change_key_case($input_array, CASE_UPPER));
?></example>
<example_result>
 
Array
(
    [FIRST] => 1
    [SECOND] => 4
)
</example_result>
</object>

<object id=1079> 
<name>variant_cat</name>
<versions>(PHP 5)</versions>
<short-description>concatenates two variant values together and returns the result</short-description>
<description>mixed variant_cat ( mixed $left , mixed $right ) 
 Concatenates left with right and returns the result. 
 This function is notionally equivalent to $left . $right. </description>
<parameters>left - The left operand. 
right - The right operand. </parameters>
<output>Returns the result of the concatenation. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1080> 
<name>yp_get_default_domain</name>
<versions>(PHP 4, PHP 5 <= 5.0.5)</versions>
<short-description>Fetches the machine&#039;s default NIS domain</short-description>
<description>string yp_get_default_domain ( void ) 
 Returns the default domain of the node. Can be used as the domain parameter for successive NIS calls. 
 A NIS domain can be described a group of NIS maps. Every host that needs to look up information binds itself to a certain domain. Refer to the documents mentioned at the beginning for more detailed information. </description>
<parameters></parameters>
<output>Returns the default domain of the node or FALSE. Can be used as the domain parameter for successive NIS calls. </output>
<errors></errors>
<example><?php
$domain = yp_get_default_domain();
echo "Default NIS domain is: " . $domain;
?></example>
<example_result></example_result>
</object>

<object id=1081> 
<name>cyrus_connect</name>
<versions>(PHP 4 >= 4.1.0, PECL cyrus 1.0)</versions>
<short-description>Установить соединение с сервером Cyrus IMAP</short-description>
<description>resource cyrus_connect ([ string $host [, string $port [, int $flags ]]] ) 
 Устанавливает соединение с сервером Cyrus IMAP. </description>
<parameters>host - Имя хоста Cyrus IMAP сервера. 
port - Номер порта. 
flags - </parameters>
<output>Возвращает дескриптор соединения в случае успеха или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1082> 
<name>pg_lo_unlink</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Удаление большого объекта</short-description>
<description>bool pg_lo_unlink ( resource $connection , int $oid ) 
 pg_lo_unlink() удаляет большой объект с идентификатором oid. 
 Операции с использованием интерфейса больших объектов необходимо заключать в блок транзакции. 
 Замечание: 
 Прежнее название функции: pg_lounlink(). </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). 
oid - OID большого объекта в базе данных. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
   // OID удаляемого объекта
   $doc_oid = 189762345;
   $database = pg_connect("dbname=jacarta");
   pg_query($database, "begin");
   pg_lo_unlink($database, $doc_oid);
   pg_query($database, "commit");
?></example>
<example_result></example_result>
</object>

<object id=1083> 
<name>strrev</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Переворачивает строку задом наперед</short-description>
<description>string strrev ( string $string ) 
 Возвращает строку string, перевернутую задом наперед. </description>
<parameters>string - Переворачиваемая строка. </parameters>
<output>Возвращает перевернутую строку. </output>
<errors></errors>
<example><?php
echo strrev("Hello world!"); // выводит "!dlrow olleH"
?></example>
<example_result></example_result>
</object>

<object id=1084> 
<name>constant</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Возвращает значение константы</short-description>
<description>mixed constant ( string $name ) 
 Возвращает значение константы, указанной в параметре name. 
 Функция constant() полезна, если вам необходимо получить значение константы, но неизвестно её имя. Например, если оно хранится в переменной или возвращается функцией. 
 Данная функция также работает с константами классов. </description>
<parameters>name - Имя константы. </parameters>
<output>Возвращает значение константы либо NULL, если константа не определена. </output>
<errors>Если константа не определена, то генерируется исключение уровня E_WARNING. </errors>
<example><?php
define("MAXSIZE", 100);
echo MAXSIZE;
echo constant("MAXSIZE"); // результат аналогичен предыдущему выводу

interface bar {
    const test = 'foobar!';
}
class foo {
    const test = 'foobar!';
}
$const = 'test';
var_dump(constant('bar::'. $const)); // string(7) "foobar!"
var_dump(constant('foo::'. $const)); // string(7) "foobar!"
?></example>
<example_result></example_result>
</object>

<object id=1085> 
<name>hw_stat</name>
<versions>(PHP 4)</versions>
<short-description>Returns status string</short-description>
<description>string hw_stat ( int $link ) 
 Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1086> 
<name>call_user_method</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Вызывает метод указанного объекта [устаревшее]</short-description>
<description>mixed call_user_method ( string $method_name , object &$obj [, mixed $parameter [, mixed $... ]] ) Внимание 
 Функция call_user_method_array() устарела с выходом 4.1.0. </description>
<parameters>method_name - Имя вызываемого метода. 
obj - Объект (object), содержащий вызываемый метод method_name. 
parameter ... - Необязательные параметры. </parameters>
<output></output>
<errors></errors>
<example><?php
call_user_func(array($obj, $method_name), $parameter /* , ... */);
call_user_func(array(&$obj, $method_name), $parameter /* , ... */); // PHP 4
?></example>
<example_result></example_result>
</object>

<object id=1087> 
<name>dba_sync</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Synchronize database</short-description>
<description>bool dba_sync ( resource $handle ) 
 dba_sync() synchronizes the database. This will probably trigger a physical write to the disk, if supported. </description>
<parameters>handle - The database handler, returned by dba_open() or dba_popen(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1088> 
<name>pg_query_params</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Посылает параметризованный запрос на сервер, параметры передаются отдельно от текста SQL запроса </short-description>
<description>resource pg_query_params ([ resource $connection ], string $query , array $params ) 
 Посылает параметризованный запрос на сервер и ждет результат. Параметры передаются отдельно от строки запроса. 
 pg_query_params() подобна функции pg_query(), но предоставляет дополнительный функционал: параметры запроса можно передавать отдельно от строки запроса. pg_query_params() поддерживается на соединениях с серверами PostgreSQL версий 7.4 и выше. Функция не будет работать с серверами ранних версий. 
 Если используются параметры params, они заменяют псевдопеременные $1, $2 и т.д. в строке запроса query. Значение NULL в массиве параметров будет означать SQL NULL в запросе. 
 Главное преимущество pg_query_params() перед pg_query() заключается в том, что значения параметров могут передаваться отдельно от строки запроса query. Это дает возможность избежать утомительную и подверженную ошибкам процедуру экранирования спецсимволов и заключения значений в кавычки. Однако, в отличие от pg_query(), эта функция поддерживает только один SQL запрос в передаваемой строке. (Он может содержать точку с запятой, но не более одной непустой SQL команды.) </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). 
query - Параметризованный SQL запрос. Должен содержать только одно выражение (несколько выражений разделенных точкой с запятой не поддерживаются). Если в запрос будут передаваться параметры, то они заменят псевдопеременные $1, $2 и т.д. 
params - Массив значений параметров запроса для замены псевдопеременных $1, $2 и т.д. в исходной строке запроса. Количество элементов массива должно точно совпадать с количеством псевдопеременных. </parameters>
<output>Ресурс результата запроса или FALSE в случае возникновения ошибки.</output>
<errors></errors>
<example><?php
// Подключение к базе данных "mary"
$dbconn = pg_connect("dbname=mary");
// Найдем все магазины с названием "Joe's Widgets". Стоит отметить, что нет необходимости экранировать 
// спецсимволы в строке "Joe's Widgets"
$result = pg_query_params($dbconn, 'SELECT * FROM shops WHERE name = $1', array("Joe's Widgets"));
// Для сравнения то же самое, используя функцию pg_query
$str = pg_escape_string("Joe's Widgets");
$result = pg_query($dbconn, "SELECT * FROM shops WHERE name = '{$str}'");
?></example>
<example_result></example_result>
</object>

<object id=1089> 
<name>ibase_errcode</name>
<versions>(PHP 5)</versions>
<short-description>Return an error code</short-description>
<description>int ibase_errcode ( void ) 
 Returns the error code that resulted from the most recent InterBase function call. </description>
<parameters></parameters>
<output>Returns the error code as an integer, or FALSE if no error occurred. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1090> 
<name>PDF_closepath_fill_stroke</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Close, fill and stroke current path</short-description>
<description>bool PDF_closepath_fill_stroke ( resource $p ) 
 Closes the path, fills, and strokes it. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1091> 
<name>sqlite_array_query</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Выполняет запрос к базе данных и возвращает результат в виде массива</short-description>
<description>array sqlite_array_query ( resource $dbhandle , string $query [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]] ) array sqlite_array_query ( string $query , resource $dbhandle [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]] )</description>
<parameters>query - Выполняемый запрос. 
dbhandle - Ресурс базы данных SQLite, возвращенный из sqlite_open() в случае использования процедурного подхода. Этот параметр не требуется при использовании объектно-ориентированного подхода. 
result_type - Необязательный параметрresult_type принимает константу, определяющую, как будетиндексирован возвращаемый массив.При использовании SQLITE_ASSOC будет возвращенассоциативный массив, а при использовании SQLITE_NUM- числовой. SQLITE_BOTH вернет массив как сассоциативными, так и с числовыми индексами.Значением по умолчанию для этой функции являетсяSQLITE_BOTH.
decode_binary - Когда параметрdecode_binary установлен в TRUE (по умолчанию),PHP будет декодировать бинарный код, примененный к данным, как если бы они были закодированы функциейsqlite_escape_string(). Обычно вам следует оставлятьэто значение по умолчанию, если только вы не работаете с базой данныхsqlite, которая была создана в ином приложении.</parameters>
<output>Возвращает массив с полным результирующим набором, иначе возвращается FALSE. </output>
<errors></errors>
<example><?php
$dbhandle = sqlite_open('sqlitedb');
$result = sqlite_array_query($dbhandle, 'SELECT name, email FROM users LIMIT 25', SQLITE_ASSOC);
foreach ($result as $entry) {
    echo 'Имя: ' . $entry['name'] . '  E-mail: ' . $entry['email'];
}?></example>
<example_result></example_result>
</object>

<object id=1092> 
<name>apache_get_modules</name>
<versions>(PHP 4 >= 4.3.2, PHP 5)</versions>
<short-description>Возвращает список загруженных модулей сервера Apache</short-description>
<description>array apache_get_modules ( void ) 
 Возвращает список загруженных модулей сервера Apache. </description>
<parameters></parameters>
<output>Массив загруженных модулей сервера Apache. </output>
<errors></errors>
<example><?php
print_r(apache_get_modules());
?></example>
<example_result>
 
Array
(
    [0] => core
    [1] => http_core
    [2] => mod_so
    [3] => sapi_apache2
    [4] => mod_mime
    [5] => mod_rewrite
)
</example_result>
</object>

<object id=1093> 
<name>ocicancel</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_cancel()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1094> 
<name>ovrimos_fetch_into</name>
<versions>(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)</versions>
<short-description>Fetches a row from the result set</short-description>
<description>bool ovrimos_fetch_into ( int $result_id , array &$result_array [, string $how [, int $rownumber ]] ) 
 Fetches a row from the given result set, into result_array. </description>
<parameters>result_id - A result identifier, returned by ovrimos_execute() or ovrimos_exec(). 
result_array - You must provide an array by reference. It will be filled with the fetched values. 
how - Determines how the rows are fetched. This can be one of the following strings (case is not significant): Option Notes Next Forward direction from current position. This is the default value. Prev Backward direction from current position. First Forward direction from the start. Last Backward direction from the end. Absolute Absolute position from the start. Requires rownumber. 
rownumber - The row number, first one is 0. Only needed when how is set to Absolute. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$conn=ovrimos_connect("neptune", "8001", "admin", "password");
if ($conn!=0) {
    echo "Connection ok!";
    $res=ovrimos_exec($conn, "select table_id, table_name from sys.tables");
    if ($res != 0) {
        echo "Statement ok!";
        if (ovrimos_fetch_into($res, $row)) {
            list($table_id, $table_name) = $row;
            echo "table_id=" . $table_id . ", table_name=" . $table_name . "\n";
            if (ovrimos_fetch_into($res, $row)) {
                list($table_id, $table_name) = $row;
                echo "table_id=" . $table_id . ", table_name=" . $table_name . "\n";
            } else {
                echo "Next: error\n";
            }
        } else {
            echo "First: error\n";
        }
        ovrimos_free_result($res);
    }
    ovrimos_close($conn);
}?></example>
<example_result></example_result>
</object>

<object id=1095> 
<name>prev</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Передвигает внутренний указатель массива на одну позицию назад</short-description>
<description>mixed prev ( array &$array ) 
 Передвигает внутренний указатель массива на одну позицию назад. 
 prev() ведёт себя подобно next(), за исключением того, что она передвигает внутренний указатель массива на одну позицию назад, а не вперёд. </description>
<parameters>array - Входной массив. </parameters>
<output>Возвращает значение массива, на которое ранее указывал внутренний указатель массива, или FALSE если больше элементов нет. </output>
<errors></errors>
<example><?php
$transport = array('foot', 'bike', 'car', 'plane');
$mode = current($transport); // $mode = 'foot';
$mode = next($transport);    // $mode = 'bike';
$mode = next($transport);    // $mode = 'car';
$mode = prev($transport);    // $mode = 'bike';
$mode = end($transport);     // $mode = 'plane';
?></example>
<example_result></example_result>
</object>

<object id=1096> 
<name>dbplus_savepos</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Save position</short-description>
<description>int dbplus_savepos ( resource $relation ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>relation - A relation opened by dbplus_open(). </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1097> 
<name>ini_restore</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Restores the value of a configuration option</short-description>
<description>void ini_restore ( string $varname ) 
 Restores a given configuration option to its original value. </description>
<parameters>varname - The configuration option name. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
$setting = 'y2k_compliance';
echo 'Current value for \'' . $setting . '\': ' . ini_get($setting), PHP_EOL;
ini_set($setting, ini_get($setting) ? 0 : 1);
echo 'New value for \'' . $setting . '\': ' . ini_get($setting), PHP_EOL;
ini_restore($setting);
echo 'Original value for \'' . $setting . '\': ' . ini_get($setting), PHP_EOL;
?></example>
<example_result>
 
Current value for &#039;y2k_compliance&#039;: 1
New value for &#039;y2k_compliance&#039;: 0
Original value for &#039;y2k_compliance&#039;: 1
</example_result>
</object>

<object id=1098> 
<name>msession_timeout</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)</versions>
<short-description>Set/get session timeout</short-description>
<description>int msession_timeout ( string $session [, int $param ] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1099> 
<name>enchant_dict_get_error</name>
<versions>(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )</versions>
<short-description>Returns the last error of the current spelling-session</short-description>
<description>string enchant_dict_get_error ( resource $dict ) 
 Returns the last error of the current spelling-session </description>
<parameters>dict - Dictinaray resource </parameters>
<output>Returns the error message as string or FALSE if no error occurred. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1100> 
<name>shuffle</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Перемешивает массив</short-description>
<description>bool shuffle ( array &$array ) 
 Эта функция перемешивает элементы массива в случайном порядке. </description>
<parameters>array - Массив. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$numbers = range(1, 20);
shuffle($numbers);
foreach ($numbers as $number) {
    echo "$number ";
}?></example>
<example_result></example_result>
</object>

<object id=1101> 
<name>udm_free_res</name>
<versions>(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)</versions>
<short-description>Освобождает память, выделенную для результатов mnoGoSearch</short-description>
<description>bool udm_free_res ( resource $res ) 
 Освобождает память, выделенную для результатов. </description>
<parameters>res - Ссылка на идентификатор результата, полученная после вызова udm_find(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1102> 
<name>tempnam</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Создаёт файл с уникальным именем</short-description>
<description>string tempnam ( string $dir , string $prefix ) 
 Создаёт файл с уникальным именем в определённой директории с правами 0600. Если эта директория не существует, tempnam() может создать файл во временной директории системы и вернуть его имя. </description>
<parameters>dir - Директория, где будет создан временный файл. 
prefix - Префикс имени генерируемого файла. </parameters>
<output>Возвращает имя нового временного файла или FALSE в случае неудачи. </output>
<errors></errors>
<example><?php
$tmpfname = tempnam("/tmp", "FOO");
$handle = fopen($tmpfname, "w");
fwrite($handle, "записываем в во временный файл");
fclose($handle);
// здесь мы чего-нибудь делаем
unlink($tmpfname);
?></example>
<example_result></example_result>
</object>

<object id=1103> 
<name>ngettext</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Версия gettext для сообщений во множественном числе</short-description>
<description>string ngettext ( string $msgid1 , string $msgid2 , int $n ) 
 Версия gettext() для сообщений во множественном числе. Некоторые языки имеют больше одной формы сообщения для разных значений количества. </description>
<parameters>msgid1 - 
msgid2 - 
n - </parameters>
<output>Возвращает корректную форму сообщения во множественном числе, идентифицируемых по параметрам msgid1 и msgid2 для количества n. </output>
<errors></errors>
<example><?php
setlocale(LC_ALL, 'ru_RU');
printf(ngettext("%d window", "%d windows", 21), 21); // 21 окно
printf(ngettext("%d window", "%d windows", 22), 22); // 22 окна
printf(ngettext("%d window", "%d windows", 25), 25); // 25 окон
?></example>
<example_result></example_result>
</object>

<object id=1104> 
<name>end</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Устанавливает внутренний указатель массива на его последний элемент</short-description>
<description>mixed end ( array &$array ) 
 end() устанавливает внутренний указатель array на последний элемент и возвращает его значение. </description>
<parameters>array - Массив. Этот массив передается по ссылке, потому что он модифицируется данной функцией. Это означает что вы должны передать его как реальную переменную, а не как функцию, возвращающую массив, так как по ссылке можно передавать только реальные переменные. </parameters>
<output>Возвращает значение последнего элемента или FALSE для пустого массива. </output>
<errors></errors>
<example><?php
$fruits = array('apple', 'banana', 'cranberry');
echo end($fruits); // cranberry
?></example>
<example_result></example_result>
</object>

<object id=1105> 
<name>spliti</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Разбивает строку в массив с помощью регулярного выражения без учета регистра</short-description>
<description>array spliti ( string $pattern , string $string [, int $limit = -1 ] ) 
 Разбивает строку string в массив с помощью регулярного выражения. 
 Эта функция идентична функции split() за исключением того, что она игнорирует регистр символов при сравнении. Внимание
 С версии PHP 5.3.0 эта функция считаетсяУСТАРЕВШЕЙ. Крайне не рекомендуется полагаться на эту возможность.</description>
<parameters>pattern - Регистронезависимое регулярное выражение. 
string - Строка для разделения. 
limit - Если установлен limit, возвращаемый массив будет содержать максимум limit элементов, в котором последний элемент содержит всю строку string. </parameters>
<output>Возвращает массив строк, каждая из которых является подстрокой строки string, образованный с помощью регистронезависимого разделения регулярным выражением pattern. </output>
<errors></errors>
<example><?php
$string = "aBBBaCCCADDDaEEEaGGGA";
$chunks = spliti ("a", $string, 5);
print_r($chunks);
?></example>
<example_result>
 
Array
(
  [0] =>
  [1] => BBB
  [2] => CCC
  [3] => DDD
  [4] => EEEaGGGA
)
</example_result>
</object>

<object id=1106> 
<name>apache_reset_timeout</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Сбрасывает таймер сервера Apache</short-description>
<description>bool apache_reset_timeout ( void ) 
 apache_reset_timeout() сбрасывает таймер сервера Apache, который по-умолчанию установлен в 300 секунд. При set_time_limit(0); ignore_user_abort(true) и периодических вызовах apache_reset_timeout(), Apache теоретически может работать вечно. 
 Эта функция требует Apache 1. </description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1107> 
<name>ncurses_slk_refresh</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Copies soft label keys to screen</short-description>
<description>int ncurses_slk_refresh ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1108> 
<name>mcrypt_module_get_algo_block_size</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Returns the blocksize of the specified algorithm</short-description>
<description>int mcrypt_module_get_algo_block_size ( string $algorithm [, string $lib_dir ] ) 
 Gets the blocksize of the specified algorithm. </description>
<parameters>algorithm - The algorithm name. 
lib_dir - This optional parameter can contain the location where the mode module is on the system. </parameters>
<output>Returns the block size of the algorithm specified in bytes. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1109> 
<name>fdf_set_value</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Set the value of a field</short-description>
<description>bool fdf_set_value ( resource $fdf_document , string $fieldname , mixed $value [, int $isName ] ) 
 Sets the value for the given field. </description>
<parameters>fdf_document - The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string(). 
fieldname - Name of the FDF field, as a string. 
value - This parameter will be stored as a string unless it is an array. In this case all array elements will be stored as a value array. 
isName 
 Замечание: - In older versions of the FDF toolkit last parameter determined if the field value was to be converted to a PDF Name (= 1) or set to a PDF String (= 0). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1110> 
<name>hw_GetParentsObj</name>
<versions>(PHP 4)</versions>
<short-description>Object records of parents</short-description>
<description>array hw_getparentsobj ( int $connection , int $objectID ) 
 Returns object records and statistical information about the object records. Each object record belongs to a parent of the object with ID objectID. </description>
<parameters>connection - The connection identifier. 
objectID - The object identifier. </parameters>
<output>Returns an indexed array of object records plus an associated array with statistical information about the object records. The associated array is the last entry of the returned array. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1111> 
<name>hw_ChildrenObj</name>
<versions>(PHP 4)</versions>
<short-description>Object records of children</short-description>
<description>array hw_childrenobj ( int $connection , int $objectID ) 
 Returns the object records of the collection children. </description>
<parameters>connection - The connection identifier. 
objectID - The object identifier. </parameters>
<output>Returns an array of object records. Each object record belongs to a child of the collection with ID objectID. The array contains all children both documents and collections. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1112> 
<name>recode_string</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Recode a string according to a recode request</short-description>
<description>string recode_string ( string $request , string $string ) 
 Recode the string string according to the recode request request. </description>
<parameters>request - The desired recode request type 
string - The string to be recoded </parameters>
<output>Returns the recoded string or FALSE, if unable to perform the recode request. </output>
<errors></errors>
<example><?php
echo recode_string("us..flat", "The following character has a diacritical mark: á");
?></example>
<example_result></example_result>
</object>

<object id=1113> 
<name>dbplus_rzap</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Remove all tuples from relation</short-description>
<description>int dbplus_rzap ( resource $relation ) 
 dbplus_rzap() will remove all tuples from relation. </description>
<parameters>relation - A relation opened by dbplus_open(). </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1114> 
<name>is_double</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним is_float()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1115> 
<name>forward_static_call</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Call a static method</short-description>
<description>mixed forward_static_call ( callback $function [, mixed $parameter [, mixed $... ]] ) 
 Calls a user defined function or method given by the function parameter, with the following arguments. This function must be called within a method context, it can&#039;t be used outside a class. It uses the late static binding. </description>
<parameters>function - The function or method to be called. This parameter may be an array, with the name of the class, and the method, or a string, with a function name. 
parameter - Zero or more parameters to be passed to the function. </parameters>
<output>Returns the function result, or FALSE on error. </output>
<errors></errors>
<example><?php
class A
{
    const NAME = 'A';
    public static function test() {
        $args = func_get_args();
        echo static::NAME, " ".join(',', $args)." \n";
    }
}
class B extends A
{
    const NAME = 'B';
    public static function test() {
        echo self::NAME, "\n";
        forward_static_call(array('A', 'test'), 'more', 'args');
        forward_static_call( 'test', 'other', 'args');
    }
}
B::test('foo');
function test() {
        $args = func_get_args();
        echo "C ".join(',', $args)." \n";
    }
?></example>
<example_result>
 
B
B more,args 
C other,args
</example_result>
</object>

<object id=1116> 
<name>pg_field_prtlen</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает количество печатаемых символов</short-description>
<description>int pg_field_prtlen ( resource $result , int $row_number , mixed $field_name_or_number ) int pg_field_prtlen ( resource $result , mixed $field_name_or_number )</description>
<parameters>result - Ресурс результата запроса PostgreSQL, возвращаемый функциями pg_query(), pg_query_params() или pg_execute() (в числе прочих). 
row - Номер строки результата запроса с нужным полем. Нумерация строк начинается с нуля. Если аргумент не задан, будет выбрана текущая строка. </parameters>
<output>Длина строки при выводе значения поля, либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Невозможно соединиться с базой");
  $res = pg_query($dbconn, "select * from authors where author = 'Orwell'");
  $i = pg_num_fields($res);
  for ($j = 0; $j < $i; $j++) {
      echo "column $j\n";
      $fieldname = pg_field_name($res, $j);
      echo "fieldname: $fieldname\n";
      echo "printed length: " . pg_field_prtlen($res, $fieldname) . " characters\n";
      echo "storage length: " . pg_field_size($res, $j) . " bytes\n";
      echo "field type: " . pg_field_type($res, $j) . " \n\n";
  }
?></example>
<example_result>
 
column 0
fieldname: author
printed length: 6 characters
storage length: -1 bytes
field type: varchar 

column 1
fieldname: year
printed length: 4 characters
storage length: 2 bytes
field type: int2 

column 2
fieldname: title
printed length: 24 characters
storage length: -1 bytes
field type: varchar 
</example_result>
</object>

<object id=1117> 
<name>wddx_serialize_value</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Serialize a single value into a WDDX packet</short-description>
<description>string wddx_serialize_value ( mixed $var [, string $comment ] ) 
 Creates a WDDX packet from a single given value. </description>
<parameters>var - The value to be serialized 
comment - An optional comment string that appears in the packet header. </parameters>
<output>Returns the WDDX packet, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1118> 
<name>PDF_closepath</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Close current path</short-description>
<description>bool PDF_closepath ( resource $p ) 
 Closes the current path. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1119> 
<name>mcrypt_list_modes</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Gets an array of all supported modes</short-description>
<description>array mcrypt_list_modes ([ string $lib_dir = ini_get("mcrypt.modes_dir") ] ) 
 Gets the list of all supported modes in the lib_dir parameter. </description>
<parameters>lib_dir - Specifies the directory where all modes are located. If not specified, the value of the mcrypt.modes_dir php.ini directive is used. </parameters>
<output>Returns an array with all the supported modes. </output>
<errors></errors>
<example><?php
    $modes = mcrypt_list_modes();
    foreach ($modes as $mode) {
        echo "$mode <br />\n";
    }
?></example>
<example_result></example_result>
</object>

<object id=1120> 
<name>mcrypt_enc_get_supported_key_sizes</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Returns an array with the supported keysizes of the opened algorithm</short-description>
<description>array mcrypt_enc_get_supported_key_sizes ( resource $td ) 
 Gets the supported key sizes of the opened algorithm. </description>
<parameters>td - The encryption descriptor. </parameters>
<output>Returns an array with the key sizes supported by the algorithm specified by the encryption descriptor. If it returns an empty array then all key sizes between 1 and mcrypt_enc_get_key_size() are supported by the algorithm. </output>
<errors></errors>
<example><?php
    $td = mcrypt_module_open('rijndael-256', '', 'ecb', '');
    var_dump(mcrypt_enc_get_supported_key_sizes($td));
?></example>
<example_result>
 
array(3) {
  [0]=>
  int(16)
  [1]=>
  int(24)
  [2]=>
  int(32)
}
</example_result>
</object>

<object id=1121> 
<name>sqlite_libversion</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Возвращает версию подключенной библиотеки SQLite</short-description>
<description>string sqlite_libversion ( void ) 
 Возвращает версию подключенной библиотеки SQLite. </description>
<parameters></parameters>
<output>Возвращает версию библиотеки в виде строки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1122> 
<name>openssl_csr_export</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Exports a CSR as a string</short-description>
<description>bool openssl_csr_export ( resource $csr , string &$out [, bool $notext = true ] ) 
 openssl_csr_export() takes the Certificate Signing Request represented by csr and stores it as ascii-armoured text into out, which is passed by reference. </description>
<parameters>csr - 
out - 
notext - Необязательный параметр notext влияет на детализацию сообщений вывода; если он установлен в FALSE,то в вывод добавляется дополнительная человекочитаемая информация. Значением по умолчаниюnotext является TRUE.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1123> 
<name>pg_insert</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Заносит данные из массива в таблицу базы данных </short-description>
<description>mixed pg_insert ( resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ] ) 
 pg_insert() вставляет записи из массива assoc_array в таблицу table_name. Если задан аргумент options, значения массива будут преобразованы функцией pg_convert() соответствии с параметрами из этого аргумента. Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>connection - Ресурс соединения с базой данных PostgreSQL. 
table_name - Имя таблицы для вставки данных. Количество колонок в таблице table_name должно быть не меньше, чем элементов в массиве assoc_array. 
assoc_array - Ассоциативный массив(array), в котором ключи являются названиями колонок таблицы table_name, а значения - записи, которые необходимо вставить в эти колонки. 
options - Комбинация констант PGSQL_CONV_OPTS, PGSQL_DML_NO_CONV, PGSQL_DML_EXEC, PGSQL_DML_ASYNC и PGSQL_DML_STRING. Если в числе прочих передается PGSQL_DML_STRING в параметре options, функция вернет строку запроса. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. Возвращает строку(string), если PGSQL_DML_STRING включена в список параметров аргумента options. </output>
<errors></errors>
<example><?php 
  $dbconn = pg_connect('dbname=foo');
  // Это безопасно с тех пор как $_POST преобразуется автоматически
  $res = pg_insert($dbconn, 'post_log', $_POST);
  if ($res) {
      echo "Данные из POST успешно внесены в журнал\n";
  } else {
      echo "Пользователь прислал неверные данные\n";
  }
?></example>
<example_result></example_result>
</object>

<object id=1124> 
<name>mysql_close</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Закрывает соединение с сервером MySQL</short-description>
<description>bool mysql_close ([ resource $link_identifier ] ) 
 mysql_close() закрывает непостоянное соединение с базой данных MySQL, на которое указывает переданный дескриптор. Если параметр link_identifier не указан, закрывается последнее открытое (текущее) соединение. 
 В использовании mysql_close() обычно нет надобности для непостоянных соединений, т.к. они автоматически закрываются в конце скрипта. См. также высвобождение ресурсов. </description>
<parameters>link_identifier - Соединение MySQL. Еслине указано, то используется последнее соединение, открытоеmysql_connect(). Если соединение не найдено илине установлено, то будет сгенерирована ошибка уровняE_WARNING.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Ошибка соединения: ' . mysql_error());
}echo 'Успешно соединились';
mysql_close($link);
?></example>
<example_result>
 
Успешно соединились
</example_result>
</object>

<object id=1125> 
<name>set_magic_quotes_runtime</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Sets the current active configuration setting of magic_quotes_runtime</short-description>
<description>bool set_magic_quotes_runtime ( bool $new_setting ) 
 Set the current active configuration setting of magic_quotes_runtime. Внимание
 С версии PHP 5.3.0 эта функция считаетсяУСТАРЕВШЕЙ. Крайне не рекомендуется полагаться на эту возможность.</description>
<parameters>new_setting - FALSE for off, TRUE for on. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Create a temporary file pointer
$fp = tmpfile();
// Write some data to the pointer
fwrite($fp, '\'PHP\' is a Recursive acronym');
// Without magic_quotes_runtime
rewind($fp);
set_magic_quotes_runtime(false);
echo 'Without magic_quotes_runtime: ' . fread($fp, 64), PHP_EOL;
// With magic_quotes_runtime
rewind($fp);
set_magic_quotes_runtime(true);
echo 'With magic_quotes_runtime: ' . fread($fp, 64), PHP_EOL;
// Clean up
fclose($fp);
?></example>
<example_result>
 
Without magic_quotes_runtime: &#039;PHP&#039; is a Recursive acronym
With magic_quotes_runtime: \&#039;PHP\&#039; is a Recursive acronym
</example_result>
</object>

<object id=1126> 
<name>hexdec</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Переводит число из шестнадцатиричной системы счисления в десятичную</short-description>
<description>number hexdec ( string $hex_string ) 
 Возвращает десятичный эквивалент шестнадцатеричного числа, содержащегося в аргументе hex_string. hexdec() преобразует шестнадцатеричную строку в десятичное число. 
 hexdec() игнорирует любые обнаруженные не-шестнадцатеричные символы. </description>
<parameters>hex_string - Шестнадцатеричная строка для преобразования </parameters>
<output>Десятичное представление hex_string </output>
<errors></errors>
<example><?php
var_dump(hexdec("See"));
var_dump(hexdec("ee"));
// в обоих случаех будет выведено "int(238)"
var_dump(hexdec("that")); // выведет "int(10)"
var_dump(hexdec("a0")); // выведет "int(160)"
?></example>
<example_result></example_result>
</object>

<object id=1127> 
<name>dbplus_runlink</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Remove relation from filesystem</short-description>
<description>int dbplus_runlink ( resource $relation ) 
 dbplus_runlink() will close and remove the relation. </description>
<parameters>relation - A relation opened by dbplus_open(). </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1128> 
<name>ncurses_replace_panel</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Replaces the window associated with panel</short-description>
<description>int ncurses_replace_panel ( resource $panel , resource $window ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>panel - 
window - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1129> 
<name>class_exists</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Проверяет, был ли объявлен класс</short-description>
<description>bool class_exists ( string $class_name [, bool $autoload = true ] ) 
 Эта функция проверяет, был ли объявлен указанный класс или нет. </description>
<parameters>class_name - Имя класса. Воспринимается без учета регистра. 
autoload - Вызывать ли по умолчанию __autoload. </parameters>
<output>Возвращает TRUE, если класс class_name объявлен, иначе FALSE. </output>
<errors></errors>
<example><?php
// Проверяем существование класса перед его использованием
if (class_exists('MyClass')) {
    $myclass = new MyClass();
}
?></example>
<example_result></example_result>
</object>

<object id=1130> 
<name>ncurses_doupdate</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Write all prepared refreshes to terminal </short-description>
<description>bool ncurses_doupdate ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1131> 
<name>uniqid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Генерирует уникальный ID</short-description>
<description>string uniqid ([ string $prefix = "" [, bool $more_entropy = false ]] ) 
 Получает уникальный идентификатор с префиксом, основанный на текущем времени в микросекундах. </description>
<parameters>prefix - Может быть полезно, к примеру, если идентификаторы генерируются одновременно на нескольких хостах и генерация идентификаторы производится в одну и ту же микросекунду. 
more_entropy - Если равен TRUE, то функция uniqid() добавит дополнительную энтропию (используя комбинированный линейный конгруэнтный генератор) в конце возвращаемого значения, что позволят сделать результат еще более уникальным. </parameters>
<output>Возвращает уникальный идентификатор в виде строки (string). </output>
<errors></errors>
<example><?php
/* Уникальный id, например: 4b3403665fea6 */
printf("uniqid(): %s\r\n", uniqid());
/* Префикс к уникальному id можно добавить одним
 * из следующих способов:
 *
 * $uniqid = $prefix . uniqid();
 * $uniqid = uniqid($prefix);
 */
printf("uniqid('php_'): %s\r\n", uniqid('php_'));
/* Также можно активировать параметр большей энтропии, который
 * требуется на некоторых система, таких как Cygwin. Таким образом
 * функция uniqid() сгенерирует значение: 4b340550242239.64159797
 */
printf("uniqid('', true): %s\r\n", uniqid('', true));
?></example>
<example_result></example_result>
</object>

<object id=1132> 
<name>msql_free_result</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Free result memory</short-description>
<description>bool msql_free_result ( resource $result ) 
 msql_free_result() frees the memory associated with query_identifier. When PHP completes a request, this memory is freed automatically, so you only need to call this function when you want to make sure you don&#039;t use too much memory while the script is running. </description>
<parameters>result - Обрабатываемый результат запроса,полученный с помощью функции msql_query().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1133> 
<name>fbsql_fetch_object</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Fetch a result row as an object</short-description>
<description>object fbsql_fetch_object ( resource $result ) 
 fbsql_fetch_object() is similar to fbsql_fetch_array(), with one difference - an object is returned, instead of an array. Indirectly, that means that you can only access the data by the field names, and not by their offsets (numbers are illegal property names). 
 Speed-wise, the function is identical to fbsql_fetch_array(), and almost as quick as fbsql_fetch_row() (the difference is insignificant). </description>
<parameters>result - Идентификатор результата запроса, полученный изfbsql_query() илиfbsql_db_query().</parameters>
<output>Returns an object with properties that correspond to the fetched row, or FALSE if there are no more rows. </output>
<errors></errors>
<example><?php
fbsql_connect($host, $user, $password);
$result = fbsql_db_query("database", "select * from table");
while ($row = fbsql_fetch_object($result)) {
    echo $row->user_id;
    echo $row->fullname;
}fbsql_free_result($result);
?></example>
<example_result></example_result>
</object>

<object id=1134> 
<name>ifx_query</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Send Informix query</short-description>
<description>resource ifx_query ( string $query , resource $link_identifier [, int $cursor_type [, mixed $blobidarray ]] ) 
 Sends a query to the currently active database on the server that&#039;s associated with the specified link identifier. 
 For "select-type" queries a cursor is declared and opened. Non-select queries are "execute immediate". 
 For either query type the number of (estimated or real) affected rows is saved for retrieval by ifx_affected_rows(). 
 If the contents of the TEXT (or BYTE) column allow it, you can also use ifx_textasvarchar(1) and ifx_byteasvarchar(1). This allows you to treat TEXT (or BYTE) columns just as if they were ordinary (but long) VARCHAR columns for select queries, and you don&#039;t need to bother with blob id&#039;s. 
 With ifx_textasvarchar(0) or ifx_byteasvarchar(0) (the default situation), select queries will return BLOB columns as blob id&#039;s (integer value). You can get the value of the blob as a string or file with the blob functions (see below). </description>
<parameters>query - The query string. 
link_identifier - The link identifier. 
cursor_def - This optional parameter allows you to make this a scroll and/or hold cursor. It&#039;s a bitmask and can be either IFX_SCROLL, IFX_HOLD, or both or&#039;ed together. I you omit this parameter the cursor is a normal sequential cursor. 
blobidarray - If you have BLOB (BYTE or TEXT) columns in the query, you can add a blobidarray parameter containing the corresponding "blob ids", and you should replace those columns with a "?" in the query text. </parameters>
<output>Returns valid Informix result identifier on success, or FALSE on errors. </output>
<errors></errors>
<example><?php
ifx_textasvarchar(1);      // use "text mode" for blobs
$res_id = ifx_query("select * from orders", $conn_id);
if (! $res_id) {
    printf("Can't select orders : %s\n<br />%s<br />\n", ifx_error(), ifx_errormsg());
    die;
}ifx_htmltbl_result($res_id, "border=\"1\"");
ifx_free_result($res_id);
?></example>
<example_result></example_result>
</object>

<object id=1135> 
<name>restore_include_path</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Restores the value of the include_path configuration option</short-description>
<description>void restore_include_path ( void ) 
 Restores the include_path configuration option back to its original master value as set in php.ini </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
echo get_include_path();  // .:/usr/local/lib/php
set_include_path('/inc');
echo get_include_path();  // /inc
// Works as of PHP 4.3.0
restore_include_path();
// Works in all PHP versions
ini_restore('include_path');
echo get_include_path();  // .:/usr/local/lib/php
?></example>
<example_result></example_result>
</object>

<object id=1136> 
<name>openssl_open</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Open sealed data</short-description>
<description>bool openssl_open ( string $sealed_data , string &$open_data , string $env_key , mixed $priv_key_id [, string $method ] ) 
 openssl_open() opens (decrypts) sealed_data using the private key associated with the key identifier priv_key_id and the envelope key env_key, and fills open_data with the decrypted data. The envelope key is generated when the data are sealed and can only be used by one specific private key. See openssl_seal() for more information. </description>
<parameters>sealed_data - 
open_data - If the call is successful the opened data is returned in this parameter. 
env_key - 
priv_key_id - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// $sealed and $env_key are assumed to contain the sealed data
// and our envelope key, both given to us by the sealer.
// fetch private key from file and ready it
$fp = fopen("/src/openssl-0.9.6/demos/sign/key.pem", "r");
$priv_key = fread($fp, 8192);
fclose($fp);
$pkeyid = openssl_get_privatekey($priv_key);
// decrypt the data and store it in $open
if (openssl_open($sealed, $open, $env_key, $pkeyid)) {
    echo "here is the opened data: ", $open;
} else {
    echo "failed to open data";
}
// free the private key from memory
openssl_free_key($pkeyid);
?></example>
<example_result></example_result>
</object>

<object id=1137> 
<name>ocifreedesc</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним OCI-Lob::free()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1138> 
<name>com_get</name>
<versions>(PHP 4)</versions>
<short-description>Gets the value of a COM Component&#039;s property [deprecated]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1139> 
<name>fdf_save_string</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Returns the FDF document as a string</short-description>
<description>string fdf_save_string ( resource $fdf_document ) 
 Returns the FDF document as a string. </description>
<parameters>fdf_document - The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string(). </parameters>
<output>Returns the document as a string, or FALSE on error. </output>
<errors></errors>
<example><?php
$fdf = fdf_create();
fdf_set_value($fdf, "foo", "bar");
$str = fdf_save_string($fdf);
fdf_close($fdf);
echo $str;
?></example>
<example_result>
 
%FDF-1.2
%âãÏÓ
1 0 obj
<<
/FDF << /Fields 2 0 R >>
>>
endobj
2 0 obj
[
<< /T (foo)/V (bar)>>
]
endobj
trailer
<<
/Root 1 0 R

>>
%%EOF
</example_result>
</object>

<object id=1140> 
<name>imap_get_quotaroot</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Retrieve the quota settings per user</short-description>
<description>array imap_get_quotaroot ( resource $imap_stream , string $quota_root ) 
 Retrieve the quota settings per user. The limit value represents the total amount of space allowed for this user&#039;s total mailbox usage. The usage value represents the user&#039;s current total mailbox capacity. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
quota_root - quota_root should normally be in the form of which mailbox (i.e. INBOX). </parameters>
<output>Returns an array of integer values pertaining to the specified user mailbox. All values contain a key based upon the resource name, and a corresponding array with the usage and limit values within. </output>
<errors></errors>
<example><?php
$mbox = imap_open("{imap.example.org}", "kalowsky", "password", OP_HALFOPEN)
      or die("can't connect: " . imap_last_error());
$quota = imap_get_quotaroot($mbox, "INBOX");
if (is_array($quota)) {
   $storage = $quota_values['STORAGE'];
   echo "STORAGE usage level is: " .  $storage['usage'];
   echo "STORAGE limit level is: " .  $storage['limit'];
   $message = $quota_values['MESSAGE'];
   echo "MESSAGE usage level is: " .  $message['usage'];
   echo "MESSAGE limit level is: " .  $message['limit'];
   /* ...  */
}
imap_close($mbox);
?></example>
<example_result></example_result>
</object>

<object id=1141> 
<name>XMLWriter::text</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Записать текст</short-description>
<description>bool XMLWriter::text ( string $content ) 
 Процедурный стиль bool xmlwriter_text ( resource $xmlwriter , string $content )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
content - Содержимое текста. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1142> 
<name>socket_set_blocking</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним stream_set_blocking()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1143> 
<name>ncurses_slk_restore</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Restores soft label keys</short-description>
<description>int ncurses_slk_restore ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1144> 
<name>PDF_skew</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Skew the coordinate system</short-description>
<description>bool PDF_skew ( resource $p , float $alpha , float $beta ) 
 Skews the coordinate system in x and y direction by alpha and beta degrees. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1145> 
<name>sqlite_has_prev</name>
<versions>(PHP 5)</versions>
<short-description>Определяет, доступна ли предыдущая запись</short-description>
<description>bool sqlite_has_prev ( resource $result ) 
 Объектно-ориентированный стиль (метод): bool SQLiteResult::hasPrev ( void )</description>
<parameters>result - Ресурс результата SQLite. Этот параметр не требуется при использовании объектно-ориентированного метода. </parameters>
<output>Возвращает TRUE если предыдущая запись результата запроса result доступна, иначе возвращает FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1146> 
<name>oci_field_size</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Возвращает размер поля</short-description>
<description>int oci_field_size ( resource $statement , mixed $field ) 
 Возвращает размер поля field. </description>
<parameters>statement - Идентификатор допустимого OCI запроса. 
field - Может быть номером поля (нумерация начинается с 1) или именем. </parameters>
<output>Возвращает размер поля field в байтах, или FALSE при ошибках. </output>
<errors></errors>
<example><?php
$conn = oci_connect("scott", "tiger");
$stmt = oci_parse($conn, "SELECT * FROM emp");
oci_execute($stmt);
echo "<table border=\"1\">";
echo "<tr>";
echo "<th>Name</th>";
echo "<th>Type</th>";
echo "<th>Length</th>";
echo "</tr>";
$ncols = oci_num_fields($stmt);
for ($i = 1; $i <= $ncols; $i++) {
    $column_name  = oci_field_name($stmt, $i);
    $column_type  = oci_field_type($stmt, $i);
    $column_size  = oci_field_size($stmt, $i);
    echo "<tr>";
    echo "<td>$column_name</td>";
    echo "<td>$column_type</td>";
    echo "<td>$column_size</td>";
    echo "</tr>";
}
echo "</table>";
oci_free_statement($stmt);
oci_close($conn);
?></example>
<example_result></example_result>
</object>

<object id=1147> 
<name>pg_field_num</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает порядковый номер именованного поля</short-description>
<description>int pg_field_num ( resource $result , string $field_name ) 
 pg_field_num() вернет порядковый номер поля с именем field_name в результате запроса result. 
 Замечание: 
 Прежнее название функции: pg_fieldnum(). </description>
<parameters>result - Ресурс результата запроса PostgreSQL, возвращаемый функциями pg_query(), pg_query_params() или pg_execute() (в числе прочих). 
field_name - Наименование поля. </parameters>
<output>Номер поля (начиная с нуля), либо -1 в случае ошибки. </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Невозможно соединиться с базой");
  $res = pg_query($dbconn, "select author, year, title from authors where author = 'Orwell'");
  
  echo "Столбец 'title' - это поле с номером: ", pg_field_num($res, 'title');
?></example>
<example_result>
 
Столбец &#039;title&#039; - это поле с номером: 2
</example_result>
</object>

<object id=1148> 
<name>substr_count</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает число вхождений подстроки</short-description>
<description>int substr_count ( string $haystack , string $needle [, int $offset = 0 [, int $length ]] ) 
 substr_count() возвращает число вхождений подстроки needle в строку haystack. Заметьте, что параметр needle чувствителен к регистру. 
 Замечание: 
 Эта функция не подсчитывает перекрывающиеся подстроки. Смотрите пример ниже! </description>
<parameters>haystack - Строка, в которой ведется поиск 
needle - Искомая подстрока 
offset - Смещение начала отсчета 
length - Максимальная длина строки в которой будет производится поиск подстроки после указанного смещения. Если сумма смещения и максимальной длины будет больше длины haystack, то будет выведено предупреждение. </parameters>
<output>Эта функция возвращает integer. </output>
<errors></errors>
<example><?php
$text = 'This is a test';
echo strlen($text); // 14
echo substr_count($text, 'is'); // 2
// строка уменьшается до 's is a test', поэтому вывод будет 1
echo substr_count($text, 'is', 3);
// текст уменьшается до 's i', поэтому вывод будет 0
echo substr_count($text, 'is', 3, 3);
// генерирует предупреждение, так как  5+10 > 14
echo substr_count($text, 'is', 5, 10);

// выводит только 1, т.к. перекрывающиеся подстроки не учитываются
$text2 = 'gcdgcdgcd';
echo substr_count($text2, 'gcdgcd');
?></example>
<example_result></example_result>
</object>

<object id=1149> 
<name>pg_execute</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Запускает выполнение ранее подготовленного параметризованного запроса и ждет результат</short-description>
<description>resource pg_execute ([ resource $connection ], string $stmtname , array $params ) 
 Запускает выполнение ранее подготовленного параметризованного запроса и ждет результат. 
 pg_execute() аналог функции pg_query_params(), только вместо строки с запросом принимает имя предварительно подготовленного SQL запроса. Это позволяет многократно выполнять единожды созданные запросы с различными параметрами. Сам запрос должен быть заранее подготовлен в текущей сессии. pg_execute() поддерживается PostgreSQL версии 7.4 и выше. Функция не будет работать на соединениях с сервером ранних версий. 
 Аргументы функции те же, что и у pg_query_params(), за исключением имени предварительно составленного запроса, который передается вместо строки с запросом. </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). 
stmtname - Имя подготовленного к исполнению запроса. Если передана пустая строка "", будет выполнен безымянный запрос. Имя и содержимое запроса должны быть подготовлены функцией pg_prepare(), pg_send_prepare() либо с помощью SQL-команды PREPARE. 
params - Массив значений параметров запроса для замены псевдопеременных $1, $2 и т.д. в исходной строке запроса. Количество элементов массива должно точно совпадать с количеством псевдопеременных. </parameters>
<output>Ресурс результата выполнения запроса при успешном выполнении. или FALSE в случае возникновения ошибки.</output>
<errors></errors>
<example><?php
// Подключение к базе данных "mary"
$dbconn = pg_connect("dbname=mary");
// Подготовка запроса
$result = pg_prepare($dbconn, "my_query", 'SELECT * FROM shops WHERE name = $1');
// Запуск запроса на выполнение. Стоит отметить, что нет необходимости экранировать 
// спецсимволы в строке "Joe's Widgets"
$result = pg_execute($dbconn, "my_query", array("Joe's Widgets"));
// Запуск на выполнение того же запроса, но с другим параметром 
$result = pg_execute($dbconn, "my_query", array("Clothes Clothes Clothes"));
?></example>
<example_result></example_result>
</object>

<object id=1150> 
<name>hash</name>
<versions>(PHP 5 >= 5.1.2, PECL hash >= 1.1)</versions>
<short-description>Генерирует хеш-код (дайджест сообщения)</short-description>
<description>string hash ( string $algo , string $data [, bool $raw_output = false ] ) </description>
<parameters>algo - Имя выбранного алгоритма хеширования (например, "md5", "sha256", "haval160,4" и т.д.) 
data - Сообщение для хеширования. 
raw_output - Когда установлено в TRUE, выводит необработанные двоичные данные. При FALSE, выводит данные в шестнацатеричной кодировке в нижнем регистре. </parameters>
<output>Возвращает строку содержащую вычисленный хеш-код в шестнацатеричной кодировке в нижнем регистре. Если raw_output задан как TRUE, то возвращается хеш-код в виде бинарных данных. </output>
<errors></errors>
<example><?php
echo hash('ripemd160', 'The quick brown fox jumped over the lazy dog.');
?></example>
<example_result>
 
8817ca339f7f902ad3fb456150a1bb9b4cb5dde9
</example_result>
</object>

<object id=1151> 
<name>date_timestamp_get</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Псевдоним DateTime::getTimestamp()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1152> 
<name>key</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выбирает ключ из массива</short-description>
<description>mixed key ( array &$array ) 
 key() возвращает индекс текущего элемента массива. </description>
<parameters>array - Массив. </parameters>
<output>Функция key() просто возвращает ключ того элемента массива, на который в данный момент указывает внутренний указатель массива. Он не сдвигает указатель ни в каком направлении. Если внутренний указатель указывает вне границ массива или массив пуст, key() возвратит NULL. </output>
<errors></errors>
<example><?php
$array = array(
    'fruit1' => 'apple',
    'fruit2' => 'orange',
    'fruit3' => 'grape',
    'fruit4' => 'apple',
    'fruit5' => 'apple');
// этот цикл выведет все ключи ассоциативного массива,
// значения которых равны "apple"
while ($fruit_name = current($array)) {
    if ($fruit_name == 'apple') {
        echo key($array).'<br />';
    }
    next($array);
}?></example>
<example_result>
 
fruit1<br />
fruit4<br />
fruit5<br />
</example_result>
</object>

<object id=1153> 
<name>imagegif</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выводит изображение в браузер или пишет в файл</short-description>
<description>bool imagegif ( resource $image [, string $filename ] ) 
 imagegif() creates the GIF file in filename from the image image. The image argument is the return from the imagecreate() or imagecreatefrom* function. 
 The image format will be GIF87a unless the image has been made transparent with imagecolortransparent(), in which case the image format will be GIF89a. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
filename - Путь для сохранения файла. Если не установлен или равен NULL, изображение будет выведено в поток вывода в бинарном виде.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Create a new image instance
$im = imagecreatetruecolor(100, 100);
// Make the background white
imagefilledrectangle($im, 0, 0, 99, 99, 0xFFFFFF);
// Draw a text string on the image
imagestring($im, 3, 40, 20, 'GD Library', 0xFFBA00);
// Output the image to browser
header('Content-Type: image/gif');
imagegif($im);
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=1154> 
<name>imap_thread</name>
<versions>(PHP 4 >= 4.0.7, PHP 5)</versions>
<short-description>Returns a tree of threaded message</short-description>
<description>array imap_thread ( resource $imap_stream [, int $options = SE_FREE ] ) 
 Gets a tree of a threaded message. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
options - </parameters>
<output>imap_thread() returns an associative array containing a tree of messages threaded by REFERENCES, or FALSE on error. </output>
<errors></errors>
<example><?php
// Here we're outputting the threads of a newsgroup, in HTML
$nntp = imap_open('{news.example.com:119/nntp}some.newsgroup', '', '');
$threads = imap_thread($nntp);
foreach ($threads as $key => $val) {
  $tree = explode('.', $key);
  if ($tree[1] == 'num') {
    $header = imap_headerinfo($nntp, $val);
    echo "<ul>\n\t<li>" . $header->fromaddress . "\n";
  } elseif ($tree[1] == 'branch') {
    echo "\t</li>\n</ul>\n";
  }
}
imap_close($nntp);
?></example>
<example_result></example_result>
</object>

<object id=1155> 
<name>ibase_blob_get</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get len bytes data from open blob</short-description>
<description>string ibase_blob_get ( resource $blob_handle , int $len ) 
 This function returns at most len bytes from a BLOB that has been opened for reading by ibase_blob_open(). 
 Замечание: 
 It is not possible to read from a BLOB that has been opened for writing by ibase_blob_create(). </description>
<parameters>blob_handle - A BLOB handle opened with ibase_blob_open(). 
len - Size of returned data. </parameters>
<output>Returns at most len bytes from the BLOB, or FALSE on failure. </output>
<errors></errors>
<example><?php
$result    = ibase_query("SELECT blob_value FROM table");
$data      = ibase_fetch_object($result);
$blob_data = ibase_blob_info($data->BLOB_VALUE);
$blob_hndl = ibase_blob_open($data->BLOB_VALUE);
echo         ibase_blob_get($blob_hndl, $blob_data[0]);
?></example>
<example_result></example_result>
</object>

<object id=1156> 
<name>xslt_setopt</name>
<versions>(PHP 4 >= 4.3.0)</versions>
<short-description>Установка значений настроек XSLT-процессора </short-description>
<description>mixed xslt_setopt ( resource $processor , int $newmask ) 
 xslt_setopt() устанавливает значения настроек, используя маску newmask, для заданного XSLT-процессора processor. </description>
<parameters>processor - Идентификатор ссылки на XSLT-процессор, созданный функцией xslt_create(). 
newmask - newmask битовая маска, созданная из следующих констант: 
 XSLT_SABOPT_PARSE_PUBLIC_ENTITIES - Сообщает процессору о необходимости разбора общедоступных сущностей. По умолчанию эта настройка отключена. </parameters>
<output>Возвращает предыдущую маску в виде числа, если это возможно; в противном случае TRUE; FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$xh = xslt_create();
// Дать указание Sablotron обрабатывать общедоступные сущности
xslt_setopt($xh, XSLT_SABOPT_PARSE_PUBLIC_ENTITIES);
// Также попросим его не убирать лишние пробелы
xslt_setopt($xh, xslt_getopt($xh) | XSLT_SABOPT_DISABLE_STRIPPING);
?></example>
<example_result></example_result>
</object>

<object id=1157> 
<name>sqlite_open</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Открывает базу данных SQLite или создает ее, если она не существует</short-description>
<description>resource sqlite_open ( string $filename [, int $mode = 0666 [, string &$error_message ]] ) 
 Объектно-ориентированный стиль (конструктор): SQLiteDatabase::__construct() ( string $filename [, int $mode = 0666 [, string &$error_message ]] )</description>
<parameters>filename - Имя файла базы данных SQLite. Если файл не существует, SQLite попытается создать его. PHP должен владеть правами записи на файл в случае вставки данных, изменения схемы базы данных или создания файла с базой данных, если он не существует. 
mode - Режим прав доступа на файл. Предназначется для открытия базы данных в режиме только для чтения, однако в настоящее время этот аргумент не используется библиотекой sqlite. Значением по умолчанию (и рекомендуемым к использованию) является восьмеричное 0666. 
error_message - Передается по ссылке и устанавливается в читабельное сообщение об ошибке, объясняющее почему не удалось открыть базу данных, в случае возникновения таковой ошибки. </parameters>
<output>Возвращает ресурс (идентификатор базы данных) при успешном завершении, FALSE при возникновении ошибки. </output>
<errors></errors>
<example><?php
if ($db = sqlite_open('mysqlitedb', 0666, $sqliteerror)) { 
    sqlite_query($db, 'CREATE TABLE foo (bar varchar(10))');
    sqlite_query($db, "INSERT INTO foo VALUES ('fnord')");
    $result = sqlite_query($db, 'select bar from foo');
    var_dump(sqlite_fetch_array($result)); 
} else {
    die($sqliteerror);
}?></example>
<example_result></example_result>
</object>

<object id=1158> 
<name>xmlrpc_set_type</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Устанавливает тип XML-RPC, base64 или datetime для значения строки PHP</short-description>
<description>bool xmlrpc_set_type ( string &$value , string $type ) 
 Устанавливает XML-RPC тип, base64 или datetime для значения строки PHP. Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>value - Значение для установки типа. 
type - &#039;base64&#039; или &#039;datetime&#039; </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. В случае успеха, value конвертируется в объект. </output>
<errors>Выдает сообщение E_WARNING для не поддерживаемых типов XMLRPC. </errors>
<example>
 </example>
<example_result>
 
<?xml version="1.0" encoding="utf-8"?>
<params>
<param>
 <value>
  <dateTime.iso8601>20090322T23:43:03</dateTime.iso8601>
 </value>
</param>
</params>
</example_result>
</object>

<object id=1159> 
<name>dbplus_setindexbynumber</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Set index by number</short-description>
<description>int dbplus_setindexbynumber ( resource $relation , int $idx_number ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>relation - A relation opened by dbplus_open(). 
idx_number - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1160> 
<name>ncurses_wrefresh</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Refresh window on terminal screen </short-description>
<description>int ncurses_wrefresh ( resource $window ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>window - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1161> 
<name>round</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Округляет число типа float</short-description>
<description>float round ( float $val [, int $precision = 0 [, int $mode = PHP_ROUND_HALF_UP ]] ) 
 Возвращает округлённое значение val с указанной точностью precision (количество цифр после запятой). Последняя может быть отрицательной или нулём (по умолчанию). 
 
 Замечание: PHP по умолчанию не может правильно обрабатывать строки типа "12,300.2". Для подробностей см. Преобразование строк в числа. </description>
<parameters>val - Значение для округления 
precision - Количество десятичных знаков, до которых округлять 
mode - Одно из значений PHP_ROUND_HALF_UP, PHP_ROUND_HALF_DOWN, PHP_ROUND_HALF_EVEN или PHP_ROUND_HALF_ODD. </parameters>
<output>Округленное значение </output>
<errors></errors>
<example><?php
echo round(3.4);         // 3
echo round(3.5);         // 4
echo round(3.6);         // 4
echo round(3.6, 0);      // 4
echo round(1.95583, 2);  // 1.96
echo round(1241757, -3); // 1242000
echo round(5.045, 2);    // 5.05
echo round(5.055, 2);    // 5.06
?></example>
<example_result></example_result>
</object>

<object id=1162> 
<name>json_decode</name>
<versions>(PHP 5 >= 5.2.0, PECL json >= 1.2.0)</versions>
<short-description>Декодирует JSON строку</short-description>
<description>mixed json_decode ( string $json [, bool $assoc = false [, int $depth = 512 [, int $options = 0 ]]] ) 
 Принимает закодированную в JSON строку и преобразует ее в переменную PHP. </description>
<parameters>json - json строка (string) для декодирования. 
assoc - Если TRUE, возвращаемые объекты будут преобразованы в ассоциативные массивы. 
depth - Указывает глубину рекурсии. 
options - Битовая маска опций декодирования JSON. В настоящий момент поддерживается только JSON_BIGINT_AS_STRING (по умолчанию большие целые числа приводятся к числам с плавающей запятой (float)) </parameters>
<output>Возвращает данные json преобразованные в соответствующие типы PHP. Значения true, false и null (регистронезависимые) возвращаются как TRUE, FALSE и NULL соответственно. NULL также возвращается, если json не может быть преобразован или закодированные данные содержат вложенных уровней больше, чем допустимый предел для рекурсий. </output>
<errors></errors>
<example><?php
$json = '{"a":1,"b":2,"c":3,"d":4,"e":5}';
var_dump(json_decode($json));
var_dump(json_decode($json, true));
?></example>
<example_result>
 
object(stdClass)#1 (5) {
    ["a"] => int(1)
    ["b"] => int(2)
    ["c"] => int(3)
    ["d"] => int(4)
    ["e"] => int(5)
}

array(5) {
    ["a"] => int(1)
    ["b"] => int(2)
    ["c"] => int(3)
    ["d"] => int(4)
    ["e"] => int(5)
}
</example_result>
</object>

<object id=1163> 
<name>fprintf</name>
<versions>(PHP 5)</versions>
<short-description>Записывает отформатированную строку в поток</short-description>
<description>int fprintf ( resource $handle , string $format [, mixed $args [, mixed $... ]] ) 
 Записывает строку, созданную с использованием строки формата format, в поток, дескриптор которого передается в параметре handle. </description>
<parameters>handle - Указатель (resource)на файл, обычно создаваемый с помощью функции fopen().
format - Описание параметра format смотрите в описании функции sprintf(). 
args - 
... - </parameters>
<output>Возвращает длину записанной строки. </output>
<errors></errors>
<example><?php
if (!($fp = fopen('date.txt', 'w'))) {
    return;
}
fprintf($fp, "%04d-%02d-%02d", $year, $month, $day);
// запишет форматированную ISO дату в файл date.txt
?></example>
<example_result></example_result>
</object>

<object id=1164> 
<name>imagecolorclosesthwb</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Get the index of the color which has the hue, white and blackness</short-description>
<description>int imagecolorclosesthwb ( resource $image , int $red , int $green , int $blue ) 
 Get the index of the color which has the hue, white and blackness nearest the given color. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
red - Значение красного компонента цвета.
green - Значение зеленого компонента цвета.
blue - Значение синего компонента цвета.</parameters>
<output>Returns an integer with the index of the color which has the hue, white and blackness nearest the given color. </output>
<errors></errors>
<example><?php
$im = imagecreatefromgif('php.gif');
echo 'HWB: ' . imagecolorclosesthwb($im, 116, 115, 152);
imagedestroy($im);
?></example>
<example_result>
 
HWB: 33
</example_result>
</object>

<object id=1165> 
<name>ncurses_newwin</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Create a new window</short-description>
<description>resource ncurses_newwin ( int $rows , int $cols , int $y , int $x ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>rows - Number of rows 
cols - Number of columns 
y - y-coordinate of the origin 
x - x-coordinate of the origin </parameters>
<output>Returns a resource ID for the new window. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1166> 
<name>fdf_get_flags</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Gets the flags of a field</short-description>
<description>int fdf_get_flags ( resource $fdf_document , string $fieldname , int $whichflags ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1167> 
<name>imagecolorsforindex</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get the colors for an index</short-description>
<description>array imagecolorsforindex ( resource $image , int $index ) 
 Gets the color for a specified index. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
index - The color index. </parameters>
<output>Returns an associative array with red, green, blue and alpha keys that contain the appropriate values for the specified color index. </output>
<errors></errors>
<example><?php
// open an image
$im = imagecreatefrompng('nexen.png');
// get a color
$start_x = 40;
$start_y = 50;
$color_index = imagecolorat($im, $start_x, $start_y);
// make it human readable
$color_tran = imagecolorsforindex($im, $color_index);
// what is it ?
print_r($color_tran);
?></example>
<example_result>
 
Array
(
   [red] => 226
   [green] => 222
   [blue] => 252
   [alpha] => 0
)
</example_result>
</object>

<object id=1168> 
<name>ocicollsize</name>
<versions>(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним OCI-Collection::size()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1169> 
<name>apache_getenv</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Получить переменную окружения подпроцесса сервера Apache</short-description>
<description>string apache_getenv ( string $variable [, bool $walk_to_top ] ) 
 Получить переменную окружения сервера Apache, указанную параметром variable. 
 Эта функция требует Apache 2, в противном случае она не определена. </description>
<parameters>variable - Переменная окружения сервера Apache 
walk_to_top - Получить переменную верхнего уровня, доступную для всех уровней сервера Apache или нет. </parameters>
<output>Значение переменной окружения сервера Apache в случае успеха или FALSE в случае ошибки. </output>
<errors></errors>
<example>
 SERVER_ADDR. </example>
<example_result>
 
42.24.42.240
</example_result>
</object>

<object id=1170> 
<name>ocicolumntyperaw</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_field_type_raw()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1171> 
<name>sha1</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Возвращает SHA1-хэш строки</short-description>
<description>string sha1 ( string $str [, bool $raw_output = false ] ) 
 Возвращает SHA1-хэш строки str, вычисленный по алгоритму &raquo; US Secure Hash Algorithm 1. </description>
<parameters>str - Входная строка. 
raw_output - Если необязательный аргумент raw_output имеет значение TRUE, хэш возвращается в виде бинарной строки из 20 символов, иначе он будет возвращен в виде 40-символьного шестнадцатеричного числа. </parameters>
<output>Возвращает SHA1-хэш в виде строки. </output>
<errors></errors>
<example><?php
$str = 'яблоко';
                     
if (sha1($str) === '88b184adea10bf987b15257a5d6c5cb94eba69d3') {
    echo "Желаете зеленое или красное яблоко?";
}?></example>
<example_result></example_result>
</object>

<object id=1172> 
<name>PDF_set_text_pos</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Устанавливает позицию текста</short-description>
<description>bool PDF_set_text_pos ( resource $p , float $x , float $y ) 
 Устанавливает позицию вывода текста на страницу. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1173> 
<name>timezone_location_get</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Псевдоним DateTimeZone::getLocation()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1174> 
<name>substr</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает подстроку</short-description>
<description>string substr ( string $string , int $start [, int $length ] ) 
 Возвращает подстроку строки string, начинающейся с start символа по счету и длиной length символов. </description>
<parameters>string - Входная строка. Должна содержать хотя бы один символ. 
start - Если start неотрицателен, возвращаемая подстрока начинается с позиции start от начала строки, считая от нуля. Например, в строке &#039;abcdef&#039;, в позиции 0 находится символ &#039;a&#039;, в позиции 2 - символ &#039;c&#039;, и т.д. </parameters>
<output>Возвращает извлеченную часть строки, или FALSE в случае возникновения ошибки или пустую строку. </output>
<errors>Возвращает FALSE в случае ошибки. <?php
var_dump(substr('a', 1)); // bool(false)
?> </errors>
<example><?php
echo substr('abcdef', 1);     // bcdef
echo substr('abcdef', 1, 3);  // bcd
echo substr('abcdef', 0, 4);  // abcd
echo substr('abcdef', 0, 8);  // abcdef
echo substr('abcdef', -1, 1); // f
// Получить доступ к отдельному символу в строке
// можно также с помощью "квадратных скобок"
$string = 'abcdef';
echo $string[0];                 // a
echo $string[3];                 // d
echo $string[strlen($string)-1]; // f
?></example>
<example_result>
 
1) &#039;pe&#039;
2) &#039;54&#039;
3) &#039;gr&#039;
4) &#039;1&#039;
5) false
6) false
7) &#039;1200&#039;
</example_result>
</object>

<object id=1175> 
<name>oci_result</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Возвращает значение поля из результата запроса</short-description>
<description>mixed oci_result ( resource $statement , mixed $field ) 
 Возвращает данные поля field текущей строки, возвращаемой функцией oci_fetch(). 
 За подробностями по операции отображения типов данных,осуществляемым расширением OCI8, обратитесь к типам данных, поддерживаемых драйвером </description>
<parameters>statement - 
field - Может быть задано номером поля (начиная с 1), либо по имени (в верхнем регистре). </parameters>
<output>Возвращает все значения в виде строки за исключением абстрактных типов (ROWIDs, LOBs и FILEs). Возвращает FALSE в случае ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1176> 
<name>zip_entry_name</name>
<versions>(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)</versions>
<short-description>Получает имя дескриптора директории</short-description>
<description>string zip_entry_name ( resource $zip_entry ) 
 Возвращает имя заданного дескриптора директории. </description>
<parameters>zip_entry - Дескриптор директории, возвращаемый функцией zip_read(). </parameters>
<output>Имя дескриптора директории. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1177> 
<name>swf_actiongotoframe</name>
<versions>(PHP 4)</versions>
<short-description>Play a frame and then stop</short-description>
<description>void swf_actiongotoframe ( int $framenumber ) 
 The swf_actiongotoframe() function will go to the frame specified by framenumber, play it, and then stop. </description>
<parameters>framenumber - The frame number. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1178> 
<name>file_put_contents</name>
<versions>(PHP 5)</versions>
<short-description>Пишет строку в файл</short-description>
<description>int file_put_contents ( string $filename , mixed $data [, int $flags = 0 [, resource $context ]] ) 
 Функция идентична последовательным успешным вызовам функций fopen(), fwrite() и fclose(). 
 Если filename не существует, файл будет создан. Иначе, существующий файл будет перезаписан, за исключением случая, если указан флаг FILE_APPEND. </description>
<parameters>filename - Путь к записываемому файлу. 
data - Записываемые данные. Может быть string, array или ресурсом stream. 
flags - Значением параметра flags может быть любая комбинация следующих флагов, соединенных бинарным оператором ИЛИ (|). 
context - Корректный ресурс контекста, созданный с помощью функции stream_context_create(). </parameters>
<output>Функция возвращает количество записанных байт в файл, или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$file = 'people.txt';
// Открываем файл для получения существующего содержимого
$current = file_get_contents($file);
// Добавляем нового человека в файл
$current .= "John Smith\n";
// Пишем содержимое обратно в файл
file_put_contents($file, $current);
?></example>
<example_result></example_result>
</object>

<object id=1179> 
<name>msession_get_data</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)</versions>
<short-description>Get data session unstructured data</short-description>
<description>string msession_get_data ( string $session ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1180> 
<name>ncurses_slk_attrset</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Set given attributes for soft function-key labels</short-description>
<description>int ncurses_slk_attrset ( int $intarg ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>intarg - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1181> 
<name>pg_client_encoding</name>
<versions>(PHP 4 >= 4.0.3, PHP 5)</versions>
<short-description>Получение кодировки клиента. </short-description>
<description>string pg_client_encoding ([ resource $connection ] ) 
 PostgreSQL поддерживает автоматическое преобразование наборов символов между сервером и клиентом для некоторых кодировок. pg_client_encoding() возвращает клиентскую кодировку в виде строки, представляющей собой стандартный идентификатор кодировки PostgreSQL. 
 Замечание: 
 Функция поддерживается PHP версии 4.0.3 или выше и PostgreSQL версии 7.0 или выше. В случае, если libpg скомпилирована без поддержки многобайтных кодировок, pg_client_encoding() всегда возвращает SQL_ASCII. Набор поддерживаемых кодировок зависит от версии сервера БД и описан в документации PostgreSQL. 
 Функция, используемая для вызова: pg_clientencoding(). </description>
<parameters>connection - Ресурс соединения с базой данных PostgreSQL. Если connection не задан, будет использовано соединение по-умолчанию - последнее соединение созданное функциями pg_connect() или pg_pconnect(). </parameters>
<output>Клиентская кодировка, либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
// Допустим, что $conn - соединение с базой данных, поддерживающей стандарт ISO-8859-1
$encoding = pg_client_encoding($conn);
echo "Кодировка клиента: ", $encoding, "\n";
?></example>
<example_result>
 
Кодировка клиента: ISO-8859-1
</example_result>
</object>

<object id=1182> 
<name>gzuncompress</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Распаковывает строку</short-description>
<description>string gzuncompress ( string $data [, int $length = 0 ] ) 
 Распаковывает строку. </description>
<parameters>data - Данные, сжатые функцией gzcompress(). 
length - Максимальный размер данных для распаковки. </parameters>
<output>Распакованные данные или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$compressed   = gzcompress('Сожми меня', 9);
$uncompressed = gzuncompress($compressed);
echo $uncompressed;
?></example>
<example_result></example_result>
</object>

<object id=1183> 
<name>ifx_prepare</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Prepare an SQL-statement for execution</short-description>
<description>resource ifx_prepare ( string $query , resource $link_identifier [, int $cursor_def ], mixed $blobidarray ) 
 Prepares a query for later use with ifx_do(). 
 For "select-type" queries a cursor is declared and opened. Non-select queries are "execute immediate". 
 For either query type the number of (estimated or real) affected rows is saved for retrieval by ifx_affected_rows(). 
 If the contents of the TEXT (or BYTE) column allow it, you can also use ifx_textasvarchar(1) and ifx_byteasvarchar(1). This allows you to treat TEXT (or BYTE) columns just as if they were ordinary (but long) VARCHAR columns for select queries, and you don&#039;t need to bother with blob id&#039;s. 
 With ifx_textasvarchar(0) or ifx_byteasvarchar(0) (the default situation), select queries will return BLOB columns as blob id&#039;s (integer value). You can get the value of the blob as a string or file with the blob functions (see below). </description>
<parameters>query - The query string. 
link_identifier - The link identifier. 
cursor_def - This optional parameter allows you to make this a scroll and/or hold cursor. It&#039;s a bitmask and can be either IFX_SCROLL, IFX_HOLD, or both or&#039;ed together. 
blobidarray - If you have BLOB (BYTE or TEXT) columns in the query, you can add a blobidarray parameter containing the corresponding "blob ids", and you should replace those columns with a "?" in the query text. </parameters>
<output>Returns a valid result identifier for use by ifx_do(), or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1184> 
<name>crc32</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Вычисляет полином CRC32 для строки</short-description>
<description>int crc32 ( string $str ) 
 Функция вычисляет циклический избыточный код 32-битных полиномов (CRC32) для строки str. Это обычно используется для контроля целостности передаваемых данных. 
 В PHP целые числа имеют знак, поэтому многие контрольные суммы могут оказаться отрицательными. Для получения строкового представления CRC32 без знака используйте формат "%u" в функциях sprintf() или printf(). </description>
<parameters>str - Данные. </parameters>
<output>Возвращает контрольную сумму crc32 строки str в виде целого числа. </output>
<errors></errors>
<example>
 printf(): </example>
<example_result></example_result>
</object>

<object id=1185> 
<name>imap_utf7_encode</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Converts ISO-8859-1 string to modified UTF-7 text</short-description>
<description>string imap_utf7_encode ( string $data ) 
 Converts data to modified UTF-7 text. 
 This is needed to encode mailbox names that contain certain characters which are not in range of printable ASCII characters. </description>
<parameters>data - An ISO-8859-1 string. </parameters>
<output>Returns data encoded with the modified UTF-7 encoding as defined in &raquo; RFC 2060, section 5.1.3 (original UTF-7 was defined in &raquo; RFC1642). </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1186> 
<name>forward_static_call_array</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Call a static method and pass the arguments as array</short-description>
<description>mixed forward_static_call_array ( callback $function , array $parameters ) 
 Calls a user defined function or method given by the function parameter. This function must be called within a method context, it can&#039;t be used outside a class. It uses the late static binding. All arguments of the forwarded method are passed as values, and as an array, similarly to call_user_func_array(). </description>
<parameters>function - The function or method to be called. This parameter may be an array, with the name of the class, and the method, or a string, with a function name. 
parameter - One parameter, gathering all the method parameter in one array. </parameters>
<output>Returns the function result, or FALSE on error. </output>
<errors></errors>
<example><?php
class A
{
    const NAME = 'A';
    public static function test() {
        $args = func_get_args();
        echo static::NAME, " ".join(',', $args)." \n";
    }
}
class B extends A
{
    const NAME = 'B';
    public static function test() {
        echo self::NAME, "\n";
        forward_static_call_array(array('A', 'test'), array('more', 'args'));
        forward_static_call_array( 'test', array('other', 'args'));
    }
}
B::test('foo');
function test() {
        $args = func_get_args();
        echo "C ".join(',', $args)." \n";
    }
?></example>
<example_result>
 
B
B more,args 
C other,args
</example_result>
</object>

<object id=1187> 
<name>rename</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Переименовывает файл или директорию</short-description>
<description>bool rename ( string $oldname , string $newname [, resource $context ] ) 
 Пытается переименовать oldname в newname. </description>
<parameters>oldname - 
newname - Новое имя. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
rename("/tmp/tmp_file.txt", "/home/user/login/docs/my_file.txt");
?></example>
<example_result></example_result>
</object>

<object id=1188> 
<name>ftp_rmdir</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Удаляет директорию</short-description>
<description>bool ftp_rmdir ( resource $ftp_stream , string $directory ) 
 Удаляет директорию directory. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером. 
directory - Имя директории. Параметр должен содержать относительный или абсолютный путь к пустой директории. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$dir = 'www/';
// установка соединения
$conn_id = ftp_connect($ftp_server);
// проверка имени пользователя и пароля
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);
// попытка удаления директории $dir
if (ftp_rmdir($conn_id, $dir)) {
    echo "Директория $dir удалена\n";
} else {
    echo "Не удалось удалить директорию $dir\n";
}
ftp_close($conn_id);
?></example>
<example_result></example_result>
</object>

<object id=1189> 
<name>hash_hmac_file</name>
<versions>(PHP 5 >= 5.1.2, PECL hash >= 1.1)</versions>
<short-description>Генерация хэш-кода на основе ключа, используя метод HMAC и содержимое полученного файла</short-description>
<description>string hash_hmac_file ( string $algo , string $filename , string $key [, bool $raw_output = false ] ) </description>
<parameters>algo - Имя выбранного алгоритма хеширования (например, "md5", "sha256", "haval160,4" и т.д.) Смотрите hash_algos() для получения списка поддерживаемых алгоритмов. 
filename - URL расположения файла или файл для хеширования; Поддерживаются обработчики fopen. 
key - Общий секретный ключ, используемый для генерации HMAC хеш кода. 
raw_output - Когда установлено а TRUE, выводит необработанные двоичные данные. При FALSE, выводит данные в шестнадцатеричной кодировке в нижнем регистре. </parameters>
<output>Возвращает строку содержащую вычисленный хеш-код в шестнадцатеричной кодировке в нижнем регистре. Если raw_output задан как TRUE, то возвращается хеш-код в виде бинарных данных. </output>
<errors></errors>
<example><?php
/* Создаем файл, чтобы вычислить его хеш */
file_put_contents('example.txt', 'Наглый коричневый лисёнок прыгает вокруг ленивой собаки.');
echo hash_hmac_file('md5', 'example.txt', 'secret');
?></example>
<example_result>
 
1855b385e0caae2e41036706d3b7bd32
</example_result>
</object>

<object id=1190> 
<name>mssql_execute</name>
<versions>(PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Executes a stored procedure on a MS SQL server database</short-description>
<description>mixed mssql_execute ( resource $stmt [, bool $skip_results = false ] ) 
 Executes a stored procedure on a MS SQL server database </description>
<parameters>stmt - Statement handle obtained with mssql_init(). 
skip_results - Whenever to skip the results or not. </parameters>
<output></output>
<errors></errors>
<example><?php
// Create a new statement
$stmt = mssql_init('NewBlogEntry');
// Some data strings
$title = 'Test of blogging system';
$content = 'If you can read this, then the new system is compatible with MSSQL';
// Bind values
mssql_bind($stmt, '@author',    'Felipe Pena',  SQLVARCHAR,     false,  false,   60);
mssql_bind($stmt, '@date',      '08/10/2008',   SQLVARCHAR,     false,  false,   20);
mssql_bind($stmt, '@title',     $title,         SQLVARCHAR,     false,  false,   60);
mssql_bind($stmt, '@content',   $content,       SQLTEXT);
// Execute the statement
mssql_execute($stmt);
// And we can free it like so:
mssql_free_statement($stmt);
?></example>
<example_result></example_result>
</object>

<object id=1191> 
<name>timezone_name_get</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Псевдоним DateTimeZone::getName()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1192> 
<name>sybase_query</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Sends a Sybase query</short-description>
<description>mixed sybase_query ( string $query [, resource $link_identifier ] ) 
 sybase_query() sends a query to the currently active database on the server that&#039;s associated with the specified link identifier. </description>
<parameters>query - 
link_identifier - If the link identifier isn&#039;t specified, the last opened link is assumed. If no link is open, the function tries to establish a link as if sybase_connect() was called, and use it. </parameters>
<output>Returns a positive Sybase result identifier on success, FALSE on error, or TRUE if the query was successful but didn&#039;t return any columns. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1193> 
<name>mcrypt_generic_init</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>This function initializes all buffers needed for encryption</short-description>
<description>int mcrypt_generic_init ( resource $td , string $key , string $iv ) 
 You need to call this function before every call to mcrypt_generic() or mdecrypt_generic(). </description>
<parameters>td - The encryption descriptor. 
key - The maximum length of the key should be the one obtained by calling mcrypt_enc_get_key_size() and every value smaller than this is legal. 
iv - The IV should normally have the size of the algorithms block size, but you must obtain the size by calling mcrypt_enc_get_iv_size(). IV is ignored in ECB. IV MUST exist in CFB, CBC, STREAM, nOFB and OFB modes. It needs to be random and unique (but not secret). The same IV must be used for encryption/decryption. If you do not want to use it you should set it to zeros, but this is not recommended. </parameters>
<output>The function returns a negative value on error: -3 when the key length was incorrect, -4 when there was a memory allocation problem and any other return value is an unknown error. If an error occurs a warning will be displayed accordingly. FALSE is returned if incorrect parameters were passed. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1194> 
<name>iconv_mime_decode_headers</name>
<versions>(PHP 5)</versions>
<short-description>Декодирует несколько полей заголовка MIME</short-description>
<description>array iconv_mime_decode_headers ( string $encoded_headers [, int $mode = 0 [, string $charset = ini_get("iconv.internal_encoding") ]] ) 
 Декодирует несколько полей заголовка MIME за один раз. </description>
<parameters>encoded_headers - Нераскодированные заголовки в виде строки. 
mode - Параметр mode определяет поведение, если iconv_mime_decode_headers() обнаружит неправильное поле заголовка MIME. Можно указать любую комбинацию следующих битовых масок. Битовые маски iconv_mime_decode_headers() Значение Константа Описание 1 ICONV_MIME_DECODE_STRICT Строго следовать стандартам, определённым в &raquo; RFC2047. Эта опция по умолчанию отключена, так как, к сожалению, много проприетарных программ электронной почты не следуют стандартам, и генерируют некорректные заголовки MIME. 2 ICONV_MIME_DECODE_CONTINUE_ON_ERROR Если установлена, iconv_mime_decode_headers() будет пытаться игнорировать любые ошибки и продолжать обработку текущего заголовка. 
charset - Необязательный параметр charset указывает кодировку, в которой будет представлен результат. Если опущен, будет использовано значение директивы iconv.internal_encoding. </parameters>
<output>В случае успеха возвращает ассоциативный массив с полями MIME-заголовков, указанных параметром encoded_headers, или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$headers_string = <<<EOF
Subject: =?UTF-8?B?UHLDvGZ1bmcgUHLDvGZ1bmc=?=
To: example@example.com
Date: Thu, 1 Jan 1970 00:00:00 +0000
Message-Id: <example@example.com>
Received: from localhost (localhost [127.0.0.1]) by localhost
    with SMTP id example for <example@example.com>;
    Thu, 1 Jan 1970 00:00:00 +0000 (UTC)
    (envelope-from example-return-0000-example=example.com@example.com)
Received: (qmail 0 invoked by uid 65534); 1 Thu 2003 00:00:00 +0000
EOF;
$headers =  iconv_mime_decode_headers($headers_string, 0, "ISO-8859-1");
print_r($headers);
?></example>
<example_result>
 
Array
(
    [Subject] => Prüfung Prüfung
    [To] => example@example.com
    [Date] => Thu, 1 Jan 1970 00:00:00 +0000
    [Message-Id] => <example@example.com>
    [Received] => Array
        (
            [0] => from localhost (localhost [127.0.0.1]) by localhost with SMTP id example for <example@example.com>; Thu, 1 Jan 1970 00:00:00 +0000 (UTC) (envelope-from example-return-0000-example=example.com@example.com)
            [1] => (qmail 0 invoked by uid 65534); 1 Thu 2003 00:00:00 +0000
        )

)
</example_result>
</object>

<object id=1195> 
<name>ncurses_wcolor_set</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Sets windows color pairings</short-description>
<description>int ncurses_wcolor_set ( resource $window , int $color_pair ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>window - 
color_pair - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1196> 
<name>mb_internal_encoding</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Set/Get internal character encoding</short-description>
<description>mixed mb_internal_encoding ([ string $encoding = mb_internal_encoding() ] ) 
 Set/Get the internal character encoding </description>
<parameters>encoding - encoding is the character encoding name used for the HTTP input character encoding conversion, HTTP output character encoding conversion, and the default character encoding for string functions defined by the mbstring module. </parameters>
<output>If encoding is set, then Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. If encoding is omitted, then the current character encoding name is returned. </output>
<errors></errors>
<example><?php
/* Set internal character encoding to UTF-8 */
mb_internal_encoding("UTF-8");
/* Display current internal character encoding */
echo mb_internal_encoding();
?></example>
<example_result></example_result>
</object>

<object id=1197> 
<name>posix_getpwnam</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Return info about a user by username</short-description>
<description>array posix_getpwnam ( string $username ) 
 Returns an array of information about the given user. </description>
<parameters>username - An alphanumeric username. </parameters>
<output>On success an array with the following elements is returned, else FALSE is returned: The user information array Element Description name The name element contains the username of the user. This is a short, usually less than 16 character "handle" of the user, not the real, full name. This should be the same as the username parameter used when calling the function, and hence redundant. passwd The passwd element contains the user&#039;s password in an encrypted format. Often, for example on a system employing "shadow" passwords, an asterisk is returned instead. uid User ID of the user in numeric form. gid The group ID of the user. Use the function posix_getgrgid() to resolve the group name and a list of its members. gecos GECOS is an obsolete term that refers to the finger information field on a Honeywell batch processing system. The field, however, lives on, and its contents have been formalized by POSIX. The field contains a comma separated list containing the user&#039;s full name, office phone, office number, and home phone number. On most systems, only the user&#039;s full name is available. dir This element contains the absolute path to the home directory of the user. shell The shell element contains the absolute path to the executable of the user&#039;s default shell. </output>
<errors></errors>
<example><?php
$userinfo = posix_getpwnam("tom");
print_r($userinfo);
?></example>
<example_result>
 
Array
(
    [name]    => tom
    [passwd]  => x
    [uid]     => 10000
    [gid]     => 42
    [geocs]   => "tom,,,"
    [dir]     => "/home/tom"
    [shell]   => "/bin/bash"
)
</example_result>
</object>

<object id=1198> 
<name>pg_copy_to</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Копирует данные из таблицы в массив </short-description>
<description>array pg_copy_to ( resource $connection , string $table_name [, string $delimiter [, string $null_as ]] ) 
 pg_copy_to() копирует данные из таблицы в массив. Для получения записей посылает серверу команду SQL COPY TO. </description>
<parameters>connection - Ресурс соединения с базой данных PostgreSQL. 
table_name - Имя таблицы, из которой данные копируются в массив rows. 
delimiter - Символ-разделитель, отделяющий значения полей в элементах массива rows. По умолчанию TAB. 
null_as - Этот параметр отвечает за то, как значения SQL NULL будут представлены в массиве rows. По-умолчанию \N ("\\N"). </parameters>
<output>Массив array, в котором каждый элемент - строка, полученная с помощью COPY. В случае ошибки возвращает FALSE. </output>
<errors></errors>
<example><?php
   $db = pg_connect("dbname=publisher") or die("Невозможно подключиться");
   
   $rows = pg_copy_to($db, $table_name);
   
   pg_query($db, "DELETE FROM $table_name");
   
   pg_copy_from($db, $table_name, $rows);
?></example>
<example_result></example_result>
</object>

<object id=1199> 
<name>dbase_get_record</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает записи из базы данных, как из индексированного массива </short-description>
<description>array dbase_get_record ( int $dbase_identifier , int $record_number ) 
 Получает записи из базы данных, как из индексированного массива. </description>
<parameters>dbase_identifier - Идентификатор базы данных, возвращаемый функцией dbase_open() или dbase_create(). 
record_number - Индекс записи. (Здесь может отличаться от физического номера записи. - прим. пер.) </parameters>
<output>Возвращает запись в виде массива. Массив будет включать в себя ключ deleted который равен 1, если запись помечена на удаление (см. dbase_delete_record()). </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1200> 
<name>xslt_errno</name>
<versions>(PHP 4 >= 4.0.3)</versions>
<short-description>Возвращает код ошибки</short-description>
<description>int xslt_errno ( resource $xh ) 
 Возвращает код последней ошибки, произошедшей в работе заданного XSLT процессора. </description>
<parameters>xh - Ресурс XSLT процессора, возвращаемый функцией xslt_create(). </parameters>
<output>Возвращает целое число, соответствующее коду ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1201> 
<name>ociinternaldebug</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_internal_debug()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1202> 
<name>PDF_setrgbcolor</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set fill and stroke rgb color values [deprecated]</short-description>
<description>bool PDF_setrgbcolor ( resource $p , float $red , float $green , float $blue ) 
 Sets the current fill and stroke color to the supplied RGB values. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. 
 This function is deprecated since PDFlib version 4, use PDF_setcolor() instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1203> 
<name>imap_renamemailbox</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Rename an old mailbox to new mailbox</short-description>
<description>bool imap_renamemailbox ( resource $imap_stream , string $old_mbox , string $new_mbox ) 
 This function renames on old mailbox to new mailbox (see imap_open() for the format of mbox names). </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
old_mbox - The old mailbox name, see imap_open() for more information 
new_mbox - The new mailbox name, see imap_open() for more information </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1204> 
<name>gmp_com</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Вычисляет дополнение до единицы числа</short-description>
<description>resource gmp_com ( resource $a ) 
 Возвращает дополнение до единицы числа a. </description>
<parameters>a - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.</parameters>
<output>Возвращает дополнение до единицы числа a в виде числа GMP. </output>
<errors></errors>
<example><?php
$com = gmp_com("1234");
echo gmp_strval($com) . "\n";
?></example>
<example_result>
 
-1235
</example_result>
</object>

<object id=1205> 
<name>mime_content_type</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Определяет MIME-тип содержимого файла (устаревшее)</short-description>
<description>string mime_content_type ( string $filename ) 
 Возвращает MIME-тип содержимого файла, используя для определения информацию из файла magic.mime. </description>
<parameters>filename - Путь к проверяемому файлу. </parameters>
<output>Возвращает тип содержимого в формате MIME, например text/plain или application/octet-stream. </output>
<errors></errors>
<example><?php
echo mime_content_type('php.gif') . "\n";
echo mime_content_type('test.php');
?></example>
<example_result>
 
image/gif
text/plain
</example_result>
</object>

<object id=1206> 
<name>XMLWriter::endPI</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Завершить текущую инструкцию обработки (PI)</short-description>
<description>bool XMLWriter::endPI ( void ) 
 Процедурный стиль bool xmlwriter_end_pi ( resource $xmlwriter )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1207> 
<name>swf_addcolor</name>
<versions>(PHP 4)</versions>
<short-description>Set the global add color to the rgba value specified</short-description>
<description>void swf_addcolor ( float $r , float $g , float $b , float $a ) 
 Sets the global add color to the specified color. This color is then implicitly used by the swf_placeobject(), swf_modifyobject() and swf_addbuttonrecord() functions. 
 The color of the object will be add by the given values when the object is written to the screen. </description>
<parameters>r - Red value 
g - Green value 
b - Blue value 
a - Alpha value </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1208> 
<name>imap_setacl</name>
<versions>(PHP 4 >= 4.0.7, PHP 5)</versions>
<short-description>Sets the ACL for a giving mailbox</short-description>
<description>bool imap_setacl ( resource $imap_stream , string $mailbox , string $id , string $rights ) 
 Sets the ACL for a giving mailbox. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
mailbox - The mailbox name, see imap_open() for more information 
id - The user to give the rights to. 
rights - The rights to give to the user. Passing an empty string will delete acl. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1209> 
<name>basename</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает последний компонент имени из указанного пути</short-description>
<description>string basename ( string $path [, string $suffix ] ) 
 При передаче строки с путем к файлу или каталогу, данная функция вернет последний компонент имени из данного пути. </description>
<parameters>path - Путь. 
suffix - Если компонент имени заканчивается на suffix, то он также будет отброшен. </parameters>
<output>Возвращает базовое имя указанного пути path. </output>
<errors></errors>
<example><?php
echo "1) ".basename("/etc/sudoers.d", ".d").PHP_EOL;
echo "2) ".basename("/etc/passwd").PHP_EOL;
echo "3) ".basename("/etc/").PHP_EOL;
echo "4) ".basename(".").PHP_EOL;
echo "5) ".basename("/");
?></example>
<example_result>
 
1) sudoers
2) passwd
3) etc
4) .
5)
</example_result>
</object>

<object id=1210> 
<name>exp</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Вычисляет число e в степени</short-description>
<description>float exp ( float $arg ) 
 Возвращает e в степени arg. 
 Замечание: 
 Число e - основание натурального логарифма. Приблизительно равно 2.718282. </description>
<parameters>arg - Степень для возведения </parameters>
<output>&#039;e&#039; возводится в степень arg </output>
<errors></errors>
<example><?php
echo exp(12) . "\n";
echo exp(5.7);
?></example>
<example_result>
 
1.6275E+005
298.87
</example_result>
</object>

<object id=1211> 
<name>imageantialias</name>
<versions>(PHP 4 >= 4.3.2, PHP 5)</versions>
<short-description>Should antialias functions be used or not</short-description>
<description>bool imageantialias ( resource $image , bool $enabled ) 
 Activate the fast drawing antialiased methods for lines and wired polygons. It does not support alpha components. It works using a direct blend operation. It works only with truecolor images. 
 Thickness and styled are not supported. 
 Using antialiased primitives with transparent background color can end with some unexpected results. The blend method uses the background color as any other colors. The lack of alpha component support does not allow an alpha based antialiasing method. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
enabled - Whether to enable antialiasing or not. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Setup an anti-aliased image and a normal image
$aa = imagecreatetruecolor(400, 100);
$normal = imagecreatetruecolor(200, 100);
// Switch antialiasing on for one image
imageantialias($aa, true);
// Allocate colors
$red = imagecolorallocate($normal, 255, 0, 0);
$red_aa = imagecolorallocate($aa, 255, 0, 0);
// Draw two lines, one with AA enabled
imageline($normal, 0, 0, 200, 100, $red);
imageline($aa, 0, 0, 200, 100, $red_aa);
// Merge the two images side by side for output (AA: left, Normal: Right)
imagecopymerge($aa, $normal, 200, 0, 0, 0, 200, 100, 100);
// Output image
header('Content-type: image/png');
imagepng($aa);
imagedestroy($aa);
imagedestroy($normal);
?></example>
<example_result></example_result>
</object>

<object id=1212> 
<name>stream_notification_callback</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Callback-функция для параметра контекста notification</short-description>
<description>void stream_notification_callback ( int $notification_code , int $severity , string $message , int $message_code , int $bytes_transferred , int $bytes_max ) 
 callback-функция, используемая параметром контекста notification, вызываемая во время события. 
 Замечание: 
 Это не настоящая функция, а только прототип того, как должна быть реализована функция. </description>
<parameters>notification_code - Одна из констант оповещения STREAM_NOTIFY_*. 
severity - Одна из констант оповещения STREAM_NOTIFY_SEVERITY_*. 
message - Передаётся, если для события доступно описывающее сообщение. 
message_code - Передаётся, если для события доступен код описывающего сообщения. 
bytes_transferred - Если доступно, то параметр bytes_transferred будет заполнен. 
bytes_max - Если доступно, то параметр bytes_max будет заполнен. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
function stream_notification_callback($notification_code, $severity, $message, $message_code, $bytes_transferred, $bytes_max) {
    switch($notification_code) {
        case STREAM_NOTIFY_RESOLVE:
        case STREAM_NOTIFY_AUTH_REQUIRED:
        case STREAM_NOTIFY_COMPLETED:
        case STREAM_NOTIFY_FAILURE:
        case STREAM_NOTIFY_AUTH_RESULT:
            var_dump($notification_code, $severity, $message, $message_code, $bytes_transferred, $bytes_max);
            /* Игнорируем */
            break;
        case STREAM_NOTIFY_REDIRECTED:
            echo "Перенаправлены на: ", $message;
            break;
        case STREAM_NOTIFY_CONNECT:
            echo "Подсоединились...";
            break;
        case STREAM_NOTIFY_FILE_SIZE_IS:
            echo "Получили размер файла: ", $bytes_max;
            break;
        case STREAM_NOTIFY_MIME_TYPE_IS:
            echo "Получили mime-тип файла: ", $message;
            break;
        case STREAM_NOTIFY_PROGRESS:
            echo "Пошёл прогресс, пока загружено ", $bytes_transferred, " байт";
            break;
    }
    echo "\n";
}
$ctx = stream_context_create();
stream_context_set_params($ctx, array("notification" => "stream_notification_callback"));
file_get_contents("http://php.net/contact", false, $ctx);
?></example>
<example_result>
 
Подсоединились...
Получили mime-тип файла: text/html; charset=utf-8
Перенаправлены на: http://no.php.net/contact
Подсоединились...
Получили размер файла: 0
Получили mime-тип файла: text/html; charset=utf-8
Перенаправлены на: http://no.php.net/contact.php
Подсоединились...
Получили размер файла: 4589
Получили mime-тип файла: text/html;charset=utf-8
Пошёл прогресс, пока загружено 0 байт
Пошёл прогресс, пока загружено 0 байт
Пошёл прогресс, пока загружено 0 байт
Пошёл прогресс, пока загружено 1440 байт
Пошёл прогресс, пока загружено 2880 байт
Пошёл прогресс, пока загружено 4320 байт
Пошёл прогресс, пока загружено 5760 байт
Пошёл прогресс, пока загружено 6381 байт
Пошёл прогресс, пока загружено 7002 байт
</example_result>
</object>

<object id=1213> 
<name>dbx_escape_string</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)</versions>
<short-description>Escape a string so it can safely be used in an sql-statement </short-description>
<description>string dbx_escape_string ( object $link_identifier , string $text ) 
 Escape the given string so that it can safely be used in an sql-statement. </description>
<parameters>link_identifier - The DBX link object returned by dbx_connect() 
text - The string to escape. </parameters>
<output>Returns the text, escaped where necessary (such as quotes, backslashes etc). On error, NULL is returned. </output>
<errors></errors>
<example><?php
$link   = dbx_connect(DBX_MYSQL, "localhost", "db", "username", "password")
    or die("Could not connect");
$text = dbx_escape_string($link, "It\'s quoted and backslashed (\\).");
$result = dbx_query($link, "insert into tbl (txt) values ('" . $text . "')");
if ($result == 0) {
    echo dbx_error($link);
}dbx_close($link);
?></example>
<example_result></example_result>
</object>

<object id=1214> 
<name>date_sunrise</name>
<versions>(PHP 5)</versions>
<short-description>Возвращает время рассвета для заданных дня и местоположения </short-description>
<description>mixed date_sunrise ( int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get("date.default_latitude") [, float $longitude = ini_get("date.default_longitude") [, float $zenith = ini_get("date.sunrise_zenith") [, float $gmt_offset = 0 ]]]]] ) 
 date_sunrise() возвращает время рассвета для определенных дня (заданного аргументом timestamp) и местоположения. </description>
<parameters>timestamp - Временная метка (timestamp) дня, для которого определяется время рассвета. 
format - format constants константа описание пример SUNFUNCS_RET_STRING тип возвращаемого результата string 16:46 SUNFUNCS_RET_DOUBLE тип возвращаемого результата float 16.78243132 SUNFUNCS_RET_TIMESTAMP тип возвращаемого результата integer (временная метка) 1095034606 
latitude - По умолчанию в Северном полушарии, для Южного передается отрицательная величина. См. также date.default_latitude. 
longitude - По умолчанию восточная, для указания западной долготы передается отрицательная величина. См. также date.default_longitude. 
zenith - По умолчанию: date.sunrise_zenith 
gmtoffset - Задается в часах. </parameters>
<output>Возвращает время восхода солнца в заданном формате format или FALSE в случае возникновения ошибки. </output>
<errors>Каждый вызов к функциям даты/времени при неправильных настройках временной зоны сгенерирует ошибку уровня E_NOTICE,и/или ошибку уровня E_STRICT или E_WARNING при использовании системныхнастроек или переменной окружения TZ. Смотрите также date_default_timezone_set()</errors>
<example><?php
/* расчет времени восхода солнца в Лиссабоне, Португалия
Latitude: 38.4 North
Longitude: 9 West
Zenith ~= 90
offset: +1 GMT
*/
echo date("D M d Y"). ', время восхода солнца : ' .date_sunrise(time(), SUNFUNCS_RET_STRING, 38.4, -9, 90, 1);
?></example>
<example_result>
 
Mon Dec 20 2004, время восхода солнца : 08:54
</example_result>
</object>

<object id=1215> 
<name>XMLWriter::startComment</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 1.0.0)</versions>
<short-description>Создает стартовый комментарий</short-description>
<description>bool XMLWriter::startComment ( void ) 
 Процедурный стиль bool xmlwriter_start_comment ( resource $xmlwriter )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1216> 
<name>gmp_popcount</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Количество единиц в двоичной записи числа</short-description>
<description>int gmp_popcount ( resource $a ) 
 Возвращает количество единиц в двоичной записи числа. </description>
<parameters>a - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.</parameters>
<output>Количество единиц в двоичной записи числа a, в виде числа типа integer. </output>
<errors></errors>
<example><?php
$pop1 = gmp_init("10000101", 2); // 3 1's
echo gmp_popcount($pop1) . "\n";
$pop2 = gmp_init("11111110", 2); // 7 1's
echo gmp_popcount($pop2) . "\n";
?></example>
<example_result>
 
3
7
</example_result>
</object>

<object id=1217> 
<name>pg_result_status</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает состояние результата запроса </short-description>
<description>mixed pg_result_status ( resource $result [, int $type = PGSQL_STATUS_LONG ] ) 
 pg_result_status() возвращает текущее состояние ресурса результата запроса, либо тэг завершения сервером работы с с этим ресурсом. </description>
<parameters>result - Ресурс результата запроса PostgreSQL, возвращаемый функциями pg_query(), pg_query_params() или pg_execute() (в числе прочих). 
type - Принимает одно из двух значений: PGSQL_STATUS_LONG для получения числового обозначения состояния result, либо PGSQL_STATUS_STRING для получения тэга состаяния в виде строки. По умолчанию используется PGSQL_STATUS_LONG. </parameters>
<output>Если в качестве аргумента передается PGSQL_STATUS_LONG, то возвращается одна из перечисленных констант: PGSQL_EMPTY_QUERY, PGSQL_COMMAND_OK, PGSQL_TUPLES_OK, PGSQL_COPY_OUT, PGSQL_COPY_IN, PGSQL_BAD_RESPONSE, PGSQL_NONFATAL_ERROR, PGSQL_FATAL_ERROR. В противном случае функция вернет строковое представление состояния результата запроса. </output>
<errors></errors>
<example><?php
// Подключаемся к базе данных
$conn = pg_pconnect("dbname=publisher");
// Выполняем команду COPY
$result = pg_query($conn, "COPY authors FROM STDIN;");
// Получаем состояние результата запроса
$status = pg_result_status($result);
// Разбираем полученные данные
if ($status == PGSQL_COPY_IN)
   echo "Copy began.";
else
   echo "Copy failed.";
 
?></example>
<example_result>
 
Copy began.
</example_result>
</object>

<object id=1218> 
<name>openssl_private_encrypt</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Encrypts data with private key </short-description>
<description>bool openssl_private_encrypt ( string $data , string &$crypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ] ) 
 openssl_private_encrypt() encrypts data with private key and stores the result into crypted. Encrypted data can be decrypted via openssl_public_decrypt(). 
 This function can be used e.g. to sign data (or its hash) to prove that it is not written by someone else. </description>
<parameters>data - 
crypted - 
key - 
padding - padding can be one of OPENSSL_PKCS1_PADDING, OPENSSL_NO_PADDING. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1219> 
<name>mb_ereg_search_setpos</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Задает начальную позицию в строке, с которой начнется поиск соответствий регулярному выражению </short-description>
<description>bool mb_ereg_search_setpos ( int $position ) 
 mb_ereg_search_setpos() задает начальную позицию, с которой начнется поиск соответствий регулярному выражению функцией mb_ereg_search(). </description>
<parameters>position - Устанавливаемая позиция. </parameters>
<output>Для этой функции будетиспользована внутренняя кодировка или кодировка, установленная функцией mb_regex_encoding().</output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1220> 
<name>is_dir</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Определяет, является ли имя файла директорией</short-description>
<description>bool is_dir ( string $filename ) 
 Определяет, является ли имя файла директорией. </description>
<parameters>filename - Путь к файлу. Если filename является относительным именем, он будет проверяться относительно текущей рабочей директории. Если filename является символической или жесткой ссылкой, то ссылка будет раскрыта и проверена. При включенном безопасный режим или open_basedir могут применяться дальнейшие ограничения. </parameters>
<output>Возвращает TRUE, если файл существует и является директорией, иначе возвращается FALSE. </output>
<errors>В случае неудачного завершения работы генерируется ошибка уровня E_WARNING.</errors>
<example><?php
var_dump(is_dir('a_file.txt'));
var_dump(is_dir('bogus_dir/abc'));
var_dump(is_dir('..')); // на одну директорию выше
?></example>
<example_result>
 
bool(false)
bool(false)
bool(true)
</example_result>
</object>

<object id=1221> 
<name>stream_context_set_option</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Устанавливает опцию для потока/обёртки/контекста</short-description>
<description>bool stream_context_set_option ( resource $stream_or_context , string $wrapper , string $option , mixed $value ) bool stream_context_set_option ( resource $stream_or_context , array $options )</description>
<parameters>stream_or_context - Поток или ресурс контекста, к которому будут применены опции. 
options - Опции, которые будут применены к конексту. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1222> 
<name>is_integer</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним is_int()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1223> 
<name>timezone_version_get</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Получение номера версии базы данных временных зон </short-description>
<description>string timezone_version_get ( void ) 
 Возвращает номер версии базы данных временных зон. </description>
<parameters></parameters>
<output>Возвращает string. </output>
<errors></errors>
<example><?php
echo timezone_version_get();
?></example>
<example_result>
 
2009.7
</example_result>
</object>

<object id=1224> 
<name>hw_Document_BodyTag</name>
<versions>(PHP 4)</versions>
<short-description>Body tag of hw_document</short-description>
<description>string hw_document_bodytag ( int $hw_document [, string $prefix ] ) 
 Returns the BODY tag of the document. If the document is an HTML document the BODY tag should be printed before the document. 
 For backward compatibility, hw_documentbodytag() is also accepted. This is deprecated, however. </description>
<parameters>hw_document - The document identifier. 
prefix - </parameters>
<output>Returns the BODY tag as a string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1225> 
<name>readgzfile</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выводит содержимое gz-файла</short-description>
<description>int readgzfile ( string $filename [, int $use_include_path = 0 ] ) 
 Читает файл, распаковывает его и записывает в стандартный вывод. 
 Может также использоваться для чтения файла, не имеющего формат gzip; в этом случае readgzfile() непосредственно читает из файла без дополнительной обработки. </description>
<parameters>filename - Имя файла. Этот файл будет открыт и его содержимое будет записано в стандартный вывод. 
use_include_path - Вы можете использовать этот необязательный параметр и установить его в 1, если необходимо, чтобы поиск файла также осуществлялся в директориях include_path. </parameters>
<output>Возвращает количество байтов в файле (после распаковки). Если возникает ошибка, возвращается FALSE и, если функция не была вызвана как @readgzfile, выводится сообщение об ошибке. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1226> 
<name>spl_autoload_unregister</name>
<versions>(PHP 5 >= 5.1.2)</versions>
<short-description>Unregister given function as __autoload() implementation</short-description>
<description>bool spl_autoload_unregister ( mixed $autoload_function ) 
 Unregister a function from the spl provided __autoload stack. If the stack is activated and empty after unregistering the given function then it will be deactivated. 
 When this function results in the autoload stack being deactivated, any __autoload function that previously existed will not be reactivated. </description>
<parameters>autoload_function - The autoload function being unregistered. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1227> 
<name>XMLWriter::writeCData</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Записать полный тэг CDATA</short-description>
<description>bool XMLWriter::writeCData ( string $content ) 
 Процедурный стиль bool xmlwriter_write_cdata ( resource $xmlwriter , string $content )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
content - Содержимое CDATA. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1228> 
<name>nsapi_response_headers</name>
<versions>(PHP 4 >= 4.3.3, PHP 5)</versions>
<short-description>Fetch all HTTP response headers </short-description>
<description>array nsapi_response_headers ( void ) 
 Gets all the NSAPI response headers. </description>
<parameters></parameters>
<output>Returns an associative array with all the NSAPI response headers. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1229> 
<name>hash_copy</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Копирует контекст хеширования</short-description>
<description>resource hash_copy ( resource $context ) </description>
<parameters>context - Контекст хеширования, возвращенный hash_init(). </parameters>
<output>Возвращает копию ресурса контекста хеширования. </output>
<errors></errors>
<example><?php
$context = hash_init("md5");
hash_update($context, "data");
/* копия контекста для дальнейшего использования */
$copy_context = hash_copy($context);
echo hash_final($context), "\n";
hash_update($copy_context, "data");
echo hash_final($copy_context), "\n";
?></example>
<example_result>
 
8d777f385d3dfec8815d20f7496026dc
511ae0b1c13f95e5f08f1a0dd3da3d93
</example_result>
</object>

<object id=1230> 
<name>xptr_eval</name>
<versions>(PHP 4)</versions>
<short-description>Вычисляет XPtr Location Path в заданной строке </short-description>
<description>int XPathContext::xptr_eval ( string $eval_str [, domnode $contextnode ] ) int xptr_eval ( XPathContext $xpath_context , string $eval_str [, domnode $contextnode ] )</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1231> 
<name>sqlite_last_insert_rowid</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Возвращает идентификатор последней вставленной записи</short-description>
<description>int sqlite_last_insert_rowid ( resource $dbhandle ) 
 Объектно-ориентированный стиль (метод): int SQLiteDatabase::lastInsertRowid ( void )</description>
<parameters>dbhandle - Ресурс базы данных SQLite, полученный из функции sqlite_open() в случае использования процедурного подхода. Этот параметр не требуется при использовании объектно-ориентированного подхода. </parameters>
<output>Возвращает идентификатор записи в виде целого числа. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1232> 
<name>session_commit</name>
<versions>(PHP 4 >= 4.4.0, PHP 5)</versions>
<short-description>Псевдоним session_write_close()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1233> 
<name>xml_parser_create</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Создание XML анализатора </short-description>
<description>resource xml_parser_create ([ string $encoding ] ) 
 xml_parser_create() создает новый XML анализатор и возвращает ссылающийся на него ресурс, который можно использовать в других XML функциях. </description>
<parameters>encoding - Необязательный аргумент encoding задает кодировку символов для ввода/вывода в PHP 4. Начиная с PHP 5, кодировка входных данных определяется автоматически, а encoding задает кодировку только для выводимых данных. В PHP 4 кодировка по умолчанию для выходных данных та же, что и входных. Если передается пустая строка, анализатор попытается определить кодировку, просматривая первые 3 или 4 байта. В PHP 5.0.0 и 5.0.1 кодировка по умолчанию ISO-8859-1. Для версий PHP 5.0.2 и выше - UTF-8. Список поддерживаемых кодировок: ISO-8859-1, UTF-8 и US-ASCII. </parameters>
<output>Возвращает ресурс созданного XML анализатора. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1234> 
<name>imagecreatefromgd2</name>
<versions>(PHP 4 >= 4.0.7, PHP 5)</versions>
<short-description>Create a new image from GD2 file or URL</short-description>
<description>resource imagecreatefromgd2 ( string $filename ) 
 Create a new image from GD2 file or URL. Подсказка
 Для этой функции вы можете использовать URLв качестве имени файла, если была включена опция fopen wrappers. Смотрите болееподробную информацию об определении имени файла в описании функцииfopen(). Смотрите также список поддерживаемых оберток URL, их возможности, замечания по использованию и списокпредопределенных констант в Поддерживаемые протоколы и обработчики (wrappers).</description>
<parameters>filename - Path to the GD2 image. </parameters>
<output>Возвращает ресурс изображения в случае успеха, или FALSE в случае ошибки.</output>
<errors></errors>
<example><?php
// Load the gd2 image
$im = imagecreatefromgd2('./test.gd2');
// Apply an effect on the image, in this 
// case negate the image if PHP 5+
if(function_exists('imagefilter'))
{    imagefilter($im, IMG_FILTER_NEGATE);
}
// Save the image
imagegd2($im, './test_updated.gd2');
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=1235> 
<name>similar_text</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Вычисляет степень похожести двух строк</short-description>
<description>int similar_text ( string $first , string $second [, float &$percent ] ) 
 Вычисляет степень похожести двух строк по алгоритму, описанному Oliver [1993]. Эта реализация алгоритма не использует стека, использованного в оригинале, вместо этого применяются рекурсивные вызовы, что в некоторых случаях может ускорить процесс. Сложность алгоритма составляет O(N**3), где N - длина более длинной из двух строк. </description>
<parameters>first - Первая строка. 
second - Вторая строка. 
percent - При передаче по ссылке третьего аргумента, similar_text() присваивоит ему степень похожести двух строк в процентах. </parameters>
<output>Возвращается количество совпадающих символов в двух строках. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1236> 
<name>imagestringup</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Draw a string vertically</short-description>
<description>bool imagestringup ( resource $image , int $font , int $x , int $y , string $string , int $color ) 
 Draws a string vertically at the given coordinates. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
font - Может принимать значения 1, 2, 3, 4, 5 для встроенных шрифтов в кодировкеlatin2 (более высокое число соответствует большему шрифту) или любому из ваших собственных идентификаторов шрифтов,зарегистрированных с помощью imageloadfont().
x - x-coordinate of the bottom left corner. 
y - y-coordinate of the bottom left corner. 
string - The string to be written. 
color - A color identifier created with imagecolorallocate(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// create a 100*100 image
$im = imagecreatetruecolor(100, 100);
// Write the text
$textcolor = imagecolorallocate($im, 0xFF, 0xFF, 0xFF);
imagestringup($im, 3, 40, 80, 'gd library', $textcolor);
// Save the image
imagepng($im, './stringup.png');
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=1237> 
<name>is_array</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Определяет, является ли переменная массивом</short-description>
<description>bool is_array ( mixed $var ) 
 Определяет, является ли данная переменная массивом. </description>
<parameters>var - Проверяемая переменная. </parameters>
<output>Возвращает TRUE, если переменная var является массивом array, или FALSE в противном случае. </output>
<errors></errors>
<example><?php
$yes = array('это', 'массив');
echo is_array($yes) ? 'Массив' : 'Не массив';
echo "\n";
$no = 'это строка';
echo is_array($no) ? 'Массив' : 'Не массив';
?></example>
<example_result>
 
Массив
Не массив
</example_result>
</object>

<object id=1238> 
<name>openssl_x509_free</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Free certificate resource</short-description>
<description>void openssl_x509_free ( resource $x509cert ) 
 openssl_x509_free() frees the certificate associated with the specified x509cert resource from memory. </description>
<parameters>x509cert - </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1239> 
<name>gd_info</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Retrieve information about the currently installed GD library</short-description>
<description>array gd_info ( void ) 
 Gets information about the version and capabilities of the installed GD library. </description>
<parameters></parameters>
<output>Returns an associative array. </output>
<errors></errors>
<example><?php
var_dump(gd_info());
?></example>
<example_result>
 
array(9) {
  ["GD Version"]=>
  string(24) "bundled (2.0 compatible)"
  ["FreeType Support"]=>
  bool(false)
  ["T1Lib Support"]=>
  bool(false)
  ["GIF Read Support"]=>
  bool(true)
  ["GIF Create Support"]=>
  bool(false)
  ["JPEG Support"]=>
  bool(false)
  ["PNG Support"]=>
  bool(true)
  ["WBMP Support"]=>
  bool(true)
  ["XBM Support"]=>
  bool(false)
}
</example_result>
</object>

<object id=1240> 
<name>diskfreespace</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним disk_free_space()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1241> 
<name>fbsql_insert_id</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Get the id generated from the previous INSERT operation</short-description>
<description>int fbsql_insert_id ([ resource $link_identifier ] ) 
 Gets the id generated from the previous INSERT operation which created a DEFAULT UNIQUE value. 
 Замечание: 
 The value of the FrontBase SQL function fbsql_insert_id() always contains the most recently generated DEFAULT UNIQUE value, and is not reset between queries. </description>
<parameters>link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Returns the ID generated from the previous INSERT query, or 0 if the previous query does not generate an DEFAULT UNIQUE value. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1242> 
<name>dbplus_rkeys</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Specify new primary key for a relation</short-description>
<description>mixed dbplus_rkeys ( resource $relation , mixed $domlist ) 
 dbplus_rkeys() will replace the current primary key for relation with the combination of domains specified by domlist. </description>
<parameters>relation - A relation opened by dbplus_open(). 
domlist - A combination of domains. May be passed as a single domain name string or as an array of domain names. </parameters>
<output>Returns resource on success or DBPLUS_ERR_UNKNOWN on failure. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1243> 
<name>gmp_hamdist</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Расстояние Хэмминга</short-description>
<description>int gmp_hamdist ( resource $a , resource $b ) 
 Возвращает расстояние Хэмминга для чисел a и b. Оба операнда должны быть неотрицательными. </description>
<parameters>a - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.
b - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.</parameters>
<output>Число GMP. </output>
<errors></errors>
<example><?php
$ham1 = gmp_init("1001010011", 2);
$ham2 = gmp_init("1011111100", 2);
echo gmp_hamdist($ham1, $ham2) . "\n";
/* расстояние Хэмминга эквивалентно: */
echo gmp_popcount(gmp_xor($ham1, $ham2)) . "\n";
?></example>
<example_result>
 
6
6
</example_result>
</object>

<object id=1244> 
<name>gettext</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Ищет сообщение в текущем домене</short-description>
<description>string gettext ( string $message ) 
 Ищет сообщение в текущем домене. </description>
<parameters>message - Переводимое сообщение. </parameters>
<output>Возвращает переведённую строку (string), если она найдена в таблице перевода, иначе - переданное сообщение. </output>
<errors></errors>
<example><?php
// Устанавливаем русский язык
putenv('LC_ALL=ru_RU');
setlocale(LC_ALL, 'ru_RU');
// Указываем путь к таблицам переводов
bindtextdomain("myPHPApp", "./locale");
// Выбираем домен
textdomain("myPHPApp");
// Теперь поиск переводов будет идти в ./locale/ru_RU/LC_MESSAGES/myPHPApp.mo
// Выводим тестовое сообщение
echo gettext("Welcome to My PHP Application");
// Или с использованием псевдонима _()
echo _("Have a nice day");
?></example>
<example_result></example_result>
</object>

<object id=1245> 
<name>hw_GetSrcByDestObj</name>
<versions>(PHP 4)</versions>
<short-description>Returns anchors pointing at object</short-description>
<description>array hw_getsrcbydestobj ( int $connection , int $objectID ) 
 Gets the object records of all anchors pointing to the object with ID objectID. </description>
<parameters>connection - The connection identifier. 
objectID - The object identifier. The object can either be a document or an anchor of type destination. </parameters>
<output>Returns an array of object records. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1246> 
<name>session_id</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get and/or set the current session id</short-description>
<description>string session_id ([ string $id ] ) 
 session_id() is used to get or set the session id for the current session. 
 The constant SID can also be used to retrieve the current name and session id as a string suitable for adding to URLs. See also Session handling. </description>
<parameters>id - If id is specified, it will replace the current session id. session_id() needs to be called before session_start() for that purpose. Depending on the session handler, not all characters are allowed within the session id. For example, the file session handler only allows characters in the range a-z A-Z 0-9 , (comma) and - (minus)! </parameters>
<output>session_id() returns the session id for the current session or the empty string ("") if there is no current session (no current session id exists). </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1247> 
<name>ingres_field_length</name>
<versions>(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)</versions>
<short-description>Get the length of a field</short-description>
<description>int ingres_field_length ( resource $result , int $index ) 
 ingres_field_length() returns the length of a field. This is the number of bytes the server uses to store the field. For detailed information, see the Ingres OpenAPI User Guide, Appendix "Data Types" in the Ingres documentation. 
 Замечание: Related Configurations
 
 See ingres.array_index_start in Runtime Configuration </description>
<parameters>result - The query result identifier 
index - index is the column number whose length will be retrieved. </parameters>
<output>Returns the length of a field. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1248> 
<name>gzread</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Бинарное чтение gz-файла</short-description>
<description>string gzread ( resource $zp , int $length ) 
 gzread() читает (распаковывая) до length байт из gz-файла по указателю на него. Чтение заканчивается при достижении максимального размера length распакованных данных или конца файла (EOF) </description>
<parameters>zp - Указатель на gz-файл, возвращённый, после его успешного открытия, функцией gzopen(). 
length - Количество байт (после распаковки), которые следует прочитать. </parameters>
<output>Прочтённые данные. </output>
<errors></errors>
<example><?php
// поместить содержимое gz-файла в строку
$filename = "/usr/local/something.txt.gz";
$zd = gzopen($filename, "r");
$contents = gzread($zd, 10000);
gzclose($zd);
?></example>
<example_result></example_result>
</object>

<object id=1249> 
<name>mssql_field_length</name>
<versions>(PHP 4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Get the length of a field</short-description>
<description>int mssql_field_length ( resource $result [, int $offset = -1 ] ) 
 Returns the length of field no. offset in result. </description>
<parameters>result - The result resource that is being evaluated. This result comes from a call to mssql_query(). 
offset - The field offset, starts at 0. If omitted, the current field is used. </parameters>
<output>The length of the specified field index on success или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Connect to MSSQL and select the database
mssql_connect('MANGO\SQLEXPRESS', 'sa', 'phpfi');
mssql_select_db('php');
// Send a select query to MSSQL
$query = mssql_query('SELECT [name], [age] FROM [php].[dbo].[persons]');
// Print the field length
echo 'The field \'age\' has a data length of ' . mssql_field_length($query, 1);
// Free the query result
mssql_free_result($query);
?></example>
<example_result>
 
The field &#039;age&#039; has a data length of 4
</example_result>
</object>

<object id=1250> 
<name>ncurses_killchar</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Returns current line kill character </short-description>
<description>string ncurses_killchar ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Returns the kill character, as a string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1251> 
<name>pg_last_oid</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает OID последней добавленной в базу строки</short-description>
<description>string pg_last_oid ( resource $result ) 
 pg_last_oid() используется для определения OID, соответствующего вставленной в таблицу строке. 
 Поле OID таблиц баз данных стало необязательным, начиная с версии PostgreSQL 7.2, а с версии 8.1 перестанет добавляться в таблицы по-умолчанию. Если поле OID таблицы не задано, используйте функцию pg_result_status() для проверки успешности вставки записей в таблицу. 
 Чтобы получить значение SERIAL поля после вставки строки в таблицу, используйте функцию PostgreSQL CURRVAL, передав ей имя последовательности, значение которой нужно получить. Чтобы узнать имя последовательности, необходимо использовать функцию pg_get_serial_sequence (PostgreSQL 8.0). 
 В PostgreSQL 8.1 есть функция LASTVAL, возвращающая значение наиболее часто используемой за сессию последовательности. Так можно избежать необходимость задавать название последовательности, таблицы или колонки. 
 Замечание: 
 Прежнее название функции: pg_getlastoid(). </description>
<parameters>result - Ресурс результата запроса PostgreSQL, возвращаемый функциями pg_query(), pg_query_params() или pg_execute() (в числе прочих). </parameters>
<output>Строка, содержащая OID последней вставленной строки на соединении connection, либо FALSE, если произошла ошибка или поле OID недоступно. </output>
<errors></errors>
<example><?php
  $pgsql_conn = pg_connect("dbname=mark host=localhost");
  
  $res1 = pg_query("CREATE TABLE test (a INTEGER) WITH OIDS");
  $res2 = pg_query("INSERT INTO test VALUES (1)");
  
  $oid = pg_last_oid($res2);
?></example>
<example_result></example_result>
</object>

<object id=1252> 
<name>timezone_name_from_abbr</name>
<versions>(PHP 5 >= 5.1.3)</versions>
<short-description>Возвращает временную зону в соответствии с аббревиатурой </short-description>
<description>string timezone_name_from_abbr ( string $abbr [, int $gmtOffset = -1 [, int $isdst = -1 ]] ) </description>
<parameters>abbr - Аббревиатура временной зоны. 
gmtOffset - Смещение относительно GMT в секундах. По умолчанию -1, что означает возврат первой найденной временной зоны, отвечающей аббревиатуре abbr. В противном случае будет произведен поиск временной зоны с заданным смещением. Если поиск завершится неудачей, будет возвращена временная зона наиболее близкая к смещению. 
isdst - Поправка на летнее время. По умолчанию -1, в этом случае поправка на летнее время не учитывается. Если передана 1, смещение gmtOffset учитывает действующее летнее время. Если задан 0, gmtOffset рассчитывается с учетом зимнего времени. Если abbr не существует, определение временной зоны опирается только на gmtOffset и isdst. </parameters>
<output>Возвращает имя временной зоны или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
echo timezone_name_from_abbr("CET") . "\n";
echo timezone_name_from_abbr("", 3600, 0) . "\n";
?></example>
<example_result>
 
Europe/Berlin
Europe/Paris
</example_result>
</object>

<object id=1253> 
<name>m_getheader</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Get the name of the column in a comma-delimited response</short-description>
<description>string m_getheader ( resource $conn , int $identifier , int $column_num ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
identifier - 
column_num - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1254> 
<name>getenv</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the value of an environment variable</short-description>
<description>string getenv ( string $varname ) 
 Gets the value of an environment variable. 
 You can see a list of all the environmental variables by using phpinfo(). Many of these variables are listed within &raquo; RFC 3875, specifically section 4.1, "Request Meta-Variables". </description>
<parameters>varname - The variable name. </parameters>
<output>Returns the value of the environment variable varname, or FALSE if the environment variable varname does not exist. </output>
<errors></errors>
<example><?php
// Example use of getenv()
$ip = getenv('REMOTE_ADDR');
// Or simply use a Superglobal ($_SERVER or $_ENV)
$ip = $_SERVER['REMOTE_ADDR'];
?></example>
<example_result></example_result>
</object>

<object id=1255> 
<name>notes_find_note</name>
<versions>(PHP 4 >= 4.0.5)</versions>
<short-description>Returns a note id found in database_name</short-description>
<description>int notes_find_note ( string $database_name , string $name [, string $type ] ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1256> 
<name>cal_from_jd</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Преобразует дату, заданную в юлианском календаре, в дату указанного календаря</short-description>
<description>array cal_from_jd ( int $jd , int $calendar ) 
 cal_from_jd() преобразует дату юлианского календаря, заданную в jd, в дату указанного календаря calendar. Поддерживаемые значения calendar: CAL_GREGORIAN, CAL_JULIAN, CAL_JEWISH и CAL_FRENCH. </description>
<parameters>jd - День юлианского календаря как целое число 
calendar - Календарь, в который нужно преобразовать дату </parameters>
<output>Возвращает массив, содержащий информацию о дате, такую как месяц, день, год, день недели, сокращенное и полное название дня недели, месяца и дату в форме "месяц/день/год". </output>
<errors></errors>
<example><?php
$today = unixtojd(mktime(0, 0, 0, 8, 16, 2003));
print_r(cal_from_jd($today, CAL_GREGORIAN));
?></example>
<example_result>
 
Array
(
    [date] => 8/16/2003
    [month] => 8
    [day] => 16
    [year] => 2003
    [dow] => 6
    [abbrevdayname] => Sat
    [dayname] => Saturday
    [abbrevmonth] => Aug
    [monthname] => August
)
</example_result>
</object>

<object id=1257> 
<name>ocinewcursor</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_new_cursor()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1258> 
<name>php_check_syntax</name>
<versions>(PHP 5 <= 5.0.4)</versions>
<short-description>Проверяет (и запускает) PHP синтаксис указанного файла </short-description>
<description>bool php_check_syntax ( string $filename [, string &$error_message ] ) 
 Выполняет проверку синтаксиса (производит верификацию) файла, указанного в filename проверяя ошибки в коде. 
 Действие похоже на использование php -l из командной строки, исключая то, что эта функция запустит (но не выведет) проверяемый файл из filename. 
 К примеру, если функция определена в filename, то эта функция будет доступна после в файле, из которого производится запуск функции php_check_syntax(), но вывод из файла, указанного в filename будет невозможен. 
 Замечание: 
 По техническим причинам эта функция устарела и удалена из PHP. Вместо этой функции используйте php -l somefile.php из командной строки. </description>
<parameters>filename - Имя проверяемого файла. 
error_message - Если используется параметр error_message, то в нем будет содержаться сообщение об ошибке, сформированное при проверке синтаксиса. error_message передается по ссылке. </parameters>
<output>Возвращает TRUE если проверка пройдена, и FALSE если возникла ошибка или файл из filename недоступен. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1259> 
<name>ncurses_scr_set</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Inherit screen from file dump </short-description>
<description>int ncurses_scr_set ( string $filename ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>filename - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1260> 
<name>gmp_intval</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Преобразование числа GMP в целое число</short-description>
<description>int gmp_intval ( resource $gmpnumber ) 
 Эта функция позволяет преобразовать число GMP в целое (integer). </description>
<parameters>gmpnumber - GMP число. </parameters>
<output>Целое число типа integer преобразованое из gmpnumber. </output>
<errors></errors>
<example><?php
// выводит корректный результат
echo gmp_intval("2147483647") . "\n";
// выводит неверный результат, выше границы диапазона PHP integer
echo gmp_intval("2147483648") . "\n";
// выводит корректный результат
echo gmp_strval("2147483648") . "\n";
?></example>
<example_result>
 
2147483647
2147483647
2147483648
</example_result>
</object>

<object id=1261> 
<name>gmp_abs</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Абсолютная величина</short-description>
<description>resource gmp_abs ( resource $a ) 
 Получение абсолютной величины числа. </description>
<parameters>a - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.</parameters>
<output>Возвращает абсолютную величину аргумента a, в виде GMP числа. </output>
<errors></errors>
<example><?php
     $abs1 = gmp_abs("274982683358");
     $abs2 = gmp_abs("-274982683358");
     
     echo gmp_strval($abs1) . "\n";
     echo gmp_strval($abs2) . "\n";
     ?></example>
<example_result>
 
 274982683358
     274982683358
     </example_result>
</object>

<object id=1262> 
<name>ncurses_clrtobot</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Clear screen from current position to bottom </short-description>
<description>bool ncurses_clrtobot ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1263> 
<name>simplexml_import_dom</name>
<versions>(PHP 5)</versions>
<short-description>Получает объект класса SimpleXMLElement из узла DOM. </short-description>
<description>SimpleXMLElement simplexml_import_dom ( DOMNode $node [, string $class_name = "SimpleXMLElement" ] ) 
 Эта функция берет узел документа DOM и превращает его в узел SimpleXML. Затем этот новый объект может быть использован как первичный элемент SimpleXML. </description>
<parameters>node - Узел-элемент DOM 
class_name - Вы можете использовать этот дополнительный параметр для того, чтобы функция simplexml_import_dom() возвращала объект указанного класса. Этот класс должен расширять класс SimpleXMLElement. </parameters>
<output>Возвращает SimpleXMLElement или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$dom = new DOMDocument;
$dom->loadXML('<books><book><title>чепуха</title></book></books>');
if (!$dom) {
    echo 'Ошибка при разборе документа';
    exit;
}
$s = simplexml_import_dom($dom);
echo $s->book[0]->title;
?></example>
<example_result>
 
чепуха
</example_result>
</object>

<object id=1264> 
<name>PDF_closepath_stroke</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Close and stroke path</short-description>
<description>bool PDF_closepath_stroke ( resource $p ) 
 Closes the path, and strokes it. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1265> 
<name>ocicollassignelem</name>
<versions>(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним OCI-Collection::assignElem()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1266> 
<name>str_pad</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Дополняет строку другой строкой до заданной длины</short-description>
<description>string str_pad ( string $input , int $pad_length [, string $pad_string = " " [, int $pad_type = STR_PAD_RIGHT ]] ) 
 Эта функция возвращает строку input, дополненную слева, справа или с обоих сторон до заданной длины. Если необязательный аргумент pad_string не передан, то input будет дополнен пробелами, иначе он будет дополнен символами из pad_string до нужной длины </description>
<parameters>input - Входная строка. 
pad_length - Если значение pad_length отрицательно, меньше или равно длине входной строки, то дополнения не происходит. 
pad_string 
 Замечание: - pad_string может быть урезана, если необходимое количество дополняемых символов не делится нацело на длину строки pad_string. 
pad_type - Необязательный аргумент pad_type может иметь значение STR_PAD_RIGHT, STR_PAD_LEFT или STR_PAD_BOTH. Если не указан, то по умолчанию используется STR_PAD_RIGHT. </parameters>
<output>Возвращает дополненную строку. </output>
<errors></errors>
<example><?php
$input = "Alien";
echo str_pad($input, 10);                      // выводит "Alien     "
echo str_pad($input, 10, "-=", STR_PAD_LEFT);  // выводит "-=-=-Alien"
echo str_pad($input, 10, "_", STR_PAD_BOTH);   // выводит "__Alien___"
echo str_pad($input, 6 , "___");               // выводит "Alien_"
?></example>
<example_result></example_result>
</object>

<object id=1267> 
<name>variant_div</name>
<versions>(PHP 5)</versions>
<short-description>Returns the result from dividing two variants</short-description>
<description>mixed variant_div ( mixed $left , mixed $right ) 
 Divides left by right and returns the result. </description>
<parameters>left - The left operand. 
right - The right operand. </parameters>
<output>Variant Division Rules If Then Both expressions are of the string, date, character, boolean type Double is returned One expression is a string type and the other a character Division and a double is returned One expression is numeric and the other is a string Division and a double is returned. Both expressions are numeric Division and a double is returned Either expression is NULL NULL is returned right is empty and left is anything but empty A com_exception with code DISP_E_DIVBYZERO is thrown left is empty and right is anything but empty. 0 as type double is returned Both expressions are empty A com_exception with code DISP_E_OVERFLOW is thrown </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1268> 
<name>odbc_field_scale</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get the scale of a field</short-description>
<description>int odbc_field_scale ( resource $result_id , int $field_number ) 
 Gets the scale of the field referenced by number in the given result identifier. </description>
<parameters>result_id - The result identifier. 
field_number - The field number. Field numbering starts at 1. </parameters>
<output>Returns the field scale as a integer, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1269> 
<name>gmp_fact</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Факториал</short-description>
<description>resource gmp_fact ( mixed $a ) 
 Вычисляет факториал (a!) числа a. </description>
<parameters>a - Число, факториал которого вычисляется. </parameters>
<output>Число GMP. </output>
<errors></errors>
<example><?php
$fact1 = gmp_fact(5); // 5 * 4 * 3 * 2 * 1
echo gmp_strval($fact1) . "\n";
$fact2 = gmp_fact(50); // 50 * 49 * 48, ... и т.д.
echo gmp_strval($fact2) . "\n";
?></example>
<example_result>
 
120
30414093201713378043612608166064768844377641568960512000000000000
</example_result>
</object>

<object id=1270> 
<name>ocicolltrim</name>
<versions>(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним OCI-Collection::trim()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1271> 
<name>ncurses_reset_shell_mode</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Resets the shell mode saved by def_shell_mode</short-description>
<description>int ncurses_reset_shell_mode ( void ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1272> 
<name>dns_check_record</name>
<versions>(PHP 5)</versions>
<short-description>Псевдоним checkdnsrr()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1273> 
<name>floor</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Округляет дробь в меньшую сторону</short-description>
<description>float floor ( float $value ) 
 Возврашает ближайшее целое число, округляя value в меньшую сторону. </description>
<parameters>value - Числовое значение для округления </parameters>
<output>Значение value, округленное в меньшую сторону до ближайшего целого числа. Возвращаемое значение функции floor() по прежнему типа float потому что диапазон значений float обычно больше, чем у integer. </output>
<errors></errors>
<example><?php
echo floor(4.3);   // 4
echo floor(9.999); // 9
echo floor(-3.14); // -4
?></example>
<example_result></example_result>
</object>

<object id=1274> 
<name>bcsqrt</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Извлекает квадратный корень из числа с произвольной точностью </short-description>
<description>string bcsqrt ( string $operand [, int $scale ] ) 
 Возвращает квадратный корень из operand. </description>
<parameters>operand - Операнд (подкоренное выражение) в виде строки. 
scale - Этот необязательный параметр используется для установки количества знаков после десятичного разделителя в результате.Вы также можете установить этот параметр глобально для всех функций с помощью bcscale().</parameters>
<output>Возвращает квадратный корень в виде строки или NULL, если operand отрицателен. </output>
<errors></errors>
<example><?php
echo bcsqrt('2', 3); // 1.414
?></example>
<example_result></example_result>
</object>

<object id=1275> 
<name>file_exists</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Проверяет наличие указанного файла или каталога</short-description>
<description>bool file_exists ( string $filename ) 
 Проверяет наличие указанного файла или каталога. </description>
<parameters>filename - Путь к файлу или каталогу. </parameters>
<output>Возвращает TRUE, если файл или каталог, указанный параметром filename, существует, иначе возвращает FALSE. </output>
<errors>В случае неудачного завершения работы генерируется ошибка уровня E_WARNING.</errors>
<example><?php
$filename = '/path/to/foo.txt';
if (file_exists($filename)) {
    echo "Файл $filename существует";
} else {
    echo "Файл $filename не существует";
}?></example>
<example_result></example_result>
</object>

<object id=1276> 
<name>ini_alter</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним ini_set()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1277> 
<name>ncurses_curs_set</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Set cursor state </short-description>
<description>int ncurses_curs_set ( int $visibility ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>visibility - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1278> 
<name>xpath_register_ns_auto</name>
<versions>(PHP 4 >= 4.3.0)</versions>
<short-description>Регистрация заданного пространства имен в определенном XPath контексте </short-description>
<description>bool xpath_register_ns_auto ( XPathContext $xpath_context [, object $context_node ] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1279> 
<name>imagecreatefromjpeg</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Создает новое изображение из файла или URL</short-description>
<description>resource imagecreatefromjpeg ( string $filename ) 
 imagecreatefromjpeg() returns an image identifier representing the image obtained from the given filename. Подсказка
 Для этой функции вы можете использовать URLв качестве имени файла, если была включена опция fopen wrappers. Смотрите болееподробную информацию об определении имени файла в описании функцииfopen(). Смотрите также список поддерживаемых оберток URL, их возможности, замечания по использованию и списокпредопределенных констант в Поддерживаемые протоколы и обработчики (wrappers).</description>
<parameters>filename - Path to the JPEG image. </parameters>
<output>Возвращает ресурс изображения в случае успеха, или FALSE в случае ошибки.</output>
<errors></errors>
<example><?php
function LoadJpeg($imgname)
{    /* Attempt to open */
    $im = @imagecreatefromjpeg($imgname);
    /* See if it failed */
    if(!$im)
    {
        /* Create a black image */
        $im  = imagecreatetruecolor(150, 30);
        $bgc = imagecolorallocate($im, 255, 255, 255);
        $tc  = imagecolorallocate($im, 0, 0, 0);
        imagefilledrectangle($im, 0, 0, 150, 30, $bgc);
        /* Output an error message */
        imagestring($im, 1, 5, 5, 'Error loading ' . $imgname, $tc);
    }
    return $im;
}
header('Content-Type: image/jpeg');
$img = LoadJpeg('bogus.image');
imagejpeg($img);
imagedestroy($img);
?></example>
<example_result></example_result>
</object>

<object id=1280> 
<name>pg_send_prepare</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Посылает запрос на создание параметризованного SQL выражения; не ожидает его завершения </short-description>
<description>bool pg_send_prepare ( resource $connection , string $stmtname , string $query ) 
 Посылает запрос на создание параметризованного SQL выражения и не ждет его завершения. 
 Это асинхронная версия функции pg_prepare(): она возвращает TRUE, если удалось отправить запрос, FALSE в противном случае. После успешной отправки, воспользуйтесь функцией pg_get_result(), чтобы узнать, создалось ли требуемое SQL выражение. Аргументы функции обрабатываются так же, как в pg_prepare(). Функция не будет работать с серверами PostgreSQL версий ниже 7.4. </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). 
stmtname - Имя создаваемой заготовки. Должно быть уникальным в пределах сессии. Если задана пустая строка, будет создано безымянное SQL выражение. При этом оно перезапишет уже существующее безымянное выражение, определенное ранее. 
query - Параметризованный SQL запрос. Должен содержать только одно выражение (несколько выражений разделенных точкой с запятой не поддерживаются). Если в запрос будут передаваться параметры, то они заменят псевдопеременные $1, $2 и т.д. </parameters>
<output>TRUE, если удалось отправить запрос, FALSE в противном случае. После успешной отправки, воспользуйтесь функцией pg_get_result(), чтобы узнать, создалось ли требуемое SQL выражение. </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Could not connect");
  // Подготовка запроса  
  if (!pg_connection_busy($dbconn)) {
    pg_send_prepare($dbconn, "my_query", 'SELECT * FROM shops WHERE name = $1');
    $res1 = pg_get_result($dbconn);
  }
  // Запуск запроса на выполнение. Стоит отметить, что нет необходимости экранировать 
  // спецсимволы в строке "Joe's Widgets"  
  if (!pg_connection_busy($dbconn)) {
    pg_send_execute($dbconn, "my_query", array("Joe's Widgets"));
    $res2 = pg_get_result($dbconn);
  }
  
  // Запуск на выполнение того же запроса, но с другим параметром 
  if (!pg_connection_busy($dbconn)) {
    pg_send_execute($dbconn, "my_query", array("Clothes Clothes Clothes"));
    $res3 = pg_get_result($dbconn);
  }
  
?></example>
<example_result></example_result>
</object>

<object id=1281> 
<name>get_defined_vars</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Возвращает массив всех определенных переменных </short-description>
<description>array get_defined_vars ( void ) 
 Эта функция возвращает многомерный массив, содержащий список всех определенных переменных, будь то переменные окружения, серверные переменные или переменные, определенные пользователем, в той области видимости, в которой была вызвана get_defined_vars(). </description>
<parameters></parameters>
<output>Многомерный массив со всеми переменными. </output>
<errors></errors>
<example><?php
$b = array(1, 1, 2, 3, 5, 8);
$arr = get_defined_vars();
// печатает $b
print_r($arr["b"]);
/* печатает путь до интерпретатора PHP (при использовании режима CGI)
 * например, /usr/local/bin/php */
echo $arr["_"];
// печатает параметры командной строки, если они есть
print_r($arr["argv"]);
// печатает все серверные переменные
print_r($arr["_SERVER"]);
// печатает все доступные ключи для массивов переменных
print_r(array_keys(get_defined_vars()));
?></example>
<example_result></example_result>
</object>

<object id=1282> 
<name>curl_error</name>
<versions>(PHP 4 >= 4.0.3, PHP 5)</versions>
<short-description>Возвращает строку с описанием последней ошибки текущего сеанса</short-description>
<description>string curl_error ( resource $ch ) 
 Возвращает понятное сообщение об ошибке для последней операции cURL. </description>
<parameters>ch - Дескриптор cURL, полученный из curl_init().</parameters>
<output>Возвращает сообщение об ошибке или &#039;&#039; (пустую строку), если ошибки не произошло. </output>
<errors></errors>
<example><?php
// Создаем дескриптор curl к несуществующему адресу
$ch = curl_init('http://404.php.net/');
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
if(curl_exec($ch) === false)
{    echo 'Ошибка curl: ' . curl_error($ch);
}else
{    echo 'Операция завершена без каких-либо ошибок';
}
// Закрываем дескриптор
curl_close($ch);
?></example>
<example_result></example_result>
</object>

<object id=1283> 
<name>ncurses_addnstr</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Add string with specified length at current position </short-description>
<description>int ncurses_addnstr ( string $s , int $n ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>s - 
n - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1284> 
<name>mb_decode_numericentity</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Декодирует числовую HTML-ссылку в символ</short-description>
<description>string mb_decode_numericentity ( string $str , array $convmap , string $encoding ) 
 Преобразует строку чисел string str в заданном блоке в символ. </description>
<parameters>str - Строка для декодирования string. 
convmap - convmap - массив array, который задает диапазон кодов символов. 
encoding - Параметр encodingпредставляет собой символьную кодировку. Если он опущен, вместо него будет использовано значение внутренней кодировки.</parameters>
<output>Преобразованная строка string. </output>
<errors></errors>
<example><?php
$convmap = array (
   int start_code1, int end_code1, int offset1, int mask1,
   int start_code2, int end_code2, int offset2, int mask2,
   ........
   int start_codeN, int end_codeN, int offsetN, int maskN );
// Задайте значения Юникода для start_codeN и end_codeN
// Добавьте к значению offsetN и сложите побитово с maskN, 
// затем преобразуйте результат в число.
?></example>
<example_result></example_result>
</object>

<object id=1285> 
<name>ldap_parse_reference</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Извлекает информацию из справочника</short-description>
<description>bool ldap_parse_reference ( resource $link , resource $entry , array &$referrals ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1286> 
<name>mb_split</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Split multibyte string using regular expression</short-description>
<description>array mb_split ( string $pattern , string $string [, int $limit = -1 ] ) 
 Split a multibyte string using regular expression pattern and returns the result as an array. </description>
<parameters>pattern - The regular expression pattern. 
string - The string being split. </parameters>
<output>The result as an array. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1287> 
<name>PDF_setdash</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set simple dash pattern</short-description>
<description>bool PDF_setdash ( resource $pdfdoc , float $b , float $w ) 
 Sets the current dash pattern to b black and w white units. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1288> 
<name>imagepsencodefont</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Change the character encoding vector of a font</short-description>
<description>bool imagepsencodefont ( resource $font_index , string $encodingfile ) 
 Loads a character encoding vector from a file and changes the fonts encoding vector to it. As a PostScript fonts default vector lacks most of the character positions above 127, you&#039;ll definitely want to change this if you use an other language than English. 
 If you find yourself using this function all the time, a much better way to define the encoding is to set ps.default_encoding in the configuration file to point to the right encoding file and all fonts you load will automatically have the right encoding. </description>
<parameters>font_index - A font resource, returned by imagepsloadfont(). 
encodingfile - The exact format of this file is described in T1libs documentation. T1lib comes with two ready-to-use files, IsoLatin1.enc and IsoLatin2.enc. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Load a .pfb font file
$font = imagepsloadfont('./px3l.pfb');
// Tell T1lib to use ISO Latin 1 encoding
imagepsencode($font, './IsoLatin1.enc');
// Do any operations with the font here
// Free the font from memory
imagepsfreefont($font);
?></example>
<example_result></example_result>
</object>

<object id=1289> 
<name>ldap_unbind</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Разорвать привязку к директории LDAP</short-description>
<description>bool ldap_unbind ( resource $link_identifier ) 
 Разрывает привязку к LDAP-директории. </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1290> 
<name>socket_close</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Closes a socket resource</short-description>
<description>void socket_close ( resource $socket ) 
 socket_close() closes the socket resource given by socket. This function is specific to sockets and cannot be used on any other type of resources. </description>
<parameters>socket - A valid socket resource created with socket_create() or socket_accept(). </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1291> 
<name>imagesetpixel</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Set a single pixel</short-description>
<description>bool imagesetpixel ( resource $image , int $x , int $y , int $color ) 
 imagesetpixel() draws a pixel at the specified coordinate. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
x - x-coordinate. 
y - y-coordinate. 
color - A color identifier created with imagecolorallocate(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=1292> 
<name>unixtojd</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Переводит метку времени Unix в Юлианский день </short-description>
<description>int unixtojd ([ int $timestamp = time() ] ) 
 Возвращает Юлианский день для заданной метки времени Unix timestamp (количество секунд с 1.1.1970) либо для текущего времени, если аргумент timestamp не задан. </description>
<parameters>timestamp - Метка времени Unix для преобразования. </parameters>
<output>Число дней в Юлианском летоисчислении. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1293> 
<name>fbsql_create_db</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Create a FrontBase database</short-description>
<description>bool fbsql_create_db ( string $database_name [, resource $link_identifier [, string $database_options ]] ) 
 Attempts to create a new database on the specified server. </description>
<parameters>database_name - The database name, as a string. 
link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().
database_options - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$link = fbsql_pconnect("localhost", "_SYSTEM", "secret")
    or die("Could not connect");
if (fbsql_create_db("my_db")) {
    echo "Database created successfully\n";
} else {
    printf("Error creating database: %s\n", fbsql_error());
}?></example>
<example_result></example_result>
</object>

<object id=1294> 
<name>openssl_pkey_get_private</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Get a private key</short-description>
<description>resource openssl_pkey_get_private ( mixed $key [, string $passphrase = "" ] ) 
 openssl_get_privatekey() parses key and prepares it for use by other functions. </description>
<parameters>key - key can be one of the following: a string having the format file://path/to/file.pem. The named file must contain a PEM encoded certificate/private key (it may contain both). A PEM formatted private key. 
passphrase - The optional parameter passphrase must be used if the specified key is encrypted (protected by a passphrase). </parameters>
<output>Returns a positive key resource identifier on success, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1295> 
<name>openssl_pkcs7_decrypt</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Decrypts an S/MIME encrypted message</short-description>
<description>bool openssl_pkcs7_decrypt ( string $infilename , string $outfilename , mixed $recipcert [, mixed $recipkey ] ) 
 Decrypts the S/MIME encrypted message contained in the file specified by infilename using the certificate and its associated private key specified by recipcert and recipkey. </description>
<parameters>infilename - 
outfilename - The decrypted message is written to the file specified by outfilename. 
recipcert - 
recipkey - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// $cert and $key are assumed to contain your personal certificate and private
// key pair, and that you are the recipient of an S/MIME message
$infilename = "encrypted.msg";  // this file holds your encrypted message
$outfilename = "decrypted.msg"; // make sure you can write to this file
if (openssl_pkcs7_decrypt($infilename, $outfilename, $cert, $key)) {
    echo "decrypted!";
} else {
    echo "failed to decrypt!";
}?></example>
<example_result></example_result>
</object>

<object id=1296> 
<name>imap_fetchtext</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним imap_body()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1297> 
<name>ifx_update_blob</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Updates the content of the blob object</short-description>
<description>bool ifx_update_blob ( int $bid , string $content ) 
 Updates the content of the blob object for the given blob object bid. </description>
<parameters>bid - A BLOB object identifier. 
content - The new data, as a string. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1298> 
<name>swf_pushmatrix</name>
<versions>(PHP 4)</versions>
<short-description>Push the current transformation matrix back onto the stack</short-description>
<description>void swf_pushmatrix ( void ) 
 Pushes the current transformation matrix back onto the stack. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1299> 
<name>ncurses_insdelln</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Insert lines before current line scrolling down (negative numbers delete and scroll up) </short-description>
<description>int ncurses_insdelln ( int $count ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>count - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1300> 
<name>quoted_printable_encode</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Кодирует 8-битную строку в с помощью метода quoted-printable</short-description>
<description>string quoted_printable_encode ( string $str ) 
 Возвращает строку, закодированную в формат quoted-printable в соответствии с разделом 6.7 &raquo; RFC2045. 
 Эта функция подобна функции imap_8bit(), за исключением того что не требует для своей работы модуля IMAP. </description>
<parameters>str - Входная строка. </parameters>
<output>Возвращает закодированную строку. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1301> 
<name>hw_changeobject</name>
<versions>(PHP 4)</versions>
<short-description>Changes attributes of an object (obsolete)</short-description>
<description>bool hw_changeobject ( int $link , int $objid , array $attributes ) 
 Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1302> 
<name>mysql_field_seek</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Устанавливает внутренний указатель результата на переданное смещение поля</short-description>
<description>bool mysql_field_seek ( resource $result , int $field_offset ) 
 Перемещает указатель к полю с указанным смещением. Если следующий вызов функции mysql_fetch_field() не содержит смещения, то будет возвращено смещение, содержащееся в mysql_field_seek(). </description>
<parameters>result - Обрабатываемый результат запроса.Этот результат может быть получен с помощью функции mysql_query().
field_offset - Числовое смещение поля.field_offset начинается с 0. Еслиfield_offset не существует, генерируется ошибка уровняE_WARNING.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1303> 
<name>ocibindbyname</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_bind_by_name()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1304> 
<name>usleep</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Откладывает выполнение на микросекунды</short-description>
<description>void usleep ( int $micro_seconds ) 
 Откладывает выполнение программы на указанное число микросекунд. </description>
<parameters>micro_seconds - Время откладываемого исполнения в микросекундах. Микросекунда - это одна миллионная секунды. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
// Текущее время
echo date('h:i:s') . "\n";
// ждать 2 секунды
usleep(2000000);
// вернуться к исполнению
echo date('h:i:s') . "\n";
?></example>
<example_result>
 
11:13:28
11:13:30
</example_result>
</object>

<object id=1305> 
<name>ncurses_mouse_trafo</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Transforms coordinates</short-description>
<description>bool ncurses_mouse_trafo ( int &$y , int &$x , bool $toscreen ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>y - 
x - 
toscreen - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1306> 
<name>w32api_init_dtype</name>
<versions>(PHP 4 >= 4.2.0)</versions>
<short-description>Creates an instance of the data type typename and fills it with the values passed</short-description>
<description>resource w32api_init_dtype ( string $typename , mixed $value [, mixed $... ] ) 
 This function creates an instance of the data type named typename, filling in the values of the data type. </description>
<parameters>typename - The typename parameter is case sensitive. 
value - You should give the values in the same order as you defined the data type with w32api_deftype(). 
... - </parameters>
<output>Returns a dynaparm resource. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1307> 
<name>XMLWriter::endDTDAttlist</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Завершить текущий DTD</short-description>
<description>bool XMLWriter::endDTDAttlist ( void ) 
 Процедурный стиль bool xmlwriter_end_dtd_attlist ( resource $xmlwriter )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1308> 
<name>fbsql_list_tables</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>List tables in a FrontBase database</short-description>
<description>resource fbsql_list_tables ( string $database [, resource $link_identifier ] ) 
 Returns a result pointer describing the database. </description>
<parameters>database - The database name. 
link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Returns a result pointer which can be used with the fbsql_tablename() function to read the actual table names, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1309> 
<name>PDF_get_image_height</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Возвращает высоту изображения [устаревшее]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1310> 
<name>unset</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Удаляет переменную</short-description>
<description>void unset ( mixed $var [, mixed $... ] ) 
 unset() удаляет перечисленные переменные. 
 Поведение unset() внутри пользовательской функции может отличаться, в зависимости от того, какой тип имеет переменная, которую необходимо удалить. 
 Если переменная, объявленная глобальной, удаляется внутри функции, то будет удалена только локальная переменная. Переменная в области видимости вызова функции сохранит то же значение, что и до вызова unset(). <?php
function destroy_foo() 
{    global $foo;
    unset($foo);
}
$foo = 'bar';
destroy_foo();
echo $foo;
?></description>
<parameters>var - Удаляемая переменная. 
... - Другая переменная ... </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
// удаляем одну переменную
unset($foo);
// удаляем один элемент массива
unset($bar['quux']);
// удаляем несколько переменных
unset($foo1, $foo2, $foo3);
?></example>
<example_result>
 
bar
</example_result>
</object>

<object id=1311> 
<name>sqlite_rewind</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Переходит к первой записи</short-description>
<description>bool sqlite_rewind ( resource $result ) 
 Объектно-ориентированный стиль (метод): bool SQLiteResult::rewind ( void )</description>
<parameters>result - Ресурс результата SQLite. Этот параметр не требуется при использовании объектно-ориентированного метода. </parameters>
<output>Возвращает FALSE, если результат запроса не содержит записей, иначе возвращается TRUE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1312> 
<name>call_user_func_array</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Вызывает пользовательскую функцию с массивом параметров</short-description>
<description>mixed call_user_func_array ( callback $callback , array $param_arr ) 
 Вызывает пользовательскую функцию callback, с параметрами из массива param_arr. </description>
<parameters>callback - Вызываемая callback-функция. 
param_arr - Передаваемые в функцию параметры, в виде индексированного массива. </parameters>
<output>Возвращает результат функции или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
function foobar($arg, $arg2) {
    echo __FUNCTION__, " got $arg and $arg2\n";
}class foo {
    function bar($arg, $arg2) {
        echo __METHOD__, " got $arg and $arg2\n";
    }
}
// Вызываем функцию foobar() с 2 аргументами
call_user_func_array("foobar", array("one", "two"));
// Вызываем метод $foo->bar() с 2 аргументами
$foo = new foo;
call_user_func_array(array($foo, "bar"), array("three", "four"));
?></example>
<example_result>
 
foobar got one and two
foo::bar got three and four
</example_result>
</object>

<object id=1313> 
<name>hash_update_file</name>
<versions>(PHP 5 >= 5.1.2, PECL hash >= 1.1)</versions>
<short-description>Добавляет данные из файла в активный контекст хеширования</short-description>
<description>bool hash_update_file ( resource $context , string $filename [, resource $context = NULL ] ) </description>
<parameters>context - Контекст хеширования, возвращенный hash_init(). 
filename - Имя или URL файла для хеширования; Поддерживаются обработчики fopen. 
context - Контекст потока, возвращенный stream_context_create(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1314> 
<name>xmlrpc_server_create</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Создаёт XML-RPC сервер</short-description>
<description>resource xmlrpc_server_create ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1315> 
<name>stream_supports_lock</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Определяет, поддерживает ли поток блокировку</short-description>
<description>bool stream_supports_lock ( resource $stream ) 
 Определяет, поддерживает ли поток блокировку с использованием flock(). </description>
<parameters>stream - Поток для проверки. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1316> 
<name>sqlite_udf_encode_binary</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Кодирует бинарные данные перед тем как вернуть их из UDF</short-description>
<description>string sqlite_udf_encode_binary ( string $data ) 
 sqlite_udf_encode_binary() кодирует бинарные данные data таким образом, что они могут быть возвращены в качестве результата запроса (так как библиотека libsqlite небезопасна для обработки бинарных данных). 
 Если данные могут быть бинарно-небезопасными (например, содержать NUL в середине строки или байт 0x01 в начале строки), то такие данные следует закодировать этой функцией перед тем, как возвращать их из вашей UDF. 
 PHP не осуществляет данные операции кодирования и декодирования автоматически, так как это негативно сказывается на производительности. 
 Замечание: 
 Не используйте функцию sqlite_escape_string() для экранирования строк, возвращаемых из UDF, так как это приведет к двойному экранированию. Используйте вместо этого sqlite_udf_encode_binary() ! </description>
<parameters>data - Кодируемая строка (string). </parameters>
<output>Закодированная строка (string). </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1317> 
<name>ncurses_move_panel</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Moves a panel so that its upper-left corner is at [startx, starty]</short-description>
<description>int ncurses_move_panel ( resource $panel , int $startx , int $starty ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>panel - 
startx - 
starty - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1318> 
<name>fam_resume_monitor</name>
<versions>(PHP 5 <= 5.0.5)</versions>
<short-description>Resume suspended monitoring</short-description>
<description>bool fam_resume_monitor ( resource $fam , resource $fam_monitor ) 
 Resumes monitoring of a resource previously suspended using fam_suspend_monitor(). </description>
<parameters>fam - A resource representing a connection to the FAM service returned by fam_open() 
fam_monitor - A resource returned by one of the fam_monitor_XXX functions </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1319> 
<name>yp_next</name>
<versions>(PHP 4, PHP 5 <= 5.0.5)</versions>
<short-description>Returns the next key-value pair in the named map</short-description>
<description>array yp_next ( string $domain , string $map , string $key ) 
 Returns the next key-value pair in the named map after the specified key. </description>
<parameters>domain - 
map - 
key - </parameters>
<output>Returns the next key-value pair as an array, or FALSE on errors. </output>
<errors></errors>
<example><?php
$entry = yp_next($domain, "passwd.byname", "joe");
if (!$entry) {
    echo "No more entries found\n";
    echo "<!--" . yp_errno() . ": " . yp_err_string() . "-->";
}
$key = key($entry);
echo "The next entry after joe has key " . $key
      . " and value " . $entry[$key];
?></example>
<example_result></example_result>
</object>

<object id=1320> 
<name>count</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Подсчитывает количество элементов массива или что-то в объекте</short-description>
<description>int count ( mixed $var [, int $mode = COUNT_NORMAL ] ) 
 Подсчитывает количество элементов массива или что-то в объекте. 
 Для объектов, если у вас включена поддержка SPL, вы можете перехватить count(), реализуя интерфейс Countable. Этот интерфейс имеет ровно один метод, Countable::count(), который возвращает значение функции count(). 
 Пожалуйста, смотрите раздел "Массивы" в этом руководстве для более детального представления о реализации и использовании массивов в PHP. </description>
<parameters>var - Массив или объект. 
mode - Если необязательный параметр mode установлен в COUNT_RECURSIVE (или 1), count() будет рекурсивно подсчитывать количество элементов массива. Это особенно полезно для подсчёта всех элементов многомерных массивов. count() не обнаруживает бесконечную рекурсию. </parameters>
<output>Возвращает количество элементов в var. Если var не является массивом или объектом, реализующим интерфейс Countable, будет возвращена 1. За одним исключением: если var - NULL, то будет возвращён 0. </output>
<errors></errors>
<example><?php
$a[0] = 1;
$a[1] = 3;
$a[2] = 5;
$result = count($a);
// $result == 3
$b[0]  = 7;
$b[5]  = 9;
$b[10] = 11;
$result = count($b);
// $result == 3
$result = count(null);
// $result == 0
$result = count(false);
// $result == 1
?></example>
<example_result></example_result>
</object>

<object id=1321> 
<name>snmp3_set</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Set the value of an SNMP object</short-description>
<description>bool snmp3_set ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id , string $type , string $value [, int $timeout = 1000000 [, int $retries = 5 ]] ) 
 snmp3_set() is used to set the value of an SNMP object specified by the object_id. 
 Even if the security level does not use an auth or priv protocol/password valid values have to be specified. </description>
<parameters>host - The hostname of the SNMP agent (server). 
sec_name - the security name, usually some kind of username 
sec_level - the security level (noAuthNoPriv|authNoPriv|authPriv) 
auth_protocol - the authentication protocol (MD5 or SHA) 
auth_passphrase - the authentication pass phrase 
priv_protocol - the privacy protocol (DES or AES) 
priv_passphrase - the privacy pass phrase 
object_id - The SNMP object id. 
type - MIB указывает тип идентификатора каждого объекта. Он должен быть указан в виде одного символа изследующего списка.
value - The new value 
timeout - The number of microseconds until the first timeout. 
retries - The number of times to retry if timeouts occur. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
  snmp3_set('localhost', 'james', 'authPriv', 'SHA', 'secret007', 'AES', 'secret007', 'IF-MIB::ifAlias.3', 's', "foo");
?></example>
<example_result></example_result>
</object>

<object id=1322> 
<name>finfo_set_flags</name>
<versions>(PHP >= 5.3.0, PECL fileinfo >= 0.1.0)</versions>
<short-description>Set libmagic configuration options</short-description>
<description>bool finfo_set_flags ( resource $finfo , int $options ) 
 Объектно-ориентированный стиль bool finfo::set_flags ( int $options )</description>
<parameters>finfo - Ресурс Fileinfo, полученный функцией finfo_open(). 
options - Одна из нескольких констант Fileinfo. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1323> 
<name>PDF_open_jpeg</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Открывает JPEG-изображение [устаревшее]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1324> 
<name>oci_fetch_assoc</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Возвращает следующую строку из результата запроса в виде ассоциативного массива</short-description>
<description>array oci_fetch_assoc ( resource $statement ) 
 Возвращает ассоциативный массив, содержащий следующую строку из результата выполнения запроса. Каждый элемент массива соответствует столбцу текущей строки. Эта функция обычно вызывается в цикле, пока не возвращает FALSE, если больше нет строк. 
 Результат выполнения oci_fetch_assoc() идентичен выполнению oci_fetch_array() with OCI_ASSOC + OCI_RETURN_NULLS. </description>
<parameters>statement - Корректный идентификатор выражения OCI8, полученный изoci_parse() и исполненный функцией oci_execute(), или идентификатор выраженияREF CURSOR.</parameters>
<output>Возвращает ассоциативный массив. Если в результате запроса строк больше нет, возвращает FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1325> 
<name>ibase_server_info</name>
<versions>(PHP 5)</versions>
<short-description>Request information about a database server</short-description>
<description>string ibase_server_info ( resource $service_handle , int $action ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1326> 
<name>ncurses_delay_output</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Delay output on terminal using padding characters </short-description>
<description>int ncurses_delay_output ( int $milliseconds ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>milliseconds - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1327> 
<name>swf_removeobject</name>
<versions>(PHP 4)</versions>
<short-description>Remove an object</short-description>
<description>void swf_removeobject ( int $depth ) 
 Removes the last object drawn at the depth specified by depth. </description>
<parameters>depth - The depth, as an integer. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1328> 
<name>pow</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возведение в степень</short-description>
<description>number pow ( number $base , number $exp ) 
 Возвращает base, возведенное в степень exp. </description>
<parameters>base - Основание 
exp - Показатель степени </parameters>
<output>Основание base возведенное в степень exp. Если результат может быть представлен целым числом, то он будет возвращен с типом integer, иначе - с типом float. </output>
<errors></errors>
<example><?php
var_dump(pow(2, 8)); // int(256)
echo pow(-1, 20); // 1
echo pow(0, 0); // 1
echo pow(-1, 5.5); // PHP >4.0.6  NAN
echo pow(-1, 5.5); // PHP <=4.0.6 1.#IND
?></example>
<example_result></example_result>
</object>

<object id=1329> 
<name>openssl_csr_get_subject</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Returns the subject of a CERT</short-description>
<description>array openssl_csr_get_subject ( mixed $csr [, bool $use_shortnames = true ] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1330> 
<name>mcrypt_enc_is_block_mode</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Checks whether the opened mode outputs blocks</short-description>
<description>bool mcrypt_enc_is_block_mode ( resource $td ) 
 Tells whether the opened mode outputs blocks (e.g. TRUE for cbc and ecb, and FALSE for cfb and stream). </description>
<parameters>td - The encryption descriptor. </parameters>
<output>Returns TRUE if the mode outputs blocks of bytes, or FALSE if it outputs just bytes. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1331> 
<name>PDF_stringwidth</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Return width of text</short-description>
<description>float PDF_stringwidth ( resource $p , string $text , int $font , float $fontsize ) 
 Returns the width of text in an arbitrary font. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1332> 
<name>ncurses_define_key</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Define a keycode </short-description>
<description>int ncurses_define_key ( string $definition , int $keycode ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>definition - 
keycode - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1333> 
<name>imagecolorclosestalpha</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Get the index of the closest color to the specified color + alpha</short-description>
<description>int imagecolorclosestalpha ( resource $image , int $red , int $green , int $blue , int $alpha ) 
 Returns the index of the color in the palette of the image which is "closest" to the specified RGB value and alpha level. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
red - Значение красного компонента цвета.
green - Значение зеленого компонента цвета.
blue - Значение синего компонента цвета.
alpha - A value between 0 and 127. 0 indicates completely opaque while 127 indicates completely transparent. </parameters>
<output>Returns the index of the closest color in the palette. </output>
<errors></errors>
<example><?php
// Start with an image and convert it to a palette-based image
$im = imagecreatefrompng('figures/imagecolorclosest.png');
imagetruecolortopalette($im, false, 255);
// Search colors (RGB)
$colors = array(
    array(254, 145, 154, 50),
    array(153, 145, 188, 127),
    array(153, 90, 145, 0),
    array(255, 137, 92, 84)
);
// Loop through each search and find the closest color in the palette.
// Return the search number, the search RGB and the converted RGB match
foreach($colors as $id => $rgb)
{    $result = imagecolorclosestalpha($im, $rgb[0], $rgb[1], $rgb[2], $rgb[3]);
    $result = imagecolorsforindex($im, $result);
    $result = "({$result['red']}, {$result['green']}, {$result['blue']}, {$result['alpha']})";
    echo "#$id: Search ($rgb[0], $rgb[1], $rgb[2], $rgb[3]); Closest match: $result.\n";
}
imagedestroy($im);
?></example>
<example_result>
 
#0: Search (254, 145, 154, 50); Closest match: (252, 150, 148, 0).
#1: Search (153, 145, 188, 127); Closest match: (148, 150, 196, 0).
#2: Search (153, 90, 145, 0); Closest match: (148, 90, 156, 0).
#3: Search (255, 137, 92, 84); Closest match: (252, 150, 92, 0).
</example_result>
</object>

<object id=1334> 
<name>mb_encode_numericentity</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Кодирование символа в числовую HTML-ссылку</short-description>
<description>string mb_encode_numericentity ( string $str , array $convmap , string $encoding ) 
 Преобразует заданные коды символов в строке string str из числовой HTML-ссылки в коды символов. </description>
<parameters>str - Кодируемая строка string. 
convmap - convmap - массив, задающий диапазон кодов. 
encoding - Параметр encodingпредставляет собой символьную кодировку. Если он опущен, вместо него будет использовано значение внутренней кодировки.</parameters>
<output>Сконвертированная строка string. </output>
<errors></errors>
<example><?php
$convmap = array (
 int start_code1, int end_code1, int offset1, int mask1,
 int start_code2, int end_code2, int offset2, int mask2,
 ........
 int start_codeN, int end_codeN, int offsetN, int maskN );
// Задайте значения Юникода для start_codeN и end_codeN
// Добавьте к значению offsetN и сложите побитово с maskN, 
// затем преобразуйте результат в число.
?></example>
<example_result></example_result>
</object>

<object id=1335> 
<name>fdf_set_target_frame</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Set target frame for form display</short-description>
<description>bool fdf_set_target_frame ( resource $fdf_document , string $frame_name ) 
 Sets the target frame to display a result PDF defined with fdf_save_file() in. </description>
<parameters>fdf_document - The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string(). 
frame_name - The frame name, as a string. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1336> 
<name>imageistruecolor</name>
<versions>(PHP 4 >= 4.3.2, PHP 5)</versions>
<short-description>Finds whether an image is a truecolor image</short-description>
<description>bool imageistruecolor ( resource $image ) 
 imageistruecolor() finds whether the image image is a truecolor image. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().</parameters>
<output>Returns TRUE if the image is truecolor, FALSE otherwise. </output>
<errors></errors>
<example><?php
// $im is an image instance
// Check if image is a true color image or not
if(!imageistruecolor($im))
{    // Create a new true color image instance
    $tc = imagecreatetruecolor(imagesx($im), imagesy($im));
    imagecopy($tc, $im, 0, 0, 0, 0, imagesx($im), imagesy($im));
    imagedestroy($im);
    $im = $tc;
    $tc = NULL;
}
// Continue working with image instance
?></example>
<example_result></example_result>
</object>

<object id=1337> 
<name>deaggregate</name>
<versions>(PHP 4 >= 4.2.0)</versions>
<short-description>Removes the aggregated methods and properties from an object </short-description>
<description>void deaggregate ( object $object [, string $class_name ] ) 
 Removes the methods and properties from classes that were aggregated to an object. </description>
<parameters>object - 
class_name - If the optional class_name parameters is passed, only those methods and properties defined in that class are removed, otherwise all aggregated methods and properties are eliminated. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1338> 
<name>func_get_args</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает массив, содержащий аргументы функции</short-description>
<description>array func_get_args ( void ) 
 Возвращает массив, содержащий аргументы функции. 
 Эта функция может быть использована совместно с func_num_args() и func_get_arg() для создания функций с переменным количеством аргументов. </description>
<parameters></parameters>
<output>Возвращает массив, в котором каждый элемент является копией соответствующего члена списка аргументов пользовательской функции. </output>
<errors>Генерирует предупреждение при вызове вне определения функции. </errors>
<example><?php
function foo()
{    $numargs = func_num_args();
    echo "Количество аргументов: $numargs<br />\n";
    if ($numargs >= 2) {
        echo "Второй аргумент: " . func_get_arg(1) . "<br />\n";
    }
    $arg_list = func_get_args();
    for ($i = 0; $i < $numargs; $i++) {
        echo "Аргумент №$i: " . $arg_list[$i] . "<br />\n";
    }
}
foo(1, 2, 3);
?></example>
<example_result>
 
Количество аргументов: 3<br />
Второй аргумент: 2<br />
Аргумент №0: 1<br />
Аргумент №1: 2<br />
Аргумент №2: 3<br />
</example_result>
</object>

<object id=1339> 
<name>asin</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Арксинус</short-description>
<description>float asin ( float $arg ) 
 Возвращает арксинус числа arg в радианах. asin() - обратная тригонометрическая функция к sin(), т.е. a==sin(asin(a)) для каждого значения a, входящего в область значений функции asin(). </description>
<parameters>arg - Аргумент функции </parameters>
<output>Арксинус числа arg в радианах. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1340> 
<name>snmpwalk</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Fetch all the SNMP objects from an agent</short-description>
<description>array snmpwalk ( string $hostname , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] ) 
 snmpwalk() function is used to read all the values from an SNMP agent specified by the hostname. </description>
<parameters>hostname - The SNMP agent (server). 
community - The read community. 
object_id - If NULL, object_id is taken as the root of the SNMP objects tree and all objects under that tree are returned as an array. 
timeout - The number of microseconds until the first timeout. 
retries - The number of times to retry if timeouts occur.</parameters>
<output>Returns an array of SNMP object values starting from the object_id as root or FALSE on error. </output>
<errors></errors>
<example><?php
$a = snmpwalk("127.0.0.1", "public", ""); 
foreach ($a as $val) {
    echo "$val\n";
}
?></example>
<example_result></example_result>
</object>

<object id=1341> 
<name>sscanf</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Разбирает строку в соответствии с заданным форматом</short-description>
<description>mixed sscanf ( string $str , string $format [, mixed &$... ] ) 
 Функция sscanf() похожа на функцию printf(), но используется не для вывода, а для ввода данных. sscanf() интерпретирует строку str в соответствии с форматом format, указанным в документации к функцииsprintf(). 
 Любые пробельные символы в строке формата соответствуют любым пробельным символам во входной строке. Это значит, что, например, символ табуляции \t в строке формата соответствует символу пробела во входной строке. </description>
<parameters>str - Обрабатываемая строка (string). 
format - Формат, в соответствии с которым будет интерпретирована строка str, описанный в документации к функции sprintf() со следующими отличиями: На функцию не влияют настройки локали. F, g, G и b не поддерживаются. D обозначает десятичное число. i обозначает целое число с автоматическим определением системы счисления. n обозначает обработанное количество символов на данный момент. 
... - Необязательные переменные, передаваемые по ссылке, которым будут присвоены считанные значения. </parameters>
<output>Если переданы только эти два аргумента, будет возвращен массив. В противном случае, считанные из строки значения будут присвоены переменным, переданным через дополнительные аргументы, и будет возвращено количество присвоенных значений. Дополнительные аргументы должны передаваться по ссылке. </output>
<errors></errors>
<example><?php
// получаем серийный номер
list($serial) = sscanf("SN/2350001", "SN/%d");
// и дату изготовления
$mandate = "January 01 2000";
list($month, $day, $year) = sscanf($mandate, "%s %d %d");
echo "Узел $serial был изготовлен: $year-" . substr($month, 0, 3) . "-$day\n";
?></example>
<example_result></example_result>
</object>

<object id=1342> 
<name>pg_set_error_verbosity</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Определяет объем текста сообщений, возвращаемых функциями pg_last_error()</short-description>
<description>int pg_set_error_verbosity ([ resource $connection ], int $verbosity ) 
 Определяет объем текста сообщений, возвращаемых функциями pg_last_error() и pg_result_error(). 
 pg_set_error_verbosity() устанавливает режим, отвечающий за полноту сообщений об ошибках. В режиме PGSQL_ERRORS_TERSE сообщения будут содержать только важность ошибки, основной текст и место возникновения; эта информация обычно умещается в одну строку. В режиме по умолчанию PGSQL_ERRORS_DEFAULT в сообщения будут добавлены детали ошибки, подсказка или поля контекста (это может занять несколько строк). В режиме PGSQL_ERRORS_VERBOSE сообщения будут содержать все возможные поля. Изменение режима не затронет сообщения уже существующих ресурсов. Новый режим будет применяться только к вновь создаваемым. </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). 
verbosity - Требуемый режим: PGSQL_ERRORS_TERSE, PGSQL_ERRORS_DEFAULT или PGSQL_ERRORS_VERBOSE. </parameters>
<output>Предыдущий режим действовавший до запуска функции: PGSQL_ERRORS_TERSE, PGSQL_ERRORS_DEFAULT или PGSQL_ERRORS_VERBOSE. </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Could not connect");
  if (!pg_connection_busy($dbconn)) {
      pg_send_query($dbconn, "select * from doesnotexist;");
  }
  
  pg_set_error_verbosity($dbconn, PGSQL_ERRORS_VERBOSE);
  $res1 = pg_get_result($dbconn);
  echo pg_result_error($res1);
?></example>
<example_result></example_result>
</object>

<object id=1343> 
<name>atan</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Арктангенс</short-description>
<description>float atan ( float $arg ) 
 Возвращает арктангенс числа arg в радианах. atan() - обратная тригонометрическая функция к tan(), т.е. a==tan(atan(a)) для каждого значения a, входящего в область значений функции atan(). </description>
<parameters>arg - Аргумент функции </parameters>
<output>Арктангенс числа arg в радианах. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1344> 
<name>localtime</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает локальное время</short-description>
<description>array localtime ([ int $timestamp = time() [, bool $is_associative = false ]] ) 
 Функция localtime() возвращает массив, аналогичный по структуре, возвращаемой соответствующей функцией C. </description>
<parameters>timestamp - Необязательный параметр timestamp представляет собой integer метку времени, по умолчанию равную текущему локальному времени, если timestamp не указан. Другими словами, значение по умолчанию равно результату функции time(). 
is_associative - Если установлен в FALSE или не передан, то возвращается обычный массив с числовыми индексами. Если установлен в TRUE, то функция localtime() вернет ассоциативный массив, содержащий все различные элементы структуры, возвращаемой вызовом C-функции localtime. Названия этих ключей соответствуют следующим значениям: </parameters>
<output></output>
<errors>Каждый вызов к функциям даты/времени при неправильных настройках временной зоны сгенерирует ошибку уровня E_NOTICE,и/или ошибку уровня E_STRICT или E_WARNING при использовании системныхнастроек или переменной окружения TZ. Смотрите также date_default_timezone_set()</errors>
<example><?php
$localtime = localtime();
$localtime_assoc = localtime(time(), true);
print_r($localtime);
print_r($localtime_assoc);
?></example>
<example_result>
 
Array
(
    [0] => 24
    [1] => 3
    [2] => 19
    [3] => 3
    [4] => 3
    [5] => 105
    [6] => 0
    [7] => 92
    [8] => 1
)

Array
(
    [tm_sec] => 24
    [tm_min] => 3
    [tm_hour] => 19
    [tm_mday] => 3
    [tm_mon] => 3
    [tm_year] => 105
    [tm_wday] => 0
    [tm_yday] => 92
    [tm_isdst] => 1
)
</example_result>
</object>

<object id=1345> 
<name>imagecopymerge</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Copy and merge part of an image</short-description>
<description>bool imagecopymerge ( resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h , int $pct ) 
 Copy a part of src_im onto dst_im starting at the x,y coordinates src_x, src_y with a width of src_w and a height of src_h. The portion defined will be copied onto the x,y coordinates, dst_x and dst_y. </description>
<parameters>dst_im - Ресурс целевого изображения.
src_im - Ресурс исходного изображения.
dst_x - x-coordinate of destination point. 
dst_y - y-coordinate of destination point. 
src_x - x-coordinate of source point. 
src_y - y-coordinate of source point. 
src_w - Ширина исходного изображения.
src_h - Высота исходного изображения.
pct - The two images will be merged according to pct which can range from 0 to 100. When pct = 0, no action is taken, when 100 this function behaves identically to imagecopy() for pallete images, while it implements alpha transparency for true colour images. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Create image instances
$dest = imagecreatefromgif('php.gif');
$src = imagecreatefromgif('php.gif');
// Copy and merge
imagecopymerge($dest, $src, 10, 10, 0, 0, 100, 47, 75);
// Output and free from memory
header('Content-Type: image/gif');
imagegif($dest);
imagedestroy($dest);
imagedestroy($src);
?></example>
<example_result></example_result>
</object>

<object id=1346> 
<name>dbase_add_record</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Добавляет запись в базу данных</short-description>
<description>bool dbase_add_record ( int $dbase_identifier , array $record ) 
 Добавляет данные в базу данных </description>
<parameters>dbase_identifier - Идентификатор базы данных, возвращаемый функцией dbase_open() или dbase_create(). 
record - Индексированный массив с данными. Количество элементов должно быть равно числу полей в базе данных, в противном случае dbase_add_record() не удастся выполнить. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// открыть БД в режиме чтения и записи
$db = dbase_open('/tmp/test.dbf', 2);
if ($db) {
  dbase_add_record($db, array(
      date('Ymd'), 
      'Maxim Topolov', 
      '23', 
      'max@example.com',
      'T'));   
  dbase_close($db);
}
?></example>
<example_result></example_result>
</object>

<object id=1347> 
<name>com_invoke</name>
<versions>(PHP 4)</versions>
<short-description>Calls a COM component&#039;s method [deprecated]</short-description>
<description>mixed com_invoke ( resource $com_object , string $function_name [, mixed $function_parameters ] ) 
 com_invoke() invokes the method named function_name of the COM component referenced by com_object. com_invoke() returns FALSE on error, returns the function_name&#039;s return value on success. All the extra parameters function_parameters are passed to the method function_name. 
 
 Пример #1 Don&#039;t use com_invoke(), use OO syntax instead <?php
// do this
$val = $obj->method($one, $two);
// instead of this:
$val = com_invoke($obj, 'method', $one, $two);
?></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1348> 
<name>hw_Array2Objrec</name>
<versions>(PHP 4)</versions>
<short-description>Convert attributes from object array to object record</short-description>
<description>string hw_array2objrec ( array $object_array ) 
 Converts an object_array into an object record. Multiple attributes like &#039;Title&#039; in different languages are treated properly. </description>
<parameters>object_array - The array. </parameters>
<output>Returns an object record. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1349> 
<name>array_map</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Применяет callback-функцию ко всем элементам указанных массивов</short-description>
<description>array array_map ( callback $callback , array $arr1 [, array $... ] ) 
 Функция array_map() возвращает массив, содержащий элементы arr1 после их обработки callback-функцией. Количество параметров, передаваемых callback-функции, должно совпадать с количеством массивов, переданным функции array_map(). </description>
<parameters>callback - Callback-функция, применяемая к каждому элементу в каждом массиве. 
arr1 - Массив, к которому применяется callback-функция. 
array - Дополнительные массивы для обработки callback-функцией. </parameters>
<output>Возвращает массив, содержащий все элементы arr1 после применения callback-функции к каждому из них. </output>
<errors></errors>
<example><?php
function cube($n)
{    return($n * $n * $n);
}
$a = array(1, 2, 3, 4, 5);
$b = array_map("cube", $a);
print_r($b);
?></example>
<example_result>
 
Array
(
    [0] => 1
    [1] => 8
    [2] => 27
    [3] => 64
    [4] => 125
)
</example_result>
</object>

<object id=1350> 
<name>xmlrpc_server_destroy</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Уничтожает серверные ресурсы</short-description>
<description>int xmlrpc_server_destroy ( resource $server ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1351> 
<name>dba_handlers</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>List all the handlers available</short-description>
<description>array dba_handlers ([ bool $full_info = false ] ) 
 dba_handlers() list all the handlers supported by this extension. </description>
<parameters>full_info - Turns on/off full information display in the result. </parameters>
<output>Returns an array of database handlers. If full_info is set to TRUE, the array will be associative with the handlers names as keys, and their version information as value. Otherwise, the result will be an indexed array of handlers names. </output>
<errors></errors>
<example><?php
echo "Available DBA handlers:\n";
foreach (dba_handlers(true) as $handler_name => $handler_version) {
  // clean the versions
  $handler_version = str_replace('$', '', $handler_version);
  echo " - $handler_name: $handler_version\n";
}
?></example>
<example_result>
 
Available DBA handlers:
 - cdb: 0.75, Revision: 1.3.2.3 
 - cdb_make: 0.75, Revision: 1.2.2.4 
 - db2: Sleepycat Software: Berkeley DB 2.7.7: (08/20/99)
 - inifile: 1.0, Revision: 1.6.2.3 
 - flatfile: 1.0, Revision: 1.5.2.4 
</example_result>
</object>

<object id=1352> 
<name>simplexml_load_file</name>
<versions>(PHP 5)</versions>
<short-description>Интерпретирует XML-файл в объект </short-description>
<description>SimpleXMLElement simplexml_load_file ( string $filename [, string $class_name = "SimpleXMLElement" [, int $options = 0 [, string $ns = "" [, bool $is_prefix = false ]]]] ) 
 Преобразует правильно сформированный XML-документ в указанном файле в объект. </description>
<parameters>filename - Путь к XML-файлу 
class_name - Вы можете использовать этот необязательный параметр для того, чтобы функция simplexml_load_file() возвращала объект указанного класса. Этот класс должен расширять класс SimpleXMLElement. 
options - Начиная с PHP 5.1.0 и Libxml 2.6.0, вы также можете использовать параметр options чтобы указать дополнительные параметры Libxml. 
ns - Префикс пространства имен или URI. 
is_prefix - TRUE если ns является префиксом, и FALSE если URI; по умолчанию равен FALSE. </parameters>
<output>Возвращает объект (object) класса SimpleXMLElement со свойствами, содержащими данные, которые хранятся внутри XML-документа или FALSE в случае возникновения ошибки. </output>
<errors>Генерирует сообщение об ошибке уровня E_WARNING для каждой ошибки, найденной в XML-данных. </errors>
<example><?php
//Файл test.xml содержит XML-документ с корневым элементом 
//и, по крайней мере, элемент /[root]/title.
if (file_exists('test.xml')) {
    $xml = simplexml_load_file('test.xml');
 
    print_r($xml);
} else {
    exit('Не удалось открыть файл test.xml.');
}?></example>
<example_result>
 
SimpleXMLElement Object
(
  [title] => Пример заголовка
  ...
)
</example_result>
</object>

<object id=1353> 
<name>openssl_cipher_iv_length</name>
<versions>(PHP 5 >= PHP 5.3.3)</versions>
<short-description>Gets the cipher iv length</short-description>
<description>int openssl_cipher_iv_length ( string $method ) 
 Gets the cipher iv length. </description>
<parameters>method - The method. </parameters>
<output>Returns the cipher length on success, or FALSE on failure. </output>
<errors>Emits an E_WARNING level error when the cipher algorithm is unknown. </errors>
<example><?php
$method = 'AES-128-CBC';
$ivlen = openssl_cipher_iv_length($method);
echo $ivlen;
?></example>
<example_result>
 
16
</example_result>
</object>

<object id=1354> 
<name>sybase_close</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Closes a Sybase connection</short-description>
<description>bool sybase_close ([ resource $link_identifier ] ) 
 sybase_close() closes the link to a Sybase database that&#039;s associated with the specified link link_identifier. 
 Note that this isn&#039;t usually necessary, as non-persistent open links are automatically closed at the end of the script&#039;s execution. 
 sybase_close() will not close persistent links generated by sybase_pconnect(). </description>
<parameters>link_identifier - If the link identifier isn&#039;t specified, the last opened link is assumed. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1355> 
<name>wordwrap</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Переносит строку по указанному количеству символов</short-description>
<description>string wordwrap ( string $str [, int $width = 75 [, string $break = "\n" [, bool $cut = false ]]] ) 
 Переносит строку по указанному количеству символов. </description>
<parameters>str - Входная строка. 
width - Допустимая ширина строки. 
break - Символ переноса строки можно указать с помощью необязательного параметра break. 
cut - Если параметр cut установлен в TRUE, строка всегда будет переноситься на указанной ширине или раньше. Поэтому, если исходная строка содержит слово длиннее заданной ширины строки, то оно будет разорвано. (Смотрите второй пример). </parameters>
<output>Возвращает строку, с вставленными символами переноса на указанной ширине. </output>
<errors></errors>
<example><?php
$text = "The quick brown fox jumped over the lazy dog.";
$newtext = wordwrap($text, 20, "<br />\n");
echo $newtext;
?></example>
<example_result>
 
The quick brown fox<br />
jumped over the lazy<br />
dog.
</example_result>
</object>

<object id=1356> 
<name>cos</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Косинус</short-description>
<description>float cos ( float $arg ) 
 cos() возвращает косинус параметра arg . Параметр arg задаётся в радианах. </description>
<parameters>arg - Угол в радианах </parameters>
<output>Косинус угла arg </output>
<errors></errors>
<example><?php
echo cos(M_PI); // -1
?></example>
<example_result></example_result>
</object>

<object id=1357> 
<name>fdf_get_ap</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Get the appearance of a field</short-description>
<description>bool fdf_get_ap ( resource $fdf_document , string $field , int $face , string $filename ) 
 Gets the appearance of a field (i.e. the value of the /AP key) and stores it in a file. </description>
<parameters>fdf_document - The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string(). 
field - 
face - The possible values are FDFNormalAP, FDFRolloverAP and FDFDownAP. 
filename - The appearance will be stored in this parameter. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1358> 
<name>filter_list</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Возвращает список всех поддерживаемых фильтров</short-description>
<description>array filter_list ( void ) </description>
<parameters></parameters>
<output>Возвращает массив имен всех поддерживаемых фильтров, пустой массив, если таких фильтров не существует. Идентификаторы (ID) фильтров не являются ключами этого массива, они могут быть получены с помощью функции filter_id() по имени фильтра. </output>
<errors></errors>
<example><?php
print_r(filter_list());
?></example>
<example_result>
 
Array
(
    [0] => int
    [1] => boolean
    [2] => float
    [3] => validate_regexp
    [4] => validate_url
    [5] => validate_email
    [6] => validate_ip
    [7] => string
    [8] => stripped
    [9] => encoded
    [10] => special_chars
    [11] => unsafe_raw
    [12] => email
    [13] => url
    [14] => number_int
    [15] => number_float
    [16] => magic_quotes
    [17] => callback
)
</example_result>
</object>

<object id=1359> 
<name>yaz_connect</name>
<versions>(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)</versions>
<short-description>Подготавливает соединение с сервером Z39.50 </short-description>
<description>mixed yaz_connect ( string $zurl [, mixed $options ] ) 
 Функция возвращает дескриптор соединения в случае успеха и ноль в случае ошибки. 
 yaz_connect() подготавливает соединение с сервером Z39.50. Эта функция неблокирующая и не пытается установить соединение, а лишь готовит соединение для последующего выполнения функцией yaz_wait(). 
 Замечание: 
 &raquo; YAZ proxy бесплатно доступный агент Z39.50. </description>
<parameters>zurl - Строка, принимающая форму host[:port][/database]. Если порт опущен, то по умолчанию используется 210 порт. Если опушено название базы данных, используется база с именем Default. 
options - Если задается строка, то она рассматривается как строка аутентификации Z39.50 V2 (OpenAuth). 
user - Имя пользователя для аутентификации. 
group - Название группы для аутентификации. 
password - Пароль для аутентификации. 
cookie - Cookie для сессии (YAZ proxy). 
proxy - Прокси для подключения (YAZ proxy). 
persistent - Имеет логический тип. Если принимает TRUE - соединение постоянное, если FALSE - непостоянное соединение. По умолчанию соединение постоянное. 
piggyback - Имеет логический тип. Если принимает TRUE,то режим передачи прямых и обратных пакетов включен; если FALSE, то данный режим отключен. По умолчанию режим передачи прямых и обратных пакетов включен. 
charset - Строка, определяющая кодировку используемую в Z39.50 и при передаче данных. Возможны такие значения как: ISO-8859-1, UTF-8, UTF-16. 
preferredMessageSize - Целочисленное параметр, определяющий максимальный размер всех записей, возвращенных сервером при поиске, в байтах. Для более подробной информации см. стандарт &raquo; Z39.50. 
maximumRecordSize - Целочисленный параметр, определяющий максимальное количество байт в отдельной записи, возвращаемой сервером в результате поиска. Данный параметр относится к Exceptional-record-size в стандарте &raquo; Z39.50. </parameters>
<output>Дескриптор соединения в случае успеха, FALSE при ошибке. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1360> 
<name>gmp_prob_prime</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Проверяет, является ли число "вероятно простым"</short-description>
<description>int gmp_prob_prime ( resource $a [, int $reps = 10 ] ) 
 Функция использует тест Миллера-Рабина для определения, является ли число простым. </description>
<parameters>a - Число, для которого проводится проверка. 
reps - Допустимые значения аргумента reps лежат в диапазоне от 5 до 10 (по умолчанию 10); чем больше это число, тем меньше вероятность, что непростые числа пройдут этот тест и определятся, как "возможно простые". </parameters>
<output>Если функция возвращает 0, a точно не является простым. Если возвращает 1, то a "возможно" простое. Если возвращает 2, то a точно простое. </output>
<errors></errors>
<example><?php
// по определению не является простым
echo gmp_prob_prime("6") . "\n";
// возможно простое
echo gmp_prob_prime("1111111111111111111") . "\n";
// по определению простое
echo gmp_prob_prime("11") . "\n";
?></example>
<example_result>
 
0
1
2
</example_result>
</object>

<object id=1361> 
<name>enchant_broker_set_ordering</name>
<versions>(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )</versions>
<short-description>Declares a preference of dictionaries to use for the language</short-description>
<description>bool enchant_broker_set_ordering ( resource $broker , string $tag , string $ordering ) 
 Declares a preference of dictionaries to use for the language described/referred to by &#039;tag&#039;. The ordering is a comma delimited list of provider names. As a special exception, the "*" tag can be used as a language tag to declare a default ordering for any language that does not explicitly declare an ordering. </description>
<parameters>broker - Broker resource 
tag - Language tag. The special "*" tag can be used as a language tag to declare a default ordering for any language that does not explicitly declare an ordering. 
ordering - Comma delimited list of provider names </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1362> 
<name>pg_field_type</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает имя типа заданного поля </short-description>
<description>string pg_field_type ( resource $result , int $field_number ) 
 pg_field_type() возвращает строку, содержащую имя базового типа значений колонки результата запроса result с номером field_number. 
 Замечание: 
 Если в качестве типа значений используется PostgreSQL домен (вместо базового типа), функция вернет имя типа внутри домена, а не имя самого домена. 
 Замечание: 
 Прежнее название функции: pg_fieldtype(). </description>
<parameters>result - Ресурс результата запроса PostgreSQL, возвращаемый функциями pg_query(), pg_query_params() или pg_execute() (в числе прочих). 
field_number - Порядковый номер поля, начиная с нуля. </parameters>
<output>Строка, содержащая имя базового типа значений поля, либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Невозможно соединиться с базой");
  // Положим, 'title' имеет тип varchar
  $res = pg_query($dbconn, "select title from authors where author = 'Orwell'");
  echo "Title field type: ", pg_field_type($res, 0);
?></example>
<example_result>
 
Title field type: varchar
</example_result>
</object>

<object id=1363> 
<name>hwapi_hgcsp</name>
<versions>(PHP 4, PHP 5 < 5.2.0, PECL hwapi SVN)</versions>
<short-description>Returns object of class hw_api</short-description>
<description>HW_API hwapi_hgcsp ( string $hostname [, int $port ] ) 
 Opens a connection to the Hyperwave server on host hostname. The protocol used is HGCSP. </description>
<parameters>hostname - The host name. 
port - If you do not pass a port number, 418 is used. </parameters>
<output>Returns an instance of HW_API. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1364> 
<name>readfile</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выводит файл</short-description>
<description>int readfile ( string $filename [, bool $use_include_path = false [, resource $context ]] ) 
 Читает файл и записывает его в буфер вывода. </description>
<parameters>filename - Имя читаемого файла. 
use_include_path - Вы можете установить в TRUE необязательный второй аргумент, если вы также хотите попытаться найти файл в include_path. 
context - Ресурс (resource) с контекстом потока. </parameters>
<output>Возвращает количество прочитанных из файла байт. В случае возникновения ошибки вернёт FALSE, если только функция не была вызвана как @readfile(), и выведет сообщение об ошибке. </output>
<errors></errors>
<example><?php
$file = 'monkey.gif';
if (file_exists($file)) {
    header('Content-Description: File Transfer');
    header('Content-Type: application/octet-stream');
    header('Content-Disposition: attachment; filename='.basename($file));
    header('Content-Transfer-Encoding: binary');
    header('Expires: 0');
    header('Cache-Control: must-revalidate');
    header('Pragma: public');
    header('Content-Length: ' . filesize($file));
    ob_clean();
    flush();
    readfile($file);
    exit;
}?></example>
<example_result></example_result>
</object>

<object id=1365> 
<name>mb_eregi</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Regular expression match ignoring case with multibyte support</short-description>
<description>int mb_eregi ( string $pattern , string $string [, array $regs ] ) 
 Executes the case insensitive regular expression match with multibyte support. </description>
<parameters>pattern - The regular expression pattern. 
string - The string being searched. 
regs - Contains a substring of the matched string. </parameters>
<output>Для этой функции будетиспользована внутренняя кодировка или кодировка, установленная функцией mb_regex_encoding().</output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1366> 
<name>preg_grep</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает массив вхождений, которые соответствуют шаблону</short-description>
<description>array preg_grep ( string $pattern , array $input [, int $flags = 0 ] ) 
 Возвращает массив, состоящий из элементов входящего массива input, которые соответствуют заданному шаблону pattern. </description>
<parameters>pattern - Искомый шаблон, строка. 
input - Входящий массив. 
flags - В случае, если установлен в PREG_GREP_INVERT, функция preg_grep() возвращает те элементы массива, которые не соответствуют заданному шаблону pattern. </parameters>
<output>Возвращает массив, индексированный ключами из массива input. </output>
<errors></errors>
<example><?php
// Возвращает все элементы массива,
// содержащие числа с плавающей точкой
$fl_array = preg_grep("/^(\d+)?\.\d+$/", $array);
?></example>
<example_result></example_result>
</object>

<object id=1367> 
<name>libxml_set_streams_context</name>
<versions>(PHP 5)</versions>
<short-description>Установка контекста потока для следующей загрузки или записи документа посредством libxml </short-description>
<description>void libxml_set_streams_context ( resource $streams_context ) 
 Установка контекста потока для следующей загрузки или записи документа посредством libxml. </description>
<parameters>streams_context - Ресурс контекста потока (созданный функцией stream_context_create()) </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
$opts = array(
    'http' => array(
        'user_agent' => 'PHP libxml agent',
    )
);
$context = stream_context_create($opts);
libxml_set_streams_context($context);
// request a file through HTTP
$doc = DOMDocument::load('http://www.example.com/file.xml');
?></example>
<example_result></example_result>
</object>

<object id=1368> 
<name>stream_socket_recvfrom</name>
<versions>(PHP 5)</versions>
<short-description>Получает данные из сокета, подсоединённого или нет </short-description>
<description>string stream_socket_recvfrom ( resource $socket , int $length [, int $flags = 0 [, string &$address ]] ) 
 stream_socket_recvfrom() принимает данные из удалённого сокета размером до length байт. </description>
<parameters>socket - Удалённый сокет. 
length - Количество байт для получения из параметра socket. 
flags - Значение параметра flags может быть любой комбинацией из следующего: Возможные значения для параметра flags STREAM_OOB Обрабатывать данные OOB (out-of-band). STREAM_PEEK Получать данные из сокета, но не расходовать буфер. Последующие вызовы функций fread() или stream_socket_recvfrom() получат те же самые данные. 
address - Если указан параметр address, он будет заполнен адресом удалённого сокета. </parameters>
<output>Возвращает прочитанные данные, в виде строки </output>
<errors></errors>
<example><?php
/* Открывает серверный сокет на 1234-м порту на localhost */
$server = stream_socket_server('tcp://127.0.0.1:1234');
/* Принимает соединение */
$socket = stream_socket_accept($server);
/* Получает пакет (обычный размер MTU 1500)  OOB-данных */
echo "Получены данные OOB (Out-Of-Band): '" . stream_socket_recvfrom($socket, 1500, STREAM_OOB) . "'\n";
/* Получить обычные данные, но не расходовать их. */
echo "Данные: '" . stream_socket_recvfrom($socket, 1500, STREAM_PEEK) . "'\n";
/* Получить тот же самый пакет снова, но в этот раз удалить его из буфера данных. */
echo "Данные: '" . stream_socket_recvfrom($socket, 1500) . "'\n";
/* Закрыть сокет */
fclose($socket);
fclose($server);
?></example>
<example_result></example_result>
</object>

<object id=1369> 
<name>com_isenum</name>
<versions>(PHP 4 >= 4.1.0)</versions>
<short-description>Indicates if a COM object has an IEnumVariant interface for iteration [deprecated]</short-description>
<description>bool com_isenum ( variant $com_module ) 
 Checks to see if a COM object can be enumerated using the Next() method hack. See COM class for more details on these methods. </description>
<parameters>com_module - The COM object. </parameters>
<output>Returns TRUE if the object can be enumerated, FALSE otherwise. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1370> 
<name>odbc_close</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Close an ODBC connection</short-description>
<description>void odbc_close ( resource $connection_id ) 
 Closes down the connection to the database server. </description>
<parameters>connection_id - Идентификатор соединения ODBC,за подробностями обращайтесь к odbc_connect().</parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1371> 
<name>dbplus_rcrtlike</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Creates an empty copy of a relation with default indices</short-description>
<description>mixed dbplus_rcrtlike ( string $name , resource $relation [, int $overwrite ] ) 
 dbplus_rcrtexact() will create an empty copy of the given relation under a new name, but with default indices. </description>
<parameters>name - 
relation - The copied relation, opened by dbplus_open(). 
overwrite - An existing relation by the same name will only be overwritten if this parameter is set to TRUE and no other process is currently using the relation. </parameters>
<output>Returns resource on success or DBPLUS_ERR_UNKNOWN on failure. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1372> 
<name>mysqli_param_count</name>
<versions>(PHP 5)</versions>
<short-description>Синоним для mysqli_stmt_param_count()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1373> 
<name>mysql_field_flags</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает флаги, связанные с указанным полем результата запроса</short-description>
<description>string mysql_field_flags ( resource $result , int $field_offset ) 
 mysql_field_flags() возвращает флаги, связанные с указанным полем. Каждый флаг возвращается как отдельное слово, отделённое от предыдущего пробелом. Полученное значение можно разбить в массив, используя функцию explode(). </description>
<parameters>result - Обрабатываемый результат запроса.Этот результат может быть получен с помощью функции mysql_query().
field_offset - Числовое смещение поля.field_offset начинается с 0. Еслиfield_offset не существует, генерируется ошибка уровняE_WARNING.</parameters>
<output>Возвращает строку с флагами, связанными с результатом или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$result = mysql_query("SELECT id,email FROM people WHERE id = '42'");
if (!$result) {
    echo 'Ошибка в запросе: ' . mysql_error();
    exit;
}$flags = mysql_field_flags($result, 0);
echo $flags;
print_r(explode(' ', $flags));
?></example>
<example_result>
 
not_null primary_key auto_increment
Array
(
    [0] => not_null
    [1] => primary_key
    [2] => auto_increment
)
</example_result>
</object>

<object id=1374> 
<name>ibase_commit</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Commit a transaction</short-description>
<description>bool ibase_commit ([ resource $link_or_trans_identifier = NULL ] ) 
 Commits a transaction. </description>
<parameters>link_or_trans_identifier - If called without an argument, this function commits the default transaction of the default link. If the argument is a connection identifier, the default transaction of the corresponding connection will be committed. If the argument is a transaction identifier, the corresponding transaction will be committed. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1375> 
<name>ncurses_reset_prog_mode</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Resets the prog mode saved by def_prog_mode</short-description>
<description>int ncurses_reset_prog_mode ( void ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1376> 
<name>m_initconn</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Create and initialize an MCVE_CONN structure</short-description>
<description>resource m_initconn ( void ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output>Returns an MCVE_CONN resource. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1377> 
<name>XMLWriter::writeDTDAttlist</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Записать полный тэг DTD AttList</short-description>
<description>bool XMLWriter::writeDTDAttlist ( string $name , string $content ) 
 Процедурный стиль bool xmlwriter_write_dtd_attlist ( resource $xmlwriter , string $name , string $content )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
name - Имя списка атрибутов DTD. 
content - Содержимое списка атрибутов DTD. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1378> 
<name>easter_days</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получение количества дней между 21 марта и Пасхой в заданном году </short-description>
<description>int easter_days ([ int $year [, int $method = CAL_EASTER_DEFAULT ]] ) 
 Возвращает количество дней между 21 марта и Пасхой в заданном году. Если год не указан, расчет будет произведен для текущего года. 
 Эту функцию можно использовать вместо easter_date() для расчета даты Пасхи для дат, выходящих за рамки диапазона меток времени Unix (с 1970 по 2037 годы). 
 Дата Пасхального дня была введена Консулом Никеи в 325 году до н.э. Это первое воскресенье, следующее за первым полнолунием после весеннего равноденствия. Днем весеннего равноденствия принято считать 21 марта, так что расчет дня Пасхи сводится к определению даты полнолуния и следующего за ней воскресенья. Используемый здесь алгоритм введен Дионисием Малым в 532 году. В Юлианском летоисчислении (до 1753 года) для отслеживания фаз луны использовался простой 19-летний цикл. В Грегорианском календаре (годы после 1753 - разработан Христофором Клавиусом и Алоизием Лилиусом и введен Папой Григорием XIII в октябре 1582г., а в Великобритании и ее колониях в сентябре 1752г.) было добавлено 2 поправочных коэффициента увеличивающих точность расчета дат. </description>
<parameters>year - Год, положительное число 
method - Позволяет расчитать Пасхальные даты основанные на Григорианском календаре для 1582 - 1752 годов, если установить CAL_EASTER_ROMAN. См. список констант календаря, чтобы узнать о всех допустимых константах. </parameters>
<output>Количество дней между 21 марта и Пасхальным воскресеньем в заданном году year. </output>
<errors></errors>
<example><?php
echo easter_days(1999);        // 14, т.e. April 4
echo easter_days(1492);        // 32, т.e. April 22
echo easter_days(1913);        //  2, т.e. March 23
?></example>
<example_result></example_result>
</object>

<object id=1379> 
<name>shm_put_var</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Inserts or updates a variable in shared memory</short-description>
<description>bool shm_put_var ( resource $shm_identifier , int $variable_key , mixed $variable ) 
 shm_put_var() inserts or updates the variable with the given variable_key. 
 Warnings (E_WARNING level) will be issued if shm_identifier is not a valid SysV shared memory index or if there was not enough shared memory remaining to complete your request. </description>
<parameters>shm_identifier - A shared memory resource handle as returned by shm_attach() 
variable_key - The variable key. 
variable - The variable. All variable types that serialize() supports may be used: generally this means all types except for resources and some internal objects that cannot be serialized. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1380> 
<name>ldap_close</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним ldap_unbind()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1381> 
<name>str_getcsv</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Выполняет разбор CSV-строки в массив </short-description>
<description>array str_getcsv ( string $input [, string $delimiter = &#039;,&#039; [, string $enclosure = &#039;"&#039; [, string $escape = &#039;\\&#039; ]]] ) 
 Данная функция выполняет разбор строки в формате CSV и возвращает массив с полученными из строки полями. </description>
<parameters>input - Обрабатываемая строка. 
delimiter - Устанавливает разделитель поля (только один символ). 
enclosure - Устанавливает символ ограничителя поля (только один символ). 
escape - Устанавливает экранирующий символ (только один символ). По умолчанию равен обратному слэшу (\). </parameters>
<output>Возвращает индексированный массив, содержащий полученные из строки поля. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1382> 
<name>ncurses_init_pair</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Define a color pair</short-description>
<description>int ncurses_init_pair ( int $pair , int $fg , int $bg ) 
 Defines or redefines the given color pair to have the given foreground and background colors. If the color pair was previously initialized, the screen is refreshed and all occurrences of it are changed to reflect the new definition. 
 Color capabilities must be initialized using ncurses_start_color() before calling this function. The first color pair (color pair 0) is assumed to be white on black by default, but can be changed using ncurses_assume_default_colors(). </description>
<parameters>pair - The number of the color pair to define. 
fg - The foreground color for the color pair. May be one of the pre-defined colors or one defined by ncurses_init_color() if the terminal has color changing capabilities. 
bg - The background color for the color pair. May be one of the pre-defined colors or one defined by ncurses_init_color() if the terminal has color changing capabilities. </parameters>
<output>Returns -1 if the function was successful, and 0 if ncurses or color support were not initialized. </output>
<errors></errors>
<example><?php
ncurses_init();
// If the terminal supports colors, initialize and set active color
if (ncurses_has_colors()) {
    ncurses_start_color();
    ncurses_init_pair(1, NCURSES_COLOR_YELLOW, NCURSES_COLOR_BLUE);
    ncurses_color_set(1);
}
// Write a string at specified location
ncurses_mvaddstr(10, 10, "Hello world! Yellow on blue text!");
// Flush output to screen
ncurses_refresh();
ncurses_end();
?></example>
<example_result></example_result>
</object>

<object id=1383> 
<name>preg_last_error</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Возвращает код ошибки выполнения последнего регулярного выражения PCRE</short-description>
<description>int preg_last_error ( void ) 
 Возвращает код ошибки выполнения последнего регулярного выражения PCRE. 
 
 Пример #1 Пример использования preg_last_error() <?php
preg_match('/(?:\D+|<\d+>)*[!?]/', 'foobar foobar foobar');
if (preg_last_error() == PREG_BACKTRACK_LIMIT_ERROR) {
    print 'Был исчерпан лимит обратных ссылок!';
}
?></description>
<parameters></parameters>
<output>Возвращает одну из следующих констант, (описанных на отдельной странице.): PREG_NO_ERROR PREG_INTERNAL_ERROR PREG_BACKTRACK_LIMIT_ERROR (см. также pcre.backtrack_limit) PREG_RECURSION_LIMIT_ERROR (см. также pcre.recursion_limit) PREG_BAD_UTF8_ERROR PREG_BAD_UTF8_OFFSET_ERROR (начиная с PHP 5.3.0) </output>
<errors></errors>
<example></example>
<example_result>
 
Был исчерпан лимит обратных ссылок!
</example_result>
</object>

<object id=1384> 
<name>socket_connect</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Initiates a connection on a socket</short-description>
<description>bool socket_connect ( resource $socket , string $address [, int $port = 0 ] ) 
 Initiate a connection to address using the socket resource socket, which must be a valid socket resource created with socket_create(). </description>
<parameters>socket - 
address - The address parameter is either an IPv4 address in dotted-quad notation (e.g. 127.0.0.1) if socket is AF_INET, a valid IPv6 address (e.g. ::1) if IPv6 support is enabled and socket is AF_INET6 or the pathname of a Unix domain socket, if the socket family is AF_UNIX. 
port - The port parameter is only used and is mandatory when connecting to an AF_INET or an AF_INET6 socket, and designates the port on the remote host to which a connection should be made. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. The error code can be retrieved with socket_last_error(). This code may be passed to socket_strerror() to get a textual explanation of the error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1385> 
<name>odbc_binmode</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Handling of binary column data</short-description>
<description>bool odbc_binmode ( resource $result_id , int $mode ) 
 Enables handling of binary column data. ODBC SQL types affected are BINARY, VARBINARY, and LONGVARBINARY. 
 When binary SQL data is converted to character C data, each byte (8 bits) of source data is represented as two ASCII characters. These characters are the ASCII character representation of the number in its hexadecimal form. For example, a binary 00000001 is converted to "01" and a binary 11111111 is converted to "FF". LONGVARBINARY handling binmode longreadlen result ODBC_BINMODE_PASSTHRU 0 passthru ODBC_BINMODE_RETURN 0 passthru ODBC_BINMODE_CONVERT 0 passthru ODBC_BINMODE_PASSTHRU 0 passthru ODBC_BINMODE_PASSTHRU >0 passthru ODBC_BINMODE_RETURN >0 return as is ODBC_BINMODE_CONVERT >0 return as char 
 If odbc_fetch_into() is used, passthru means that an empty string is returned for these columns. </description>
<parameters>result_id - The result identifier. 
mode - Possible values for mode are: ODBC_BINMODE_PASSTHRU: Passthru BINARY data ODBC_BINMODE_RETURN: Return as is ODBC_BINMODE_CONVERT: Convert to char and return </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1386> 
<name>sybase_fetch_array</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Fetch row as array</short-description>
<description>array sybase_fetch_array ( resource $result ) 
 sybase_fetch_array() is an extended version of sybase_fetch_row(). In addition to storing the data in the numeric indices of the result array, it also stores the data in associative indices, using the field names as keys. 
 An important thing to note is that using sybase_fetch_array() is NOT significantly slower than using sybase_fetch_row(), while it provides a significant added value. </description>
<parameters>result - </parameters>
<output>Returns an array that corresponds to the fetched row, or FALSE if there are no more rows. </output>
<errors></errors>
<example><?php
$dbh = sybase_connect('SYBASE', '', '');
$q = sybase_query('SELECT * FROM p, a WHERE p.person_id= a.person_id');
var_dump(sybase_fetch_array($q));
sybase_close($dbh);
?></example>
<example_result>
 
array(4) {
  [0]=>
  int(1)
  ["person_id"]=>
  int(1)
  [1]=>
  int(1)
  ["person_id1"]=>
  int(1)
}
</example_result>
</object>

<object id=1387> 
<name>mysql_num_rows</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает количество рядов результата запроса</short-description>
<description>int mysql_num_rows ( resource $result ) 
 Возвращает количество рядов результата запроса. Эта команда работает только с запросами SELECT или SHOW, возвращающих актуальный результат запроса. Чтобы получить количество рядов, обработанных функцями INSERT, UPDATE, REPLACE и DELETE, используйте функцию mysql_affected_rows(). </description>
<parameters>result - Обрабатываемый результат запроса.Этот результат может быть получен с помощью функции mysql_query().</parameters>
<output>Количество рядов в результате запроса в случае успеха или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$link = mysql_connect("localhost", "mysql_user", "mysql_password");
mysql_select_db("database", $link);
$result = mysql_query("SELECT * FROM table1", $link);
$num_rows = mysql_num_rows($result);
echo "Получено $num_rows рядов\n";
?></example>
<example_result></example_result>
</object>

<object id=1388> 
<name>recode</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним recode_string()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1389> 
<name>fileatime</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает время последнего доступа к файлу</short-description>
<description>int fileatime ( string $filename ) 
 Возвращает время последнего доступа к файлу. </description>
<parameters>filename - Путь к файлу. </parameters>
<output>Возвращает время, когда в последний раз был осуществлен доступ к указанному файлу, или FALSE в случае возникновения ошибки. Время возвращается в виде временной метки Unix. </output>
<errors>В случае неудачного завершения работы генерируется ошибка уровня E_WARNING.</errors>
<example><?php
// Пример вывода: В последний раз обращение к файлу somefile.txt было произведено: December 29 2002 22:16:23.
$filename = 'somefile.txt';
if (file_exists($filename)) {
    echo "В последний раз обращение к файлу $filename было произведено: " . date("F d Y H:i:s.", fileatime($filename));
}
?></example>
<example_result></example_result>
</object>

<object id=1390> 
<name>fbsql_error</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Returns the error message from previous operation</short-description>
<description>string fbsql_error ([ resource $link_identifier ] ) 
 Returns the error message from previous FrontBase operation. 
 Errors coming back from the fbsql database backend don&#039;t issue warnings. Instead, use fbsql_error() to retrieve the error text. Note that this function only returns the error code from the most recently executed fbsql function (not including fbsql_error() and fbsql_errno()), so if you want to use it, make sure you check the value before calling another fbsql function. </description>
<parameters>link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Returns the error text from the last fbsql function, or &#039;&#039; (the empty string) if no error occurred. </output>
<errors></errors>
<example><?php
fbsql_connect("marliesle");
echo fbsql_errno() . ": " . fbsql_error() . "<br />";
fbsql_select_db("nonexistentdb");
echo fbsql_errno() . ": " . fbsql_error() . "<br />";
$conn = fbsql_query("SELECT * FROM nonexistenttable;");
echo fbsql_errno() . ": " . fbsql_error() . "<br />";
?></example>
<example_result></example_result>
</object>

<object id=1391> 
<name>stream_bucket_new</name>
<versions>(PHP 5)</versions>
<short-description>Create a new bucket for use on the current stream </short-description>
<description>object stream_bucket_new ( resource $stream , string $buffer ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1392> 
<name>mysql_errno</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает численный код ошибки выполнения последней операции с MySQL</short-description>
<description>int mysql_errno ([ resource $link_identifier ] ) 
 Возвращает код ошибки последней функции работы с MySQL. 
 Ошибки работы с MySQL больше не вызывают сообщений в PHP. Вместо этого используйте функцию mysql_errno(), чтобы получить код ошибки. Учтите, что функция возвращает код ошибки только последней выполненной функции (исключая mysql_error() и mysql_errno()). Проверяйте результат работы функции до вызова следующей. </description>
<parameters>link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Возвращает код ошибки последней функции работы с MySQL, или 0 (ноль), если операция выполнена успешно. </output>
<errors></errors>
<example><?php
$link = mysql_connect("localhost", "mysql_user", "mysql_password");
if (!mysql_select_db("nonexistentdb", $link)) {
    echo mysql_errno($link) . ": " . mysql_error($link). "\n";
}
mysql_select_db("kossu", $link);
if (!mysql_query("SELECT * FROM nonexistenttable", $link)) {
    echo mysql_errno($link) . ": " . mysql_error($link) . "\n";
}?></example>
<example_result>
 
1049: Unknown database &#039;nonexistentdb&#039;
1146: Table &#039;kossu.nonexistenttable&#039; doesn&#039;t exist
</example_result>
</object>

<object id=1393> 
<name>strpbrk</name>
<versions>(PHP 5)</versions>
<short-description>Ищет в строке любой символ из заданного набора</short-description>
<description>string strpbrk ( string $haystack , string $char_list ) 
 strpbrk() ищет в строке haystack символы из набора char_list. </description>
<parameters>haystack - Строка, в которой производится поиск char_list. 
char_list - Данный параметр чувствителен к регистру. </parameters>
<output>Возвращает строку, начиная с найденного символа, или FALSE, если он не был найден. </output>
<errors></errors>
<example><?php
$text = 'This is a Simple text.';
// Этот код выдаст "is is a Simple text.", т.к. символ 'i' встретится раньше
echo strpbrk($text, 'mi');
// Этот код выдаст "Simple text.", т.к. символы чувствительны к регистру
echo strpbrk($text, 'S');
?></example>
<example_result></example_result>
</object>

<object id=1394> 
<name>shmop_read</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Чтение данных из участка разделяемой памяти</short-description>
<description>string shmop_read ( int $shmid , int $start , int $count ) 
 shmop_read() возвращает строковые данные, хранимые в участке разделяемой памяти. </description>
<parameters>shmid - Идентификатор блока памяти, возвращаемый функцией shmop_open() 
start - Определяет, с какой позиции начинать чтение данных. 
count - Количество байтов для чтения. </parameters>
<output>Возвращает строковые данные или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$shm_data = shmop_read($shm_id, 0, 50);
?></example>
<example_result></example_result>
</object>

<object id=1395> 
<name>vpopmail_alias_get</name>
<versions>(PHP 4 >= 4.0.7, PECL vpopmail >= 0.2)</versions>
<short-description>Get all lines of an alias for a domain</short-description>
<description>array vpopmail_alias_get ( string $alias , string $domain ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1396> 
<name>fstat</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает информацию о файле используя открытый файловый указатель</short-description>
<description>array fstat ( resource $handle ) 
 Собирает статистическую информацию об открытом файле по файловому указателю handle. Эта функция похожа на stat(), за исключением того, что она работает с открытым файловым указателем, а не именем файла. </description>
<parameters>handle - Указатель (resource)на файл, обычно создаваемый с помощью функции fopen().</parameters>
<output>Возвращает массив со статистической информацией файла; формат массива подробно описан на странице описания функции stat(). </output>
<errors></errors>
<example><?php
// открываем файл
$fp = fopen("/etc/passwd", "r");
// собираем статистику
$fstat = fstat($fp);
// закрываем файл
fclose($fp);
// отображаем только ассоциативную часть
print_r(array_slice($fstat, 13));
?></example>
<example_result>
 
Array
(
    [dev] => 771
    [ino] => 488704
    [mode] => 33188
    [nlink] => 1
    [uid] => 0
    [gid] => 0
    [rdev] => 0
    [size] => 1114
    [atime] => 1061067181
    [mtime] => 1056136526
    [ctime] => 1056136526
    [blksize] => 4096
    [blocks] => 8
)
</example_result>
</object>

<object id=1397> 
<name>mb_ereg_search_getpos</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает начальную позицию следующего совпадения с регулярным выражением </short-description>
<description>int mb_ereg_search_getpos ( void ) 
 Возвращает начальную позицию следующего совпадения с регулярным выражением. </description>
<parameters></parameters>
<output>Для этой функции будетиспользована внутренняя кодировка или кодировка, установленная функцией mb_regex_encoding().</output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1398> 
<name>imagesy</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get image height</short-description>
<description>int imagesy ( resource $image ) 
 Returns the height of the given image resource. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().</parameters>
<output>Return the height of the image or FALSE on errors. </output>
<errors></errors>
<example><?php
// create a 300*200 image
$img = imagecreatetruecolor(300, 200);
echo imagesy($img); // 200
?></example>
<example_result></example_result>
</object>

<object id=1399> 
<name>getcwd</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает имя текущего рабочего каталога</short-description>
<description>string getcwd ( void ) 
 Возвращает имя текущего рабочего каталога. </description>
<parameters></parameters>
<output>Возвращает текущий рабочий каталог в случае успеха или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
// текущий каталог
echo getcwd() . "\n";
chdir('cvs');
// текущий каталог
echo getcwd() . "\n";
?></example>
<example_result>
 
/home/didou
/home/didou/cvs
</example_result>
</object>

<object id=1400> 
<name>date_sub</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Псевдоним DateTime::sub()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1401> 
<name>stream_context_set_default</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Устанавливает контекст потоков по умолчанию</short-description>
<description>resource stream_context_set_default ( array $options ) 
 Устанавливает контекст потока по умолчанию, который будет использоваться всякий раз, когда файловые операции (fopen(), file_get_contents(), и т.д.) вызываются без параметра контекста. Используется тот же синтаксис, что и в stream_context_create(). </description>
<parameters>options - Опции для установки для контекста по умолчанию. </parameters>
<output>Возвращает контекст потока по умолчанию. </output>
<errors></errors>
<example><?php
$default_opts = array(
  'http'=>array(
    'method'=>"GET",
    'header'=>"Accept-language: en\r\n" .
              "Cookie: foo=bar",
    'proxy'=>"tcp://10.54.1.39:8000"
  )
);
$default = stream_context_set_default($default_opts);
/* Отправляет обычный GET-запрос к прокси-серверу по адресу 10.54.1.39
 * Для www.example.com используются опции контекста, указанные в $default_opts
 */
readfile('http://www.example.com');
?></example>
<example_result></example_result>
</object>

<object id=1402> 
<name>list</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Присваивает переменным из списка значения подобно массиву</short-description>
<description>array list ( mixed $varname [, mixed $... ] ) 
 Подобно array(), это не функция, а языковая конструкция. list() используется для того, чтобы присвоить списку переменных значения за одну операцию. </description>
<parameters>varname - Переменная. </parameters>
<output>Возвращает присвоенный массив. </output>
<errors></errors>
<example><?php
$info = array('кофе', 'коричневый', 'кофеин');
// Составить список всех переменных
list($drink, $color, $power) = $info;
echo "$drink - $color, а $power делает его особенным.\n";
// Составить список только некоторых из них
list($drink, , $power) = $info;
echo "В $drink есть $power.\n";
// Или только третья
list( , , $power) = $info;
echo "Мне нужен $power!\n";
// list() не работает со строками
list($bar) = "abcde";
var_dump($bar); // NULL
?></example>
<example_result>
 
int(1)
int(2)
int(3)
</example_result>
</object>

<object id=1403> 
<name>ftp_delete</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Удаляет файл на FTP-сервере</short-description>
<description>bool ftp_delete ( resource $ftp_stream , string $path ) 
 ftp_delete() удаляет файл, заданный аргументом path, с FTP-сервера. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером 
path - Удаляемый файл. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$file = 'public_html/old.txt';
// установка соединения
$conn_id = ftp_connect($ftp_server);
// вход с именем пользователя и паролем
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);
// попытка удалить файл
if (ftp_delete($conn_id, $file)) {
 echo "Файл $file удален\n";
} else {
 echo "Не удалось удалить $file\n";
}
// закрытие соединения
ftp_close($conn_id);
?></example>
<example_result></example_result>
</object>

<object id=1404> 
<name>msql_field_table</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get table name for field</short-description>
<description>int msql_field_table ( resource $result , int $field_offset ) 
 Returns the name of the table that the specified field is in. </description>
<parameters>result - Обрабатываемый результат запроса,полученный с помощью функции msql_query().
field_offset - Числовое смещение поля.field_offset начинается с 1.</parameters>
<output>The name of the table on success или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1405> 
<name>stream_bucket_make_writeable</name>
<versions>(PHP 5)</versions>
<short-description>Return a bucket object from the brigade for operating on </short-description>
<description>object stream_bucket_make_writeable ( resource $brigade ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1406> 
<name>gmp_setbit</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Установка бита</short-description>
<description>void gmp_setbit ( resource $a , int $index [, bool $set_clear = true ] ) 
 Устанавливает в 1 бит с индексом index в числе a. </description>
<parameters>a - Число, в котором требуется задать бит. 
index - Позиция бита, который требуется установить. 
set_clear - Задается, если бит необходимо сбросить в 0. По умолчанию, функция устанавливает бит в 1. Индексация начинается с нуля. </parameters>
<output>Число GMP. </output>
<errors></errors>
<example><?php
$a = gmp_init("0xfd");
gmp_setbit($a, 1); // Индексация с нуля
echo gmp_strval($a) . "\n";
?></example>
<example_result>
 
255
</example_result>
</object>

<object id=1407> 
<name>posix_kill</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Send a signal to a process</short-description>
<description>bool posix_kill ( int $pid , int $sig ) 
 Send the signal sig to the process with the process identifier pid. </description>
<parameters>pid - The process identifier. 
sig - One of the PCNTL signals constants. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1408> 
<name>msql_create_db</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Create mSQL database</short-description>
<description>bool msql_create_db ( string $database_name [, resource $link_identifier ] ) 
 msql_create_db() attempts to create a new database on the mSQL server. </description>
<parameters>database_name - The name of the mSQL database. 
link_identifier - Соединение mSQL.Если не указан, используется последнее соединение, открытое msql_connect().Если такое соединение не было найдено, функция попытается установить новое, как если бы была вызвана функцияmsql_connect(), и использовать его.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1409> 
<name>ovrimos_fetch_row</name>
<versions>(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)</versions>
<short-description>Fetches a row from the result set</short-description>
<description>bool ovrimos_fetch_row ( int $result_id [, int $how [, int $row_number ]] ) 
 Fetches a row from the result set. Column values should be retrieved with other calls. </description>
<parameters>result_id - A result identifier, returned by ovrimos_execute() or ovrimos_exec(). 
how - Determines how the rows are fetched. This can be one of the following strings (case is not significant): Option Notes Next Forward direction from current position. This is the default value. Prev Backward direction from current position. First Forward direction from the start. Last Backward direction from the end. Absolute Absolute position from the start. Requires rownumber. 
rownumber - The row number, first one is 0. Only needed when how is set to Absolute. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$conn = ovrimos_connect("remote.host", "8001", "admin", "password");
if ($conn != 0) {
    echo "Connection ok!";
    $res=ovrimos_exec($conn, "select table_id, table_name from sys.tables");
    if ($res != 0) {
        echo "Statement ok!";
        if (ovrimos_fetch_row($res, "First")) {
            $table_id = ovrimos_result($res, 1);
            $table_name = ovrimos_result($res, 2);
            echo "table_id=" . $table_id . ", table_name=" . $table_name . "\n";
            if (ovrimos_fetch_row($res, "Next")) {
                $table_id = ovrimos_result($res, "table_id");
                $table_name = ovrimos_result($res, "table_name");
                echo "table_id=" . $table_id . ", table_name=" . $table_name . "\n";
            } else {
                echo "Next: error\n";
            }
        } else {
            echo "First: error\n";
        }
        ovrimos_free_result($res);
    }
    ovrimos_close($conn);
}?></example>
<example_result></example_result>
</object>

<object id=1410> 
<name>PDF_setgray_fill</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set fill color to gray [deprecated]</short-description>
<description>bool PDF_setgray_fill ( resource $p , float $g ) 
 Sets the current fill color to a gray value between 0 and 1 inclusive. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. 
 This function is deprecated since PDFlib version 4, use PDF_setcolor() instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1411> 
<name>imagesetbrush</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Set the brush image for line drawing</short-description>
<description>bool imagesetbrush ( resource $image , resource $brush ) 
 imagesetbrush() sets the brush image to be used by all line drawing functions (such as imageline() and imagepolygon()) when drawing with the special colors IMG_COLOR_BRUSHED or IMG_COLOR_STYLEDBRUSHED. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
brush - An image resource. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Load a mini php logo
$php = imagecreatefrompng('./php.png');
// Create the main image, 100x100
$im = imagecreatetruecolor(100, 100);
// Fill the background with white
$white = imagecolorallocate($im, 255, 255, 255);
imagefilledrectangle($im, 0, 0, 299, 99, $white);
// Set the brush
imagesetbrush($im, $php);
// Draw a couple of brushes, each overlaying each
imageline($im, 50, 50, 50, 60, IMG_COLOR_BRUSHED);
// Output image to the browser
header('Content-type: image/png');
imagepng($im);
imagedestroy($im);
imagedestroy($php);
?></example>
<example_result></example_result>
</object>

<object id=1412> 
<name>ldap_first_attribute</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Вернуть первый атрибут</short-description>
<description>string ldap_first_attribute ( resource $link_identifier , resource $result_entry_identifier ) 
 Получает первый атрибут в данной записи. Остающиеся атрибуты получаются последовательным вызовом ldap_next_attribute(). 
 Подобно чтению записей, атрибуты также читаются один за другим из отдельного элемента. </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
result_entry_identifier - 
ber_identifier - ber_identifier является идентификатором внутреннего указателя ячейки памяти. Он передается по ссылке. Также ber_identifier передается в ldap_next_attribute(), которая изменяет этот указатель. </parameters>
<output>Возвращает первый атрибут в записи, в случае успеха, и FALSE в случае ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1413> 
<name>imagelayereffect</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Set the alpha blending flag to use the bundled libgd layering effects</short-description>
<description>bool imagelayereffect ( resource $image , int $effect ) 
 Set the alpha blending flag to use the bundled libgd layering effects. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
effect - One of the following constants: IMG_EFFECT_REPLACE Use pixel replacement (equivalent of passing TRUE to imagealphablending()) IMG_EFFECT_ALPHABLEND Use normal pixel blending (equivalent of passing FALSE to imagealphablending()) IMG_EFFECT_NORMAL Same as IMG_EFFECT_ALPHABLEND. IMG_EFFECT_OVERLAY Overlay has the effect that black background pixels will remain black, white background pixels will remain white, but grey background pixels will take the colour of the foreground pixel. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Setup an image
$im = imagecreatetruecolor(100, 100);
// Set a background
imagefilledrectangle($im, 0, 0, 100, 100, imagecolorallocate($im, 220, 220, 220));
// Apply the overlay alpha blending flag
imagelayereffect($im, IMG_EFFECT_OVERLAY);
// Draw two grey ellipses
imagefilledellipse($im, 50, 50, 40, 40, imagecolorallocate($im, 100, 255, 100));
imagefilledellipse($im, 50, 50, 50, 80, imagecolorallocate($im, 100, 100, 255));
imagefilledellipse($im, 50, 50, 80, 50, imagecolorallocate($im, 255, 100, 100));
// Output
header('Content-type: image/png');
imagepng($im);
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=1414> 
<name>ldap_err2str</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Преобразовать код ошибки LDAP в строковое сообщение об ошибке</short-description>
<description>string ldap_err2str ( int $errno ) 
 Возвращает строковое сообщение об ошибке, объясняющее код ошибки errno. В то время как LDAP числа errno стандартизированы, различные библиотеки возвращают отличающиеся или даже локализованные текстовые сообщения об ошибках. Никогда не проверяйте на определенный текст сообщения об ошибке, всегда пользуйтесь кодами ошибок для проверки. </description>
<parameters>errno - Номер ошибки. </parameters>
<output>Возвращает сообщение ошибки в виде строки. </output>
<errors></errors>
<example><?php
  for ($i=0; $i<100; $i++) {
    printf("Error $i: %s<br />\n", ldap_err2str($i));
  }
?></example>
<example_result></example_result>
</object>

<object id=1415> 
<name>pg_connection_status</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Определяет состояние подключения </short-description>
<description>int pg_connection_status ( resource $connection ) 
 pg_connection_status() возвращает состояние переданного в качестве аргумента соединения connection. </description>
<parameters>connection - Ресурс соединения с базой данных PostgreSQL. </parameters>
<output>PGSQL_CONNECTION_OK либо PGSQL_CONNECTION_BAD. </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Could not connect");
  $stat = pg_connection_status($dbconn);
  if ($stat === PGSQL_CONNECTION_OK) {
      echo 'Статус соединения: доступно';
  } else {
      echo 'Статус соединения: разорвано';
  }    
?></example>
<example_result></example_result>
</object>

<object id=1416> 
<name>msg_stat_queue</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Returns information from the message queue data structure</short-description>
<description>array msg_stat_queue ( resource $queue ) 
 msg_stat_queue() returns the message queue meta data for the message queue specified by the queue. This is useful, for example, to determine which process sent the message that was just received. </description>
<parameters>queue - Message queue resource handle </parameters>
<output>The return value is an array whose keys and values have the following meanings: Array structure for msg_stat_queue msg_perm.uid The uid of the owner of the queue. msg_perm.gid The gid of the owner of the queue. msg_perm.mode The file access mode of the queue. msg_stime The time that the last message was sent to the queue. msg_rtime The time that the last message was received from the queue. msg_ctime The time that the queue was last changed. msg_qnum The number of messages waiting to be read from the queue. msg_qbytes The maximum number of bytes allowed in one message queue. On Linux, this value may be read and modified via /proc/sys/kernel/msgmnb. msg_lspid The pid of the process that sent the last message to the queue. msg_lrpid The pid of the process that received the last message from the queue. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1417> 
<name>ctype_alnum</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Проверяет на наличие буквенно-цифровых символов</short-description>
<description>bool ctype_alnum ( string $text ) 
 Проверяет, все ли символы в переданной строке text являются буквенно-цифровыми. В стандартной локали C буквами являются только [A-Za-z]. </description>
<parameters>text - Проверяемая строка. </parameters>
<output>Возвращает TRUE, если каждый символ в строке text является буквой или цифрой, иначе возвращается FALSE. </output>
<errors></errors>
<example><?php
$strings = array('AbCd1zyZ9', 'foo!#$bar');
foreach ($strings as $testcase) {
    if (ctype_alnum($testcase)) {
        echo "Строка $testcase состоит только из букв и цифр.\n";
    } else {
        echo "Строка $testcase не состоит только из букв и цифр.\n";
    }
}?></example>
<example_result>
 
Строка AbCd1zyZ9 состоит только из букв и цифр.
Строка foo!#$bar не состоит только из букв и цифр.
</example_result>
</object>

<object id=1418> 
<name>ldap_explode_dn</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Разделить DN на его составные части</short-description>
<description>array ldap_explode_dn ( string $dn , int $with_attrib ) 
 Разделяет DN, возвращенный функцией ldap_get_dn(), и разбивает его на составные части. Каждая часть известна как относительное отличительное имя или RDN. </description>
<parameters>dn - Отличительное имя объекта LDAP. 
with_attrib - Используется для запроса, если RDNs возвращены только со значениями или также с их атрибутами. Для получения RDNs с атрибутами (то есть в формате attribute=value) установите параметр with_attrib в 0 и для получения только значений установите его в 1. </parameters>
<output>Возвращает массив всех компонентов DN. У первого элемента в этом массиве есть ключ count и он представляет собой число возвращенных значений. Следующие элементы - это компоненты DN с цифровыми индексами. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1419> 
<name>udm_get_doc_count</name>
<versions>(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)</versions>
<short-description>Получает общее количество документов в базе данных</short-description>
<description>int udm_get_doc_count ( resource $agent ) 
 udm_get_doc_count() возвращает количество документов в базе данных. </description>
<parameters>agent - Ссылка на идентификатор агента, полученная после вызова udm_alloc_agent(). </parameters>
<output>Возвращает количество документов. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1420> 
<name>proc_nice</name>
<versions>(PHP 5)</versions>
<short-description>Изменяет приоритет текущего процесса</short-description>
<description>bool proc_nice ( int $increment ) 
 proc_nice() изменяет приоритет текущего процесса на значение, указанное в параметре increment. Положительное значение параметра increment будет уменьшать приоритет текущего процесса, а отрицательное значение параметра increment будет увеличивать приоритет. 
 Функция proc_nice() не связана с функцией proc_open() и к относящимся к ней функциям каким-либо образом. </description>
<parameters>increment - Значение, на которое должен быть изменён приоритет процесса. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. В случае, если происходит ошибка, например, пользователь не имеет прав на изменение приоритета, также генерируется ошибка уровня E_WARNING. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1421> 
<name>msession_count</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)</versions>
<short-description>Get session count</short-description>
<description>int msession_count ( void ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1422> 
<name>octdec</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Переводит число из восьмеричной системы счисления в десятичную</short-description>
<description>number octdec ( string $octal_string ) 
 Возвращает десятичный эквивалент восьмеричного числа, указанного в аргументе octal_string. </description>
<parameters>octal_string - Восьмеричная строка для преобразования </parameters>
<output>Десятичное представление octal_string </output>
<errors></errors>
<example><?php
echo octdec('77') . "\n";
echo octdec(decoct(45));
?></example>
<example_result>
 
63
45
</example_result>
</object>

<object id=1423> 
<name>swf_posround</name>
<versions>(PHP 4)</versions>
<short-description>Enables or Disables the rounding of the translation when objects are placed or moved</short-description>
<description>void swf_posround ( int $round ) 
 Enables or disables the rounding of the translation when objects are placed or moved, there are times when text becomes more readable because rounding has been enabled. </description>
<parameters>round - Whether to enable rounding or not, if set to the value of 1, then rounding is enabled, if set to 0 then rounding is disabled. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1424> 
<name>imagecolormatch</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Makes the colors of the palette version of an image more closely match the true color version</short-description>
<description>bool imagecolormatch ( resource $image1 , resource $image2 ) 
 Makes the colors of the palette version of an image more closely match the true color version. </description>
<parameters>image1 - A truecolor image link resource. 
image2 - A palette image link resource pointing to an image that has the same size as image1. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Setup the true color and palette images
$im1 = imagecreatefrompng('./gdlogo.png');
$im2 = imagecreate(imagesx($im1), imagesy($im1));
// Add some colors to $im2
$colors   = Array();
$colors[] = imagecolorallocate($im2, 255, 36, 74);
$colors[] = imagecolorallocate($im2, 40, 0, 240);
$colors[] = imagecolorallocate($im2, 82, 100, 255);
$colors[] = imagecolorallocate($im2, 84, 63, 44);
// Match these colors with the true color image
imagecolormatch($im1, $im2);
// Free from memory
imagedestroy($im1);
imagedestroy($im2);
?></example>
<example_result></example_result>
</object>

<object id=1425> 
<name>XMLWriter::writeDTD</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Записать полный тэг DTD</short-description>
<description>bool XMLWriter::writeDTD ( string $name [, string $publicId [, string $systemId [, string $subset ]]] ) 
 Процедурный стиль bool xmlwriter_write_dtd ( resource $xmlwriter , string $name [, string $publicId [, string $systemId [, string $subset ]]] )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
name - Имя DTD. 
publicId - Идентификатор внешнего публичного подмножества. 
systemId - Идентификатор внешнего системного подмножества. 
subset - Содержание DTD. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1426> 
<name>mysqli_enable_reads_from_master</name>
<versions>(PHP 5)</versions>
<short-description>Включает чтение с мастера</short-description>
<description>bool mysqli_enable_reads_from_master ( mysqli $link ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1427> 
<name>shm_detach</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Disconnects from shared memory segment</short-description>
<description>bool shm_detach ( resource $shm_identifier ) 
 shm_detach() disconnects from the shared memory given by the shm_identifier created by shm_attach(). Remember, that shared memory still exist in the Unix system and the data is still present. </description>
<parameters>shm_identifier - A shared memory resource handle as returned by shm_attach() </parameters>
<output>shm_detach() always returns TRUE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1428> 
<name>var_dump</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выводит информацию о переменной</short-description>
<description>void var_dump ( mixed $expression [, mixed $... ] ) 
 Функция отображает структурированную информацию об одном или нескольких выражениях, включая их тип и значение. Массивы и объекты анализируются рекурсивно с разным отступом у значений для визуального отображения структуры. 
 В PHP 5 все общедоступные, закрытые и защищенные свойства объекта будут возвращены при выводе. Подсказка
 Как и с любой другой функцией, осуществляющейвывод непосредственно в браузер, вы можете использовать функции контроля вывода,чтобы перехватывать выводимые этой функцией данные и сохранять их, например, вstring.</description>
<parameters>expression - Переменная, значение которой необходимо отобразить. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
$a = array(1, 2, array("a", "b", "c"));
var_dump($a);
?></example>
<example_result>
 
array(3) {
  [0]=>
  int(1)
  [1]=>
  int(2)
  [2]=>
  array(3) {
    [0]=>
    string(1) "a"
    [1]=>
    string(1) "b"
    [2]=>
    string(1) "c"
  }
}
</example_result>
</object>

<object id=1429> 
<name>ingres_fetch_array</name>
<versions>( PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)</versions>
<short-description>Fetch a row of result into an array</short-description>
<description>array ingres_fetch_array ( resource $result [, int $result_type ] ) 
 This function is an extended version of ingres_fetch_row(). In addition to storing the data in the numeric indices of the result array, it also stores the data in associative indices, using the field names as keys. 
 If two or more columns of the result have the same field names, the last column will take precedence. To access the another column or columns of the same name, you must use the numeric index of the column or make an alias for the column. For example: <?php
$result = ingres_query($link, "select ap_place as city, ap_ccode as country from airport where ap_iatacode = 'VLL'"); 
$result = ingres_fetch_array($result);
$foo = $result["city"];
$bar = $result["country"];
?></description>
<parameters>result - The query result identifier 
result_type - The result type. This result_type can be INGRES_NUM for enumerated array, INGRES_ASSOC for associative array, or INGRES_BOTH (default). </parameters>
<output>Returns an array that corresponds to the fetched row, or FALSE if there are no more rows </output>
<errors></errors>
<example><?php
$link = ingres_connect($database, $user, $password);
$result = ingres_query($link,"select * from table");
while ($row = ingres_fetch_array($result)) {
    echo $row["user_id"];  // using associative array
    echo $row["fullname"];
    echo $row[1];          // using enumerated array
    echo $row[2];
}?></example>
<example_result></example_result>
</object>

<object id=1430> 
<name>notes_list_msgs</name>
<versions>(PHP 4 >= 4.0.5)</versions>
<short-description>Returns the notes from a selected database_name</short-description>
<description>bool notes_list_msgs ( string $db ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1431> 
<name>odbc_field_num</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Return column number</short-description>
<description>int odbc_field_num ( resource $result_id , string $field_name ) 
 Gets the number of the column slot that corresponds to the named field in the given result identifier. </description>
<parameters>result_id - The result identifier. 
field_name - The field name. </parameters>
<output>Returns the field number as a integer, or FALSE on error. Field numbering starts at 1. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1432> 
<name>ovrimos_field_num</name>
<versions>(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)</versions>
<short-description>Returns the (1-based) index of the output column</short-description>
<description>int ovrimos_field_num ( int $result_id , string $field_name ) 
 Returns the 1-based index of the specified output column. </description>
<parameters>result_id - A result identifier, returned by ovrimos_execute() or ovrimos_exec(). 
field_name - The field name. </parameters>
<output>Returns the index, starting at 1, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1433> 
<name>gzseek</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Перемещает указатель на позицию в gz-файле</short-description>
<description>int gzseek ( resource $zp , int $offset [, int $whence = SEEK_SET ] ) 
 Устанавливает указатель на позицию в файле, на который ссылается zp. Выполняется смещение потока этого файла на указанное количество байт. Эквивалентно вызову (в C) gzseek(zp, offset, SEEK_SET). 
 Если файл открыт для чтения, функция эмулируется, при этом будет работать очень медленно. Если файл открыт для записи, разрешено только перемещение вперёд; gzseek() при этом сжимает последовательность нулей до новой позиции. </description>
<parameters>zp - Указатель на gz-файл, возвращённый, после его успешного открытия, функцией gzopen(). 
offset - Смещение. 
whence - Значения параметра whence может быть одним из следующих: SEEK_SET - Установить абсолютную позицию в offset байт. SEEK_CUR - Установить позицию относительно текущего положения, добавив к ней offset. </parameters>
<output>При успешном завершении возвращает 0; иначе -1. Обратите внимание, что если установленное смещение перемещает указатель на позицию за EOF, это не является ошибкой. </output>
<errors></errors>
<example><?php
$gz = gzopen('somefile.gz', 'r');
gzseek($gz,2);
echo gzgetc($gz);
gzclose($gz);
?></example>
<example_result></example_result>
</object>

<object id=1434> 
<name>dbplus_undo</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Undo</short-description>
<description>int dbplus_undo ( resource $relation ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>relation - A relation opened by dbplus_open(). </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1435> 
<name>pcntl_fork</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Forks the currently running process</short-description>
<description>int pcntl_fork ( void ) 
 The pcntl_fork() function creates a child process that differs from the parent process only in its PID and PPID. Please see your system&#039;s fork(2) man page for specific details as to how fork works on your system. </description>
<parameters></parameters>
<output>On success, the PID of the child process is returned in the parent&#039;s thread of execution, and a 0 is returned in the child&#039;s thread of execution. On failure, a -1 will be returned in the parent&#039;s context, no child process will be created, and a PHP error is raised. </output>
<errors></errors>
<example><?php
$pid = pcntl_fork();
if ($pid == -1) {
     die('could not fork');
} else if ($pid) {
     // we are the parent
     pcntl_wait($status); //Protect against Zombie children
} else {
     // we are the child
}
?></example>
<example_result></example_result>
</object>

<object id=1436> 
<name>ob_get_flush</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Сброс буфера вывода, возвращая его содержимое и отключение буферизации вывода</short-description>
<description>string ob_get_flush ( void ) 
 ob_get_flush() сбрасывает буфер вывода, возвращая его содержимое в виде строки и отключает буферизацию вывода. 
 Замечание: Эта функция аналогична ob_end_flush() за исключением того, что эта функция возвращает буфер в виде строки. </description>
<parameters></parameters>
<output>Возвращает буфер вывода или FALSE если буферизация не активна. </output>
<errors></errors>
<example><?php
//Используется output_buffering=On
print_r(ob_list_handlers());
//сохраняет буфер в файл
$buffer = ob_get_flush();
file_put_contents('buffer.txt', $buffer);
print_r(ob_list_handlers());
?></example>
<example_result>
 
Array
(
    [0] => default output handler
)
Array
(
)
</example_result>
</object>

<object id=1437> 
<name>pcntl_alarm</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Set an alarm clock for delivery of a signal</short-description>
<description>int pcntl_alarm ( int $seconds ) 
 Creates a timer that will send a SIGALRM signal to the process after the given number of seconds. Any call to pcntl_alarm() will cancel any previously set alarm. </description>
<parameters>seconds - The number of seconds to wait. If seconds is zero, no new alarm is created. </parameters>
<output>Returns the time in seconds that any previously scheduled alarm had remaining before it was to be delivered, or 0 if there was no previously scheduled alarm. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1438> 
<name>ociresult</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_result()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1439> 
<name>hash_algos</name>
<versions>(PHP 5 >= 5.1.2, PECL hash >= 1.1)</versions>
<short-description>Возвращает список зарегистрированных алгоритмов хеширования</short-description>
<description>array hash_algos ( void ) </description>
<parameters></parameters>
<output>Возвращает массив, содержащий список поддерживаемых алгоритмов хэширования. </output>
<errors></errors>
<example>
 hash_algos() возвращает следующий список названий алгоритмов хеширования. </example>
<example_result>
 
Array
(
    [0] => md2
    [1] => md4
    [2] => md5
    [3] => sha1
    [4] => sha224
    [5] => sha256
    [6] => sha384
    [7] => sha512
    [8] => ripemd128
    [9] => ripemd160
    [10] => ripemd256
    [11] => ripemd320
    [12] => whirlpool
    [13] => tiger128,3
    [14] => tiger160,3
    [15] => tiger192,3
    [16] => tiger128,4
    [17] => tiger160,4
    [18] => tiger192,4
    [19] => snefru
    [20] => snefru256
    [21] => gost
    [22] => adler32
    [23] => crc32
    [24] => crc32b
    [25] => salsa10
    [26] => salsa20
    [27] => haval128,3
    [28] => haval160,3
    [29] => haval192,3
    [30] => haval224,3
    [31] => haval256,3
    [32] => haval128,4
    [33] => haval160,4
    [34] => haval192,4
    [35] => haval224,4
    [36] => haval256,4
    [37] => haval128,5
    [38] => haval160,5
    [39] => haval192,5
    [40] => haval224,5
    [41] => haval256,5
)
</example_result>
</object>

<object id=1440> 
<name>pspell_add_to_session</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Добавляет слово в список слов в текущей сессии</short-description>
<description>bool pspell_add_to_session ( int $dictionary_link , string $word ) 
 pspell_add_to_session() добавляет слово в список слов, ассоциированный с текущей сессией. Эта функция очень похожа на функцию pspell_add_to_personal() </description>
<parameters>dictionary_link - 
word - Добавляемое слово. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1441> 
<name>disk_total_space</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Возвращает общий размер каталога или раздела файловой системы</short-description>
<description>float disk_total_space ( string $directory ) 
 Функция возвращает общий размер в байтах указанного раздела диска или каталога. </description>
<parameters>directory - Директория файловой системы или раздел диска. </parameters>
<output>Возвращает общий размер в байтах в виде вещественного числа или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// $df содержит общий размер диска "/" в байтах
$ds = disk_total_space("/");
// Под Windows:
$ds = disk_total_space("C:");
$ds = disk_total_space("D:");
?></example>
<example_result></example_result>
</object>

<object id=1442> 
<name>mysqli_send_long_data</name>
<versions>(PHP 5)</versions>
<short-description>Синоним для mysqli_stmt_send_long_data()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1443> 
<name>com_create_guid</name>
<versions>(PHP 5)</versions>
<short-description>Generate a globally unique identifier (GUID)</short-description>
<description>string com_create_guid ( void ) 
 Generates a Globally Unique Identifier (GUID). 
 A GUID is generated in the same way as DCE UUID&#039;s, except that the Microsoft convention is to enclose a GUID in curly braces. </description>
<parameters></parameters>
<output>Returns the GUID as a string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1444> 
<name>ncurses_isendwin</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Ncurses is in endwin mode, normal screen output may be performed</short-description>
<description>bool ncurses_isendwin ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Returns TRUE, if ncurses_end() has been called without any subsequent calls to ncurses_wrefresh(), FALSE otherwise. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1445> 
<name>odbc_do</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним odbc_exec()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1446> 
<name>imap_deletemailbox</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Delete a mailbox</short-description>
<description>bool imap_deletemailbox ( resource $imap_stream , string $mailbox ) 
 Deletes the specified mailbox. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
mailbox - The mailbox name, see imap_open() for more information </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1447> 
<name>ifx_free_result</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Releases resources for the query</short-description>
<description>bool ifx_free_result ( resource $result_id ) 
 Releases resources for the query associated with result_id. </description>
<parameters>result_id - result_id is a valid resultid returned by ifx_query() or ifx_prepare() (select type queries only!). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1448> 
<name>socket_get_option</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Gets socket options for the socket </short-description>
<description>mixed socket_get_option ( resource $socket , int $level , int $optname ) 
 The socket_get_option() function retrieves the value for the option specified by the optname parameter for the specified socket. </description>
<parameters>socket - A valid socket resource created with socket_create() or socket_accept(). 
level - The level parameter specifies the protocol level at which the option resides. For example, to retrieve options at the socket level, a level parameter of SOL_SOCKET would be used. Other levels, such as TCP, can be used by specifying the protocol number of that level. Protocol numbers can be found by using the getprotobyname() function. 
optname Available Socket Options Option Description Type SO_DEBUG Reports whether debugging information is being recorded. int SO_BROADCAST Reports whether transmission of broadcast messages is supported. int SO_REUSEADDR Reports whether local addresses can be reused. int SO_KEEPALIVE Reports whether connections are kept active with periodic transmission of messages. If the connected socket fails to respond to these messages, the connection is broken and processes writing to that socket are notified with a SIGPIPE signal. int SO_LINGER - Reports whether the socket lingers on socket_close() if data is present. By default, when the socket is closed, it attempts to send all unsent data. In the case of a connection-oriented socket, socket_close() will wait for its peer to acknowledge the data. </parameters>
<output>Returns the value of the given option, or FALSE on errors. </output>
<errors></errors>
<example><?php
$socket = socket_create_listen(1223);
$linger = array('l_linger' => 1, 'l_onoff' => 1);
socket_set_option($socket, SOL_SOCKET, SO_LINGER, $linger);
var_dump(socket_get_option($socket, SOL_SOCKET, SO_REUSEADDR));
?></example>
<example_result></example_result>
</object>

<object id=1449> 
<name>dbplus_setindex</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Set index</short-description>
<description>int dbplus_setindex ( resource $relation , string $idx_name ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>relation - A relation opened by dbplus_open(). 
idx_name - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1450> 
<name>stream_get_meta_data</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Извлекает заголовок/метаданные из потоков/файловых указателей</short-description>
<description>array stream_get_meta_data ( resource $stream ) 
 Возвращает информацию о существующем потоке stream. </description>
<parameters>stream - Переменная stream может быть любым потоком, созданным при помощи функций fopen(), fsockopen() и pfsockopen(). </parameters>
<output>Получаемый массив содержит следующие элементы: </output>
<errors></errors>
<example><?php
$url = 'http://www.example.com/';
if (!$fp = fopen($url, 'r')) {
    trigger_error("Невозможно открыть URL ($url)", E_USER_ERROR);
}
$meta = stream_get_meta_data($fp);
print_r($meta);
fclose($fp);
?></example>
<example_result>
 
Array
(
    [wrapper_data] => Array
        (
            [0] => HTTP/1.1 200 OK
            [1] => Server: Apache/2.2.3 (Red Hat)
            [2] => Last-Modified: Tue, 15 Nov 2005 13:24:10 GMT
            [3] => ETag: "b300b4-1b6-4059a80bfd280"
            [4] => Accept-Ranges: bytes
            [5] => Content-Type: text/html; charset=UTF-8
            [6] => Set-Cookie: FOO=BAR; expires=Fri, 21-Dec-2012 12:00:00 GMT; path=/; domain=.example.com
            [6] => Connection: close     
            [7] => Date: Fri, 16 Oct 2009 12:00:00 GMT
            [8] => Age: 1164   
            [9] => Content-Length: 438
        )

    [wrapper_type] => http
    [stream_type] => tcp_socket/ssl
    [mode] => r
    [unread_bytes] => 438
    [seekable] => 
    [uri] => http://www.example.com/
    [timed_out] => 
    [blocked] => 1
    [eof] => 
)
</example_result>
</object>

<object id=1451> 
<name>dbplus_last</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Get last tuple from relation</short-description>
<description>int dbplus_last ( resource $relation , array &$tuple ) 
 Reads the data for the last tuple for the given relation, makes it the current tuple and pass it back as an associative array in tuple. </description>
<parameters>relation - A relation opened by dbplus_open(). 
tuple - </parameters>
<output>Returns DBPLUS_ERR_NOERR on success or a db++ error code on failure. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1452> 
<name>eregi</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Совпадение с регулярным выражением без учёта регистра</short-description>
<description>int eregi ( string $pattern , string $string [, array &$regs ] ) 
 Эта функция идентична функции ereg() за исключением того, что игнорирует регистр при сравнении алфавитных символов. Внимание
 С версии PHP 5.3.0 эта функция считаетсяУСТАРЕВШЕЙ. Крайне не рекомендуется полагаться на эту возможность.</description>
<parameters>pattern - Регистронезависимое регулярное выражение. 
string - Входная строка. 
regs - Если совпадения найдены для подстрок в скобках из pattern, и функция вызывается с третьим аргументом regs, совпадения будут сохранены в элементах массива regs. </parameters>
<output>Возвращает длину совпавшей строки, если совпадения с pattern найдены в string, или FALSE, если совпадений не найдено или возникла ошибка. </output>
<errors></errors>
<example><?php
$string = 'XYZ';
if (eregi('z', $string)) {
    echo "'$string' содержит 'z' или 'Z'!";
}?></example>
<example_result></example_result>
</object>

<object id=1453> 
<name>xml_parse</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Запускает разбор XML документа </short-description>
<description>int xml_parse ( resource $parser , string $data [, bool $is_final = false ] ) 
 xml_parse() разбирает XML документ. Обработчики запрограммированных событий вызываются столько раз, сколько необходимо. </description>
<parameters>parser - Ссылка на используемый XML анализатор. 
data - Часть данных для разбора. Документ можно разбирать по частям, вызывая функцию xml_parse() несколько раз с новыми данными, пока аргумент is_final не будет установлен в TRUE, это сообщит анализатору, что разбирается последняя часть документа. 
is_final - Если задан и установлен в TRUE, data считается последней частью в этом разборе. </parameters>
<output>Возвращает 1 при успешном завершении, 0 в противном случае. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1454> 
<name>getmypid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets PHP&#039;s process ID</short-description>
<description>int getmypid ( void ) 
 Gets the current PHP process ID. </description>
<parameters></parameters>
<output>Returns the current PHP process ID, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1455> 
<name>vpopmail_alias_del_domain</name>
<versions>(PHP 4 >= 4.0.7, PECL vpopmail >= 0.2)</versions>
<short-description>Deletes all virtual aliases of a domain</short-description>
<description>bool vpopmail_alias_del_domain ( string $domain ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1456> 
<name>hw_Document_SetContent</name>
<versions>(PHP 4)</versions>
<short-description>Sets/replaces content of hw_document</short-description>
<description>bool hw_document_setcontent ( int $hw_document , string $content ) 
 Sets or replaces the content of the document. If the document is an HTML document the content is everything after the BODY tag. Information from the HEAD and BODY tag is in the stored in the object record. If you provide this information in the content of the document too, the Hyperwave server will change the object record accordingly when the document is inserted. Probably not a very good idea. If this functions fails the document will retain its old content. </description>
<parameters>hw_document - The document identifier. 
content - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1457> 
<name>pg_fetch_all_columns</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Выбирает все записи из одной колонки результата запроса и помещает их в массив</short-description>
<description>array pg_fetch_all_columns ( resource $result [, int $column = 0 ] ) 
 pg_fetch_all_columns() возвращает массив, содержащий все записи одной колонки результата запроса. 
 Замечание: Эта функция устанавливает NULL-поляв значение NULL PHP. </description>
<parameters>result - Ресурс результата запроса PostgreSQL, возвращаемый функциями pg_query(), pg_query_params() или pg_execute() (в числе прочих). 
column - Номер колонки результата запроса, начиная с нуля, данные из которой будут помещены в массив. Если параметр не задан, будет обработана первая (нулевая) колонка. </parameters>
<output>Массив значений колонки результата запроса. </output>
<errors></errors>
<example><?php 
$conn = pg_pconnect("dbname=publisher");
if (!$conn) {
  echo "Произошла ошибка.\n";
  exit;
}
$result = pg_query($conn, "SELECT title, name, address FROM authors");
if (!$result) {
  echo "Произошла ошибка.\n";
  exit;
}
// Получить массив имен всех авторов
$arr = pg_fetch_all_columns($result, 1);
var_dump($arr);
?></example>
<example_result></example_result>
</object>

<object id=1458> 
<name>yp_first</name>
<versions>(PHP 4, PHP 5 <= 5.0.5)</versions>
<short-description>Returns the first key-value pair from the named map</short-description>
<description>array yp_first ( string $domain , string $map ) 
 Gets the first key-value pair from the named map in the named domain. </description>
<parameters>domain - The NIS domain name. 
map - The NIS map. </parameters>
<output>Returns the first key-value pair as an array on success, or FALSE on errors. </output>
<errors></errors>
<example><?php
$entry = yp_first($domain, "passwd.byname");
$key = key($entry);
$value = $entry[$key];
echo "First entry in this map has key " . $key . " and value " . $value;
?></example>
<example_result></example_result>
</object>

<object id=1459> 
<name>PDF_initgraphics</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Reset graphic state</short-description>
<description>bool PDF_initgraphics ( resource $p ) 
 Reset all color and graphics state parameters to their defaults. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1460> 
<name>ociwritelobtofile</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним OCI-Lob::export()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1461> 
<name>w32api_deftype</name>
<versions>(PHP 4 >= 4.2.0)</versions>
<short-description>Defines a type for use with other w32api_functions</short-description>
<description>bool w32api_deftype ( string $typename , string $member1_type , string $member1_name [, string $... [, string $... ]] ) 
 You need to call this function if you would like to define a type for a w32api call. </description>
<parameters>typename - The name of the type. 
member1_type - A member type can be a user defined type. All the type names are case sensitive. Built in type names should be provided in lowercase. 
member1_name - The member name of member1_type. 
... - 
... - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1462> 
<name>msg_send</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Send a message to a message queue</short-description>
<description>bool msg_send ( resource $queue , int $msgtype , mixed $message [, bool $serialize = true [, bool $blocking = true [, int &$errorcode ]]] ) 
 msg_send() sends a message of type msgtype (which MUST be greater than 0) to the message queue specified by queue. </description>
<parameters>queue - 
msgtype - 
message - 
serialize - The optional serialize controls how the message is sent. serialize defaults to TRUE which means that the message is serialized using the same mechanism as the session module before being sent to the queue. This allows complex arrays and objects to be sent to other PHP scripts, or if you are using the WDDX serializer, to any WDDX compatible client. 
blocking - If the message is too large to fit in the queue, your script will wait until another process reads messages from the queue and frees enough space for your message to be sent. This is called blocking; you can prevent blocking by setting the optional blocking parameter to FALSE, in which case msg_send() will immediately return FALSE if the message is too big for the queue, and set the optional errorcode to MSG_EAGAIN, indicating that you should try to send your message again a little later on. 
errorcode - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1463> 
<name>json_encode</name>
<versions>(PHP 5 >= 5.2.0, PECL json >= 1.2.0)</versions>
<short-description>Возвращает JSON-представление данных</short-description>
<description>string json_encode ( mixed $value [, int $options = 0 ] ) 
 Возвращает строку, содержащую JSON-представление value. </description>
<parameters>value - value - значение, которое будет закодировано. Может быть любого типа за исключением resource. 
options - Битовая маска составляемая из значений JSON_HEX_QUOT, JSON_HEX_TAG, JSON_HEX_AMP, JSON_HEX_APOS, JSON_NUMERIC_CHECK, JSON_BIGINT_AS_STRING, JSON_PRETTY_PRINT, JSON_UNESCAPED_SLASHES, JSON_FORCE_OBJECT, JSON_UNESCAPED_UNICODE. </parameters>
<output>Возвращает JSON закодированную строку (string) в случае успеха. </output>
<errors></errors>
<example><?php
$arr = array('a' => 1, 'b' => 2, 'c' => 3, 'd' => 4, 'e' => 5);
echo json_encode($arr);
?></example>
<example_result>
 
{"a":1,"b":2,"c":3,"d":4,"e":5}
</example_result>
</object>

<object id=1464> 
<name>array_diff_assoc</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Вычисляет расхождение массивов с дополнительной проверкой индекса</short-description>
<description>array array_diff_assoc ( array $array1 , array $array2 [, array $... ] ) 
 Сравнивает array1 с array2 и возвращает разницу. В отличие от array_diff(), ключи также участвуют в сравнении. </description>
<parameters>array1 - Исходный массив 
array2 - Массив, с которым идет сравнение 
... - Дополнительные массивы, с которыми осуществляется сравнение </parameters>
<output>Возвращает array, содержащие все значения из массива array1, которых нет в любом из последующих массивов. </output>
<errors></errors>
<example>
 "a" => "green" содержится в обоих массивах и поэтому её не содержится в выводе функции. Наоборот, пара 0 => "red" содержится в выводе функции, потому что во втором аргументе значению "red" соответствует ключ 1. </example>
<example_result>
 
Array
(
    [b] => brown
    [c] => blue
    [0] => red
)
</example_result>
</object>

<object id=1465> 
<name>posix_geteuid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Return the effective user ID of the current process</short-description>
<description>int posix_geteuid ( void ) 
 Return the numeric effective user ID of the current process. See also posix_getpwuid() for information on how to convert this into a useable username. </description>
<parameters></parameters>
<output>Returns the user id, as an integer </output>
<errors></errors>
<example>
 posix_seteuid(), then show the difference between the real id and the effective id.</example>
<example_result></example_result>
</object>

<object id=1466> 
<name>gmp_add</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Сложение чисел</short-description>
<description>resource gmp_add ( resource $a , resource $b ) 
 Складывает два числа. </description>
<parameters>a - Первое слагаемое. 
b - Второе слагаемое. </parameters>
<output>Сумма аргументов в виде GMP числа. </output>
<errors></errors>
<example><?php
$sum = gmp_add("123456789012345", "76543210987655");
echo gmp_strval($sum) . "\n";
?></example>
<example_result>
 
200000000000000
</example_result>
</object>

<object id=1467> 
<name>fbsql_change_user</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Change logged in user of the active connection</short-description>
<description>bool fbsql_change_user ( string $user , string $password [, string $database [, resource $link_identifier ]] ) 
 fbsql_change_user() changes the logged in user of the specified connection. If the new user and password authorization fails, the current connected user stays active. </description>
<parameters>user - The new user name. 
password - The new user password. 
database - If specified, this will be the default or current database after the user has been changed. 
link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1468> 
<name>ingres_connect</name>
<versions>(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)</versions>
<short-description>Open a connection to an Ingres database</short-description>
<description>resource ingres_connect ([ string $database [, string $username [, string $password [, array $options ]]]] ) 
 ingres_connect() opens a connection with the given Ingres database. 
 The connection is closed when the script ends or when ingres_close() is called on this link. </description>
<parameters>database - The database name. Must follow the syntax: 
username - The Ingres user name 
password - The password associated with username 
options - ingres_connect() options Option name Option type Description Example date_century_boundary integer The threshold by which a 2-digit year is determined to be in the current century or in the next century. Equivalent to II_DATE_CENTURY_BOUNDARY. 50 group string Specifies the group ID of the user, equivalent to the "-G" flag payroll role string The role ID of the application. If a role password is required, the parameter value should be specified as "role/password" effective_user string The ingres user account being impersonated, equivalent to the "-u" flag another_user dbms_password string The internal database password for the user connecting to Ingres s3cr3t table_structure string 
 The default structure for new tables. Valid values for table_structure are: INGRES_STRUCTURE_BTREE INGRES_STRUCTURE_HASH INGRES_STRUCTURE_HEAP INGRES_STRUCTURE_ISAM INGRES_STRUCTURE_CBTREE INGRES_STRUCTURE_CISAM INGRES_STRUCTURE_CHASH INGRES_STRUCTURE_CHEAP </parameters>
<output>Returns a Ingres link resource on success или FALSE в случае возникновения ошибки </output>
<errors></errors>
<example><?php
$link = ingres_connect("mydb", "user", "pass")
    or die("Could not connect");
echo "Connected successfully";
ingres_close($link);
?></example>
<example_result></example_result>
</object>

<object id=1469> 
<name>libxml_get_errors</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Получение массива произошедших ошибок </short-description>
<description>array libxml_get_errors ( void ) 
 Получение массива произошедших ошибок. </description>
<parameters></parameters>
<output>Возвращает массив объектов LibXMLError, если в буфере есть ошибки, либо пустой массив в противном случае. </output>
<errors></errors>
<example>
 </example>
<example_result>
 
 <titles>PHP: Behind the Parser</title>
----------------------------------------------^
Fatal Error 76: Opening and ending tag mismatch: titles line 4 and title
  Line: 4
  Column: 46

--------------------------------------------
</example_result>
</object>

<object id=1470> 
<name>is_a</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Проверяет, принадлежит ли объект к данному классу или содержит данный класс в числе своих предков</short-description>
<description>bool is_a ( object $object , string $class_name [, bool $allow_string = FALSE ] ) 
 Проверяет, принадлежит ли объект object к данному классу или содержит данный класс в числе своих предков </description>
<parameters>object - Проверяемый объект 
class_name - Имя класса 
allow_string - Вызывать ли автозагрузку класса, если он не существует. </parameters>
<output>Возвращает TRUE, если объект принадлежит данному классу или имеет данный класс в числе своих предков, иначе возвращается FALSE. </output>
<errors></errors>
<example><?php
// объявление класса
class WidgetFactory
{
  var $oink = 'moo';
}
// создание нового объекта
$WF = new WidgetFactory();
if (is_a($WF, 'WidgetFactory')) {
  echo "да, \$WF все еще WidgetFactory\n";
}?></example>
<example_result></example_result>
</object>

<object id=1471> 
<name>mail</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Отправляет электронную почту</short-description>
<description>bool mail ( string $to , string $subject , string $message [, string $additional_headers [, string $additional_parameters ]] ) 
 Отправляет электронную почту. </description>
<parameters>to - Получатель, или получатели письма. 
subject - Тема отправляемого письма. </parameters>
<output>Возвращает TRUE, если письмо было принято для передачи, иначе FALSE. </output>
<errors></errors>
<example>
 mail() для отправки простого письма: </example>
<example_result></example_result>
</object>

<object id=1472> 
<name>ncurses_bottom_panel</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Moves a visible panel to the bottom of the stack</short-description>
<description>int ncurses_bottom_panel ( resource $panel ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>panel - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1473> 
<name>stream_context_get_params</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Извлекает параметры из контекста</short-description>
<description>array stream_context_get_params ( resource $stream_or_context ) 
 Возвращает информацию о параметрах и опциях из потока или контекста. </description>
<parameters>stream_or_context - Ресурс resource потока или контекстовый ресурс resource </parameters>
<output>Возвращает ассоциативный массив, содержащий все опции и параметры контекста. </output>
<errors></errors>
<example>
 </example>
<example_result>
 
array(2) {
  ["notification"]=>
  string(28) "stream_notification_callback"
  ["options"]=>
  array(0) {
  }
}
</example_result>
</object>

<object id=1474> 
<name>fbsql_fetch_row</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Get a result row as an enumerated array</short-description>
<description>array fbsql_fetch_row ( resource $result ) 
 fbsql_fetch_row() fetches one row of data from the result associated with the specified result identifier. 
 Subsequent call to fbsql_fetch_row() would return the next row in the result set, or FALSE if there are no more rows. </description>
<parameters>result - Идентификатор результата запроса, полученный изfbsql_query() илиfbsql_db_query().</parameters>
<output>Returns an array that corresponds to the fetched row where each result column is stored in an offset, starting at offset 0, or FALSE if there are no more rows. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1475> 
<name>dns_get_mx</name>
<versions>(PHP 5)</versions>
<short-description>Псевдоним getmxrr()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1476> 
<name>readline</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Reads a line</short-description>
<description>string readline ([ string $prompt ] ) 
 Reads a single line from the user. You must add this line to the history yourself using readline_add_history(). </description>
<parameters>prompt - You may specify a string with which to prompt the user. </parameters>
<output>Returns a single string from the user. The line returned has the ending newline removed. </output>
<errors></errors>
<example><?php
//get 3 commands from user
for ($i=0; $i < 3; $i++) {
        $line = readline("Command: ");
        readline_add_history($line);
}
//dump history
print_r(readline_list_history());
//dump variables
print_r(readline_info());
?></example>
<example_result></example_result>
</object>

<object id=1477> 
<name>XMLWriter::startDTDAttlist</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Создает стартовый список атрибутов DTD</short-description>
<description>bool XMLWriter::startDTDAttlist ( string $name ) 
 Процедурный стиль bool xmlwriter_start_dtd_attlist ( resource $xmlwriter , string $name )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
name - Название списка атрибутов. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1478> 
<name>yaz_syntax</name>
<versions>(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)</versions>
<short-description>Задает предпочитаемый синтаксис для извлекаемой записи </short-description>
<description>void yaz_syntax ( resource $id , string $syntax ) 
 yaz_syntax() задает предпочитаемый синтаксис для извлекаемой записи 
 Эта функция должна быть вызвана до yaz_search() или yaz_present(). </description>
<parameters>id - Дескриптор соединения, возвращаемый yaz_connect(). 
syntax - Синтаксис должен быть задан как OID (Object Identifier, идентификатор объекта) в исходном формате, разделенным точками (например 1.2.840.10003.5.10) или в качестве известного зарегистрированного формата записи (sutrs, usmarc, grs1, xml и др.). </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1479> 
<name>readline_write_history</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Writes the history</short-description>
<description>bool readline_write_history ([ string $filename ] ) 
 This function writes the command history to a file. </description>
<parameters>filename - Path to the saved file. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1480> 
<name>imap_alerts</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Returns all IMAP alert messages that have occurred</short-description>
<description>array imap_alerts ( void ) 
 Returns all of the IMAP alert messages generated since the last imap_alerts() call, or the beginning of the page. 
 When imap_alerts() is called, the alert stack is subsequently cleared. The IMAP specification requires that these messages be passed to the user. </description>
<parameters></parameters>
<output>Returns an array of all of the IMAP alert messages generated or FALSE if no alert messages are available. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1481> 
<name>date_time_set</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Псевдоним DateTime::setTime()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1482> 
<name>natsort</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сортирует массив, используя алгоритм "natural order"</short-description>
<description>bool natsort ( array &$array ) 
 Эта функция реализует алгоритм сортировки, при котором порядок буквенно-цифровых строк будет привычным для человека. Такой алгоритм называется "natural ordering". Отличие алгоритма "natural ordering" от обычных алгоритмов сортировки, применяемых, например, функцией sort() можно увидеть в примере ниже. </description>
<parameters>array - Входной массив. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$array1 = $array2 = array("img12.png", "img10.png", "img2.png", "img1.png");
asort($array1);
echo "Обычная сортировка\n";
print_r($array1);
natsort($array2);
echo "\nСортировка natural order\n";
print_r($array2);
?></example>
<example_result>
 
Обычная сортировка
Array
(
    [3] => img1.png
    [1] => img10.png
    [0] => img12.png
    [2] => img2.png
)

Сортировка natural order
Array
(
    [3] => img1.png
    [2] => img2.png
    [1] => img10.png
    [0] => img12.png
)
</example_result>
</object>

<object id=1483> 
<name>expm1</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Возвращает exp(number) - 1, рассчитанное таким образом, что результат точен, даже если number близок к нулю. </short-description>
<description>float expm1 ( float $arg ) 
 expm1() возвращает эквивалент выражения &#039;exp(arg) - 1&#039;, рассчитанный таким образом, что результат точен, даже если значение arg близко к нулю, тогда как &#039;exp (arg) - 1&#039; будет неточно из-за вычитания двух почти равных чисел. </description>
<parameters>arg - Входное значение </parameters>
<output>&#039;e&#039; в степени arg минус один </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1484> 
<name>ncurses_prefresh</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Copies a region from a pad into the virtual screen</short-description>
<description>int ncurses_prefresh ( resource $pad , int $pminrow , int $pmincol , int $sminrow , int $smincol , int $smaxrow , int $smaxcol ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>pad - 
pminrow - 
pmincol - 
sminrow - 
smincol - 
smaxrow - 
smaxcol - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1485> 
<name>ob_get_length</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Возвращает размер буфера вывода</short-description>
<description>int ob_get_length ( void ) 
 Вернет размер содержимого в буфере вывода. </description>
<parameters></parameters>
<output>Возвращает размер содержимого буфера вывода или FALSE если буферизация не активна. </output>
<errors></errors>
<example><?php
ob_start();
echo "Привет ";
$len1 = ob_get_length();
echo "Мир";
$len2 = ob_get_length();
ob_end_clean();
echo $len1 . ", ." . $len2;
?></example>
<example_result>
 
7, 10
</example_result>
</object>

<object id=1486> 
<name>pg_lo_write</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Записывает данные в большой объект</short-description>
<description>int pg_lo_write ( resource $large_object , string $data [, int $len ] ) 
 pg_lo_write() записывает данные в большой объект, начиная с текущей позиции внутреннего указателя. 
 Операции с использованием интерфейса больших объектов необходимо заключать в блок транзакции. 
 Замечание: 
 Прежнее название функции: pg_lowrite(). </description>
<parameters>large_object - Ресурс большого объекта (LOB) PostgreSQL, возвращаемый функцией pg_lo_open(). 
data - Данные для записи в большой объект. Если аргумент len задан и меньше размера data, то записаны будут только len байт. 
len - Необязательный аргумент. Максимальное количество записываемых байт. Должен быть больше нуля и не превышать размер data. По умолчанию принимается равным размеру data. </parameters>
<output>Количество записанных в большой объект байт, либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
   $doc_oid = 189762345;
   $data = "This will overwrite the start of the large object.";
   $database = pg_connect("dbname=jacarta");
   pg_query($database, "begin");
   $handle = pg_lo_open($database, $doc_oid, "w");
   $data = pg_lo_write($handle, $data);
   pg_query($database, "commit");
?></example>
<example_result></example_result>
</object>

<object id=1487> 
<name>sybase_result</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get result data</short-description>
<description>string sybase_result ( resource $result , int $row , mixed $field ) 
 Returns the contents of the cell at the row and offset in the specified Sybase result set. 
 When working on large result sets, you should consider using one of the functions that fetch an entire row (specified below). As these functions return the contents of multiple cells in one function call, they&#039;re MUCH quicker than sybase_result(). Also, note that specifying a numeric offset for the field argument is much quicker than specifying a fieldname or tablename.fieldname argument. 
 Recommended high-performance alternatives: sybase_fetch_row(), sybase_fetch_array() and sybase_fetch_object(). </description>
<parameters>result - 
row - 
field - The field argument can be the field&#039;s offset, or the field&#039;s name, or the field&#039;s table dot field&#039;s name (tablename.fieldname). If the column name has been aliased (&#039;select foo as bar from...&#039;), use the alias instead of the column name. </parameters>
<output>sybase_result() returns the contents of one cell from a Sybase result set. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1488> 
<name>imagepalettecopy</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Copy the palette from one image to another</short-description>
<description>void imagepalettecopy ( resource $destination , resource $source ) 
 imagepalettecopy() copies the palette from the source image to the destination image. </description>
<parameters>destination - The destination image resource. 
source - The source image resource. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
// Create two palette images
$palette1 = imagecreate(100, 100);
$palette2 = imagecreate(100, 100);
// Allocate the background to be 
// green in the first palette image
$green = imagecolorallocate($palette1, 0, 255, 0);
// Copy the palette from image 1 to image 2
imagepalettecopy($palette2, $palette1);
// Since the palette is now copied we can use the 
// green color allocated to image 1 without using 
// imagecolorallocate() twice
imagefilledrectangle($palette2, 0, 0, 99, 99, $green);
// Output image to the browser
header('Content-type: image/png');
imagepng($palette2);
imagedestroy($palette1);
imagedestroy($palette2);
?></example>
<example_result></example_result>
</object>

<object id=1489> 
<name>number_format</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Форматирует число с разделением групп</short-description>
<description>string number_format ( float $number [, int $decimals = 0 ] ) string number_format ( float $number , int $decimals = 0 , string $dec_point = &#039;.&#039; , string $thousands_sep = &#039;,&#039; )</description>
<parameters>number - Форматируемое число. 
decimals - Устанавливает число знаков после запятой. 
dec_point - Устанавливает разделитель дробной части. 
thousands_sep - Устанавливает разделитель тысяч. </parameters>
<output>Возвращается отформатированное число number. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=1490> 
<name>variant_date_from_timestamp</name>
<versions>(PHP 5)</versions>
<short-description>Returns a variant date representation of a Unix timestamp</short-description>
<description>variant variant_date_from_timestamp ( int $timestamp ) 
 Converts timestamp from a unix timestamp value into a variant of type VT_DATE. This allows easier interopability between the unix-ish parts of PHP and COM. </description>
<parameters>timestamp - A unix timestamp. </parameters>
<output>Returns a VT_DATE variant. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1491> 
<name>min</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Находит наименьшее значение</short-description>
<description>mixed min ( array $values ) mixed min ( mixed $value1 , mixed $value2 [, mixed $value3... ] )</description>
<parameters>values - Массив содержащий значения. </parameters>
<output>Функция min() возвращает наименьшее числовое значение из значений параметра. </output>
<errors></errors>
<example><?php
echo min(2, 3, 1, 6, 7);  // 1
echo min(array(2, 4, 5)); // 2
echo min(0, 'hello');     // 0
echo min('hello', 0);     // hello
echo min('hello', -1);    // -1
// При указании нескольких массивов, они сравниваются полностью
// в нашем примере: 2 == 2, но 4 < 5
$val = min(array(2, 4, 8), array(2, 5, 1)); // array(2, 4, 8)
// При указании массива и не массива, 
// первый никогда не возвращается, т.к. считается самым большим
$val = min('string', array(2, 5, 7), 42);   // string
?></example>
<example_result></example_result>
</object>

<object id=1492> 
<name>odbc_fetch_row</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Fetch a row</short-description>
<description>bool odbc_fetch_row ( resource $result_id [, int $row_number ] ) 
 Fetches a row of the data that was returned by odbc_do() or odbc_exec(). After odbc_fetch_row() is called, the fields of that row can be accessed with odbc_result(). </description>
<parameters>result_id - The result identifier. 
row_number - If row_number is not specified, odbc_fetch_row() will try to fetch the next row in the result set. Calls to odbc_fetch_row() with and without row_number can be mixed. </parameters>
<output>Returns TRUE if there was a row, FALSE otherwise. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1493> 
<name>connection_status</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает статус соединения в битах</short-description>
<description>int connection_status ( void ) 
 Получает статус соединения в битах. </description>
<parameters></parameters>
<output>Возвращает статус соединения в битах, который можно использовать в константах CONNECTION_XXX для определения статуса соединения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1494> 
<name>pg_fetch_row</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выбирает строку результата запроса и помещает данные в массив</short-description>
<description>array pg_fetch_row ( resource $result [, int $row ] ) 
 pg_fetch_row() выбирает одну строку из результата запроса result. 
 Замечание: Эта функция устанавливает NULL-поляв значение NULL PHP. </description>
<parameters>result - Ресурс результата запроса PostgreSQL, возвращаемый функциями pg_query(), pg_query_params() или pg_execute() (в числе прочих). 
row - Номер выбираемой из результата запроса строки. Нумерация начинается с нуля. Если аргумент опущен или равен NULL, берется следующая по очереди строка. </parameters>
<output>Численно индексированный массив значений из строки результата запроса. Индексация начинается с нуля. Значения представляются в виде строк. Значения NULL базы данных преобразуются в PHP NULL. </output>
<errors></errors>
<example><?php
$conn = pg_pconnect("dbname=publisher");
if (!$conn) {
  echo "Произошла ошибка.\n";
  exit;
}
$result = pg_query($conn, "SELECT author, email FROM authors");
if (!$result) {
  echo "Произошла ошибка.\n";
  exit;
}
while ($row = pg_fetch_row($result)) {
  echo "Author: $row[0]  E-mail: $row[1]";
  echo "<br />\n";
} 
?></example>
<example_result></example_result>
</object>

<object id=1495> 
<name>ncurses_scr_init</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Initialize screen from file dump </short-description>
<description>int ncurses_scr_init ( string $filename ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>filename - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1496> 
<name>notes_unread</name>
<versions>(PHP 4 >= 4.0.5)</versions>
<short-description>Returns the unread note id&#039;s for the current User user_name</short-description>
<description>array notes_unread ( string $database_name , string $user_name ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1497> 
<name>ibase_fetch_row</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Fetch a row from an InterBase database</short-description>
<description>array ibase_fetch_row ( resource $result_identifier [, int $fetch_flag = 0 ] ) 
 ibase_fetch_row() fetches one row of data from the given result set. 
 Subsequent calls to ibase_fetch_row() return the next row in the result set, or FALSE if there are no more rows. </description>
<parameters>result_identifier - An InterBase result identifier. 
fetch_flag - fetch_flag is a combination of the constants IBASE_TEXT and IBASE_UNIXTIME ORed together. Passing IBASE_TEXT will cause this function to return BLOB contents instead of BLOB ids. Passing IBASE_UNIXTIME will cause this function to return date/time values as Unix timestamps instead of as formatted strings. </parameters>
<output>Returns an array that corresponds to the fetched row, or FALSE if there are no more rows. Each result column is stored in an array offset, starting at offset 0. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1498> 
<name>trim</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Удаляет пробелы (или другие символы) из начала и конца строки</short-description>
<description>string trim ( string $str [, string $charlist ] ) 
 Эта функция возвращает строку str с удаленными из начала и конца строки пробелами. Если второй параметр не передан, trim() удаляет следующие символы: " " (ASCII 32 (0x20)), обычный пробел. "\t" (ASCII 9 (0x09)), символ табуляции. "\n" (ASCII 10 (0x0A)), символ перевода строки. "\r" (ASCII 13 (0x0D)), символ возврата каретки. "\0" (ASCII 0 (0x00)), NUL-байт. "\x0B" (ASCII 11 (0x0B)), вертикальная табуляция. </description>
<parameters>str - Обрезаемая строка (string). 
charlist - Можно также задать список символов для удаления с помощью необязательного аргумента charlist. Просто перечислите все символы, которые вы хотите удалить. Можно указать конструкцию .. для обозначения диапазона символов. </parameters>
<output>Обрезаемая строка. </output>
<errors></errors>
<example><?php
$text   = "\t\tThese are a few words :) ...  ";
$binary = "\x09Example string\x0A";
$hello  = "Hello World";
var_dump($text, $binary, $hello);
print "\n";
$trimmed = trim($text);
var_dump($trimmed);
$trimmed = trim($text, " \t.");
var_dump($trimmed);
$trimmed = trim($hello, "Hdle");
var_dump($trimmed);
$trimmed = trim($hello, 'HdWr');
var_dump($trimmed);
// удаляем управляющие ASCII-символы с начала и конца $binary
// (от 0 до 31 включительно)
$clean = trim($binary, "\x00..\x1F");
var_dump($clean);
?></example>
<example_result>
 
string(32) "        These are a few words :) ...  "
string(16) "    Example string
"
string(11) "Hello World"

string(28) "These are a few words :) ..."
string(24) "These are a few words :)"
string(5) "o Wor"
string(9) "ello Worl"
string(14) "Example string"
</example_result>
</object>

<object id=1499> 
<name>PDF_set_info_creator</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Fill the creator document info field [deprecated]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1500> 
<name>ifx_error</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Returns error code of last Informix call</short-description>
<description>string ifx_error ([ resource $link_identifier ] ) 
 Returns in a string one character describing the general results of a statement and both SQLSTATE and SQLCODE associated with the most recent SQL statement executed. </description>
<parameters>link_identifier - The link identifier. </parameters>
<output>The Informix error codes (SQLSTATE & SQLCODE) formatted as x [SQLSTATE = aa bbb SQLCODE=cccc]. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1501> 
<name>ovrimos_prepare</name>
<versions>(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)</versions>
<short-description>Prepares an SQL statement</short-description>
<description>int ovrimos_prepare ( int $connection_id , string $query ) 
 Prepares an SQL statement. </description>
<parameters>connection_id - The Ovrimos connection identifier, returned by ovrimos_connect(). 
query - The SQL statement. </parameters>
<output>Returns a result identifier on success, or FALSE on error. </output>
<errors></errors>
<example><?php
$conn=ovrimos_connect("db_host", "8001", "admin", "password");
if ($conn!=0) {
    echo "Connection ok!";
    
    // Prepare the statement
    $res=ovrimos_prepare($conn, "select table_id, table_name
                                  from sys.tables where table_id=1");
    if ($res != 0) {
        echo "Prepare ok!";
        // Execute the prepared statement
        if (ovrimos_execute($res)) {
            echo "Execute ok!\n";
            ovrimos_result_all($res);
        } else {
            echo "Execute not ok!";
        }
        ovrimos_free_result($res);
    } else {
        echo "Prepare not ok!\n";
    }
    ovrimos_close($conn);
}?></example>
<example_result></example_result>
</object>

<object id=1502> 
<name>swf_closefile</name>
<versions>(PHP 4)</versions>
<short-description>Close the current Shockwave Flash file</short-description>
<description>void swf_closefile ([ int $return_file ] ) 
 Close a file that was opened by the swf_openfile() function. </description>
<parameters>return_file - If set then the contents of the SWF file are returned from the function. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
// The $text variable is submitted by the
// user
// Global variables for database
// access (used in the swf_savedata() function)
$DBHOST = "localhost";
$DBUSER = "sterling";
$DBPASS = "secret";
swf_openfile("php://stdout", 256, 256, 30, 1, 1, 1);
    swf_definefont(10, "Ligon-Bold");
        swf_fontsize(12);
        swf_fontslant(10);
    swf_definetext(11, $text, 1);
    swf_pushmatrix();
        swf_translate(-50, 80, 0);
        swf_placeobject(11, 60);
    swf_popmatrix();
    swf_showframe();
    swf_startdoaction();
        swf_actionstop();
    swf_enddoaction();
$data = swf_closefile(1);
$data ?
  swf_savedata($data) :
  die("Error could not save SWF file");
// void swf_savedata(string data)
// Save the generated file a database
// for later retrieval
function swf_savedata($data)
{    global $DBHOST,
           $DBUSER,
           $DBPASS;
    $dbh = @mysql_connect($DBHOST, $DBUSER, $DBPASS);
    if (!$dbh) {
        die (sprintf("Error [%d]: %s",
                      mysql_errno(), mysql_error()));
    }
    $stmt = "INSERT INTO swf_files (file) VALUES ('$data')";
    $sth = @mysql_query($stmt, $dbh);
    if (!$sth) {
        die (sprintf("Error [%d]: %s",
                      mysql_errno(), mysql_error()));
    }
    @mysql_free_result($sth);
    @mysql_close($dbh);
}?></example>
<example_result></example_result>
</object>

<object id=1503> 
<name>date</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Форматирует вывод системной даты/времени</short-description>
<description>string date ( string $format [, int $timestamp = time() ] ) 
 Возвращает строку, отформатированную в соответствии с указанным шаблоном format. Используется метка времени, заданная аргументом timestamp, или текущее системное время, если timestamp не задан. Таким образом, timestamp является необязательным и по умолчанию равен значению, возвращаемому функцией time(). </description>
<parameters>format - Шаблон результирующей строки (string) с датой. См. параметры форматирования ниже. Также существует несколько предопределенных констант даты/времени, которые могут быть использованы вместо этих параметров. Например: DATE_RSS заменяет шаблон &#039;D, d M Y H:i:s&#039;. 
timestamp - Необязательный параметр timestamp представляет собой integer метку времени, по умолчанию равную текущему локальному времени, если timestamp не указан. Другими словами, значение по умолчанию равно результату функции time(). </parameters>
<output>Возвращает отформатированную строку с датой. При передаче нечислового значения в качестве параметра timestamp будет возвращено FALSE и вызвана ошибка уровня E_WARNING. </output>
<errors>Каждый вызов к функциям даты/времени при неправильных настройках временной зоны сгенерирует ошибку уровня E_NOTICE,и/или ошибку уровня E_STRICT или E_WARNING при использовании системныхнастроек или переменной окружения TZ. Смотрите также date_default_timezone_set()</errors>
<example><?php
// установка временной зоны по умолчанию. Доступно начиная с версии PHP 5.1
date_default_timezone_set('UTC');

// выведет примерно следующее: Monday
echo date("l");
// выведет примерно следующее: Monday 8th of August 2005 03:12:46 PM
echo date('l jS \of F Y h:i:s A');
// выведет: July 1, 2000 is on a Saturday
echo "July 1, 2000 is on a " . date("l", mktime(0, 0, 0, 7, 1, 2000));
/* пример использования константы в качестве форматирующего параметра */
// выведет примерно следующее: Mon, 15 Aug 2005 15:12:46 UTC
echo date(DATE_RFC822);
// выведет примерно следующее: 2000-07-01T00:00:00+00:00
echo date(DATE_ATOM, mktime(0, 0, 0, 7, 1, 2000));
?></example>
<example_result></example_result>
</object>

<object id=1504> 
<name>filter_input</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Принимает переменную извне PHP и, при необходимости, фильтрует ее</short-description>
<description>mixed filter_input ( int $type , string $variable_name [, int $filter = FILTER_DEFAULT [, mixed $options ]] ) </description>
<parameters>type - Один из INPUT_GET, INPUT_POST, INPUT_COOKIE, INPUT_SERVER или INPUT_ENV. 
variable_name - Имя получаемой переменной. 
filter - Идентификатор применяемого фильтра. См.список допустимых значений в Types of filters 
options - Ассоциативный массив параметров либо логическое ИЛИ флагов. Если фильтр принимает параметры, флаги могут быть указаны в элементе массива "flags". </parameters>
<output>Значение запрашиваемой переменной в случае успеха, FALSE, если фильтрация завершилась неудачей, или NULL, если переменная variable_name не определена. Если установлен флаг FILTER_NULL_ON_FAILURE, функция возвращает FALSE, если переменная не определена и NULL, если фильтрация завершилась неудачей. </output>
<errors></errors>
<example><?php
$search_html = filter_input(INPUT_GET, 'search', FILTER_SANITIZE_SPECIAL_CHARS);
$search_url = filter_input(INPUT_GET, 'search', FILTER_SANITIZE_ENCODED);
echo "Вы искали $search_html.\n";
echo "<a href='?search=$search_url'>Искать снова.</a>";
?></example>
<example_result>
 
Вы искали Me &#38; son.
<a href=&#039;?search=Me%20%26%20son&#039;>Искать снова.</a>
</example_result>
</object>

<object id=1505> 
<name>mb_eregi_replace</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Осуществляет замену по регулярному выражению с поддержкой многобайтовых символов без учета регистра</short-description>
<description>string mb_eregi_replace ( string $pattern , string $replace , string $string [, string $option = "msri" ] ) 
 Сканирует строку string для поиска совпадений с pattern, затем заменяет совпавший текст на replacement. </description>
<parameters>pattern - Шаблон регулярного выражения. Могут использоваться многобайтовые символы. Регистр будет игнорироваться. 
replace - Текст замены. 
string - Строка string для поиска. </parameters>
<output>Результирующая строка string в случае успеха, или FALSE в случае ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1506> 
<name>imap_bodystruct</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Read the structure of a specified body section of a specific message</short-description>
<description>object imap_bodystruct ( resource $imap_stream , int $msg_number , string $section ) 
 Read the structure of a specified body section of a specific message. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
msg_number - The message number 
section - The body section to read </parameters>
<output>Returns the information in an object, for a detailed description of the object structure and properties see imap_fetchstructure(). </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1507> 
<name>ncurses_has_key</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Check for presence of a function key on terminal keyboard </short-description>
<description>int ncurses_has_key ( int $keycode ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>keycode - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1508> 
<name>com_propput</name>
<versions>(PHP 4)</versions>
<short-description>Псевдоним com_set()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1509> 
<name>msession_get_array</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)</versions>
<short-description>Get array of msession variables</short-description>
<description>array msession_get_array ( string $session ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1510> 
<name>openssl_csr_new</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Generates a CSR</short-description>
<description>mixed openssl_csr_new ( array $dn , resource &$privkey [, array $configargs [, array $extraattribs ]] ) 
 openssl_csr_new() generates a new CSR (Certificate Signing Request) based on the information provided by dn, which represents the Distinguished Name to be used in the certificate. 
 Замечание: Для корректной работы этой функции должен существовать правильный openssl.cnf. Для более подробной информации смотрите замечания под разделом установки. </description>
<parameters>dn - The Distinguished Name to be used in the certificate. 
privkey - privkey should be set to a private key that was previously generated by openssl_pkey_new() (or otherwise obtained from the other openssl_pkey family of functions). The corresponding public portion of the key will be used to sign the CSR. 
configargs - By default, the information in your system openssl.conf is used to initialize the request; you can specify a configuration file section by setting the config_section_section key of configargs. You can also specify an alternative openssl configuration file by setting the value of the config key to the path of the file you want to use. The following keys, if present in configargs behave as their equivalents in the openssl.conf, as listed in the table below. Configuration overrides configargs key type openssl.conf equivalent description digest_alg string default_md Selects which digest method to use x509_extensions string x509_extensions Selects which extensions should be used when creating an x509 certificate req_extensions string req_extensions Selects which extensions should be used when creating a CSR private_key_bits integer default_bits Specifies how many bits should be used to generate a private key private_key_type integer none Specifies the type of private key to create. This can be one of OPENSSL_KEYTYPE_DSA, OPENSSL_KEYTYPE_DH or OPENSSL_KEYTYPE_RSA. The default value is OPENSSL_KEYTYPE_RSA which is currently the only supported key type. encrypt_key boolean encrypt_key Should an exported key (with passphrase) be encrypted? encrypt_key_cipher integer none One of cipher constants. 
extraattribs - extraattribs is used to specify additional configuration options for the CSR. Both dn and extraattribs are associative arrays whose keys are converted to OIDs and applied to the relevant part of the request. </parameters>
<output>Returns the CSR. </output>
<errors></errors>
<example><?php
// Fill in data for the distinguished name to be used in the cert
// You must change the values of these keys to match your name and
// company, or more precisely, the name and company of the person/site
// that you are generating the certificate for.
// For SSL certificates, the commonName is usually the domain name of
// that will be using the certificate, but for S/MIME certificates,
// the commonName will be the name of the individual who will use the
// certificate.
$dn = array(
    "countryName" => "UK",
    "stateOrProvinceName" => "Somerset",
    "localityName" => "Glastonbury",
    "organizationName" => "The Brain Room Limited",
    "organizationalUnitName" => "PHP Documentation Team",
    "commonName" => "Wez Furlong",
    "emailAddress" => "wez@example.com"
);
// Generate a new private (and public) key pair
$privkey = openssl_pkey_new();
// Generate a certificate signing request
$csr = openssl_csr_new($dn, $privkey);
// You will usually want to create a self-signed certificate at this
// point until your CA fulfills your request.
// This creates a self-signed cert that is valid for 365 days
$sscert = openssl_csr_sign($csr, null, $privkey, 365);
// Now you will want to preserve your private key, CSR and self-signed
// cert so that they can be installed into your web server, mail server
// or mail client (depending on the intended use of the certificate).
// This example shows how to get those things into variables, but you
// can also store them directly into files.
// Typically, you will send the CSR on to your CA who will then issue
// you with the "real" certificate.
openssl_csr_export($csr, $csrout) and var_dump($csrout);
openssl_x509_export($sscert, $certout) and var_dump($certout);
openssl_pkey_export($privkey, $pkeyout, "mypassword") and var_dump($pkeyout);
// Show any errors that occurred here
while (($e = openssl_error_string()) !== false) {
    echo $e . "\n";
}?></example>
<example_result></example_result>
</object>

<object id=1511> 
<name>ncurses_can_change_color</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Checks if terminal color definitions can be changed</short-description>
<description>bool ncurses_can_change_color ( void ) 
 Checks whether the terminal has color capabilities and whether the programmer can change color definitions using ncurses_init_color(). ncurses must be initialized using ncurses_init() before calling this function. </description>
<parameters></parameters>
<output>Return TRUE if the programmer can change color definitions, FALSE otherwise. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1512> 
<name>iterator_apply</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Call a function for every element in an iterator</short-description>
<description>int iterator_apply ( Traversable $iterator , callback $function [, array $args ] ) 
 Calls a function for every element in an iterator. </description>
<parameters>iterator - The class to iterate over. 
function - The callback function to call on every element. 
 Замечание: The function must return TRUE in order to continue iterating over the iterator. 
args - Arguments to pass to the callback function. </parameters>
<output>Returns the iteration count. </output>
<errors></errors>
<example><?php
function print_caps(Iterator $iterator) {
    echo strtoupper($iterator->current()) . "\n";
    return TRUE;
}
$it = new ArrayIterator(array("Apples", "Bananas", "Cherries"));
iterator_apply($it, "print_caps", array($it));
?></example>
<example_result>
 
APPLES
BANANAS
CHERRIES
</example_result>
</object>

<object id=1513> 
<name>udm_find</name>
<versions>(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)</versions>
<short-description>Perform search</short-description>
<description>resource udm_find ( resource $agent , string $query ) 
 Performs a search. 
 The search itself. The first argument - session, the next one - query itself. To find something just type words you want to find and press SUBMIT button. For example, "mysql odbc". You should not use quotes " in query, they are written here only to divide a query from other text. mnoGoSearch will find all documents that contain word "mysql" and/or word "odbc". Best documents having bigger weights will be displayed first. If you use search mode ALL, search will return documents that contain both (or more) words you entered. In case you use mode ANY, the search will return list of documents that contain any of the words you entered. If you want more advanced results you may use query language. You should select "bool" match mode in the search from. </description>
<parameters>agent - A link to Agent, received after call to udm_alloc_agent(). 
query - mnoGoSearch understands the following boolean operators: </parameters>
<output>Returns a result link identifier on success или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1514> 
<name>strlen</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает длину строки</short-description>
<description>int strlen ( string $string ) 
 Возвращает длину строки string. </description>
<parameters>string - Строка (string), для которой измеряется длина. </parameters>
<output>Длина строки string в случае успеха, и 0, если string пуста. </output>
<errors></errors>
<example><?php
$str = 'abcdef';
echo strlen($str); // 6
$str = ' ab cd ';
echo strlen($str); // 7
?></example>
<example_result></example_result>
</object>

<object id=1515> 
<name>ncurses_slk_noutrefresh</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Copies soft label keys to virtual screen</short-description>
<description>bool ncurses_slk_noutrefresh ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1516> 
<name>sybase_connect</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Opens a Sybase server connection</short-description>
<description>resource sybase_connect ([ string $servername [, string $username [, string $password [, string $charset [, string $appname [, bool $new = false ]]]]]] ) 
 sybase_connect() establishes a connection to a Sybase server. 
 In case a second call is made to sybase_connect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned. 
 The link to the server will be closed as soon as the execution of the script ends, unless it&#039;s closed earlier by explicitly calling sybase_close(). </description>
<parameters>servername - The servername argument has to be a valid servername that is defined in the &#039;interfaces&#039; file. 
username - Sybase user name 
password - Password associated with username. 
charset - Specifies the charset for the connection 
appname - Specifies an appname for the Sybase connection. This allow you to make separate connections in the same script to the same database. This may come handy when you have started a transaction in your current connection, and you need to be able to do a separate query which cannot be performed inside this transaction. 
new - Whether to open a new connection or use the existing one. </parameters>
<output>Returns a positive Sybase link identifier on success, or FALSE on failure. </output>
<errors></errors>
<example><?php
$link = sybase_connect('SYBASE', '', '')
        or die("Could not connect !");
echo "Connected successfully";
sybase_close($link);
?></example>
<example_result></example_result>
</object>

<object id=1517> 
<name>openssl_encrypt</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Encrypts data</short-description>
<description>string openssl_encrypt ( string $data , string $method , string $password [, bool $raw_output = false [, string $iv = "" ]] ) 
 Encrypts given data with given method and key, returns a raw or base64 encoded string Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>data - The data. 
method - The cipher method. 
password - The password. 
raw_output - Setting to TRUE will return as raw output data, otherwise the return value is base64 encoded. 
iv - A non-NULL Initialization Vector. </parameters>
<output>Returns the encrypted string on success или FALSE в случае возникновения ошибки. </output>
<errors>Emits an E_WARNING level error if an unknown cipher algorithm is passed in via the method parameter. </errors>
<example></example>
<example_result></example_result>
</object>

<object id=1518> 
<name>ob_flush</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Сброс (отправка) буфера вывода</short-description>
<description>void ob_flush ( void ) 
 Эта функция отправит содержимое буфера вывода (если имеется). Если необходима дальнейшая обработка буфера вывода, то следует вызвать ob_get_contents() перед ob_flush(), так как содержимое буфера будет удалено после вызова ob_flush(). 
 Эта функция не уничтожает буфер вывода, как это делает ob_end_flush(). </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1519> 
<name>ingres_num_rows</name>
<versions>(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)</versions>
<short-description>Get the number of rows affected or returned by a query</short-description>
<description>int ingres_num_rows ( resource $result ) 
 This function primarily is meant to get the number of rows modified in the database. However, it can be used to retrieve the number of rows to fetch for a SELECT statement. 
 Замечание: 
 If scrollable cursors are disabled and this function is called before using ingres_fetch_array(), ingres_fetch_object(), or ingres_fetch_row(), the server will delete the result&#039;s data and the script will be unable to get them. 
 Instead, you should retrieve the result&#039;s data using one of these fetch functions in a loop until it returns FALSE, indicating that no more results are available. </description>
<parameters>result - The result identifier for a query </parameters>
<output>For delete, insert, or update queries, ingres_num_rows() returns the number of rows affected by the query. For other queries, ingres_num_rows() returns the number of rows in the query&#039;s result. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1520> 
<name>unserialize</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Создает PHP-значение из хранимого представления </short-description>
<description>mixed unserialize ( string $str ) 
 unserialize() принимает одну сериализованную переменную и конвертирует ее обратно в значение PHP. </description>
<parameters>str - Сериализованная строка. </parameters>
<output>Возвращается преобразованное значение, которое принимать один из типов boolean, integer, float, string, array или object. </output>
<errors></errors>
<example><?php
// Мы используем функцию unserialize() для загрузки сессионных данных в массив
// $session_data из строки, извлекаемой из базы данных.
// Данный пример дополняет пример, описывающий использование serialize().
$conn = odbc_connect("webdb", "php", "chicken");
$stmt = odbc_prepare($conn, "SELECT data FROM sessions WHERE id = ?");
$sqldata = array($_SERVER['PHP_AUTH_USER']);
if (!odbc_execute($stmt, $sqldata) || !odbc_fetch_into($stmt, $tmp)) {
    // если процедура извлечения данных не удалась, то инициализируем пустой массив
    $session_data = array();
} else {
    // сейчас у нас должны быть сериализованные данные в $tmp[0].
    $session_data = unserialize($tmp[0]);
    if (!is_array($session_data)) {
        // что-то пошло не так, инициализируем пустой массив
        $session_data = array();
    }
}?></example>
<example_result></example_result>
</object>

<object id=1521> 
<name>posix_setuid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Set the UID of the current process</short-description>
<description>bool posix_setuid ( int $uid ) 
 Set the real user ID of the current process. This is a privileged function that needs appropriate privileges (usually root) on the system to be able to perform this function. </description>
<parameters>uid - The user id. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=1522> 
<name>parse_str</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Разбирает строку в переменные</short-description>
<description>void parse_str ( string $str [, array &$arr ] ) 
 Разбирает строку str, которая должна иметь формат строки запроса URL и присваивает значения переменным в текущем контексте. 
 Замечание: 
 Для получения текущей QUERY_STRING, можно использовать переменную $_SERVER['QUERY_STRING']. Кроме того, возможно вы захотите прочесть раздел о переменных вне PHP. 
 Замечание: 
 Опция magic_quotes_gpc влияет на вывод этой функции, так как parse_str() использует тот же механизм, что используется в PHP для заполнения $_GET, $_POST и других переменных. </description>
<parameters>str - Входная строка. 
arr - Если указан второй параметр arr, то вместо присвоения переменных в текущем контексте они будут сохранены в этом параметре в качестве элементов массива. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
$str = "first=value&arr[]=foo+bar&arr[]=baz";
parse_str($str);
echo $first;  // value
echo $arr[0]; // foo bar
echo $arr[1]; // baz
parse_str($str, $output);
echo $output['first'];  // value
echo $output['arr'][0]; // foo bar
echo $output['arr'][1]; // baz
?></example>
<example_result></example_result>
</object>

<object id=1523> 
<name>ldap_next_attribute</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получить следующий атрибут из результата</short-description>
<description>string ldap_next_attribute ( resource $link_identifier , resource $result_entry_identifier ) 
 Возвращает атрибуты записи. Первый вызов ldap_next_attribute() производится с параметром result_entry_identifier, который возвращается ldap_first_attribute(). </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
result_entry_identifier - 
ber_identifier - Внутреннее состояние указателя сохраняется этим параметром. </parameters>
<output>Возвращает следующий атрибут записи в случае успеха и FALSE в случае ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1524> 
<name>get_meta_tags</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Извлекает из файла содержимое всех мета-тегов и возвращает как ассоциативный массив</short-description>
<description>array get_meta_tags ( string $filename [, bool $use_include_path = false ] ) 
 Открывает filename и разбирает его строка за строкой в поисках тегов <meta>. Разбор файла останавливается на теге </head>. </description>
<parameters>filename - Путь к HTML файлу, строка. Может быть как локальным файлом, так и URL. </parameters>
<output>Возвращает ассоциативный массив со значениями разобранных мета-тегов. </output>
<errors></errors>
<example><?php
// Предположим, что указанные выше мета-теги расположены на www.example.com
$tags = get_meta_tags('http://www.example.com/');
// Обратите внимание, что ключи приведены к нижнему регистру, а
//  точки ('.') в ключах  заменены на '_'
echo $tags['author'];       // name
echo $tags['keywords'];     // php documentation
echo $tags['description'];  // a php manual
echo $tags['geo_position']; // 49.33;-86.59
?></example>
<example_result></example_result>
</object>

<object id=1525> 
<name>ming_useswfversion</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.3.0, PECL ming SVN)</versions>
<short-description>Sets the SWF version</short-description>
<description>void ming_useswfversion ( int $version ) 
 Sets the SWF version to be used in the movie. This affect the bahaviour of Action Script. </description>
<parameters>version - SWF version to use. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
$movie = new SWFMovie();
ming_useswfversion(4); // Flash 4
?></example>
<example_result></example_result>
</object>

<object id=1526> 
<name>getprotobynumber</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает имя протокола по номеру</short-description>
<description>string getprotobynumber ( int $number ) 
 Функция getprotobynumber() возвращает имя протокола по номеру, указанному в параметре number как в /etc/protocols. </description>
<parameters>number - Номер протокола. </parameters>
<output>Возвращает имя протокола в виде строки (string), или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1527> 
<name>swf_shapefillbitmapclip</name>
<versions>(PHP 4)</versions>
<short-description>Set current fill mode to clipped bitmap</short-description>
<description>void swf_shapefillbitmapclip ( int $bitmapid ) 
 Sets the fill to bitmap clipped, empty spaces will be filled by the bitmap. </description>
<parameters>bitmapid - The bitmap id. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1528> 
<name>call_user_func</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Вызывает пользовательскую функцию, указанную в первом параметре</short-description>
<description>mixed call_user_func ( callback $callback [, mixed $parameter [, mixed $... ]] ) 
 Вызывает пользовательскую функцию, переданную в параметре callback. </description>
<parameters>callback - Вызываемая callback-функция. 
parameter - Ноль или более параметров, передаваемые в функцию. </parameters>
<output>Возвращает результат функции, или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
function barber($type)
{    echo "Вы хотели стрижку $type, без проблем\n";
}call_user_func('barber', "под горшок");
call_user_func('barber', "наголо");
?></example>
<example_result>
 
0
1
</example_result>
</object>

<object id=1529> 
<name>variant_neg</name>
<versions>(PHP 5)</versions>
<short-description>Performs logical negation on a variant</short-description>
<description>mixed variant_neg ( mixed $variant ) 
 Performs logical negation of variant. </description>
<parameters>variant - The variant. </parameters>
<output>Returns the result of the logical negation. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1530> 
<name>disk_free_space</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Возвращает размер доступного пространства в каталоге или в файловой системе</short-description>
<description>float disk_free_space ( string $directory ) 
 Функция возвращает размер свободного пространства в байтах, доступного для использования в указанном каталоге или файловой системе. </description>
<parameters>directory - Директория или раздел диска. </parameters>
<output>Возвращает количество свободных байт в виде вещественного числа или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// $df содержит размер свободного места в каталоге "/"
$df = disk_free_space("/");
// Под Windows:
$df_c = disk_free_space("C:");
$df_d = disk_free_space("D:");
?></example>
<example_result></example_result>
</object>

<object id=1531> 
<name>gztell</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает текущую позицию для чтения/записи в gz-файле</short-description>
<description>int gztell ( resource $zp ) 
 Возвращает позицию в файле по его указателю, т.е. смещение в потоке распакованного файла. </description>
<parameters>zp - Указатель на gz-файл, возвращённый, после его успешного открытия, функцией gzopen(). </parameters>
<output>Текущая позиция или FALSE в случае ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1532> 
<name>hw_GetChildCollObj</name>
<versions>(PHP 4)</versions>
<short-description>Object records of child collections</short-description>
<description>array hw_getchildcollobj ( int $connection , int $objectID ) 
 Returns object records. Each object records belongs to a child collection of the collection with ID objectID. The function will not return child documents. </description>
<parameters>connection - The connection identifier. 
objectID - The object identifier. </parameters>
<output>Returns an array of object records. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1533> 
<name>notes_create_note</name>
<versions>(PHP 4 >= 4.0.5)</versions>
<short-description>Create a note using form form_name</short-description>
<description>bool notes_create_note ( string $database_name , string $form_name ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1534> 
<name>udm_free_ispell_data</name>
<versions>(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)</versions>
<short-description>Освобождает память, выделенную для ispell-данных</short-description>
<description>bool udm_free_ispell_data ( int $agent ) 
 Освобождает память, выделенную для ispell-данных. </description>
<parameters>agent - Ссылка на идентификатор агента, полученная после вызова udm_alloc_agent(). </parameters>
<output>udm_free_ispell_data() всегда возвращает TRUE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1535> 
<name>mhash_count</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the highest available hash ID</short-description>
<description>int mhash_count ( void ) 
 Gets the highest available hash ID. </description>
<parameters></parameters>
<output>Returns the highest available hash ID. Hashes are numbered from 0 to this hash ID. </output>
<errors></errors>
<example><?php
$nr = mhash_count();
for ($i = 0; $i <= $nr; $i++) {
    echo sprintf("The blocksize of %s is %d\n",
        mhash_get_hash_name($i),
        mhash_get_block_size($i));
}?></example>
<example_result></example_result>
</object>

<object id=1536> 
<name>fbsql_rollback</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Rollback a transaction to the database</short-description>
<description>bool fbsql_rollback ([ resource $link_identifier ] ) 
 Ends the current transaction by rolling back all statements issued since last commit. 
 This command is only needed if autocommit is set to false. </description>
<parameters>link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1537> 
<name>fbsql_affected_rows</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Возвращет число затронутых строк в предыдущем FrontBase действии</short-description>
<description>int fbsql_affected_rows ([ resource $link_identifier ] ) 
 fbsql_affected_rows() возвращает число затронутых строк в последнем INSERT, UPDATE или DELETE запросе, связанным с link_identifier. 
 Замечание: 
 Если используются транзакции, то нужно вызвать fbsql_affected_rows() после INSERT, UPDATE, или DELETE запроса, но не после коммита. 
 Если последний запрос был DELETE запросом без условий в WHERE, то все записи будут удалены из таблицы, функция вернет 0. 
 Замечание: 
 Если используется UPDATE, то FrontBase не обновит столбцы, где новое значение идентично предыдущему значению. Это создает вероятность, что fbsql_affected_rows() может фактически не быть равной числу соответвующих строк, только число строк, которые были буквально затронуты запросом. </description>
<parameters>link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Если последний запрос не был произведен, то функция возвращает -1. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1538> 
<name>m_connect</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Establish the connection to MCVE</short-description>
<description>int m_connect ( resource $conn ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().</parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1539> 
<name>socket_get_status</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним stream_get_meta_data()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1540> 
<name>dbplus_errcode</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Get error string for given errorcode or last error</short-description>
<description>string dbplus_errcode ([ int $errno ] ) 
 Returns a clear error string for the given error code. </description>
<parameters>errno - The error code. If not provided, the result code of the last db++ operation is assumed. </parameters>
<output>Returns the error message. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1541> 
<name>msg_set_queue</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Set information in the message queue data structure</short-description>
<description>bool msg_set_queue ( resource $queue , array $data ) 
 msg_set_queue() allows you to change the values of the msg_perm.uid, msg_perm.gid, msg_perm.mode and msg_qbytes fields of the underlying message queue data structure. 
 Changing the data structure will require that PHP be running as the same user that created the queue, owns the queue (as determined by the existing msg_perm.xxx fields), or be running with root privileges. root privileges are required to raise the msg_qbytes values above the system defined limit. </description>
<parameters>queue - Message queue resource handle 
data - You specify the values you require by setting the value of the keys that you require in the data array. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1542> 
<name>JDDayOfWeek</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает день недели </short-description>
<description>mixed jddayofweek ( int $julianday [, int $mode = CAL_DOW_DAYNO ] ) 
 Возвращает день недели. Может возвращать строку или число в зависимости от режима работы. </description>
<parameters>julianday - День в виде числа в Юлианском летоисчислении </parameters>
<output>День недели по григорианскому календарю в виде строки или числа. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1543> 
<name>ldap_get_option</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Получить текущее значение данной опции</short-description>
<description>bool ldap_get_option ( resource $link_identifier , int $option , mixed &$retval ) 
 Устанавливает retval в значение указанной опции. </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
option - Параметр option может быть одним из: Опция Тип LDAP_OPT_DEREF integer LDAP_OPT_SIZELIMIT integer LDAP_OPT_TIMELIMIT integer LDAP_OPT_NETWORK_TIMEOUT integer LDAP_OPT_PROTOCOL_VERSION integer LDAP_OPT_ERROR_NUMBER integer LDAP_OPT_REFERRALS bool LDAP_OPT_RESTART bool LDAP_OPT_HOST_NAME string LDAP_OPT_ERROR_STRING string LDAP_OPT_MATCHED_DN string LDAP_OPT_SERVER_CONTROLS array LDAP_OPT_CLIENT_CONTROLS array 
retval - Будет установлен в значение опции. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// $ds является действительным идентификатором связи с LDAP-сервером
if (ldap_get_option($ds, LDAP_OPT_PROTOCOL_VERSION, $version)) {
    echo "Используется версия протокола $version\n";
} else {
    echo "Невозможно определить версию протокола\n";
}?></example>
<example_result></example_result>
</object>

<object id=1544> 
<name>output_add_rewrite_var</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Добавить обработчик значений URL</short-description>
<description>bool output_add_rewrite_var ( string $name , string $value ) 
 Эта функция добавляет пару имя/значение к механизму перезаписи URL. Имя и значение будут добавлены к URL (в качестве GET параметров) и формам (как скрытые поля ввода) так же, как ID сессии, когда включена прозрачная перезапись ссылок, используя session.use_trans_sid. Пожалуйста, обратите внимание, что абсолютные URL (http://example.com/..) не затрагиваются. 
 Поведение этой функции контролируется параметром url_rewriter.tags php.ini. 
 Замечание: Вызов этой функции неявно запустит буферизацию вывода, если она еще не активна. </description>
<parameters>name - Имя параметра. 
value - Значение параметра. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
output_add_rewrite_var('var', 'value');
// несколько ссылок
echo '<a href="file.php">ссылка</a>
<a href="http://example.com">ссылка2</a>';
// форма
echo '<form action="script.php" method="post">
<input type="text" name="var2" />
</form>';
print_r(ob_list_handlers());
?></example>
<example_result>
 
<a href="file.php?var=value">ссылка</a>
<a href="http://example.com">ссылка2</a>

<form action="script.php" method="post">
<input type="hidden" name="var" value="value" />
<input type="text" name="var2" />
</form>

Array
(
    [0] => URL-Rewriter
)
</example_result>
</object>

<object id=1545> 
<name>fdf_close</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Закрывает FDF-документ</short-description>
<description>void fdf_close ( resource $fdf_document ) 
 Закрывает FDF-документ. </description>
<parameters>fdf_document - Дескриптор FDF-документа, возвращенный функциями fdf_create(), fdf_open() или fdf_open_string(). </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1546> 
<name>com_event_sink</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Connect events from a COM object to a PHP object</short-description>
<description>bool com_event_sink ( variant $comobject , object $sinkobject [, mixed $sinkinterface ] ) 
 Instructs COM to sink events generated by comobject into the PHP object sinkobject. 
 Be careful how you use this feature; if you are doing something similar to the example below, then it doesn&#039;t really make sense to run it in a web server context. </description>
<parameters>comobject - 
sinkobject - sinkobject should be an instance of a class with methods named after those of the desired dispinterface; you may use com_print_typeinfo() to help generate a template class for this purpose. 
sinkinterface - PHP will attempt to use the default dispinterface type specified by the typelibrary associated with comobject, but you may override this choice by setting sinkinterface to the name of the dispinterface that you want to use. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
class IEEventSinker {
    var $terminated = false;
   function ProgressChange($progress, $progressmax) {
      echo "Download progress: $progress / $progressmax\n";
    }
    function DocumentComplete(&$dom, $url) {
      echo "Document $url complete\n";
    }
    function OnQuit() {
      echo "Quit!\n";
      $this->terminated = true;
    }
}$ie = new COM("InternetExplorer.Application");
// note that you don't need the & for PHP 5!
$sink = new IEEventSinker();
com_event_sink($ie, $sink, "DWebBrowserEvents2");
$ie->Visible = true;
$ie->Navigate("http://www.example.org");
while(!$sink->terminated) {
  com_message_pump(4000);
}$ie = null;
?></example>
<example_result></example_result>
</object>

<object id=1547> 
<name>property_exists</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Проверяет, содержит ли объект или класс указанный атрибут </short-description>
<description>bool property_exists ( mixed $class , string $property ) 
 Функция проверяет, существует ли атрибут property в указанном классе. 
 Замечание: 
 В противоположность isset(), property_exists() возвращает TRUE даже если свойство имеет значение NULL. </description>
<parameters>class - Имя класса или объекта класса для проверки 
property - Имя свойства </parameters>
<output>Возвращает TRUE, если свойство существует, FALSE - если оно не существует или NULL в случае ошибки. </output>
<errors></errors>
<example><?php
class myClass {
    public $mine;
    private $xpto;
    static protected $test;
    static function test() {
        var_dump(property_exists('myClass', 'xpto')); //true
    }
}
var_dump(property_exists('myClass', 'mine'));   //true
var_dump(property_exists(new myClass, 'mine')); //true
var_dump(property_exists('myClass', 'xpto'));   //true, начиная с версии PHP 5.3.0
var_dump(property_exists('myClass', 'bar'));    //false
var_dump(property_exists('myClass', 'test'));   //true, начиная с версии PHP 5.3.0
myClass::test();
?></example>
<example_result></example_result>
</object>

<object id=1548> 
<name>get_declared_interfaces</name>
<versions>(PHP 5)</versions>
<short-description>Возвращает массив всех объявленных интерфейсов</short-description>
<description>array get_declared_interfaces ( void ) 
 Возвращает объявленные интерфейсы. </description>
<parameters></parameters>
<output>Возвращает массив имен всех объявленных интерфейсов в текущем скрипте. </output>
<errors></errors>
<example><?php
print_r(get_declared_interfaces());
?></example>
<example_result>
 
Array
(
    [0] => Traversable
    [1] => IteratorAggregate
    [2] => Iterator
    [3] => ArrayAccess
    [4] => reflector
    [5] => RecursiveIterator
    [6] => SeekableIterator
)
</example_result>
</object>

<object id=1549> 
<name>mcrypt_list_algorithms</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Gets an array of all supported ciphers</short-description>
<description>array mcrypt_list_algorithms ([ string $lib_dir = ini_get("mcrypt.algorithms_dir") ] ) 
 Gets the list of all supported algorithms in the lib_dir parameter. </description>
<parameters>lib_dir - Specifies the directory where all algorithms are located. If not specified, the value of the mcrypt.algorithms_dir php.ini directive is used. </parameters>
<output>Returns an array with all the supported algorithms. </output>
<errors></errors>
<example><?php
    $algorithms = mcrypt_list_algorithms("/usr/local/lib/libmcrypt");
    foreach ($algorithms as $cipher) {
        echo "$cipher<br />\n";
    }
?></example>
<example_result></example_result>
</object>

<object id=1550> 
<name>imagecolorclosest</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get the index of the closest color to the specified color</short-description>
<description>int imagecolorclosest ( resource $image , int $red , int $green , int $blue ) 
 Returns the index of the color in the palette of the image which is "closest" to the specified RGB value. 
 The "distance" between the desired color and each color in the palette is calculated as if the RGB values represented points in three-dimensional space. 
 Если изображение было создано из файла, то будут распознаны только цвета, используемые в изображении. Цвета, которые используются только в палитре, распознаны не будут. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
red - Значение красного компонента цвета.
green - Значение зеленого компонента цвета.
blue - Значение синего компонента цвета.</parameters>
<output>Returns the index of the closest color, in the palette of the image, to the specified one </output>
<errors></errors>
<example><?php
// Start with an image and convert it to a palette-based image
$im = imagecreatefrompng('figures/imagecolorclosest.png');
imagetruecolortopalette($im, false, 255);
// Search colors (RGB)
$colors = array(
    array(254, 145, 154),
    array(153, 145, 188),
    array(153, 90, 145),
    array(255, 137, 92)
);
// Loop through each search and find the closest color in the palette.
// Return the search number, the search RGB and the converted RGB match
foreach($colors as $id => $rgb)
{    $result = imagecolorclosest($im, $rgb[0], $rgb[1], $rgb[2]);
    $result = imagecolorsforindex($im, $result);
    $result = "({$result['red']}, {$result['green']}, {$result['blue']})";
    echo "#$id: Search ($rgb[0], $rgb[1], $rgb[2]); Closest match: $result.\n";
}
imagedestroy($im);
?></example>
<example_result>
 
#0: Search (254, 145, 154); Closest match: (252, 150, 148).
#1: Search (153, 145, 188); Closest match: (148, 150, 196).
#2: Search (153, 90, 145); Closest match: (148, 90, 156).
#3: Search (255, 137, 92); Closest match: (252, 150, 92).
</example_result>
</object>

<object id=1551> 
<name>fbsql_set_lob_mode</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Set the LOB retrieve mode for a FrontBase result set</short-description>
<description>bool fbsql_set_lob_mode ( resource $result , int $lob_mode ) 
 Sets the mode for retrieving LOB data from the database. 
 When BLOB and CLOB data is retrieved in FrontBase it can be retrieved direct or indirect. Direct retrieved LOB data will always be fetched no matter the setting of the lob mode. If the LOB data is less than 512 bytes it will always be retrieved directly. </description>
<parameters>result - Идентификатор результата запроса, полученный изfbsql_query() илиfbsql_db_query().
lob_mode - Can be one of: FBSQL_LOB_DIRECT - LOB data is retrieved directly. When data is fetched from the database with fbsql_fetch_row(), and other fetch functions, all CLOB and BLOB columns will be returned as ordinary columns. This is the default value on a new FrontBase result. FBSQL_LOB_HANDLE - LOB data is retrieved as handles to the data. When data is fetched from the database with fbsql_fetch_row(), and other fetch functions, LOB data will be returned as a handle to the data if the data is stored indirect or the data if it is stored direct. If a handle is returned it will be a 27 byte string formatted as @&#039;000000000000000000000000&#039;. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1552> 
<name>gmp_mod</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Вычисление остатка от целочисленного деления</short-description>
<description>resource gmp_mod ( resource $n , resource $d ) 
 Вычисляет остаток от деления числа n на d. Результат всегда неотрицательный, знак числа d игнорируется. </description>
<parameters>n - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.
d - Делитель (модуль). </parameters>
<output>Число GMP. </output>
<errors></errors>
<example><?php
$mod = gmp_mod("8", "3");
echo gmp_strval($mod) . "\n";
?></example>
<example_result>
 
2
</example_result>
</object>

<object id=1553> 
<name>xslt_backend_info</name>
<versions>(PHP 4 >= 4.3.0)</versions>
<short-description>Возвращает информацию о настройках, заданных при компиляции расширения (backend) </short-description>
<description>string xslt_backend_info ( void ) 
 xslt_backend_info() получает информацию о настройках, заданных при компиляции расширения (backend). </description>
<parameters></parameters>
<output>Возвращает строку с информацией о настройках, заданных при компиляции расширения (backend), либо сообщение об ошибке, если подобной информации нет. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1554> 
<name>intl_get_error_message</name>
<versions>(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)</versions>
<short-description>Get description of the last error</short-description>
<description>string intl_get_error_message ( void ) 
 Get error message from last internationalization function called. </description>
<parameters></parameters>
<output>Description of an error occurred in the last API function call. </output>
<errors></errors>
<example><?php
if( Collator::getAvailableLocales() === false ) {
    show_error( intl_get_error_message() );
}?></example>
<example_result></example_result>
</object>

<object id=1555> 
<name>vpopmail_alias_del</name>
<versions>(PHP 4 >= 4.0.7, PECL vpopmail >= 0.2)</versions>
<short-description>Deletes all virtual aliases of a user</short-description>
<description>bool vpopmail_alias_del ( string $user , string $domain ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1556> 
<name>ctype_upper</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Проверяет на наличие символов в верхнем регистре</short-description>
<description>bool ctype_upper ( string $text ) 
 Проверяет, все ли символы в переданной строке text являются буквами в верхнем регистре. </description>
<parameters>text - Проверяемая строка. </parameters>
<output>Возвращает TRUE, если каждый символ в строке text является буквой в верхнем регистре в текущей локали. </output>
<errors></errors>
<example><?php
$strings = array('AKLWC139', 'LMNSDO', 'akwSKWsm');
foreach ($strings as $testcase) {
    if (ctype_upper($testcase)) {
        echo "Строка $testcase состоит только из букв в верхнем регистре.\n";
    } else {
        echo "Строка $testcase не состоит только из букв в верхнем регистре.\n";
    }
}?></example>
<example_result>
 
Строка AKLWC139 не состоит только из букв в верхнем регистре.
Строка LMNSDO состоит только из букв в верхнем регистре.
Строка akwSKWsm не состоит только из букв в верхнем регистре.
</example_result>
</object>

<object id=1557> 
<name>PDF_rotate</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Поворачивает систему координат</short-description>
<description>bool PDF_rotate ( resource $p , float $phi ) 
 Поворачивает систему координат. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1558> 
<name>ord</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает ASCII-код символа</short-description>
<description>int ord ( string $string ) 
 Возвращает ASCII-код первого символа строки string. 
 Эта функция дополняет функцию chr(). </description>
<parameters>string - Символ. </parameters>
<output>Возвращает ASCII-код в виде целого числа. </output>
<errors></errors>
<example><?php
$str = "\n";
if (ord($str) == 10) {
    echo "Первый символ \$str - перевод строки.\n";
}?></example>
<example_result></example_result>
</object>

<object id=1559> 
<name>gmstrftime</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Форматирует дату/время по Гринвичу с учетом текущей локали</short-description>
<description>string gmstrftime ( string $format [, int $timestamp = time() ] ) 
 Эта функция идентична функции strftime() за исключением того, что возвращает время по Гринвичу (GMT). Например, при запуске на системе, где установлено Eastern Standard Time (GMT-0500), первая строка из примера ниже выведет "Dec 31 1998 20:00:00", тогда как вторая - "Jan 01 1999 01:00:00". </description>
<parameters>format - Смотрите описание функции strftime(). 
timestamp - Необязательный параметр timestamp представляет собой integer метку времени, по умолчанию равную текущему локальному времени, если timestamp не указан. Другими словами, значение по умолчанию равно результату функции time(). </parameters>
<output>Возвращает строку, отформатированную согласно указанному формату и с использованием временной метки из параметра timestamp или текущего локального времени, если временная метка не была указана. Названия месяцев, дней недели и других языкозависимых строк, будут показаны с учетом настроек текущей локали, установленных с помощью функции setlocale(). </output>
<errors></errors>
<example><?php
setlocale(LC_TIME, 'en_US');
echo strftime("%b %d %Y %H:%M:%S", mktime(20, 0, 0, 12, 31, 98)) . "\n";
echo gmstrftime("%b %d %Y %H:%M:%S", mktime(20, 0, 0, 12, 31, 98)) . "\n";
?></example>
<example_result></example_result>
</object>

<object id=1560> 
<name>ftp_pasv</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Включает или выключает пассивный режим</short-description>
<description>bool ftp_pasv ( resource $ftp_stream , bool $pasv ) 
 ftp_pasv() включает или выключает пассивный режим. В пассивном режиме передача данных инициируется клиентом, а не сервером. Данный режим может понадобится в случае, если клиент находится за файрволлом. 
 Пожалуйста, учтите, что ftp_pasv() может быть вызвана только после успешной авторизации, иначе она завершится с ошибкой. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером. 
pasv - Если TRUE, пассивный режим будет включен, иначе выключен. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$file = 'somefile.txt';
$remote_file = 'readme.txt';
// установка соединения
$conn_id = ftp_connect($ftp_server);
// проверка имени пользователя и пароля
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);
// включение пассивного режима
ftp_pasv($conn_id, true);
// загрузка файла
if (ftp_put($conn_id, $remote_file, $file, FTP_ASCII)) {
 echo "$file успешно загружен на сервер\n";
} else {
 echo "Не удалось загрузить $file на сервер\n";
}
// закрытие соединения
ftp_close($conn_id);
?></example>
<example_result></example_result>
</object>

<object id=1561> 
<name>udm_free_agent</name>
<versions>(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)</versions>
<short-description>Освобождает сессию mnoGoSearch</short-description>
<description>int udm_free_agent ( resource $agent ) 
 Освобождение памяти, выделенной для сессии агента. </description>
<parameters>agent - Ссылка на идентификатор агента, полученная после вызова udm_alloc_agent(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1562> 
<name>xml_set_character_data_handler</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Установка обработчика символьных данных </short-description>
<description>bool xml_set_character_data_handler ( resource $parser , callback $handler ) 
 Устанавливает обработчик символьных данных для заданного XML анализатора parser. </description>
<parameters>parser - Ссылка на XML анализатор. 
handler - handler - строка содержащая имя функции, которая должна быть определена на момент вызова функции xml_parse() из анализатора parser. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1563> 
<name>posix_setegid</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Set the effective GID of the current process</short-description>
<description>bool posix_setegid ( int $gid ) 
 Set the effective group ID of the current process. This is a privileged function and needs appropriate privileges (usually root) on the system to be able to perform this function. </description>
<parameters>gid - The group id. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=1564> 
<name>pg_select</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Выбирает записи из базы данных </short-description>
<description>mixed pg_select ( resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ] ) 
 pg_select() выбирает записи из базы данных, удовлетворяющие условиям field=>value, заданным в массиве assoc_array. 
 Если задан аргумент options, то к массиву assoc_array будет применена функция pg_convert() с параметрами, заданными в качестве аргумента. Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>connection - Ресурс соединения с базой данных PostgreSQL. 
table_name - Название таблицы, из которой выбираются данные. 
assoc_array - Массив (array), ключи которого соответствуют именам колонок таблицы table_name. Будут выбраны только те строки, значения полей которых совпадут со значениями массива. 
options - Одна из констант PGSQL_CONV_FORCE_NULL, PGSQL_DML_NO_CONV, PGSQL_DML_EXEC, PGSQL_DML_ASYNC, PGSQL_DML_STRING или их комбинация. Если options содержит PGSQL_DML_STRING, функция вернет строку. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. Функция вернет строку, если options содержит PGSQL_DML_STRING. </output>
<errors></errors>
<example><?php 
  $db = pg_connect('dbname=foo');
  // Это безопасно с тех пор как $_POST преобразуется автоматически
  $rec = pg_select($db, 'post_log', $_POST);
  if ($rec) {
      echo "Records selected\n";
      var_dump($rec);
  } else {
      echo "Должно быть переданы неверные данные\n";
  }
?></example>
<example_result></example_result>
</object>

<object id=1565> 
<name>date_sun_info</name>
<versions>(PHP 5 >= 5.1.2)</versions>
<short-description>Возвращает массив с информацией о закате/рассвете и начале/окончании сумерек </short-description>
<description>array date_sun_info ( int $time , float $latitude , float $longitude ) </description>
<parameters>time - Временная метка. 
latitude - Широта в градусах. 
longitude - Долгота в градусах. </parameters>
<output>Возвращает массив при успешном завершении или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$sun_info = date_sun_info(strtotime("2006-12-12"), 31.7667, 35.2333);
foreach ($sun_info as $key => $val) {
    echo "$key: " . date("H:i:s", $val) . "\n";
}?></example>
<example_result>
 
sunrise: 05:52:11
sunset: 15:41:21
transit: 10:46:46
civil_twilight_begin: 05:24:08
civil_twilight_end: 16:09:24
nautical_twilight_begin: 04:52:25
nautical_twilight_end: 16:41:06
astronomical_twilight_begin: 04:21:32
astronomical_twilight_end: 17:12:00
</example_result>
</object>

<object id=1566> 
<name>get_defined_functions</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Возвращает массив всех определённых функций</short-description>
<description>array get_defined_functions ( void ) 
 Возвращает массив всех определённых функций. </description>
<parameters></parameters>
<output>Эта функция возвращает многомерный массив, содержащий список всех определённых функций, встроенных и пользовательских. Встроенные функции перечислены в элементе массива $arr["internal"], а определенные пользователем - в элементе $arr["user"] (см. пример ниже). </output>
<errors></errors>
<example><?php
function myrow($id, $data)
{    return "<tr><th>$id</th><td>$data</td></tr>\n";
}
$arr = get_defined_functions();
print_r($arr);
?></example>
<example_result>
 
Array
(
    [internal] => Array
        (
            [0] => zend_version
            [1] => func_num_args
            [2] => func_get_arg
            [3] => func_get_args
            [4] => strlen
            [5] => strcmp
            [6] => strncmp
            ...
            [750] => bcscale
            [751] => bccomp
        )

    [user] => Array
        (
            [0] => myrow
        )

)
</example_result>
</object>

<object id=1567> 
<name>get_class_methods</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает массив имен методов класса</short-description>
<description>array get_class_methods ( mixed $class_name ) 
 Возвращает массив имен методов класса. </description>
<parameters>class_name - The class name or an object instance </parameters>
<output>Возвращает массив имен методов, объявленных в классе class_name. В случае ошибки будет возвращен NULL. </output>
<errors></errors>
<example><?php
class myclass {
    // конструктор
    function myclass()
    {
        return(true);
    }
    // метод 1
    function myfunc1()
    {
        return(true);
    }
    // метод 2
    function myfunc2()
    {
        return(true);
    }
}
$class_methods = get_class_methods('myclass');
// или
$class_methods = get_class_methods(new myclass());
foreach ($class_methods as $method_name) {
    echo "$method_name\n";
}
?></example>
<example_result>
 
myclass
myfunc1
myfunc2
</example_result>
</object>

<object id=1568> 
<name>PDF_show</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Output text at current position</short-description>
<description>bool PDF_show ( resource $pdfdoc , string $text ) 
 Prints text in the current font and size at the current position. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1569> 
<name>pcntl_sigwaitinfo</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Waits for signals</short-description>
<description>int pcntl_sigwaitinfo ( array $set [, array &$siginfo ] ) 
 The pcntl_sigwaitinfo() function suspends execution of the calling script until one of the signals given in set are delivered. If one of the signal is already pending (e.g. blocked by pcntl_sigprocmask()), pcntl_sigwaitinfo() will return immediately. </description>
<parameters>set - Array of signals to wait for. 
siginfo - The siginfo parameter is set to an array containing informations about the signal. </parameters>
<output>On success, pcntl_sigwaitinfo() returns a signal number. </output>
<errors></errors>
<example><?php
echo "Blocking SIGHUP signal\n";
pcntl_sigprocmask(SIG_BLOCK, array(SIGHUP));
echo "Sending SIGHUP to self\n";
posix_kill(posix_getpid(), SIGHUP);
echo "Waiting for signals\n";
$info = array();
pcntl_sigwaitinfo(array(SIGHUP), $info);
?></example>
<example_result></example_result>
</object>

<object id=1570> 
<name>chdir</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Изменяет каталог</short-description>
<description>bool chdir ( string $directory ) 
 Изменяет текущий каталог PHP на указанный в качестве параметра directory. </description>
<parameters>directory - Новый текущий каталог </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors>В случае ошибки создает исключение уровня E_WARNING. </errors>
<example><?php
// текущий каталог
echo getcwd() . "\n";
chdir('public_html');
// текущий каталог
echo getcwd() . "\n";
?></example>
<example_result>
 
/home/vincent
/home/vincent/public_html
</example_result>
</object>

<object id=1571> 
<name>readline_callback_read_char</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Reads a character and informs the readline callback interface when a line is received</short-description>
<description>void readline_callback_read_char ( void ) 
 Reads a character of user input. When a line is received, this function informs the readline callback interface installed using readline_callback_handler_install() that a line is ready for input. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1572> 
<name>imap_expunge</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Delete all messages marked for deletion</short-description>
<description>bool imap_expunge ( resource $imap_stream ) 
 Deletes all the messages marked for deletion by imap_delete(), imap_mail_move(), or imap_setflag_full(). </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().</parameters>
<output>Returns TRUE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1573> 
<name>set_file_buffer</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним stream_set_write_buffer()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1574> 
<name>oci_internal_debug</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Включает и выключает внутреннюю отладку</short-description>
<description>void oci_internal_debug ( bool $onoff ) 
 Включает и выключает внутреннюю отладку </description>
<parameters>onoff - Значение FALSE выключает отладку, а TRUE - включает. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1575> 
<name>date_get_last_errors</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Псевдоним DateTime::getLastErrors()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1576> 
<name>m_validateidentifier</name>
<versions>(PHP 5 >= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Whether or not to validate the passed identifier on any transaction it is passed to</short-description>
<description>int m_validateidentifier ( resource $conn , int $tf ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
tf - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1577> 
<name>imagepstext</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Draws a text over an image using PostScript Type1 fonts</short-description>
<description>array imagepstext ( resource $image , string $text , resource $font_index , int $size , int $foreground , int $background , int $x , int $y [, int $space = 0 [, int $tightness = 0 [, float $angle = 0.0 [, int $antialias_steps = 4 ]]]] ) 
 Draws a text on an image using PostScript Type1 fonts. 
 Refer to PostScript documentation about fonts and their measuring system if you have trouble understanding how this works. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
text - The text to be written. 
font_index - A font resource, returned by imagepsloadfont(). 
size - size is expressed in pixels. 
foreground - The color in which the text will be painted. 
background - The color to which the text will try to fade in with antialiasing. No pixels with the color background are actually painted, so the background image does not need to be of solid color. 
x - x-coordinate for the lower-left corner of the first character. 
y - y-coordinate for the lower-left corner of the first character. 
space - Allows you to change the default value of a space in a font. This amount is added to the normal value and can also be negative. Expressed in character space units, where 1 unit is 1/1000th of an em-square. 
tightness - tightness allows you to control the amount of white space between characters. This amount is added to the normal character width and can also be negative. Expressed in character space units, where 1 unit is 1/1000th of an em-square. 
angle - angle is in degrees. 
antialias_steps - Allows you to control the number of colours used for antialiasing text. Allowed values are 4 and 16. The higher value is recommended for text sizes lower than 20, where the effect in text quality is quite visible. With bigger sizes, use 4. It&#039;s less computationally intensive. </parameters>
<output>This function returns an array containing the following elements: 0 lower left x-coordinate 1 lower left y-coordinate 2 upper right x-coordinate 3 upper right y-coordinate </output>
<errors></errors>
<example><?php
// Create image handle
$im = imagecreatetruecolor(200, 200);
// Allocate colors
$black = imagecolorallocate($im, 0, 0, 0);
$white = imagecolorallocate($im, 255, 255, 255);
// Load the PostScript Font
$font = imagepsloadfont('font.pfm');
// Write the font to the image
imagepstext($im, 'Sample text is simple', $font, 12, $black, $white, 50, 50);
// Output and free memory
header('Content-type: image/png');
imagepng($im);
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=1578> 
<name>ncurses_panel_window</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Returns the window associated with panel</short-description>
<description>resource ncurses_panel_window ( resource $panel ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>panel - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1579> 
<name>fdf_error</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Return error description for FDF error code</short-description>
<description>string fdf_error ([ int $error_code = -1 ] ) 
 Gets a textual description for the FDF error code given in error_code. </description>
<parameters>error_code - An error code obtained with fdf_errno(). If not provided, this function uses the internal error code set by the last operation. </parameters>
<output>Returns the error message as a string, or the string no error if nothing went wrong. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1580> 
<name>dgettext</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Позволяет переопределить текущий домен</short-description>
<description>string dgettext ( string $domain , string $message ) 
 Функция dgettext() позволяет переопределить текущий домен domain для одного сообщения. </description>
<parameters>domain - Домен. 
message - Сообщение. </parameters>
<output>В случае успеха возвращает значение типа string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1581> 
<name>getdate</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает информацию о дате/времени</short-description>
<description>array getdate ([ int $timestamp = time() ] ) 
 Возвращает ассоциативный массив (array), содержащий информацию о дате, представленной меткой времени timestamp или текущим системным временем, если timestamp не был передан. </description>
<parameters>timestamp - Необязательный параметр timestamp представляет собой integer метку времени, по умолчанию равную текущему локальному времени, если timestamp не указан. Другими словами, значение по умолчанию равно результату функции time(). </parameters>
<output>Возвращает ассоциативный массив (array) с информацией о параметре timestamp, который содержит следующие элементы: </output>
<errors></errors>
<example><?php
$today = getdate();
print_r($today);
?></example>
<example_result>
 
Array
(
    [seconds] => 40
    [minutes] => 58
    [hours]   => 21
    [mday]    => 17
    [wday]    => 2
    [mon]     => 6
    [year]    => 2003
    [yday]    => 167
    [weekday] => Tuesday
    [month]   => June
    [0]       => 1055901520
)
</example_result>
</object>

<object id=1582> 
<name>sqlite_fetch_single</name>
<versions>(PHP 5, PECL sqlite >= 1.0.1)</versions>
<short-description>Выбирает значение первого поля из результата запроса и возвращает в виде строки</short-description>
<description>string sqlite_fetch_single ( resource $result [, bool $decode_binary = true ] ) 
 Объектно-ориентированный стиль (метод): string SQLiteResult::fetchSingle ([ bool $decode_binary = true ] )</description>
<parameters>result - Ресурс результата SQLite. Этот параметр не требуется при использовании объектно-ориентированного метода. 
decode_binary - Когда параметрdecode_binary установлен в TRUE (по умолчанию),PHP будет декодировать бинарный код, примененный к данным, как если бы они были закодированы функциейsqlite_escape_string(). Обычно вам следует оставлятьэто значение по умолчанию, если только вы не работаете с базой данныхsqlite, которая была создана в ином приложении.</parameters>
<output>Возвращает значение первого поля в виде строки. </output>
<errors></errors>
<example><?php
if ($dbhandle = sqlite_open('mysqlitedb', 0666, $sqliteerror)) {
    $sql = "SELECT id FROM sometable WHERE id = 42";
    $res = sqlite_query($dbhandle, $sql);
    if (sqlite_num_rows($res) > 0) {
        echo sqlite_fetch_single($res); // 42
    }
    
    sqlite_close($dbhandle);
}?></example>
<example_result></example_result>
</object>

<object id=1583> 
<name>levenshtein</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Вычисляет расстояние Левенштейна между двумя строками</short-description>
<description>int levenshtein ( string $str1 , string $str2 ) int levenshtein ( string $str1 , string $str2 , int $cost_ins , int $cost_rep , int $cost_del )</description>
<parameters>str1 - Одна из строк, для которых вычисляется расстояние Левенштейна. 
str2 - Одна из строк, для которых вычисляется расстояние Левенштейна. 
cost_ins - Определяет стоимость вставки. 
cost_rep - Определяет стоимость замены. 
cost_del - Определяет стоимость удаления. </parameters>
<output>Эта функция возвращает расстояние Левенштейна между двумя строками, или -1, если хотя бы одна из строк длиннее 255 символов. </output>
<errors></errors>
<example><?php
// введенное слово с опечаткой
$input = 'carrrot';
// массив сверяемых слов
$words  = array('apple','pineapple','banana','orange',
                'radish','carrot','pea','bean','potato');
// кратчайшее расстояние пока еще не найдено
$shortest = -1;
// проходим по словам для нахождения самого близкого варианта
foreach ($words as $word) {
    // вычисляем расстояние между входным словом и текущим
    $lev = levenshtein($input, $word);
    // проверяем полное совпадение
    if ($lev == 0) {
        // это ближайшее слово (точное совпадение)
        $closest = $word;
        $shortest = 0;
        // выходим из цикла - мы нашли точное совпадение
        break;
    }
    // если это расстояние меньше следующего наименьшего расстояния
    // ИЛИ если следующее самое короткое слово еще не было найдено
    if ($lev <= $shortest || $shortest < 0) {
        // set the closest match, and shortest distance
        $closest  = $word;
        $shortest = $lev;
    }
}
echo "Вы ввели: $input\n";
if ($shortest == 0) {
    echo "Найдено точное совпадение: $closest\n";
} else {
    echo "Вы не имели в виду: $closest?\n";
}
?></example>
<example_result>
 
Вы ввели: carrrot
Вы не имели в виду: carrot?
</example_result>
</object>

<object id=1584> 
<name>PDF_setgray</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set color to gray [deprecated]</short-description>
<description>bool PDF_setgray ( resource $p , float $g ) 
 Sets the current fill and stroke color to a gray value between 0 and 1 inclusive. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. 
 This function is deprecated since PDFlib version 4, use PDF_setcolor() instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1585> 
<name>proc_terminate</name>
<versions>(PHP 5)</versions>
<short-description>Уничтожает процесс, открытый при помощи функции proc_open</short-description>
<description>bool proc_terminate ( resource $process [, int $signal = 15 ] ) 
 Отправляет процессу process (созданному при помощи функции proc_open()) сигнал, говорящий о том, что он должен завершиться. Функция proc_terminate() возвращается немедленно и не ожидает завершения процесса. 
 Функция proc_terminate() позволяет программе завершить процесс и продолжать выполнять другие задачи. Вы можете опрашивать процесс (для того, чтобы проверить, был ли он завершён) при помощи функции proc_get_status(). </description>
<parameters>process - Открытый при помощи функции proc_open() дескриптор типа resource, который будет закрыт. 
signal - Этот необязательный параметр полезен только на операционных системах, поддерживающих стандарт POSIX. Вы можете указать сигнал, который будет отправлен процессу, используя системный вызов kill(2). По умолчанию используется сигнал SIGTERM. </parameters>
<output>Возвращает статус прекращения процесса, который был запущен. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1586> 
<name>XMLWriter::endAttribute</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Завершить атрибут</short-description>
<description>bool XMLWriter::endAttribute ( void ) 
 Процедурный стиль bool xmlwriter_end_attribute ( resource $xmlwriter )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1587> 
<name>dio_open</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)</versions>
<short-description>Opens a file (creating it if necessary) at a lower level than the C library input/ouput stream functions allow. </short-description>
<description>resource dio_open ( string $filename , int $flags [, int $mode = 0 ] ) 
 dio_open() opens a file and returns a new file descriptor for it. </description>
<parameters>filename - The pathname of the file to open. 
flags - The flags parameter is a bitwise-ORed value comprising flags from the following list. This value must include one of O_RDONLY, O_WRONLY, or O_RDWR. Additionally, it may include any combination of the other flags from this list. 
 O_RDONLY - opens the file for read access. 
mode - If flags contains O_CREAT, mode will set the permissions of the file (creation permissions). Mode is required for correct operation when O_CREAT is specified in mode and is ignored otherwise. </parameters>
<output>A file descriptor or FALSE on error. </output>
<errors></errors>
<example><?php
$fd = dio_open('/dev/ttyS0', O_RDWR | O_NOCTTY | O_NONBLOCK);
dio_close($fd);
?></example>
<example_result></example_result>
</object>

<object id=1588> 
<name>pg_pconnect</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Открывает постоянное соединение с сервером PostgreSQL</short-description>
<description>resource pg_pconnect ( string $connection_string [, int $connect_type ] ) 
 pg_pconnect() устанавливает соединение с базой данных PostgreSQL. Возвращает ресурс соединения необходимый для работы большинства функций PostgreSQL. 
 При повторном вызове функции pg_pconnect() с теми же значениями параметров в connection_string функция вернет существующее подключение. Чтобы принудительно создать новое соединение, необходимо передать строку подключения функции PGSQL_CONNECT_FORCE_NEW в качестве параметра connect_type. 
 Возможность создавать постоянные подключения регулируется директивой pgsql.allow_persistent файла php.ini. Для включения, установите значение в "On" (является значением по умолчанию). Максимальное количество постоянных соединений задается директивой pgsql.max_persistent файла php.ini (по умолчанию -1, не ограничено). Количество любых возможных подключений устанавливается директивой pgsql.max_links файла php.ini. 
 pg_close() не закрывает соединения, открытые функцией pg_pconnect(). </description>
<parameters>connection_string - Строка connection_string может быть пустой строкой, или содержать несколько параметров разделенных пробелами. Каждый параметр указывается как keyword = value. Пробелы вокруг знака равно необязательны. Пустые строки в качестве значения или значения, содержащие пробелы отделяются одинарными кавычками, как например, keyword = &#039;a value&#039;. Для задания одинарных кавычек и обратных слешей в качестве значений их необходимо экранировать обратным слешем, то есть \&#039; и \\. 
connect_type - Если в функцию передана константа PGSQL_CONNECT_FORCE_NEW, будет создаваться новое подключение, даже если connection_string идентична строке существующего подключения. </parameters>
<output>Ресурс соединения с базой данных PostgreSQL либо FALSE, если подключиться не удалось. </output>
<errors></errors>
<example><?php
$dbconn = pg_pconnect("dbname=mary");
//подключиться к базе "mary"
$dbconn2 = pg_pconnect("host=localhost port=5432 dbname=mary");
// подключиться к базе "mary" на хосте "localhost", порт "5432"
$dbconn3 = pg_pconnect("host=sheep port=5432 dbname=mary user=lamb password=foo");
//подключиться к базе "mary" на хосте "sheep", используя имя пользователя и пароль
$conn_string = "host=sheep port=5432 dbname=test user=lamb password=bar";
$dbconn4 = pg_pconnect($conn_string);
//подключиться к базе "test" на хосте "sheep", используя имя пользователя и пароль
?></example>
<example_result></example_result>
</object>

<object id=1589> 
<name>fbsql_data_seek</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Move internal result pointer</short-description>
<description>bool fbsql_data_seek ( resource $result , int $row_number ) 
 Moves the internal row pointer of the FrontBase result associated with the specified result identifier to point to the specified row number. 
 The next call to fbsql_fetch_row() would return that row. </description>
<parameters>result - Идентификатор результата запроса, полученный изfbsql_query() илиfbsql_db_query().
row_number - The row number. Starts at 0. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$link = fbsql_pconnect("localhost", "_SYSTEM", "secret")
    or die("Could not connect");
fbsql_select_db("samp_db")
    or die("Could not select database");
$query = "SELECT last_name, first_name FROM friends;";
$result = fbsql_query($query)
    or die("Query failed");
// fetch rows in reverse order
for ($i = fbsql_num_rows($result) - 1; $i >=0; $i--) {
    if (!fbsql_data_seek($result, $i)) {
        printf("Cannot seek to row %d\n", $i);
        continue;
    }
    if (!($row = fbsql_fetch_object($result)))
        continue;
    echo $row->last_name . $row->first_name . "<br />\n";
}
fbsql_free_result($result);
?></example>
<example_result></example_result>
</object>

<object id=1590> 
<name>ncurses_keyok</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Enable or disable a keycode </short-description>
<description>int ncurses_keyok ( int $keycode , bool $enable ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>keycode - 
enable - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1591> 
<name>ibase_free_event_handler</name>
<versions>(PHP 5)</versions>
<short-description>Cancels a registered event handler</short-description>
<description>bool ibase_free_event_handler ( resource $event ) 
 This function causes the registered event handler specified by event to be cancelled. The callback function will no longer be called for the events it was registered to handle. </description>
<parameters>event - An event resource, created by ibase_set_event_handler(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1592> 
<name>var_export</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Выводит в браузер или возвращает интерпретируемое строковое представление переменной</short-description>
<description>mixed var_export ( mixed $expression [, bool $return = false ] ) 
 var_export() возвращает структурированную информацию о данной переменной. Функция аналогична var_dump() за одним исключением: возвращаемое представление является полноценным PHP кодом. </description>
<parameters>expression - Переменная, которую необходимо экспортировать. 
return - Если передано и значение равно TRUE, var_export() вернет представление переменной вместо его вывода. </parameters>
<output>Возвращает представление переменной, если параметр return передан и равен TRUE. В противном случае функция возвращает NULL. </output>
<errors></errors>
<example><?php
$a = array (1, 2, array ("a", "b", "c"));
var_export($a);
?></example>
<example_result>
 
array (
  0 => 1,
  1 => 2,
  2 => 
  array (
    0 => &#039;a&#039;,
    1 => &#039;b&#039;,
    2 => &#039;c&#039;,
  ),
)
</example_result>
</object>

<object id=1593> 
<name>snmp_read_mib</name>
<versions>(PHP 5)</versions>
<short-description>Reads and parses a MIB file into the active MIB tree </short-description>
<description>bool snmp_read_mib ( string $filename ) 
 This function is used to load additional, e.g. vendor specific, MIBs so that human readable OIDs like VENDOR-MIB::foo.1 instead of error prone numeric OIDs can be used. 
 The order in which the MIBs are loaded does matter as the underlying Net-SNMP libary will print warnings if referenced objects cannot be resolved. </description>
<parameters>filename - The filename of the MIB.</parameters>
<output></output>
<errors></errors>
<example><?php
 print_r( snmprealwalk('localhost', 'public', '.1.3.6.1.2.1.2.3.4.5') );
 
 snmp_read_mib('./FOO-BAR-MIB.txt');
 print_r( snmprealwalk('localhost', 'public', 'FOO-BAR-MIB::someTable' );
?></example>
<example_result>
 
Array
(
    [iso.3.6.1.2.1.2.3.4.5.0] => Gauge32: 6
)
Array
(
    [FOO-BAR-MIB::someTable.0] => Gauge32: 6
)
</example_result>
</object>

<object id=1594> 
<name>oci_fetch</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Выбирает следующую строку из результата в буфер</short-description>
<description>bool oci_fetch ( resource $statement ) 
 Выбирает следующую строку из результата запроса во внутренний буфер, доступный с помощью oci_result() или через переменные, заранее определенные с помощью oci_define_by_name(). 
 См. oci_fetch_array() для более детальной информации о выборе данных. </description>
<parameters>statement - Корректный идентификатор выражения OCI8, полученный изoci_parse() и исполненный функцией oci_execute(), или идентификатор выраженияREF CURSOR.</parameters>
<output>Возвращает TRUE при успехе или FALSE в результате запроса больше нет рядов. </output>
<errors></errors>
<example><?php
$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $e = oci_error();
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}
$sql = 'SELECT location_id, city FROM locations WHERE location_id < 1200';
$stid = oci_parse($conn, $sql);
// Определение переменных ДОЛЖНО быть произведено до запуска
oci_define_by_name($stid, 'LOCATION_ID', $locid);
oci_define_by_name($stid, 'CITY', $city);
oci_execute($stid);
// С каждой выборкой переменные заполняются данными следующего ряда
while (oci_fetch($stid)) {
    echo "Location id $locid is $city<br>\n";
}
// Выведет:
//   Location id 1000 is Roma
//   Location id 1100 is Venice
oci_free_statement($stid);
oci_close($conn);
?></example>
<example_result></example_result>
</object>

<object id=1595> 
<name>ftp_fget</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Скачивает файл с FTP-сервера и сохраняет его в предварительно открытом файле</short-description>
<description>bool ftp_fget ( resource $ftp_stream , resource $handle , string $remote_file , int $mode [, int $resumepos = 0 ] ) 
 ftp_fget() загружает файл remote_file с FTP-сервера и записывает его в переданный файловый дескриптор. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером. 
handle - Открытый файловый дескриптор, в который будут сохранены данные. 
remote_file - Путь к удалённому файлу. 
mode - Режим передачи. Должен быть либо FTP_ASCII, либо FTP_BINARY. 
resumepos - Позиция начала загрузки в удаленном файле. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// путь к удаленному файлу
$remote_file = 'somefile.txt';
$local_file = 'localfile.txt';
// открываем файл для записи
$handle = fopen($local_file, 'w');
// установка соединения
$conn_id = ftp_connect($ftp_server);
// вход с именем пользователя и паролем
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);
// пытаемся скачать файл и сохранить его в $handle
if (ftp_fget($conn_id, $handle, $remote_file, FTP_ASCII, 0)) {
 echo "Произведена запись в $local_file\n";
} else {
 echo "При скачке $remote_file в $local_file произошла проблема\n";
}
// закрытие соединения и локального файла
ftp_close($conn_id);
fclose($handle);
?></example>
<example_result></example_result>
</object>

<object id=1596> 
<name>grapheme_strpos</name>
<versions>(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)</versions>
<short-description>Find position (in grapheme units) of first occurrence of a string</short-description>
<description>int grapheme_strpos ( string $haystack , string $needle [, int $offset = 0 ] ) 
 Find position (in grapheme units) of first occurrence of a string </description>
<parameters>haystack - The string to look in. Must be valid UTF-8. 
needle - The string to look for. Must be valid UTF-8. 
offset - The optional $offset parameter allows you to specify where in $haystack to start searching as an offset in grapheme units (not bytes or characters). The position returned is still relative to the beginning of haystack regardless of the value of $offset. </parameters>
<output>Returns the position as an integer. If needle is not found, strpos() will return boolean FALSE. </output>
<errors></errors>
<example><?php
$char_a_ring_nfd = "a\xCC\x8A";  // 'LATIN SMALL LETTER A WITH RING ABOVE' (U+00E5) normalization form "D"
$char_o_diaeresis_nfd = "o\xCC\x88"; // 'LATIN SMALL LETTER O WITH DIAERESIS' (U+00F6) normalization form "D"
print grapheme_strpos( $char_a_ring_nfd . $char_a_ring_nfd . $char_o_diaeresis_nfd, $char_o_diaeresis_nfd);
?></example>
<example_result>
 
2
</example_result>
</object>

<object id=1597> 
<name>mssql_close</name>
<versions>(PHP 4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Close MS SQL Server connection</short-description>
<description>bool mssql_close ([ resource $link_identifier ] ) 
 Closes the link to a MS SQL Server database that&#039;s associated with the specified link identifier. If the link identifier isn&#039;t specified, the last opened link is assumed. 
 Note that this isn&#039;t usually necessary, as non-persistent open links are automatically closed at the end of the script&#039;s execution. </description>
<parameters>link_identifier - A MS SQL link identifier, returned by mssql_connect(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Connect to MSSQL
$link = mssql_connect('KALLESPC\SQLEXPRESS', 'sa', 'phpfi');
// Do any related operations here
// Close the link to MSSQL
mssql_close($link);
?></example>
<example_result></example_result>
</object>

<object id=1598> 
<name>extension_loaded</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Find out whether an extension is loaded</short-description>
<description>bool extension_loaded ( string $name ) 
 Finds out whether the extension is loaded. </description>
<parameters>name - The extension name. </parameters>
<output>Returns TRUE if the extension identified by name is loaded, FALSE otherwise. </output>
<errors></errors>
<example><?php
if (!extension_loaded('gd')) {
    if (!dl('gd.so')) {
        exit;
    }
}?></example>
<example_result>
 
$ php -m
[PHP Modules]
xml
tokenizer
standard
sockets
session
posix
pcre
overload
mysql
mbstring
ctype

[Zend Modules]
</example_result>
</object>

<object id=1599> 
<name>ocicollassign</name>
<versions>(PHP 4 >= 4.0.6, PECL OCI8 1.0)</versions>
<short-description>Псевдоним OCI-Collection::assign()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1600> 
<name>imap_fetchbody</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Fetch a particular section of the body of the message</short-description>
<description>string imap_fetchbody ( resource $imap_stream , int $msg_number , string $section [, int $options = 0 ] ) 
 Fetch of a particular section of the body of the specified messages. Body parts are not decoded by this function. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
msg_number - The message number 
section - The part number. It is a string of integers delimited by period which index into a body part list as per the IMAP4 specification 
options - A bitmask with one or more of the following: FT_UID - The msg_number is a UID FT_PEEK - Do not set the \Seen flag if not already set FT_INTERNAL - The return string is in internal format, will not canonicalize to CRLF. </parameters>
<output>Returns a particular section of the body of the specified messages as a text string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1601> 
<name>PDF_makespotcolor</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Make spot color</short-description>
<description>int PDF_makespotcolor ( resource $p , string $spotname ) 
 Finds a built-in spot color name, or makes a named spot color from the current fill color. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1602> 
<name>mt_srand</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Переинициализирует генератор случайных чисел mt</short-description>
<description>void mt_srand ([ int $seed ] ) 
 Переинициализирует генератор случайных чисел параметром seed или случайным числом, если seed не указан. 
 Замечание: Начиная с PHP 4.2.0, больше нетнеобходимости инициализировать генератор случайных чисел функциямиsrand() или mt_srand(), посколькутеперь это происходит автоматически. </description>
<parameters>seed - Необязательное значение параметра переинициализации </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
// инициализация текущими микросекундами
function make_seed()
{  list($usec, $sec) = explode(' ', microtime());
  return (float) $sec + ((float) $usec * 100000);
}mt_srand(make_seed());
$randval = mt_rand();
?></example>
<example_result></example_result>
</object>

<object id=1603> 
<name>get_resource_type</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Возвращает тип ресурса </short-description>
<description>string get_resource_type ( resource $handle ) 
 Функция возвращает тип данного ресурса. </description>
<parameters>handle - Определяемый дескриптор ресурса. </parameters>
<output>Если данный параметр handle является ресурсом, функция возвращает строку, указывающую его тип. Если тип не определяется этой функцией, возвращаемым значением будет строка Unknown. </output>
<errors></errors>
<example><?php
// выводит: mysql link
$c = mysql_connect();
echo get_resource_type($c) . "\n";
// выводит: file
$fp = fopen("foo", "w");
echo get_resource_type($fp) . "\n";
// выводит: domxml document
$doc = new_xmldoc("1.0");
echo get_resource_type($doc->doc) . "\n";
?></example>
<example_result></example_result>
</object>

<object id=1604> 
<name>gmp_div_q</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Деление чисел</short-description>
<description>resource gmp_div_q ( resource $a , resource $b [, int $round = GMP_ROUND_ZERO ] ) 
 Делит a на b и возвращает целочисленный результат. </description>
<parameters>a - Делимое. 
b - Делитель числа a. 
round - Округление результата определяется параметром round, который может принимать следующие значения: GMP_ROUND_ZERO: Дробная часть просто отрезается. GMP_ROUND_PLUSINF: Результат округляется до ближайшего целого в сторону +бесконечности. GMP_ROUND_MINUSINF: Результат округляется до ближайшего целого в сторону -бесконечности. </parameters>
<output>Число GMP. </output>
<errors></errors>
<example><?php
     $div1 = gmp_div_q("100", "5");
     echo gmp_strval($div1) . "\n";
     
     $div2 = gmp_div_q("1", "3");
     echo gmp_strval($div2) . "\n";
     
     $div3 = gmp_div_q("1", "3", GMP_ROUND_PLUSINF);
     echo gmp_strval($div3) . "\n";
     
     $div4 = gmp_div_q("-1", "4", GMP_ROUND_PLUSINF);
     echo gmp_strval($div4) . "\n";
     
     $div5 = gmp_div_q("-1", "4", GMP_ROUND_MINUSINF);
     echo gmp_strval($div5) . "\n";
     ?></example>
<example_result>
 
 20
     0
     1
     0
     -1
     </example_result>
</object>

<object id=1605> 
<name>notes_version</name>
<versions>(PHP 4 >= 4.0.5)</versions>
<short-description>Get the version Lotus Notes</short-description>
<description>float notes_version ( string $database_name ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1606> 
<name>ming_setswfcompression</name>
<versions>(PHP 5.2.1-5.3.0, PECL ming SVN)</versions>
<short-description>Sets the SWF output compression</short-description>
<description>void ming_setswfcompression ( int $level ) 
 Sets the SWF output compression level. </description>
<parameters>level - The new compression level. Should be a value between 1 and 9 inclusive. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1607> 
<name>mb_substr_count</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Возвращает количество вхождений подстроки</short-description>
<description>int mb_substr_count ( string $haystack , string $needle [, string $encoding ] ) 
 Подсчитывает, сколько раз подстрока needle встречается в строке haystack. </description>
<parameters>haystack - Строка (string) для проверки 
needle - Строка (string) для поиска 
encoding - Параметр encodingпредставляет собой символьную кодировку. Если он опущен, вместо него будет использовано значение внутренней кодировки.</parameters>
<output>Количество вхождений подстроки needle в строку haystack. </output>
<errors></errors>
<example><?php
echo mb_substr_count("Это просто проверка", "то"); // выведет на экран 2
?></example>
<example_result></example_result>
</object>

<object id=1608> 
<name>swf_shapearc</name>
<versions>(PHP 4)</versions>
<short-description>Draw a circular arc</short-description>
<description>void swf_shapearc ( float $x , float $y , float $r , float $ang1 , float $ang2 ) 
 Draws a circular arc. </description>
<parameters>x - x-coordinate of the center. 
y - y-coordinate of the center. 
r - The arc radius. 
ang1 - The start angle. 
ang2 - The end angle. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1609> 
<name>snmprealwalk</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Return all objects including their respective object ID within the specified one </short-description>
<description>array snmprealwalk ( string $host , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] ) 
 The snmprealwalk() function is used to traverse over a number of SNMP objects starting from object_id and return not only their values but also their object ids. </description>
<parameters>host - The hostname of the SNMP agent (server).
community - The read community.
object_id - The SNMP object id which precedes the wanted one.
timeout - The number of microseconds until the first timeout.
retries - The number of times to retry if timeouts occur.</parameters>
<output>Returns an associative array of the SNMP object ids and their values on success or FALSE on error. In case of an error, an E_WARNING message is shown. </output>
<errors></errors>
<example><?php
 print_r(snmprealwalk("localhost", "public", "IF-MIB::ifName"));
?></example>
<example_result>
 
 Array
      (
      [IF-MIB::ifName.1] => STRING: lo
      [IF-MIB::ifName.2] => STRING: eth0
      [IF-MIB::ifName.3] => STRING: eth2
      [IF-MIB::ifName.4] => STRING: sit0
      [IF-MIB::ifName.5] => STRING: sixxs
    )
</example_result>
</object>

<object id=1610> 
<name>isset</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Определяет, была ли установлена переменная значением отличным от NULL</short-description>
<description>bool isset ( mixed $var [, mixed $... ] ) 
 Определяет, была ли установлена переменная значением отличным от NULL 
 Если переменная была удалена с помощью unset(), то она больше не считается установленной. isset() вернет FALSE, если проверяемая переменная имеет значение NULL. Следует помнить, что NULL-байт ("\0") не является эквивалентом константе PHP NULL. 
 Если были переданы несколько параметров, то isset() вернет TRUE только в том случае, если все параметры определены. Проверка происходит слева направо и заканчивается, как только будет встречена неопределенная переменная. </description>
<parameters>var - Проверяемая переменная. 
... - Другая переменная ... </parameters>
<output>Возвращает TRUE, если var определена и значение отличное от NULL, и FALSE в противном случае. </output>
<errors></errors>
<example><?php
$var = '';
// Проверка вернет TRUE, поэтому текст будет напечатан.
if (isset($var)) {
    echo "Эта переменная определена, поэтому меня и напечатали.";
}
// В следующем примере мы используем var_dump для вывода
// значения, возвращаемого isset().
$a = "test";
$b = "anothertest";
var_dump(isset($a));      // TRUE
var_dump(isset($a, $b)); // TRUE
unset ($a);
var_dump(isset($a));     // FALSE
var_dump(isset($a, $b)); // FALSE
$foo = NULL;
var_dump(isset($foo));   // FALSE
?></example>
<example_result>
 
bool(true)
bool(true)
bool(true)
bool(true)
bool(true)
bool(true)
</example_result>
</object>

<object id=1611> 
<name>ldap_sort</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Сортировать записи LDAP</short-description>
<description>bool ldap_sort ( resource $link , resource $result , string $sortfilter ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1612> 
<name>fbsql_get_autostart_info</name>
<versions>(PHP 4 >= 4.0.7, PHP 5)</versions>
<short-description>Описание array</short-description>
<description>array fbsql_get_autostart_info ([ resource $link_identifier ] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1613> 
<name>pcntl_signal_dispatch</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Calls signal handlers for pending signals</short-description>
<description>bool pcntl_signal_dispatch ( void ) 
 The pcntl_signal_dispatch() function calls the signal handlers installed by pcntl_signal() for each pending signal. </description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
echo "Installing signal handler...\n";
pcntl_signal(SIGHUP,  function($signo) {
     echo "signal handler called\n";
});
echo "Generating signal SIGHUP to self...\n";
posix_kill(posix_getpid(), SIGHUP);
echo "Dispatching...\n";
pcntl_signal_dispatch();
echo "Done\n";
?></example>
<example_result>
 
Installing signal handler...
Generating signal SIGHUP to self...
Dispatching...
signal handler called
Done
</example_result>
</object>

<object id=1614> 
<name>ncurses_putp</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Apply padding information to the string and output it</short-description>
<description>int ncurses_putp ( string $text ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>text - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1615> 
<name>mb_strcut</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Get part of string</short-description>
<description>string mb_strcut ( string $str , int $start [, int $length [, string $encoding ]] ) 
 mb_strcut() extracts a substring from a string similarly to mb_substr(), but operates on bytes instead of characters. If the cut position happens to be between two bytes of a multi-byte character, the cut is performed starting from the first byte of that character. This is also the difference to the substr() function, which would simply cut the string between the bytes and thus result in a malformed byte sequence. </description>
<parameters>str - The string being cut. 
start - Starting position in bytes. 
length - Length in bytes. 
encoding - Параметр encodingпредставляет собой символьную кодировку. Если он опущен, вместо него будет использовано значение внутренней кодировки.</parameters>
<output>mb_strcut() returns the portion of str specified by the start and length parameters. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1616> 
<name>stream_get_wrappers</name>
<versions>(PHP 5)</versions>
<short-description>Извлекает список зарегистрированных потоков</short-description>
<description>array stream_get_wrappers ( void ) 
 Извлекает список зарегистрированных потоков, доступных на запущенной системе. </description>
<parameters></parameters>
<output>Возвращает индексированный массив, содержащий названия все обёрток потоков, доступных на запущенной системе. </output>
<errors></errors>
<example><?php
print_r(stream_get_wrappers());
?></example>
<example_result>
 
Array
(
    [0] => php
    [1] => file
    [2] => http
    [3] => ftp
    [4] => compress.bzip2
    [5] => compress.zlib
)
</example_result>
</object>

<object id=1617> 
<name>ncurses_keypad</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Turns keypad on or off</short-description>
<description>int ncurses_keypad ( resource $window , bool $bf ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>window - 
bf - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1618> 
<name>mb_strimwidth</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Get truncated string with specified width</short-description>
<description>string mb_strimwidth ( string $str , int $start , int $width [, string $trimmarker [, string $encoding ]] ) 
 Truncates string str to specified width. </description>
<parameters>str - The string being decoded. 
start - The start position offset. Number of characters from the beginning of string. (First character is 0) 
width - The width of the desired trim. 
trimmarker - A string that is added to the end of string when string is truncated. 
encoding - Параметр encodingпредставляет собой символьную кодировку. Если он опущен, вместо него будет использовано значение внутренней кодировки.</parameters>
<output>The truncated string. If trimmarker is set, trimmarker is appended to the return value. </output>
<errors></errors>
<example><?php
echo mb_strimwidth("Hello World", 0, 10, "...");
// outputs Hello W...
?></example>
<example_result></example_result>
</object>

<object id=1619> 
<name>odbc_tableprivileges</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Lists tables and the privileges associated with each table</short-description>
<description>resource odbc_tableprivileges ( resource $connection_id , string $qualifier , string $owner , string $name ) 
 Lists tables in the requested range and the privileges associated with each table. </description>
<parameters>connection_id - Идентификатор соединения ODBC,за подробностями обращайтесь к odbc_connect().
qualifier - The qualifier. 
owner - The owner. Accepts the following search patterns: (&#039;%&#039; to match zero or more characters and &#039;_&#039; to match a single character) 
name - The name. Accepts the following search patterns: (&#039;%&#039; to match zero or more characters and &#039;_&#039; to match a single character) </parameters>
<output>An ODBC result identifier или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1620> 
<name>gmp_strval</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Преобразование GMP числа в строку</short-description>
<description>string gmp_strval ( resource $gmpnumber [, int $base = 10 ] ) 
 Преобразует GMP число в строку в системе счисления base. По умолчанию числа преобразуются в десятеричной системе счисления. </description>
<parameters>gmpnumber - GMP число для конвертации. 
base - Система счисления возвращаемого числа. По умолчанию - 10. Возможные значения: от 2 до 62 и от -2 до -36. </parameters>
<output>Число в виде строки типа string. </output>
<errors></errors>
<example><?php
$a = gmp_init("0x41682179fbf5");
printf("Десятичное: %s, 36-ричное: %s", gmp_strval($a), gmp_strval($a,36));
?></example>
<example_result></example_result>
</object>

<object id=1621> 
<name>apache_child_terminate</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Завершить процесс Apache по окончании текущего запроса</short-description>
<description>bool apache_child_terminate ( void ) 
 apache_child_terminate() регистрирует процесс Apache, обслуживающий текущий запрос PHP с тем, чтобы завершить его по окончании выполнения PHP скрипта. Эта функция может быть использована для завершения процесса, для работы которого понадобилось значительное количество оперативной памяти, не возвращенной операционной системе по завершении работы PHP скрипта. </description>
<parameters></parameters>
<output>Возвращает TRUE, если PHP работает в качестве Apache 1 модуля, версия Apache не является многопоточной и параметр конфигурации PHP child_terminate включен (по умолчанию выключен). В противном случае функция возвратит FALSE и сгенерирует ошибку уровня E_WARNING. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1622> 
<name>preg_split</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Разбивает строку по регулярному выражению</short-description>
<description>array preg_split ( string $pattern , string $subject [, int $limit = -1 [, int $flags = 0 ]] ) 
 Разбивает строку по регулярному выражению. </description>
<parameters>pattern - Искомый шаблон, строка. 
subject - Входная строка. 
limit - Если указан, функция возвращает не более, чем limit подстрок, оставшаяся часть строки будет возвращена в последней подстроке. Специальное значение limit, равное -1, 0 или NULL подразумевает отсутствие ограничения, и, в качестве фактического стандарта в PHP, можно использовать NULL для пропуска параметра flags. 
flags - flags может быть любой комбинацией следующих флагов (объединенных с помощью побитового оператора |): PREG_SPLIT_NO_EMPTY Если указан этот флаг, функция preg_split() вернет только непустые подстроки. PREG_SPLIT_DELIM_CAPTURE Если указан этот флаг, выражение, заключенное в круглые скобки в разделяющем шаблоне, также извлекается из заданной строки и возвращается функцией. PREG_SPLIT_OFFSET_CAPTURE 
 Если указан этот флаг, для каждой найденной подстроки будет указана ее позиция в исходной строке. Необходимо помнить, что этот флаг меняет формат возвращаемого массива: каждый элемент будет содержать массив, содержащий в индексе с номером 0 найденную подстроку, а смещение этой подстроки в параметре subject - в индексе 1. </parameters>
<output>Возвращает массив, состоящий из подстрок заданной строки subject, которая разбита по границам, соответствующим шаблону pattern. </output>
<errors></errors>
<example><?php
// разбиваем строку по произвольному числу запятых и пробельных символов,
// которые включают в себя  " ", \r, \t, \n и \f
$keywords = preg_split("/[\s,]+/", "hypertext language, programming");
?></example>
<example_result>
 
Array
(
    [0] => Array
        (
            [0] => hypertext
            [1] => 0
        )

    [1] => Array
        (
            [0] => language
            [1] => 10
        )

    [2] => Array
        (
            [0] => programming
            [1] => 19
        )

)
</example_result>
</object>

<object id=1623> 
<name>snmp_set_enum_print</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Return all values that are enums with their enum value instead of the raw integer </short-description>
<description>bool snmp_set_enum_print ( int $enum_print ) 
 This function toggles if snmpwalk/snmpget etc. should automatically lookup enum values in the MIB and return them together with their human readable string. </description>
<parameters>enum_print - As the value is interpreted as boolean by the Net-SNMP library, it can only be "0" or "1". </parameters>
<output></output>
<errors></errors>
<example><?php
 snmp_set_enum_print(0);
 echo snmpget('localhost', 'public', 'IF-MIB::ifOperStatus.3') . "\n";
 snmp_set_enum_print(1);
 echo snmpget('localhost', 'public', 'IF-MIB::ifOperStatus.3') . "\n";
?></example>
<example_result>
 
 INTEGER: up(1)
 INTEGER: 1
</example_result>
</object>

<object id=1624> 
<name>phpversion</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the current PHP version</short-description>
<description>string phpversion ([ string $extension ] ) 
 Returns a string containing the version of the currently running PHP parser or extension. </description>
<parameters>extension - An optional extension name. </parameters>
<output>If the optional extension parameter is specified, phpversion() returns the version of that extension, or FALSE if there is no version information associated or the extension isn&#039;t enabled. </output>
<errors></errors>
<example><?php
// prints e.g. 'Current PHP version: 4.1.1'
echo 'Current PHP version: ' . phpversion();
// prints e.g. '2.0' or nothing if the extension isn't enabled
echo phpversion('tidy');
?></example>
<example_result></example_result>
</object>

<object id=1625> 
<name>rand</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Генерирует случайное число</short-description>
<description>int rand ( void ) int rand ( int $min , int $max )</description>
<parameters>min - Наименьшее значение, которое может быть возвращено (по-умолчанию: 0) 
max - Наибольшее значение, которое может быть возвращено (по-умолчанию: getrandmax()) </parameters>
<output>Псевдослучайное значение в диапазоне от min (или 0) до max (или getrandmax()). </output>
<errors></errors>
<example><?php
echo rand() . "\n";
echo rand() . "\n";
echo rand(5, 15);
?></example>
<example_result>
 
7771
22264
11
</example_result>
</object>

<object id=1626> 
<name>cal_days_in_month</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Возвращает количество дней в месяце для заданного года и календаря</short-description>
<description>int cal_days_in_month ( int $calendar , int $month , int $year ) 
 Эта функция возвратит количество дней в месяце month года year для заданного календаря calendar. </description>
<parameters>calendar - Календарь, используемый для вычисления 
month - Месяц в выбранном календаре 
year - Год в выбранном календаре </parameters>
<output>Количество дней в конкретном месяце выбранного календаря </output>
<errors></errors>
<example><?php
$num = cal_days_in_month(CAL_GREGORIAN, 8, 2003); // 31
echo "Всего $num дней в Августе 2003 года";
?></example>
<example_result></example_result>
</object>

<object id=1627> 
<name>fdf_set_flags</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Sets a flag of a field</short-description>
<description>bool fdf_set_flags ( resource $fdf_document , string $fieldname , int $whichFlags , int $newFlags ) 
 Sets certain flags of the given field. </description>
<parameters>fdf_document - The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string(). 
fieldname - Name of the FDF field, as a string. 
whichFlags - 
newFlags - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1628> 
<name>udm_error</name>
<versions>(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)</versions>
<short-description>Получает сообщение об ошибке mnoGoSearch</short-description>
<description>string udm_error ( resource $agent ) 
 Получает сообщение агента об ошибке. </description>
<parameters>agent - Ссылка на идентификатор агента, полученная после вызова udm_alloc_agent(). </parameters>
<output>udm_error() возвращает сообщение об ошибке mnoGoSearch, либо пустую строку, если нет ошибок. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1629> 
<name>sinh</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Гиперболический синус</short-description>
<description>float sinh ( float $arg ) 
 Возвращает гиперболический синус arg, определяемый как (exp(arg) - exp(-arg))/2. </description>
<parameters>arg - Входное значение </parameters>
<output>Гиперболический синус arg </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1630> 
<name>mysql_get_client_info</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Возвращает данные о MySQL-клиенте</short-description>
<description>string mysql_get_client_info ( void ) 
 mysql_get_client_info() возвращает строку, содержащую версию клиентской библиотеки. </description>
<parameters></parameters>
<output>Версия клиентской библиотеки MySQL. </output>
<errors></errors>
<example><?php
printf("Версия клиентской библиотеки MySQL: %s\n", mysql_get_client_info());
?></example>
<example_result>
 
Версия клиентской библиотеки MySQL: 3.23.39
</example_result>
</object>

<object id=1631> 
<name>readlink</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает файл, на который указывает символическая ссылка</short-description>
<description>string readlink ( string $path ) 
 readlink() делает то же самое, что и функция C readlink. </description>
<parameters>path - Путь к символической ссылке. </parameters>
<output>Возвращает содержимое пути символической ссылки или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
// выведет что-то вроде /boot/vmlinux-2.4.20-xfs
echo readlink('/vmlinuz');
?></example>
<example_result></example_result>
</object>

<object id=1632> 
<name>imagefontwidth</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get font width</short-description>
<description>int imagefontwidth ( int $font ) 
 Returns the pixel width of a character in font. </description>
<parameters>font - Может принимать значения 1, 2, 3, 4, 5 для встроенных шрифтов в кодировкеlatin2 (более высокое число соответствует большему шрифту) или любому из ваших собственных идентификаторов шрифтов,зарегистрированных с помощью imageloadfont().</parameters>
<output>Returns the width of the pixel </output>
<errors></errors>
<example><?php
echo 'Font width: ' . imagefontwidth(4);
?></example>
<example_result>
 
Font width: 8
</example_result>
</object>

<object id=1633> 
<name>mcrypt_decrypt</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Decrypts crypttext with given parameters</short-description>
<description>string mcrypt_decrypt ( string $cipher , string $key , string $data , string $mode [, string $iv ] ) 
 Decrypts the data and returns the unencrypted data. </description>
<parameters>cipher - One of the MCRYPT_ciphername constants, or the name of the algorithm as string. 
key - The key with which the data was encrypted. If it&#039;s smaller than the required keysize, it is padded with &#039;\0&#039;. 
data - The data that will be decrypted with the given cipher and mode. If the size of the data is not n * blocksize, the data will be padded with &#039;\0&#039;. 
mode - One of the MCRYPT_MODE_modename constants, or one of the following strings: "ecb", "cbc", "cfb", "ofb", "nofb" or "stream". 
iv - The iv parameter is used for the initialization in CBC, CFB, OFB modes, and in some algorithms in STREAM mode. If you do not supply an IV, while it is needed for an algorithm, the function issues a warning and uses an IV with all its bytes set to &#039;\0&#039;. </parameters>
<output>Returns the decrypted data as a string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1634> 
<name>notes_body</name>
<versions>(PHP 4 >= 4.0.5)</versions>
<short-description>Open the message msg_number in the specified mailbox on the specified server (leave serv</short-description>
<description>array notes_body ( string $server , string $mailbox , int $msg_number ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1635> 
<name>mysqli_set_opt</name>
<versions>(PHP 5)</versions>
<short-description>Синоним для mysqli_options()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1636> 
<name>openssl_pkey_free</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Frees a private key</short-description>
<description>void openssl_pkey_free ( resource $key ) 
 This function frees a private key created by openssl_pkey_new(). </description>
<parameters>key - Resource holding the key. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1637> 
<name>odbc_cursor</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get cursorname</short-description>
<description>string odbc_cursor ( resource $result_id ) 
 Gets the cursorname for the given result_id. </description>
<parameters>result_id - The result identifier. </parameters>
<output>Returns the cursor name, as a string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1638> 
<name>PDF_lineto</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Draw a line</short-description>
<description>bool PDF_lineto ( resource $p , float $x , float $y ) 
 Draws a line from the current point to another point. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1639> 
<name>ocifreecollection</name>
<versions>(PHP 4 >= 4.0.7, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним OCI-Collection::free()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1640> 
<name>strval</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает строковое значение переменной</short-description>
<description>string strval ( mixed $var ) 
 Возвращает строковое значение переменной. См. документацию по типу string для более подробной информации о преобразовании в строку. 
 Эта функция не производит форматирование возвращаемого значения. Если необходимо привести числовое значение к строке с особым форматом, воспользуйтесь sprintf() или number_format(). </description>
<parameters>var - Переменная, которую необходимо преобразовать в строку. </parameters>
<output>Строковое значение (string) параметра var. </output>
<errors></errors>
<example><?php
class StrValTest
{
    public function __toString()
    {
        return __CLASS__;
    }
}
// Выводит 'StrValTest'
echo strval(new StrValTest);
?></example>
<example_result></example_result>
</object>

<object id=1641> 
<name>ovrimos_execute</name>
<versions>(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)</versions>
<short-description>Executes a prepared SQL statement</short-description>
<description>bool ovrimos_execute ( int $result_id [, array $parameters_array ] ) 
 Executes a prepared statement. </description>
<parameters>result_id - An Ovrimos result identifier prepared with ovrimos_prepare(). 
parameters_array - If the prepared statement contained parameters (question marks in the statement), the correct number of parameters should be passed in an array. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1642> 
<name>gethostbyaddr</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает доменное имя узла, соответствующее переданному IP-адресу </short-description>
<description>string gethostbyaddr ( string $ip_address ) 
 Возвращает доменное имя узла по адресу ip_address. </description>
<parameters>ip_address - IP-адрес узла </parameters>
<output>Возвращает имя узла в случае успеха, исходный ip_address в случае ошибки, или FALSE в случае ошибочного ввода. </output>
<errors></errors>
<example><?php
$hostname = gethostbyaddr($_SERVER['REMOTE_ADDR']);
echo $hostname;
?></example>
<example_result></example_result>
</object>

<object id=1643> 
<name>snmp2_set</name>
<versions>(PHP >= 5.2.0)</versions>
<short-description>Set the value of an SNMP object</short-description>
<description>bool snmp2_set ( string $host , string $community , string $object_id , string $type , string $value [, string $timeout = 1000000 [, string $retries = 5 ]] ) 
 snmp2_set() is used to set the value of an SNMP object specified by the object_id. </description>
<parameters>host - The hostname of the SNMP agent (server). 
community - The write community. 
object_id - The SNMP object id. 
type - MIB указывает тип идентификатора каждого объекта. Он должен быть указан в виде одного символа изследующего списка.
value - The new value. 
timeout - The number of microseconds until the first timeout. 
retries - The number of times to retry if timeouts occur. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
  snmp2_set("localhost", "public", "IF-MIB::ifAlias.3", "s", "foo");
?></example>
<example_result></example_result>
</object>

<object id=1644> 
<name>ldap_next_entry</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получить следующую запись результата</short-description>
<description>resource ldap_next_entry ( resource $link_identifier , resource $result_entry_identifier ) 
 Получить записи, хранящиеся в результате. Последующие вызовы ldap_next_entry() возвращают по одной записи, пока не останется больше записей. Первый вызов ldap_next_entry() производится после вызова ldap_first_entry() с параметром result_entry_identifier, который был возвращён ldap_first_entry(). </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
result_entry_identifier - </parameters>
<output>Возвращает идентификатор для следующей записи в результате, содержимое которого начинают читаться, запуская ldap_first_entry(). Если нет больше записей в результате, тогда возвращается FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1645> 
<name>pg_lo_export</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Вывод большого объекта в файл</short-description>
<description>bool pg_lo_export ([ resource $connection ], int $oid , string $pathname ) 
 pg_lo_export() выбирает большой объект из базы данных и сохраняет его данные локально в файловой системе. 
 Операции с использованием интерфейса больших объектов необходимо заключать в блок транзакции. 
 Замечание: 
 Прежнее название функции: pg_loexport(). </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). 
oid - OID большого объекта в базе данных. 
pathname - Полный путь и имя файла в клиентской файловой системе для записи данных большого объекта. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
   $database = pg_connect("dbname=jacarta");
   pg_query($database, "begin");
   $oid = pg_lo_create($database);
   $handle = pg_lo_open($database, $oid, "w");
   pg_lo_write($handle, "large object data");
   pg_lo_close($handle);
   pg_lo_export($database, $oid, '/tmp/lob.dat');
   pg_query($database, "commit");
?></example>
<example_result></example_result>
</object>

<object id=1646> 
<name>ncurses_move</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Move output position </short-description>
<description>int ncurses_move ( int $y , int $x ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>y - 
x - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1647> 
<name>get_headers</name>
<versions>(PHP 5)</versions>
<short-description>Возвращает все заголовки из ответа сервера на HTTP-запрос</short-description>
<description>array get_headers ( string $url [, int $format = 0 ] ) 
 get_headers() возвращает массив с заголовками из ответа сервера на HTTP-запрос. </description>
<parameters>url - Целевой URL. 
format - Если необязательный параметр format установлен в ненулевое значение, get_headers() разберет ответ сервера и установит ключи для возвращаемого массива. </parameters>
<output>Возвращает список или ассоциативный массив с заголовками ответа при нормальном завершении и FALSE, если возникла ошибка. </output>
<errors></errors>
<example><?php
$url = 'http://www.example.com';
print_r(get_headers($url));
print_r(get_headers($url, 1));
?></example>
<example_result>
 
Array
(
    [0] => HTTP/1.1 200 OK
    [1] => Date: Sat, 29 May 2004 12:28:13 GMT
    [2] => Server: Apache/1.3.27 (Unix)  (Red-Hat/Linux)
    [3] => Last-Modified: Wed, 08 Jan 2003 23:11:55 GMT
    [4] => ETag: "3f80f-1b6-3e1cb03b"
    [5] => Accept-Ranges: bytes
    [6] => Content-Length: 438
    [7] => Connection: close
    [8] => Content-Type: text/html
)

Array
(
    [0] => HTTP/1.1 200 OK
    [Date] => Sat, 29 May 2004 12:28:14 GMT
    [Server] => Apache/1.3.27 (Unix)  (Red-Hat/Linux)
    [Last-Modified] => Wed, 08 Jan 2003 23:11:55 GMT
    [ETag] => "3f80f-1b6-3e1cb03b"
    [Accept-Ranges] => bytes
    [Content-Length] => 438
    [Connection] => close
    [Content-Type] => text/html
)
</example_result>
</object>

<object id=1648> 
<name>msql_field_type</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get field type</short-description>
<description>string msql_field_type ( resource $result , int $field_offset ) 
 msql_field_type() gets the type of the specified field index. </description>
<parameters>result - Обрабатываемый результат запроса,полученный с помощью функции msql_query().
field_offset - Числовое смещение поля.field_offset начинается с 1.</parameters>
<output>The type of the field. One of int, char, real, ident, null or unknown. This functions will return FALSE on failure. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1649> 
<name>fribidi_log2vis</name>
<versions>(PHP 4 >= 4.0.4 and PHP 4 <= 4.1.0, PECL fribidi >= 1.0)</versions>
<short-description>Convert a logical string to a visual one</short-description>
<description>string fribidi_log2vis ( string $str , string $direction , int $charset ) 
 Converts a logical string to a visual one. </description>
<parameters>str - The logical string. 
direction - One of FRIBIDI_RTL, FRIBIDI_LTR or FRIBIDI_AUTO. 
charset - One of the FRIBIDI_CHARSET_XXX constants. </parameters>
<output>Returns the visual string on success или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1650> 
<name>imagecolordeallocate</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>De-allocate a color for an image</short-description>
<description>bool imagecolordeallocate ( resource $image , int $color ) 
 De-allocates a color previously allocated with imagecolorallocate() or imagecolorallocatealpha(). </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
color - The color identifier. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$white = imagecolorallocate($im, 255, 255, 255);
imagecolordeallocate($im, $white);
?></example>
<example_result></example_result>
</object>

<object id=1651> 
<name>print</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выводит строку</short-description>
<description>int print ( string $arg ) 
 Выводит arg. 
 print() не является "настоящей" функцией (это конструкция языка), поэтому заключать аргументы в скобки необязательно. </description>
<parameters>arg - Вводимые данные. </parameters>
<output>Возвращает 1, всегда. </output>
<errors></errors>
<example><?php
print("Привет мир!");
print "print() можно использовать и без скобок.";
print "Это займет
несколько строк. Переводы строки тоже
выводятся";
print "Это займет\nнесколько строк. Переводы строки тоже\nвыводятся";
print "Экранирование символов делается \"Так\".";
// с print можно использовать переменные ...
$foo = "foobar";
$bar = "barbaz";
print "foo - это $foo"; // foo - это foobar
// ... и массивы
$bar = array("value" => "foo");
print "это {$bar['value']} !"; // это foo !
// При использовании одиночных кавычек выводится имя переменной, а не значение
print 'foo - это $foo'; // foo - это $foo
// Если вы не используете другие символы, можно вывести просто значения переменных
print $foo;          // foobar
print <<<END
Здесь используется синтаксис "here document" для вывода
нескольких строк с подстановкой переменных $variable.
Заметьте, что закрывающий идентификатор должен
располагаться в отдельной строке, никаких пробелов!
END;
?></example>
<example_result></example_result>
</object>

<object id=1652> 
<name>strptime</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Разбирает строку даты/времени сгенерированную функцией strftime()</short-description>
<description>array strptime ( string $date , string $format ) 
 strptime() возвращает массив с данными разбора строки date, либо FALSE в случае ошибки. 
 Названия месяцев и недель, а также другие названия, зависящие от языка, соответствуют текущим настройкам местоположения, установленным посредством setlocale() (LC_TIME). </description>
<parameters>date (string) - Строка для разбора (например строковый результат выполнения функции strftime()). 
format (string) - Формат строки date (например формат, используемый в функции strftime()). Следует обратить внимание на тот факт, что не все возможности форматирования используемые в strftime() будут обрабатываться в strptime(); набор поддерживаемых символов форматирования зависит от ОС и используемой С-библиотеки. </parameters>
<output>Возвращает массив или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$format = '%d/%m/%Y %H:%M:%S';
$strf = strftime($format);
echo "$strf\n";
print_r(strptime($strf, $format));
?></example>
<example_result>
 
03/10/2004 15:54:19

Array
(
    [tm_sec] => 19
    [tm_min] => 54
    [tm_hour] => 15
    [tm_mday] => 3
    [tm_mon] => 9
    [tm_year] => 104
    [tm_wday] => 0
    [tm_yday] => 276
    [unparsed] =>
)
</example_result>
</object>

<object id=1653> 
<name>JDMonthName</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает название месяца </short-description>
<description>string jdmonthname ( int $julianday , int $mode ) 
 Возвращает строку содержащую наименование месяца. mode задает режим работы функции преобразования из числа дней в юлианском летоисчислении, а также определяет тип возвращаемого значения названия месяца. Режимы работы Режим Название месяца Значения 0 Григорианское - сокращенное Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec 1 Григорианское January, February, March, April, May, June, July, August, September, October, November, December 2 Юлианское - сокращенное Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec 3 Юлианское January, February, March, April, May, June, July, August, September, October, November, December 4 Иудейское Tishri, Heshvan, Kislev, Tevet, Shevat, AdarI, AdarII, Nisan, Iyyar, Sivan, Tammuz, Av, Elul 5 Французское Республиканское Vendemiaire, Brumaire, Frimaire, Nivose, Pluviose, Ventose, Germinal, Floreal, Prairial, Messidor, Thermidor, Fructidor, Extra </description>
<parameters>jday - Число дней в Юлианском летоисчислении, которое требуется преобразовать 
calendar - Календарь, из которого будет взято название месяца </parameters>
<output>Название месяца для заданного Юлианского Дня соответствующее календарю calendar. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1654> 
<name>w32api_invoke_function</name>
<versions>(PHP 4 >= 4.2.0)</versions>
<short-description>Invokes function funcname with the arguments passed after the function name</short-description>
<description>mixed w32api_invoke_function ( string $funcname , mixed $argument [, mixed $... ] ) 
 w32api_invoke_function() tries to find the previously registered function, passing the parameters you provided. </description>
<parameters>funcname - The function name. 
argument - Any of the arguments can be of any PHP type or w32api_deftype() defined type, as needed. 
... - </parameters>
<output>The return type is the one you set when you registered the function, the value is the one returned by the function itself. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1655> 
<name>asinh</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Гиперболический арксинус</short-description>
<description>float asinh ( float $arg ) 
 Возвращает гиперболический арксинус arg, т.е. значение, чей гиперболический синус равен arg. </description>
<parameters>arg - Входное значение </parameters>
<output>Гиперболический арксинус arg </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1656> 
<name>chmod</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Изменяет режим доступа к файлу</short-description>
<description>bool chmod ( string $filename , int $mode ) 
 Осуществляет попытку изменения режима доступа указанного файла на режим, переданный в параметре mode. </description>
<parameters>filename - Путь к файлу. 
mode - Обратите внимание, что значение параметра mode не переводится автоматически в восьмеричную систему счисления, поэтому строки (такие, как, например, "g+w") не будут работать должным образом. Чтобы удостовериться в том, что режим был установлен верно, предваряйте нулем (0) значение, передаваемое в параметре mode: </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1657> 
<name>pcntl_signal</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Installs a signal handler</short-description>
<description>bool pcntl_signal ( int $signo , callback $handler [, bool $restart_syscalls = true ] ) 
 The pcntl_signal() function installs a new signal handler for the signal indicated by signo. </description>
<parameters>signo - The signal number. 
handler - The signal handler which may be the name of a user created function, or method, or either of the two global constants SIG_IGN or SIG_DFL. 
restart_syscalls - Specifies whether system call restarting should be used when this signal arrives. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// tick use required as of PHP 4.3.0
declare(ticks = 1);
// signal handler function
function sig_handler($signo)
{
     switch ($signo) {
         case SIGTERM:
             // handle shutdown tasks
             exit;
             break;
         case SIGHUP:
             // handle restart tasks
             break;
         case SIGUSR1:
             echo "Caught SIGUSR1...\n";
             break;
         default:
             // handle all other signals
     }
}
echo "Installing signal handler...\n";
// setup signal handlers
pcntl_signal(SIGTERM, "sig_handler");
pcntl_signal(SIGHUP,  "sig_handler");
pcntl_signal(SIGUSR1, "sig_handler");
// or use an object, available as of PHP 4.3.0
// pcntl_signal(SIGUSR1, array($obj, "do_something");
echo"Generating signal SIGTERM to self...\n";
// send SIGUSR1 to current process id
posix_kill(posix_getpid(), SIGUSR1);
echo "Done\n";
?></example>
<example_result></example_result>
</object>

<object id=1658> 
<name>mb_http_input</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Определение кодировки символов входных данных HTTP-запроса </short-description>
<description>mixed mb_http_input ([ string $type = "" ] ) 
 Определяет кодировку входных данных HTTP-запроса. </description>
<parameters>type - Строка запроса задает тип входных данных. "G" для GET запроса, "P" для POST запроса, "C" для COOKIE, "S" для строк, "L" для списка и "I" для всего вместе (будет возвращен массив array). Если аргумент опущен, функция вернет последний использовавшийся тип. </parameters>
<output>Наименование кодировки символов для заданного типа type. Если mb_http_input() не может обработать HTTP-запрос, она вернет FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1659> 
<name>fbsql_create_clob</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Create a CLOB</short-description>
<description>string fbsql_create_clob ( string $clob_data [, resource $link_identifier ] ) 
 Creates a CLOB from the given data. </description>
<parameters>clob_data - The CLOB data. 
link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Returns a resource handle to the newly created CLOB, which can be used with insert and update commands to store the CLOB in the database. </output>
<errors></errors>
<example><?php
$link = fbsql_pconnect("localhost", "_SYSTEM", "secret")
    or die("Could not connect");
$filename = "clob_file.txt";
$fp = fopen($filename, "rb");
$clobdata = fread($fp, filesize($filename));
fclose($fp);
$clobHandle = fbsql_create_clob($clobdata, $link);
$sql = "INSERT INTO CLOB_TABLE (CLOB_COLUMN) VALUES ($clobHandle);";
$rs = fbsql_query($sql, $link);
?></example>
<example_result></example_result>
</object>

<object id=1660> 
<name>mysql_create_db</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Создает базу данных MySQL</short-description>
<description>bool mysql_create_db ( string $database_name [, resource $link_identifier ] ) 
 mysql_create_db() пытается создать базу данных на сервере, с которым ассоциирован переданный дескриптор соединения. </description>
<parameters>database_name - Имя создаваемой базы данных. 
link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example>
 mysql_create_db() не рекомендуется к использованию. Предпочтительнее использовать mysql_query() с SQL-запросом создания базы данных CREATE DATABASE. </example>
<example_result>
 
База my_db успешно создана
</example_result>
</object>

<object id=1661> 
<name>pg_send_query</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Отправляет асинхронный запрос </short-description>
<description>bool pg_send_query ( resource $connection , string $query ) 
 pg_send_query() отправляет на выполнение асинхронный запрос. В отличие от pg_query() запрос может содержать несколько SQL выражений, разделенных точкой с запятой. Для получения результата запроса используйте функцию pg_get_result(). 
 Выполнение запроса не прерывает работу скрипта. Для определения занятости соединения (когда запрос еще выполняется) используйте функцию pg_connection_busy(). Выполнение запроса можно прервать функцией pg_cancel_query(). 
 Несмотря на то, что можно отправить несколько запросов за раз, их нельзя посылать, пока соединение занято. В противном случае, посланный запрос дождется завершения предыдущего, сотрет его результат и запустится сам. Таким образом вы потеряете данные результата предыдущего запроса. </description>
<parameters>connection - Ресурс соединения с базой данных PostgreSQL. 
query - Одно или несколько SQL выражений, разделенных точкой с запятой. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки.</output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Невозможно подключиться");
  if (!pg_connection_busy($dbconn)) {
      pg_send_query($dbconn, "select * from authors; select count(*) from authors;");
  }
  
  $res1 = pg_get_result($dbconn);
  echo "Первый вызов pg_get_result(): $res1\n";
  $rows1 = pg_num_rows($res1);
  echo "$res1 содержит $rows1 записей\n\n";
  
  $res2 = pg_get_result($dbconn);
  echo "Второй вызов pg_get_result(): $res2\n";
  $rows2 = pg_num_rows($res2);
  echo "$res2 содержит $rows2 записей\n";
?></example>
<example_result>
 
Первый вызов pg_get_result(): Resource id #3
Resource id #3 содержит 3 записей

Второй вызов pg_get_result(): Resource id #4
Resource id #4 содержит 1 записей
</example_result>
</object>

<object id=1662> 
<name>ocicollappend</name>
<versions>(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним OCI-Collection::append()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1663> 
<name>php_ini_loaded_file</name>
<versions>(PHP 5 >= 5.2.4)</versions>
<short-description>Retrieve a path to the loaded php.ini file</short-description>
<description>string php_ini_loaded_file ( void ) 
 Check if a php.ini file is loaded, and retrieve its path. </description>
<parameters></parameters>
<output>The loaded php.ini path, or FALSE if one is not loaded. </output>
<errors></errors>
<example><?php
$inipath = php_ini_loaded_file();
if ($inipath) {
    echo 'Loaded php.ini: ' . $inipath;
} else {
    echo 'A php.ini file is not loaded';
}?></example>
<example_result>
 
Loaded php.ini: /usr/local/php/php.ini
</example_result>
</object>

<object id=1664> 
<name>ncurses_typeahead</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Specify different filedescriptor for typeahead checking </short-description>
<description>int ncurses_typeahead ( int $fd ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>fd - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1665> 
<name>ncurses_baudrate</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Returns baudrate of terminal </short-description>
<description>int ncurses_baudrate ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1666> 
<name>odbc_field_precision</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним odbc_field_len()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1667> 
<name>ctype_space</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Проверяет наличие пробельных символов</short-description>
<description>bool ctype_space ( string $text ) 
 Проверяет, все ли символы в переданной строке text являются пробельными. </description>
<parameters>text - Проверяемая строка. </parameters>
<output>Возвращает TRUE, если каждый символ в строке text создает какой-нибудь из пробельных символов, FALSE в противном случае. Кроме пробела, сюда также относятся символы табуляции, вертикальной табуляции, перевода строки, возврата каретки и перевода страницы. </output>
<errors></errors>
<example><?php
$strings = array('string1' => "\n\r\t", 'string2' => "\narf12", 'string3' => '\n\r\t');
foreach ($strings as $name => $testcase) {
    if (ctype_space($testcase)) {
        echo "Строка '$name' состоит только из пробельных символов.\n";
    } else {
        echo "Строка '$name' не состоит только из пробельных символов.\n";
    }
}?></example>
<example_result>
 
Строка &#039;string1&#039; состоит только из пробельных символов.
Строка &#039;string2&#039; не состоит только из пробельных символов.
Строка &#039;string3&#039; не состоит только из пробельных символов.
</example_result>
</object>

<object id=1668> 
<name>get_current_user</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the name of the owner of the current PHP script</short-description>
<description>string get_current_user ( void ) 
 Returns the name of the owner of the current PHP script. </description>
<parameters></parameters>
<output>Returns the username as a string. </output>
<errors></errors>
<example><?php
echo 'Current script owner: ' . get_current_user();
?></example>
<example_result>
 
Current script owner: SYSTEM
</example_result>
</object>

<object id=1669> 
<name>fdf_remove_item</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Sets target frame for form</short-description>
<description>bool fdf_remove_item ( resource $fdf_document , string $fieldname , int $item ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1670> 
<name>readline_list_history</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Lists the history</short-description>
<description>array readline_list_history ( void ) 
 Gets the entire command line history. </description>
<parameters></parameters>
<output>Returns an array of the entire command line history. The elements are indexed by integers starting at zero. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1671> 
<name>dbx_error</name>
<versions>(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)</versions>
<short-description>Report the error message of the latest function call in the module </short-description>
<description>string dbx_error ( object $link_identifier ) 
 dbx_error() returns the last error message. </description>
<parameters>link_identifier - The DBX link object returned by dbx_connect() </parameters>
<output>Returns a string containing the error message from the last function call of the abstracted module (e.g. mysql module). If there are multiple connections in the same module, just the last error is given. If there are connections on different modules, the latest error is returned for the module specified by the link_identifier parameter. </output>
<errors></errors>
<example><?php
$link   = dbx_connect(DBX_MYSQL, "localhost", "db", "username", "password")
    or die("Could not connect");
$result = dbx_query($link, "select id from non_existing_table");
if ($result == 0) {
    echo dbx_error($link);
}dbx_close($link);
?></example>
<example_result></example_result>
</object>

<object id=1672> 
<name>PDF_open_memory_image</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Open image created with PHP&#039;s image functions [not supported]</short-description>
<description>int PDF_open_memory_image ( resource $p , resource $image ) 
 This function is not supported by PDFlib GmbH. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1673> 
<name>sybase_pconnect</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Open persistent Sybase connection</short-description>
<description>resource sybase_pconnect ([ string $servername [, string $username [, string $password [, string $charset [, string $appname ]]]]] ) 
 sybase_pconnect() acts very much like sybase_connect() with two major differences. 
 First, when connecting, the function would first try to find a (persistent) link that&#039;s already open with the same host, username and password. If one is found, an identifier for it will be returned instead of opening a new connection. 
 Second, the connection to the SQL server will not be closed when the execution of the script ends. Instead, the link will remain open for future use (sybase_close() will not close links established by sybase_pconnect()). 
 This type of links is therefore called &#039;persistent&#039;. </description>
<parameters>servername - The servername argument has to be a valid servername that is defined in the &#039;interfaces&#039; file. 
username - Sybase user name 
password - Password associated with username. 
charset - Specifies the charset for the connection 
appname - Specifies an appname for the Sybase connection. This allow you to make separate connections in the same script to the same database. This may come handy when you have started a transaction in your current connection, and you need to be able to do a separate query which cannot be performed inside this transaction. </parameters>
<output>Returns a positive Sybase persistent link identifier on success, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1674> 
<name>oci_password_change</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Изменяет пароль пользователя Oracle</short-description>
<description>bool oci_password_change ( resource $connection , string $username , string $old_password , string $new_password ) resource oci_password_change ( string $dbname , string $username , string $old_password , string $new_password )</description>
<parameters>connection - Идентификатор соединения, возвращаемый функцией oci_connect() или oci_pconnect(). 
username - Имя пользователя Oracle. 
old_password - Старый пароль. 
new_password - Новый пароль. 
dbname - Имя базы данных. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1675> 
<name>posix_ctermid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get path name of controlling terminal</short-description>
<description>string posix_ctermid ( void ) 
 Generates a string which is the pathname for the current controlling terminal for the process. On error this will set errno, which can be checked using posix_get_last_error() </description>
<parameters></parameters>
<output>Upon successful completion, returns string of the pathname to the current controlling terminal. Otherwise FALSE is returned and errno is set, which can be checked with posix_get_last_error(). </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=1676> 
<name>m_parsecommadelimited</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Parse the comma delimited response so m_getcell, etc will work</short-description>
<description>int m_parsecommadelimited ( resource $conn , int $identifier ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
identifier - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1677> 
<name>fbsql_next_result</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Move the internal result pointer to the next result</short-description>
<description>bool fbsql_next_result ( resource $result ) 
 When sending more than one SQL statement to the server or executing a stored procedure with multiple results will cause the server to return multiple result sets. This function will test for additional results available form the server. If an additional result set exists it will free the existing result set and prepare to fetch the words from the new result set. </description>
<parameters>result - Идентификатор результата запроса, полученный изfbsql_query() илиfbsql_db_query().</parameters>
<output>Returns TRUE if an additional result set was available or FALSE otherwise. </output>
<errors></errors>
<example><?php
$link = fbsql_connect("localhost", "_SYSTEM", "secret");
fbsql_select_db("MyDB", $link);
$SQL = "Select * from table1; select * from table2;";
$rs = fbsql_query($SQL, $link);
do {
    while ($row = fbsql_fetch_row($rs)) {
    }
} while (fbsql_next_result($rs));
fbsql_free_result($rs);
fbsql_close($link);
?></example>
<example_result></example_result>
</object>

<object id=1678> 
<name>enchant_broker_free_dict</name>
<versions>(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )</versions>
<short-description>Free a dictionary resource</short-description>
<description>bool enchant_broker_free_dict ( resource $dict ) 
 Free a dictionary resource. </description>
<parameters>dict - Dictionary resource. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1679> 
<name>spl_autoload_call</name>
<versions>(PHP 5 >= 5.1.2)</versions>
<short-description>Try all registered __autoload() function to load the requested class</short-description>
<description>void spl_autoload_call ( string $class_name ) 
 This function can be used to manually search for a class or interface using the registered __autoload functions. </description>
<parameters>class_name - The class name being searched. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1680> 
<name>oci_parse</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Подготавливает запрос к выполнению</short-description>
<description>resource oci_parse ( resource $connection , string $sql_text ) 
 Подготавливает sql_text к выполнению, используя соединение connection и возвращает идентификатор выражения, который может быть далее использован функциямиoci_bind_by_name(),oci_execute() и другими. 
 Идентификаторы выражений могут быть освобождены функцией oci_free_statement() или установкой переменной в NULL. </description>
<parameters>connection - Идентификатор соединения Oracle, полученный из функций oci_connect(), oci_pconnect() или oci_new_connect(). 
sql_text - Запрос SQL или PL/SQL. </parameters>
<output>Возвращает дескриптор выражения в случае успеха, или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$conn = oci_connect('hr', 'welcome', 'localhost/XE');
// Парсинг запроса. Обратите внимание на отсутствие точки запятой в конце SQL-запроса
$stid = oci_parse($conn, 'SELECT * FROM employees');
oci_execute($stid);
echo "<table border='1'>\n";
while ($row = oci_fetch_array($stid, OCI_ASSOC+OCI_RETURN_NULLS)) {
    echo "<tr>\n";
    foreach ($row as $item) {
        echo "    <td>" . ($item !== null ? htmlentities($item, ENT_QUOTES) : "&nbsp;") . "</td>\n";
    }
    echo "</tr>\n";
}echo "</table>\n";
?></example>
<example_result></example_result>
</object>

<object id=1681> 
<name>get_required_files</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним get_included_files()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1682> 
<name>PDF_open_file</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Создает PDF-файл [устаревшее]</short-description>
<description>bool PDF_open_file ( resource $p , string $filename ) 
 Создает новый PDF-файл с использованием предоставленного имени файла. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. 
 Эта функция устарела начиная с 6-ой версии PDFlib, вместо нее используйте PDF_begin_document(). </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1683> 
<name>odbc_statistics</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Retrieve statistics about a table</short-description>
<description>resource odbc_statistics ( resource $connection_id , string $qualifier , string $owner , string $table_name , int $unique , int $accuracy ) 
 Get statistics about a table and its indexes. </description>
<parameters>connection_id - Идентификатор соединения ODBC,за подробностями обращайтесь к odbc_connect().
qualifier - The qualifier. 
owner - The owner. 
table_name - The table name. 
unique - The unique attribute. 
accuracy - The accuracy. </parameters>
<output>Returns an ODBC result identifier или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1684> 
<name>ob_start</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Включение буферизации вывода</short-description>
<description>bool ob_start ([ callback $output_callback [, int $chunk_size = 0 [, bool $erase = true ]]] ) 
 Эта функция включает буферизацию вывода. Если буферизация вывода активна, вывод скрипта не высылается (кроме заголовков), а сохраняется во внутреннем буфере. 
 Содержимое этого внутреннего буфера может быть скопировано в строковую переменную, используя ob_get_contents(). Для вывода содержимого внутреннего буфера следует использовать ob_end_flush(). В качестве альтернативы можно использовать ob_end_clean() для уничтожения содержимого буфера. Внимание 
 Некоторые web-сервера (например Apache) изменяют рабочую директорию скрипта, когда вызывается callback-функция. Вы можете вернуть ее назад, используя chdir(dirname($_SERVER[&#039;SCRIPT_FILENAME&#039;])) в callback-функции. </description>
<parameters>output_callback - В качестве необязательного параметра может быть указана функция output_callback. Эта функция принимает строку как параметр и должна возвращать строку. Функция будет вызвана при сбросе (отправке) буфера вывода или очистке (вместе с ob_flush(), ob_clean() или аналогичной функцией) или когда буфер выводится в браузер в конце запроса. При вызове output_callback, она принимает содержимое буфера вывода как параметр и возвращает новое содержимое, которое и отправляется в браузер. Если output_callback не является вызываемой функцией, то эта функция вернет FALSE. 
chunk_size - Если передан не обязательный параметр chunk_size, то буфер буден сброшен после любого вывода превышающего или равного по размеру chunk_size. Значение по умолчанию 0 означает, что функция вывода будет вызвана, когда буфер будет закрыт. 
erase - Если не обязательный параметр erase установлен в FALSE, то буфер не будет удален пока скрипт не закончит работу. Это приведет к тому, что попытка сбросить или очистить буфер выдаст уведомление и вернет FALSE при вызове. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
function callback($buffer)
{  // заменить все яблоки апельсинами
  return (str_replace("яблоки", "апельсины", $buffer));
}
ob_start("callback");
?>
<html>
<body>
<p>Это все равно что сравнить яблоки и апельсины.</p>
</body>
</html>
<?php
ob_end_flush();
?></example>
<example_result>
 
<html>
<body>
<p>Это все равно что сравнить апельсины и апельсины.</p>
</body>
</html>
</example_result>
</object>

<object id=1685> 
<name>com_release</name>
<versions>(PHP 4 >= 4.1.0)</versions>
<short-description>Decreases the components reference counter [deprecated]</short-description>
<description>void com_release ( void ) 
 Decreases the components reference counter. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1686> 
<name>array_fill</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Заполняет массив значениями</short-description>
<description>array array_fill ( int $start_index , int $num , mixed $value ) 
 Заполняет массив num элементами со значением value, начиная с ключа start_index. </description>
<parameters>start_index - Первый индекс возвращаемого массива. 
num - Количество вставляемых элементов, должно быть больше нуля. 
value - Значение для заполнения </parameters>
<output>Возвращает заполненный мссив </output>
<errors>Генерирует ошибку уровня E_WARNING, если num меньше единицы. </errors>
<example><?php
$a = array_fill(5, 6, 'banana');
$b = array_fill(-2, 4, 'pear');
print_r($a);
print_r($b);
?></example>
<example_result>
 
Array
(
    [5]  => banana
    [6]  => banana
    [7]  => banana
    [8]  => banana
    [9]  => banana
    [10] => banana
)
Array
(
    [-2] => pear
    [0] => pear
    [1] => pear
    [2] => pear
)
</example_result>
</object>

<object id=1687> 
<name>apache_response_headers</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Возвращает список всех HTTP заголовков ответа Apache</short-description>
<description>array apache_response_headers ( void ) 
 Возвращает список всех HTTP заголовков ответа Apache </description>
<parameters></parameters>
<output>Массив HTTP заголовков ответа Apache при успешном выполнении или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
print_r(apache_response_headers());
?></example>
<example_result>
 
Array
(
    [Accept-Ranges] => bytes
    [X-Powered-By] => PHP/4.3.8
)
</example_result>
</object>

<object id=1688> 
<name>imap_mail_copy</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Copy specified messages to a mailbox</short-description>
<description>bool imap_mail_copy ( resource $imap_stream , string $msglist , string $mailbox [, int $options = 0 ] ) 
 Copies mail messages specified by msglist to specified mailbox. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
msglist - msglist is a range not just message numbers (as described in &raquo; RFC2060). 
mailbox - The mailbox name, see imap_open() for more information 
options - options is a bitmask of one or more of CP_UID - the sequence numbers contain UIDS CP_MOVE - Delete the messages from the current mailbox after copying </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1689> 
<name>socket_write</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Write to a socket</short-description>
<description>int socket_write ( resource $socket , string $buffer [, int $length = 0 ] ) 
 The function socket_write() writes to the socket from the given buffer. </description>
<parameters>socket - 
buffer - The buffer to be written. 
length - The optional parameter length can specify an alternate length of bytes written to the socket. If this length is greater then the buffer length, it is silently truncated to the length of the buffer. </parameters>
<output>Returns the number of bytes successfully written to the socket или FALSE в случае возникновения ошибки. The error code can be retrieved with socket_last_error(). This code may be passed to socket_strerror() to get a textual explanation of the error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1690> 
<name>preg_replace</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выполняет поиск и замену по регулярному выражению</short-description>
<description>mixed preg_replace ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &$count ]] ) 
 Выполняет поиск совпадений в строке subject с шаблоном pattern и заменяет их на replacement. </description>
<parameters>pattern - Искомый шаблон. Может быть как строкой, так и массивом строк. 
replacement - Строка или массив строк для замены. Если этот параметр является строкой, а pattern является массивом, все шаблоны будут заменены этой строкой. Если и pattern и replacement являются массивами, каждый элемент pattern будет заменен соответствующим элементом из replacement. Если массив replacement содержит меньше элементов, чем массив pattern, то все лишние шаблоны из pattern будут заменены пустыми строками. 
subject - Строка или массив строк для поиска и замены. 
limit - Максимально возможное количество замен каждого шаблона для каждой строки subject. По умолчанию равно -1 (без ограничений). 
count - Если указана, то эта переменная будет заполнена количеством произведенных замен. </parameters>
<output>preg_replace() возвращает массив, если параметр subject является массивом, иначе возвращается строка. </output>
<errors></errors>
<example><?php
$string = 'April 15, 2003';
$pattern = '/(\w+) (\d+), (\d+)/i';
$replacement = '${1}1,$3';
echo preg_replace($pattern, $replacement, $string);
?></example>
<example_result>
 
April1,2003
</example_result>
</object>

<object id=1691> 
<name>gc_enabled</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Returns status of the circular reference collector</short-description>
<description>bool gc_enabled ( void ) 
 Returns status of the circular reference collector. </description>
<parameters></parameters>
<output>Returns TRUE if the garbage collector is enabled, FALSE otherwise. </output>
<errors></errors>
<example><?php
if(gc_enabled()) gc_collect_cycles();
?></example>
<example_result></example_result>
</object>

<object id=1692> 
<name>openssl_private_decrypt</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Decrypts data with private key </short-description>
<description>bool openssl_private_decrypt ( string $data , string &$decrypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ] ) 
 openssl_private_decrypt() decrypts data that was previous encrypted via openssl_public_encrypt() and stores the result into decrypted. 
 You can use this function e.g. to decrypt data which were supposed only to you. </description>
<parameters>data - 
decrypted - 
key - key must be the private key corresponding that was used to encrypt the data. 
padding - padding can be one of OPENSSL_PKCS1_PADDING, OPENSSL_SSLV23_PADDING, OPENSSL_PKCS1_OAEP_PADDING, OPENSSL_NO_PADDING. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1693> 
<name>array_intersect_ukey</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Вычисляет схождение массивов, используя callback-функцию для сравнения ключей</short-description>
<description>array array_intersect_ukey ( array $array1 , array $array2 [, array $... ], callback $key_compare_func ) 
 array_intersect_ukey() возвращает массив, содержащий значения array1, имеющие ключи, содержащиеся во всех последующих параметрах. 
 Для сравнения используется функция, предосталяемая пользователем. Она должна возвращать целое число меньшее, равное или большее нуля, если первый ключ, соответственно, меньше, равен или больше второго. </description>
<parameters>array1 - Основной проверяемый массив. 
array2 - Первый массив, с которым сравниваются ключи. 
array - Дополнительные массивы, с которыми осуществляется сравнение ключей. 
key_compare_func - Предоставленная пользователем callback-функция. </parameters>
<output>Возвращает все элементы array1, чьи ключи существуют во всех переданных аргументах. </output>
<errors></errors>
<example><?php
function key_compare_func($key1, $key2)
{    if ($key1 == $key2)
        return 0;
    else if ($key1 > $key2)
        return 1;
    else
        return -1;
}
$array1 = array('blue'  => 1, 'red'  => 2, 'green'  => 3, 'purple' => 4);
$array2 = array('green' => 5, 'blue' => 6, 'yellow' => 7, 'cyan'   => 8);
var_dump(array_intersect_ukey($array1, $array2, 'key_compare_func'));
?></example>
<example_result>
 
array(2) {
  ["blue"]=>
  int(1)
  ["green"]=>
  int(3)
}
</example_result>
</object>

<object id=1694> 
<name>fdf_errno</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Return error code for last fdf operation</short-description>
<description>int fdf_errno ( void ) 
 Gets the error code set by the last FDF function call. 
 A textual description of the error may be obtained using with fdf_error(). </description>
<parameters></parameters>
<output>Returns the error code as an integer, or zero if there was no errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1695> 
<name>pcntl_sigprocmask</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Sets and retrieves blocked signals</short-description>
<description>bool pcntl_sigprocmask ( int $how , array $set [, array &$oldset ] ) 
 The pcntl_sigprocmask() function adds, removes or sets blocked signals, depending on the how parameter. </description>
<parameters>how - Sets the behavior of pcntl_sigprocmask(). Possible values: SIG_BLOCK: Add the signals to the currently blocked signals. SIG_UNBLOCK: Remove the signals from the currently blocked signals. SIG_SETMASK: Replace the currently blocked signals by the given list of signals. 
set - List of signals. 
oldset - The oldset parameter is set to an array containing the list of the previously blocked signals. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
pcntl_sigprocmask(SIG_BLOCK, array(SIGHUP));
$oldset = array();
pcntl_sigprocmask(SIG_UNBLOCK, array(SIGHUP), $oldset);
?></example>
<example_result></example_result>
</object>

<object id=1696> 
<name>array_pop</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Извлекает последний элемент массива</short-description>
<description>mixed array_pop ( array &$array ) 
 array_pop() извлекает и возвращает последнее значение параметра array, уменьшая размер array на один элемент. Если array пуст (или не является массивом), будет возвращён NULL. Кроме этого, если передан не массив, будет вызвано предупреждение. 
 Замечание: Эта функция при вызовесбрасывает указатель массива, переданного параметром. </description>
<parameters>array - Массив, из которого берется значение. </parameters>
<output>Возвращает последний элемент массива array. Если array пуст (или не является массивом), будет возвращен NULL. </output>
<errors></errors>
<example><?php
$stack = array("orange", "banana", "apple", "raspberry");
$fruit = array_pop($stack);
print_r($stack);
?></example>
<example_result>
 
Array
(
    [0] => orange
    [1] => banana
    [2] => apple
)
</example_result>
</object>

<object id=1697> 
<name>ncurses_new_panel</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Create a new panel and associate it with window</short-description>
<description>resource ncurses_new_panel ( resource $window ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>window - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1698> 
<name>openssl_random_pseudo_bytes</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Generate a pseudo-random string of bytes</short-description>
<description>string openssl_random_pseudo_bytes ( int $length [, bool &$crypto_strong ] ) 
 Generates a string of pseudo-random bytes, with the number of bytes determined by the length parameter. 
 It also indicates if a cryptographically strong algorithm was used to produce the pseudo-random bytes, and does this via the optional crypto_strong parameter. It&#039;s rare for this to be FALSE, but some systems may be broken or old. </description>
<parameters>length - The length of the desired string of bytes. Must be a positive integer. PHP will try to cast this parameter to a non-null integer to use it. 
crypto_strong - If passed into the function, this will hold a boolean value that determines if the algorithm used was "cryptographically strong", e.g., safe for usage with GPG, passwords, etc. TRUE if it did, otherwise FALSE </parameters>
<output>Returns the generated string of bytes on success, или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
for ($i = -1; $i <= 4; $i++) {
    $bytes = openssl_random_pseudo_bytes($i, $cstrong);
    $hex   = bin2hex($bytes);
    echo "Lengths: Bytes: $i and Hex: " . strlen($hex) . PHP_EOL;
    var_dump($hex);
    var_dump($cstrong);
    echo PHP_EOL;
}?></example>
<example_result>
 
Lengths: Bytes: -1 and Hex: 0
string(0) ""
NULL

Lengths: Bytes: 0 and Hex: 0
string(0) ""
NULL

Lengths: Bytes: 1 and Hex: 2
string(2) "42"
bool(true)

Lengths: Bytes: 2 and Hex: 4
string(4) "dc6e"
bool(true)

Lengths: Bytes: 3 and Hex: 6
string(6) "288591"
bool(true)

Lengths: Bytes: 4 and Hex: 8
string(8) "ab86d144"
bool(true)

</example_result>
</object>

<object id=1699> 
<name>ifx_errormsg</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Returns error message of last Informix call</short-description>
<description>string ifx_errormsg ([ int $errorcode ] ) 
 Returns the Informix error message associated with the most recent Informix error. </description>
<parameters>errorcode - If specified, the function will return the message corresponding to the specified code. </parameters>
<output>Return the error message, as a string. </output>
<errors></errors>
<example><?php
printf("%s\n<br>", ifx_errormsg(-201));
?></example>
<example_result></example_result>
</object>

<object id=1700> 
<name>xmlrpc_server_call_method</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Разбирает XML запросы и вызывающие методы</short-description>
<description>string xmlrpc_server_call_method ( resource $server , string $xml , mixed $user_data [, array $output_options ] ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1701> 
<name>ncurses_mvaddchnstr</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Move position and add attributed string with specified length </short-description>
<description>int ncurses_mvaddchnstr ( int $y , int $x , string $s , int $n ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>y - 
x - 
s - 
n - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1702> 
<name>mssql_min_message_severity</name>
<versions>(PHP 4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Sets the minimum message severity</short-description>
<description>void mssql_min_message_severity ( int $severity ) 
 Sets the minimum message severity. </description>
<parameters>severity - The new message severity. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
// Connect to MSSQL
mssql_connect('KALLESPC\SQLEXPRESS', 'sa', 'phpfi');
// Set the minimum message severity to 17, this
// will not show any messages issued by the underlaying
// API when we select a non-existent database below
mssql_min_message_severity(17);
// Select a non-existent database
mssql_select_db('THIS_DATABASE_DOES_NOT_EXISTS');
?></example>
<example_result>
 
mssql_select_db(): Unable to select database:  THIS_DATABASE_DOES_NOT_EXISTS
</example_result>
</object>

<object id=1703> 
<name>ncurses_use_extended_names</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Control use of extended names in terminfo descriptions </short-description>
<description>int ncurses_use_extended_names ( bool $flag ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>flag - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1704> 
<name>variant_int</name>
<versions>(PHP 5)</versions>
<short-description>Returns the integer portion of a variant</short-description>
<description>mixed variant_int ( mixed $variant ) 
 Gets the integer portion of a variant. </description>
<parameters>variant - The variant. </parameters>
<output>If variant is negative, then the first negative integer greater than or equal to the variant is returned, otherwise returns the integer portion of the value of variant. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1705> 
<name>memory_get_usage</name>
<versions>(PHP 4 >= 4.3.2, PHP 5)</versions>
<short-description>Returns the amount of memory allocated to PHP</short-description>
<description>int memory_get_usage ([ bool $real_usage = false ] ) 
 Returns the amount of memory, in bytes, that&#039;s currently being allocated to your PHP script. </description>
<parameters>real_usage - Set this to TRUE to get the real size of memory allocated from system. If not set or FALSE only the memory used by emalloc() is reported. </parameters>
<output>Returns the memory amount in bytes. </output>
<errors></errors>
<example><?php
// This is only an example, the numbers below will
// differ depending on your system
echo memory_get_usage() . "\n"; // 36640
$a = str_repeat("Hello", 4242);
echo memory_get_usage() . "\n"; // 57960
unset($a);
echo memory_get_usage() . "\n"; // 36744
?></example>
<example_result></example_result>
</object>

<object id=1706> 
<name>dio_truncate</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)</versions>
<short-description>Truncates file descriptor fd to offset bytes </short-description>
<description>bool dio_truncate ( resource $fd , int $offset ) 
 dio_truncate() truncates a file to at most offset bytes in size. 
 If the file previously was larger than this size, the extra data is lost. If the file previously was shorter, it is unspecified whether the file is left unchanged or is extended. In the latter case the extended part reads as zero bytes. </description>
<parameters>fd - The file descriptor returned by dio_open(). 
offset - The offset in bytes. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1707> 
<name>mysqli_get_cache_stats</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Returns client Zval cache statistics</short-description>
<description>array mysqli_get_cache_stats ( void ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output>Returns an array with client Zval cache stats if success, FALSE otherwise. </output>
<errors></errors>
<example><?php
$link = mysqli_connect();
print_r(mysqli_get_cache_stats());
?></example>
<example_result>
 
Array
(
    [bytes_sent] => 43
    [bytes_received] => 80
    [packets_sent] => 1
    [packets_received] => 2
    [protocol_overhead_in] => 8
    [protocol_overhead_out] => 4
    [bytes_received_ok_packet] => 11
    [bytes_received_eof_packet] => 0
    [bytes_received_rset_header_packet] => 0
    [bytes_received_rset_field_meta_packet] => 0
    [bytes_received_rset_row_packet] => 0
    [bytes_received_prepare_response_packet] => 0
    [bytes_received_change_user_packet] => 0
    [packets_sent_command] => 0
    [packets_received_ok] => 1
    [packets_received_eof] => 0
    [packets_received_rset_header] => 0
    [packets_received_rset_field_meta] => 0
    [packets_received_rset_row] => 0
    [packets_received_prepare_response] => 0
    [packets_received_change_user] => 0
    [result_set_queries] => 0
    [non_result_set_queries] => 0
    [no_index_used] => 0
    [bad_index_used] => 0
    [slow_queries] => 0
    [buffered_sets] => 0
    [unbuffered_sets] => 0
    [ps_buffered_sets] => 0
    [ps_unbuffered_sets] => 0
    [flushed_normal_sets] => 0
    [flushed_ps_sets] => 0
    [ps_prepared_never_executed] => 0
    [ps_prepared_once_executed] => 0
    [rows_fetched_from_server_normal] => 0
    [rows_fetched_from_server_ps] => 0
    [rows_buffered_from_client_normal] => 0
    [rows_buffered_from_client_ps] => 0
    [rows_fetched_from_client_normal_buffered] => 0
    [rows_fetched_from_client_normal_unbuffered] => 0
    [rows_fetched_from_client_ps_buffered] => 0
    [rows_fetched_from_client_ps_unbuffered] => 0
    [rows_fetched_from_client_ps_cursor] => 0
    [rows_skipped_normal] => 0
    [rows_skipped_ps] => 0
    [copy_on_write_saved] => 0
    [copy_on_write_performed] => 0
    [command_buffer_too_small] => 0
    [connect_success] => 1
    [connect_failure] => 0
    [connection_reused] => 0
    [reconnect] => 0
    [pconnect_success] => 0
    [active_connections] => 1
    [active_persistent_connections] => 0
    [explicit_close] => 0
    [implicit_close] => 0
    [disconnect_close] => 0
    [in_middle_of_command_close] => 0
    [explicit_free_result] => 0
    [implicit_free_result] => 0
    [explicit_stmt_close] => 0
    [implicit_stmt_close] => 0
    [mem_emalloc_count] => 0
    [mem_emalloc_ammount] => 0
    [mem_ecalloc_count] => 0
    [mem_ecalloc_ammount] => 0
    [mem_erealloc_count] => 0
    [mem_erealloc_ammount] => 0
    [mem_efree_count] => 0
    [mem_malloc_count] => 0
    [mem_malloc_ammount] => 0
    [mem_calloc_count] => 0
    [mem_calloc_ammount] => 0
    [mem_realloc_count] => 0
    [mem_realloc_ammount] => 0
    [mem_free_count] => 0
    [proto_text_fetched_null] => 0
    [proto_text_fetched_bit] => 0
    [proto_text_fetched_tinyint] => 0
    [proto_text_fetched_short] => 0
    [proto_text_fetched_int24] => 0
    [proto_text_fetched_int] => 0
    [proto_text_fetched_bigint] => 0
    [proto_text_fetched_decimal] => 0
    [proto_text_fetched_float] => 0
    [proto_text_fetched_double] => 0
    [proto_text_fetched_date] => 0
    [proto_text_fetched_year] => 0
    [proto_text_fetched_time] => 0
    [proto_text_fetched_datetime] => 0
    [proto_text_fetched_timestamp] => 0
    [proto_text_fetched_string] => 0
    [proto_text_fetched_blob] => 0
    [proto_text_fetched_enum] => 0
    [proto_text_fetched_set] => 0
    [proto_text_fetched_geometry] => 0
    [proto_text_fetched_other] => 0
    [proto_binary_fetched_null] => 0
    [proto_binary_fetched_bit] => 0
    [proto_binary_fetched_tinyint] => 0
    [proto_binary_fetched_short] => 0
    [proto_binary_fetched_int24] => 0
    [proto_binary_fetched_int] => 0
    [proto_binary_fetched_bigint] => 0
    [proto_binary_fetched_decimal] => 0
    [proto_binary_fetched_float] => 0
    [proto_binary_fetched_double] => 0
    [proto_binary_fetched_date] => 0
    [proto_binary_fetched_year] => 0
    [proto_binary_fetched_time] => 0
    [proto_binary_fetched_datetime] => 0
    [proto_binary_fetched_timestamp] => 0
    [proto_binary_fetched_string] => 0
    [proto_binary_fetched_blob] => 0
    [proto_binary_fetched_enum] => 0
    [proto_binary_fetched_set] => 0
    [proto_binary_fetched_geometry] => 0
    [proto_binary_fetched_other] => 0
)
</example_result>
</object>

<object id=1708> 
<name>mb_detect_order</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Установка/получение списка кодировок для механизмов определения кодировки </short-description>
<description>mixed mb_detect_order ([ mixed $encoding_list ] ) 
 Задает список кодировок encoding_list для механизмов автоматического определения кодировок в строках. </description>
<parameters>encoding_list - encoding_list - массив array или строка, в которой перечислены кодировки через запятую. См. Поддерживаемые кодировки. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
/* Задание списка кодировок в виде упорядоченного списка*/
mb_detect_order("eucjp-win,sjis-win,UTF-8");
/* Задание списка кодировок в виде массива */
$ary[] = "ASCII";
$ary[] = "JIS";
$ary[] = "EUC-JP";
mb_detect_order($ary);
/* Вывод текущего списка кодировок */
echo implode(", ", mb_detect_order());
?></example>
<example_result>
 
; Всегда будет определять кодировку ISO-8859-1
detect_order = ISO-8859-1, UTF-8

; Всегда будет определять кодировку UTF-8, так как значения ASCII/UTF-7 
; допустимы в UTF-8
detect_order = UTF-8, ASCII, UTF-7
</example_result>
</object>

<object id=1709> 
<name>call_user_method_array</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Вызывает метод объекта с массивом параметров [устаревшее]</short-description>
<description>mixed call_user_method_array ( string $method_name , object &$obj , array $params ) Внимание 
 Функция call_user_method_array() устарела с выходом 4.1.0. </description>
<parameters>method_name - Имя вызываемого метода. 
obj - Объект (object), содержащий вызываемый метод method_name. 
params - Массив параметров. </parameters>
<output></output>
<errors></errors>
<example><?php
call_user_func_array(array($obj, $method_name), $params);
call_user_func_array(array(&$obj, $method_name), $params); // PHP 4
?></example>
<example_result></example_result>
</object>

<object id=1710> 
<name>chunk_split</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Разбивает строку на фрагменты</short-description>
<description>string chunk_split ( string $body [, int $chunklen = 76 [, string $end = "\r\n" ]] ) 
 Функция используется для разбиения строки на фрагменты, например, для приведения результата функции base64_encode() в соответствие с требованиями RFC 2045. Она вставляет строку end после каждых chunklen символов. </description>
<parameters>body - Разбиваемая строка. 
chunklen - Длина фрагмента. 
end - Последовательность символов, используемая в качестве конца строки. </parameters>
<output>Возвращает преобразованную строку. </output>
<errors></errors>
<example><?php
// форматирование данных в соответствии с RFC 2045
$new_string = chunk_split(base64_encode($data));
?></example>
<example_result></example_result>
</object>

<object id=1711> 
<name>yp_err_string</name>
<versions>(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5)</versions>
<short-description>Returns the error string associated with the given error code</short-description>
<description>string yp_err_string ( int $errorcode ) 
 Returns the error message associated with the given error code. Useful to indicate what exactly went wrong. </description>
<parameters>errorcode - The error code. </parameters>
<output>Returns the error message, as a string. </output>
<errors></errors>
<example><?php
echo "Error: " . yp_err_string(yp_errno());
?></example>
<example_result></example_result>
</object>

<object id=1712> 
<name>imap_getacl</name>
<versions>(PHP 5)</versions>
<short-description>Gets the ACL for a given mailbox</short-description>
<description>array imap_getacl ( resource $imap_stream , string $mailbox ) 
 Gets the ACL for a given mailbox. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
mailbox - The mailbox name, see imap_open() for more information </parameters>
<output>Returns an associative array of "folder" => "acl" pairs. </output>
<errors></errors>
<example><?php
print_r(imap_getacl($conn_id, 'user.joecool'));
?></example>
<example_result>
 
Array
(
    [asubfolder] => lrswipcda
    [anothersubfolder] => lrswipcda
)
</example_result>
</object>

<object id=1713> 
<name>grapheme_substr</name>
<versions>(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)</versions>
<short-description>Return part of a string</short-description>
<description>int grapheme_substr ( string $string , int $start [, int $length ] ) 
 Return part of a string </description>
<parameters>string - The input string. Must be valid UTF-8. 
start - Start position in default grapheme units. If $start is non-negative, the returned string will start at the $start&#039;th position in $string, counting from zero. If $start is negative, the returned string will start at the $start&#039;th grapheme unit from the end of string. 
length - Length in grapheme units. If $length is given and is positive, the string returned will contain at most $length grapheme units beginning from $start (depending on the length of string). If $length is given and is negative, then that many grapheme units will be omitted from the end of string (after the start position has been calculated when a start is negative). If $start denotes a position beyond this truncation, FALSE will be returned. </parameters>
<output>Returns the extracted part of $string. </output>
<errors></errors>
<example><?php
$char_a_ring_nfd = "a\xCC\x8A";  // 'LATIN SMALL LETTER A WITH RING ABOVE' (U+00E5) normalization form "D"
$char_o_diaeresis_nfd = "o\xCC\x88"; // 'LATIN SMALL LETTER O WITH DIAERESIS' (U+00F6) normalization form "D"
print urlencode(grapheme_substr( "ao" . $char_a_ring_nfd . "bc" . $char_o_diaeresis_nfd . "O", 2, -1 ));
?></example>
<example_result>
 
a%CC%8Abco%CC%88
</example_result>
</object>

<object id=1714> 
<name>curl_multi_init</name>
<versions>(PHP 5)</versions>
<short-description>Создает набор cURL-дескрипторов</short-description>
<description>resource curl_multi_init ( void ) 
 Позволяет параллельную обработку множества cURL-дескрипторов. </description>
<parameters></parameters>
<output>Возвращает набор cURL-дескрипторов в случае успеха, или FALSE в случае неудачи. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=1715> 
<name>ncurses_attroff</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Turn off the given attributes</short-description>
<description>int ncurses_attroff ( int $attributes ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>attributes - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1716> 
<name>set_exception_handler</name>
<versions>(PHP 5)</versions>
<short-description>Задает пользовательский обработчик исключений </short-description>
<description>callback set_exception_handler ( callback $exception_handler ) 
 Задает обработчик по умолчанию для случаев, когда исключение выброшено вне блока try/catch. После вызова exception_handler выполнение будет остановлено. </description>
<parameters>exception_handler - Имя функции, которая будет вызываться каждый раз, когда выбрасывается неперехватываемое исключение. Эта функция должна быть определена до вызова set_exception_handler(). Функция-обработчик должна принимать один аргумент - объект, представляющий выброшенное исключение. </parameters>
<output>Возвращает имя предыдущего заданного обработчика или NULL в случае ошибки. Если предыдущих обработчиков определено не было, то также возвращается NULL. Если в качестве аргумента передан NULL, обработчик вернется к изначальному состоянию и будет возвращено значение TRUE. </output>
<errors></errors>
<example><?php
function exception_handler($exception) {
  echo "Неперехватываемое исключение: " , $exception->getMessage(), "\n";
}
set_exception_handler('exception_handler');
throw new Exception('Неперехватываемое исключение');
echo "Не выполнено\n";
?></example>
<example_result></example_result>
</object>

<object id=1717> 
<name>pg_lo_read</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Читает данные большого объекта</short-description>
<description>string pg_lo_read ( resource $large_object [, int $len = 8192 ] ) 
 pg_lo_read() читает len байт большого объекта и возвращает их в виде строки. 
 Операции с использованием интерфейса больших объектов необходимо заключать в блок транзакции. 
 Замечание: 
 Прежнее название функции: pg_loread(). </description>
<parameters>large_object - Ресурс большого объекта (LOB) PostgreSQL, возвращаемый функцией pg_lo_open(). 
len - Необязательный аргумент. Количество байт, которые необходимо прочитать. </parameters>
<output>Строка(string), содержащая len байт большого объекта, либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
   $doc_oid = 189762345;
   $database = pg_connect("dbname=jacarta");
   pg_query($database, "begin");
   $handle = pg_lo_open($database, $doc_oid, "r");
   $data = pg_lo_read($handle, 50000);
   pg_query($database, "commit");
   echo $data;
?></example>
<example_result></example_result>
</object>

<object id=1718> 
<name>system</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выполняет внешнюю программу и отображает её вывод</short-description>
<description>string system ( string $command [, int &$return_var ] ) 
 system() похожа на C-версию этой функции в том, что она выполняет указанную команду command и выводит её результат. 
 Вызов функции system() также пытается автоматически очистить буфер вывода веб-сервера после каждой строки вывода, если PHP работает как модуль сервера. 
 Если вам нужно выполнить команду и получить все данные из команды непосредственно без каких-либо препятствий, используйте функцию passthru(). </description>
<parameters>command - Команда, которая будет выполнена. 
return_var - Если есть аргумент return_var, то код возврата выполняемой команды будет записан в эту переменную. </parameters>
<output>Возвращает последнюю строку вывода команды в случае успеха, и FALSE - в случае неудачи. </output>
<errors></errors>
<example><?php
echo '<pre>';
// Выводит весь результат шелл-команды "ls", и возвращает 
// последнюю строку вывода в переменной $last_line. Сохраняет код возврата
// шелл-команды в $retval.
$last_line = system('ls', $retval);
// Выводим дополнительную информацию
echo '
</pre>
<hr />Последняя строка вывода: ' . $last_line . '
<hr />Код возврата: ' . $retval;
?></example>
<example_result></example_result>
</object>

<object id=1719> 
<name>fbsql_free_result</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Free result memory</short-description>
<description>bool fbsql_free_result ( resource $result ) 
 Frees all memory associated with the given result identifier. 
 fbsql_free_result() only needs to be called if you are concerned about how much memory is being used for queries that return large result sets. All associated result memory is automatically freed at the end of the script&#039;s execution. </description>
<parameters>result - Идентификатор результата запроса, полученный изfbsql_query() илиfbsql_db_query().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1720> 
<name>mt_getrandmax</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Показывает максимально возможное значение случайного числа</short-description>
<description>int mt_getrandmax ( void ) 
 Возвращает максимальное значение, которое может быть получено при вызове mt_rand(). </description>
<parameters></parameters>
<output>Возвращает максимальное случайное значение, возвращаемое mt_rand() </output>
<errors></errors>
<example><?php
function randomFloat($min = 0, $max = 1) {
    return $min + mt_rand() / mt_getrandmax() * ($max - $min);
}
var_dump(randomFloat());
var_dump(randomFloat(2, 20));
?></example>
<example_result>
 
float(0.91601131712832)
float(16.511210331931)
</example_result>
</object>

<object id=1721> 
<name>join</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним implode()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1722> 
<name>com_get_active_object</name>
<versions>(PHP 5)</versions>
<short-description>Returns a handle to an already running instance of a COM object</short-description>
<description>variant com_get_active_object ( string $progid [, int $code_page ] ) 
 com_get_active_object() is similar to creating a new instance of a COM object, except that it will only return an object to your script if the object is already running. OLE applications use something known as the Running Object Table to allow well-known applications to be launched only once; this function exposes the COM library function GetActiveObject() to get a handle on a running instance. </description>
<parameters>progid - progid must be either the ProgID or CLSID for the object that you want to access (for example Word.Application). 
code_page - Acts in precisely the same way that it does for the COM class. </parameters>
<output>If the requested object is running, it will be returned to your script just like any other COM object. </output>
<errors>There are a variety of reasons why this function might fail, the most common being that the object is not already running. In that situation, the exception error code will be MK_E_UNAVAILABLE; you can use the getCode method of the exception object to check the exception code. </errors>
<example></example>
<example_result></example_result>
</object>

<object id=1723> 
<name>pspell_config_mode</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Изменяет режим количества возвращаемых вариантов исправления</short-description>
<description>bool pspell_config_mode ( int $dictionary_link , int $mode ) 
 pspell_config_mode() должна быть использована для конфигурации до вызова pspell_new_config(). Эта функция определяет, сколько вариантов исправления будет возвращать функция pspell_suggest(). </description>
<parameters>dictionary_link - 
mode - Параметр mode - это режим, в котором будет работать проверка орфографии. Доступно несколько режимов: PSPELL_FAST - Быстрый режим (наименьшее число вариантов исправления) PSPELL_NORMAL - Нормальный режим (больше вариантов исправления) PSPELL_BAD_SPELLERS - Медленный режим (много вариантов исправления) </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$pspell_config = pspell_config_create("en");
pspell_config_mode($pspell_config, PSPELL_FAST);
$pspell_link = pspell_new_config($pspell_config);
pspell_check($pspell_link, "thecat");
?></example>
<example_result></example_result>
</object>

<object id=1724> 
<name>ncurses_clrtoeol</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Clear screen from current position to end of line </short-description>
<description>bool ncurses_clrtoeol ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1725> 
<name>PDF_fill_stroke</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Fill and stroke path</short-description>
<description>bool PDF_fill_stroke ( resource $p ) 
 Fills and strokes the current path with the current fill and stroke color. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1726> 
<name>ncurses_def_shell_mode</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Saves terminals (shell) mode</short-description>
<description>bool ncurses_def_shell_mode ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Returns FALSE on success, TRUE otherwise. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1727> 
<name>is_scalar</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Проверяет, является ли переменная скалярным значением </short-description>
<description>bool is_scalar ( mixed $var ) 
 Проверяет, является ли данная переменная скалярным значением. 
 Скалярными переменными - это переменные с типами integer, float, string и boolean. Типы array, object и resource не являются скалярными. 
 Замечание: 
 is_scalar() не считает переменные типа resource скалярными, так как ресурсы являются абстрактными типами данных, которые в настоящее время основаны на целом типе. Не стоит полагаться на данную деталь реализации, так как она может измениться. </description>
<parameters>var - Проверяемая переменная. </parameters>
<output>Возвращает TRUE, если var является скалярным значением, или FALSE в противном случае. </output>
<errors></errors>
<example><?php
function show_var($var) 
{    if (is_scalar($var)) {
        echo $var;
    } else {
        var_dump($var);
    }
}$pi = 3.1416;
$proteins = array("hemoglobin", "cytochrome c oxidase", "ferredoxin");
show_var($pi);
show_var($proteins)
?></example>
<example_result>
 
3.1416
array(3) {
  [0]=>
  string(10) "hemoglobin"
  [1]=>
  string(20) "cytochrome c oxidase"
  [2]=>
  string(10) "ferredoxin"
}
</example_result>
</object>

<object id=1728> 
<name>xml_parser_create_ns</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Создание XML анализатора с поддержкой пространств имен </short-description>
<description>resource xml_parser_create_ns ([ string $encoding [, string $separator = &#039;:&#039; ]] ) 
 xml_parser_create_ns() создает новый XML анализатор с поддержкой пространств имен и возвращает ссылающийся на него ресурс, который можно использовать в других XML функциях. </description>
<parameters>encoding - Необязательный аргумент encoding задает кодировку символов для ввода/вывода в PHP 4. Начиная с PHP 5, кодировка входных данных определяется автоматически, а encoding задает кодировку только для выводимых данных. В PHP 4 кодировка по умолчанию для выходных данных та же, что и входных. Если передается пустая строка, анализатор попытается определить кодировку, просматривая первые 3 или 4 байта. В PHP 5.0.0 и 5.0.1 кодировка по умолчанию ISO-8859-1. Для версий PHP 5.0.2 и выше - UTF-8. Список поддерживаемых кодировок: ISO-8859-1, UTF-8 и US-ASCII. 
separator - Если сообщить анализатору пространство имен, то параметры тэгов, передающиеся в различные обработчики будут состоять из пространства имен и локального имени, отделенных заданным в этом аргументе разделителем seperator. </parameters>
<output>Возвращает ресурс созданного XML анализатора. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1729> 
<name>xml_set_start_namespace_decl_handler</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Установка обработчика входа в пределы пространства имен </short-description>
<description>bool xml_set_start_namespace_decl_handler ( resource $parser , callback $handler ) 
 Задает обработчик события входа в пространство имен. То есть обработчик вызывается анализатор находит объявление пространства имен. Подобные объявления находятся в открывающих тэгах элементов. Этот обработчик вызывается до обработчика начала тэга. </description>
<parameters>parser - Ссылка на XML анализатор. 
handler - handler - строка содержащая имя функции, которая должна быть определена на момент вызова функции xml_parse() из анализатора parser. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1730> 
<name>pg_escape_bytea</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Экранирует спецсимволы в строке для вставки в поле типа bytea </short-description>
<description>string pg_escape_bytea ([ resource $connection ], string $data ) 
 pg_escape_bytea() экранирует спецсимволы в строке с данными типа bytea. Возвращает экранированную строку. 
 Замечание: 
 При выборке SQL функцией SELECT данных типа bytea PostgreSQL возвращает значения в восьмеричной системе счисления с префиксом &#039;\&#039; (такие как \032). Пользователю необходимо вручную преобразовывать их в двоичный формат. 
 Функция поддерживается PostgreSQL версии 7.2 и выше. Для версий 7.2.0 и 7.2.1 значения должны быть преобразованы к типу bytea, когда включена мультибайтовая поддержка. Тогда как INSERT INTO test_table (image)VALUES (&#039;$image_escaped&#039;::bytea); в PostgreSQL 7.2.2 и выше не требует каких-либо преобразований. Исключение составляет случай, когда клиентская (frontend) кодировка не соответствует серверной (backend). При этом возникает ошибка мультибайтового потока, и пользователь должен привести данные к типу bytea, чтобы ее избежать. </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). 
data - Строка, содержащая двоичные данные в виде текста, которые требуется поместить в поле типа bytea. </parameters>
<output>Возвращает строку, в которой экранированы все необходимые символы. </output>
<errors></errors>
<example><?php 
  // Подключение к базе данных
  $dbconn = pg_connect('dbname=foo');
  
  // Чтение бинарного файла
  $data = file_get_contents('image1.jpg');
  
  // Экранирование спецсимволов в строке с двоичными данными
  $escaped = pg_escape_bytea($data);
  
  // Вставка в таблицу базы данных
  pg_query("INSERT INTO gallery (name, data) VALUES ('Pine trees', '{$escaped}')");
?></example>
<example_result></example_result>
</object>

<object id=1731> 
<name>fdf_add_doc_javascript</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Adds javascript code to the FDF document</short-description>
<description>bool fdf_add_doc_javascript ( resource $fdf_document , string $script_name , string $script_code ) 
 Adds a script to the FDF, which Acrobat then adds to the doc-level scripts of a document, once the FDF is imported into it. </description>
<parameters>fdf_document - The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string(). 
script_name - The script name. 
script_code - The script code. It is strongly suggested to use \r for linebreaks within the script code. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$fdf = fdf_create();
fdf_add_doc_javascript($fdf, "PlusOne", "function PlusOne(x)\r{\r  return x+1;\r}\r");
fdf_save($fdf);
?></example>
<example_result>
 
%FDF-1.2
%âãÏÓ
1 0 obj
<<
/FDF << /JavaScript << /Doc [ (PlusOne)(function PlusOne\(x\)\r{\r  return x+1;\r}\r)] >> >>
>>
endobj
trailer
<<
/Root 1 0 R

>>
%%EOF
</example_result>
</object>

<object id=1732> 
<name>pg_connection_reset</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Сброс подключение (переподключение) </short-description>
<description>bool pg_connection_reset ( resource $connection ) 
 pg_connection_reset() сбрасывает подключение. Может быть использована для устранения ошибок. </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Could not connect");
  $dbconn2 = pg_connection_reset($dbconn);
  if ($dbconn2) {
      echo "reset successful\n";
  } else {
      echo "reset failed\n";
  }
?></example>
<example_result></example_result>
</object>

<object id=1733> 
<name>snmp3_getnext</name>
<versions>(PHP 5)</versions>
<short-description>Fetch the SNMP object which follows the given object id</short-description>
<description>string snmp3_getnext ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] ) 
 The snmp3_getnext() function is used to read the value of the SNMP object that follows the specified object_id. </description>
<parameters>host - The hostname of the SNMP agent (server). 
sec_name - the security name, usually some kind of username 
sec_level - the security level (noAuthNoPriv|authNoPriv|authPriv) 
auth_protocol - the authentication protocol (MD5 or SHA) 
auth_passphrase - the authentication pass phrase 
priv_protocol - the privacy protocol (DES or AES) 
priv_passphrase - the privacy pass phrase 
object_id - The SNMP object id. 
timeout - The number of microseconds until the first timeout. 
retries - The number of times to retry if timeouts occur. </parameters>
<output>Returns SNMP object value on success or FALSE on error. In case of an error, an E_WARNING message is shown. </output>
<errors></errors>
<example><?php
$nameOfSecondInterface = snmp3_getnext('localhost', 'james', 'authPriv', 'SHA', 'secret007', 'AES', 'secret007', 'IF-MIB::ifName.1');
?></example>
<example_result></example_result>
</object>

<object id=1734> 
<name>strcmp</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Бинарно-безопасное сравнение строк</short-description>
<description>int strcmp ( string $str1 , string $str2 ) 
 Эта функция учитывает регистр символов. </description>
<parameters>str1 - Первая строка. 
str2 - Вторая строка. </parameters>
<output>Возвращает отрицательное число, если str1 меньше, чем str2, положительное число, если str1 больше, чем str2, и 0 если строки равны. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1735> 
<name>mysql_get_proto_info</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Возвращает информацию о протоколе MySQL</short-description>
<description>int mysql_get_proto_info ([ resource $link_identifier ] ) 
 Возвращает информацию о протоколе MySQL. </description>
<parameters>link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Возвращает используемый протокол MySQL в случае успеха или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Ошибка соединения: ' . mysql_error());
}printf("Версия протокола MySQL: %s\n", mysql_get_proto_info());
?></example>
<example_result>
 
Версия протокола MySQL: 10
</example_result>
</object>

<object id=1736> 
<name>odbc_prepare</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Prepares a statement for execution</short-description>
<description>resource odbc_prepare ( resource $connection_id , string $query_string ) 
 Prepares a statement for execution. The result identifier can be used later to execute the statement with odbc_execute(). 
 Some databases (such as IBM DB2, MS SQL Server, and Oracle) support stored procedures that accept parameters of type IN, INOUT, and OUT as defined by the ODBC specification. However, the Unified ODBC driver currently only supports parameters of type IN to stored procedures. </description>
<parameters>connection_id - Идентификатор соединения ODBC,за подробностями обращайтесь к odbc_connect().
query_string - The query string statement being prepared. </parameters>
<output>Returns an ODBC result identifier if the SQL command was prepared successfully. Returns FALSE on error. </output>
<errors></errors>
<example>
 $success will only be TRUE if all three parameters to myproc are IN parameters: </example>
<example_result></example_result>
</object>

<object id=1737> 
<name>pg_trace</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Включает трассировку подключения PostgreSQL</short-description>
<description>bool pg_trace ( string $pathname [, string $mode = "w" [, resource $connection ]] ) 
 pg_trace() включает трассировку соединения с PostgreSQL сервером во внешний файл. Чтобы понимать содержимое таких файлов, необходимо хорошо разбираться во внутреннем устройстве клиент-серверного взаимодействия. 
 Для тех, кто не обладает подобными навыками, трассировка все же может оказаться полезной для поиска ошибок при отправке запросов на сервер. Например, можно выполнить команду grep &#039;^To backend&#039; trace.log и посмотреть, какие запросы реально отправлены на сервер. Дополнительную информацию можно почерпнуть из &raquo; документации PostgreSQL. </description>
<parameters>pathname - Полный путь и имя файла для записи журнала трассировки. Аналогично fopen(). 
pathname - Необязательный аргумент. Режим доступа к файлу. Аналогично fopen(). 
connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$pgsql_conn = pg_connect("dbname=mark host=localhost");
if ($pgsql_conn) {
   pg_trace('/tmp/trace.log', 'w', $pgsql_conn);
   pg_query("SELECT 1");
   pg_untrace($pgsql_conn);
   // Теперь /tmp/trace.log будет хранить информацию о взаимодействии с сервером
} else {
   print pg_last_error($pgsql_conn);
   exit;
}?></example>
<example_result></example_result>
</object>

<object id=1738> 
<name>spl_classes</name>
<versions>(PHP 5)</versions>
<short-description>Return available SPL classes</short-description>
<description>array spl_classes ( void ) 
 This function returns an array with the current available SPL classes. </description>
<parameters></parameters>
<output>Returns an array containing the currently available SPL classes. </output>
<errors></errors>
<example><?php
print_r(spl_classes());
?></example>
<example_result>
 
Array
(
    [ArrayObject] => ArrayObject
    [ArrayIterator] => ArrayIterator
    [CachingIterator] => CachingIterator
    [RecursiveCachingIterator] => RecursiveCachingIterator
    [DirectoryIterator] => DirectoryIterator
    [FilterIterator] => FilterIterator
    [LimitIterator] => LimitIterator
    [ParentIterator] => ParentIterator
    [RecursiveDirectoryIterator] => RecursiveDirectoryIterator
    [RecursiveIterator] => RecursiveIterator
    [RecursiveIteratorIterator] => RecursiveIteratorIterator
    [SeekableIterator] => SeekableIterator
    [SimpleXMLIterator] => SimpleXMLIterator
)
</example_result>
</object>

<object id=1739> 
<name>curl_errno</name>
<versions>(PHP 4 >= 4.0.3, PHP 5)</versions>
<short-description>Возвращает код последней ошибки</short-description>
<description>int curl_errno ( resource $ch ) 
 Возвращает код ошибки последней операции cURL. </description>
<parameters>ch - Дескриптор cURL, полученный из curl_init().</parameters>
<output>Возвращает номер ошибки или 0 (ноль), если ошибки не произошло. </output>
<errors></errors>
<example><?php
// Создаем дескриптор curl к несуществующему адресу
$ch = curl_init('http://404.php.net/');
// Запускаем
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_exec($ch);
// Проверяем наличие ошибки
if(curl_errno($ch))
{    echo 'Ошибка curl: ' . curl_error($ch);
}
// Закрываем дескриптор
curl_close($ch);
?></example>
<example_result></example_result>
</object>

<object id=1740> 
<name>session_save_path</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get and/or set the current session save path</short-description>
<description>string session_save_path ([ string $path ] ) 
 session_save_path() returns the path of the current directory used to save session data. </description>
<parameters>path - Session data path. If specified, the path to which data is saved will be changed. session_save_path() needs to be called before session_start() for that purpose. </parameters>
<output>Returns the path of the current directory used for data storage. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1741> 
<name>iconv_strlen</name>
<versions>(PHP 5)</versions>
<short-description>Возвращает количество символов в строке</short-description>
<description>int iconv_strlen ( string $str [, string $charset = ini_get("iconv.internal_encoding") ] ) 
 В отличие от strlen(), iconv_strlen() учитывает кодировку строки. Длина строки не обязательно будет соответствовать количеству байт в ней, так как в различных кодировках различные символы кодируются различным количеством байт, например, юникод может быть и двух-, и четырёхбайтным. </description>
<parameters>str - Строка. 
charset - Если параметр charset опущен, предполагается, что кодировка строки str эквивалентна значению iconv.internal_encoding. </parameters>
<output>Возвращает количество символов в str как целое число. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1742> 
<name>msession_randstr</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)</versions>
<short-description>Get random string</short-description>
<description>string msession_randstr ( int $param ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1743> 
<name>imageinterlace</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Enable or disable interlace</short-description>
<description>int imageinterlace ( resource $image [, int $interlace = 0 ] ) 
 imageinterlace() turns the interlace bit on or off. 
 If the interlace bit is set and the image is used as a JPEG image, the image is created as a progressive JPEG. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
interlace - If non-zero, the image will be interlaced, else the interlace bit is turned off. </parameters>
<output>Returns 1 if the interlace bit is set for the image, 0 otherwise. </output>
<errors></errors>
<example><?php
// Create an image instance
$im = imagecreatefromgif('php.gif');
// Enable interlancing
imageinterlace($im, true);
// Save the interlaced image
imagegif($im, './php_interlaced.gif');
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=1744> 
<name>array_key_exists</name>
<versions>(PHP 4 >= 4.0.7, PHP 5)</versions>
<short-description>Проверяет, присутствует ли в массиве указанный ключ или индекс</short-description>
<description>bool array_key_exists ( mixed $key , array $search ) 
 Функция array_key_exists() возвращает TRUE, если в массиве присутствует указанный ключ key. Параметр key может быть любым значением, которое подходит для индекса массива. </description>
<parameters>key - Проверяемое значение 
search - Массив с проверяемыми ключами </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$search_array = array('first' => 1, 'second' => 4);
if (array_key_exists('first', $search_array)) {
    echo "The 'first' element is in the array";
}?></example>
<example_result></example_result>
</object>

<object id=1745> 
<name>udm_cat_list</name>
<versions>(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)</versions>
<short-description>Get all the categories on the same level with the current one</short-description>
<description>array udm_cat_list ( resource $agent , string $category ) 
 Gets all the categories on the same level with the current one. 
 The function can be useful for developing categories tree browser. </description>
<parameters>agent - A link to Agent, received after call to udm_alloc_agent(). 
category - </parameters>
<output>Returns an array listing all categories of the same level as the current category in the categories tree. </output>
<errors></errors>
<example><?php
 $cat_list_arr = udm_cat_list($udm_agent, $cat);
 $cat_list = '';
 for ($i=0; $i<count($cat_list_arr); $i+=2) {
    $path = $cat_list_arr[$i];
    $name = $cat_list_arr[$i+1];
    $cat_list .= "<a href=\"$_SERVER[PHP_SELF]?cat=$path\">$name</a><br />";
 }
?> Смотрите также 
 udm_cat_path() - Get the path to the current category udm_api_version udm_cat_path mnoGoSearch Функции PHP Manual</example>
<example_result></example_result>
</object>

<object id=1746> 
<name>sqlite_query</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Выполняет запрос к базе данных и возвращает идентификатор результата</short-description>
<description>resource sqlite_query ( resource $dbhandle , string $query [, int $result_type = SQLITE_BOTH [, string &$error_msg ]] ) resource sqlite_query ( string $query , resource $dbhandle [, int $result_type = SQLITE_BOTH [, string &$error_msg ]] )</description>
<parameters>dbhandle - Ресурс базы данных SQLite, полученный из функции sqlite_open() в случае использования процедурного подхода. Этот параметр не требуется при использовании объектно-ориентированного подхода. 
query - Выполняемый запрос. 
result_type - Необязательный параметрresult_type принимает константу, определяющую, как будетиндексирован возвращаемый массив.При использовании SQLITE_ASSOC будет возвращенассоциативный массив, а при использовании SQLITE_NUM- числовой. SQLITE_BOTH вернет массив как сассоциативными, так и с числовыми индексами.Значением по умолчанию для этой функции являетсяSQLITE_BOTH.
error_msg - Указанная переменная будет заполнена в случае возникновения ошибки. Это особенно важно, так как ошибки синтаксиса SQL не возращаются функцией sqlite_last_error(). </parameters>
<output>Эта функция возвращает идентификатор результата запроса или FALSE в случае возникновения ошибки. Для запросов, возвращающих данные, этот идентификатор может использоваться в качестве аргумента таких функций как sqlite_fetch_array() и sqlite_seek(). </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1747> 
<name>msession_plugin</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)</versions>
<short-description>Call an escape function within the msession personality plugin</short-description>
<description>string msession_plugin ( string $session , string $val [, string $param ] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1748> 
<name>finfo_close</name>
<versions>(PHP >= 5.3.0, PECL fileinfo >= 0.1.0)</versions>
<short-description>Закрывает ресурс Fileinfo</short-description>
<description>bool finfo_close ( resource $finfo ) 
 Объектно-ориентированный стиль finfo::__destruct() ( void )</description>
<parameters>finfo - Ресурс Fileinfo, открытый функцией finfo_open(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1749> 
<name>pg_field_name</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает наименование поля</short-description>
<description>string pg_field_name ( resource $result , int $field_number ) 
 pg_field_name() возвращает имя поля результата запроса result с порядковым номером field_number. Нумерация полей начинается с нуля. 
 Замечание: 
 Прежнее название функции: pg_fieldname(). </description>
<parameters>result - Ресурс результата запроса PostgreSQL, возвращаемый функциями pg_query(), pg_query_params() или pg_execute() (в числе прочих). 
field_number - Номер поля, начиная с нуля. </parameters>
<output>Наименование поля, либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Невозможно соединиться с базой");
  $res = pg_query($dbconn, "select * from authors where author = 'Orwell'");
  $i = pg_num_fields($res);
  for ($j = 0; $j < $i; $j++) {
      echo "column $j\n";
      $fieldname = pg_field_name($res, $j);
      echo "fieldname: $fieldname\n";
      echo "printed length: " . pg_field_prtlen($res, $fieldname) . " characters\n";
      echo "storage length: " . pg_field_size($res, $j) . " bytes\n";
      echo "field type: " . pg_field_type($res, $j) . " \n\n";
  }
?></example>
<example_result>
 
column 0
fieldname: author
printed length: 6 characters
storage length: -1 bytes
field type: varchar 

column 1
fieldname: year
printed length: 4 characters
storage length: 2 bytes
field type: int2 

column 2
fieldname: title
printed length: 24 characters
storage length: -1 bytes
field type: varchar 
</example_result>
</object>

<object id=1750> 
<name>XMLWriter::flush</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 1.0.0)</versions>
<short-description>Сбросить текущий буфер</short-description>
<description>mixed XMLWriter::flush ([ bool $empty = true ] ) 
 Процедурный стиль mixed xmlwriter_flush ( resource $xmlwriter [, bool $empty = true ] )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
empty - Освободить ли буфер или нет. По умолчанию TRUE. </parameters>
<output>Если XML создается в памяти, то эта функция вернет сгенерированный буфер XML, иначе при использовании URI эта функция запишет буфер и возвратит количество записанных байт. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1751> 
<name>mssql_free_statement</name>
<versions>(PHP 4 >= 4.3.2, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Free statement memory</short-description>
<description>bool mssql_free_statement ( resource $stmt ) 
 mssql_free_statement() only needs to be called if you are worried about using too much memory while your script is running. All statement memory will automatically be freed when the script ends. You may call mssql_free_statement() with the statement identifier as an argument and the associated statement memory will be freed. </description>
<parameters>stmt - Statement resource, obtained with mssql_init(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Create a new statement
$stmt = mssql_init('test');
// Bind values here and execute the statement
// once we're done, we clear it from the memory
// using mssql_free_statement like so:
mssql_free_statement($stmt);
?></example>
<example_result></example_result>
</object>

<object id=1752> 
<name>sybase_get_last_message</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Returns the last message from the server</short-description>
<description>string sybase_get_last_message ( void ) 
 sybase_get_last_message() returns the last message reported by the server. </description>
<parameters></parameters>
<output>Returns the message as a string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1753> 
<name>swf_scale</name>
<versions>(PHP 4)</versions>
<short-description>Scale the current transformation</short-description>
<description>void swf_scale ( float $x , float $y , float $z ) 
 The swf_scale() scales curve coordinates by the given value. </description>
<parameters>x - x scale factor. 
y - y scale factor. 
z - z scale factor. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1754> 
<name>virtual</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выполняет подзапрос Apache</short-description>
<description>bool virtual ( string $filename ) 
 Функция virtual() специфична для сервера Apache и является эквивалентом конструкции <!--#include virtual...-->, используемой в mod_include. Данная функция выполняет подзапрос Apache. Это бывает полезным в тех случаях, когда необходимо включить в свой скрипт результат выполнения других CGI-скриптов или файлов .shtml, а также добавления всего, что должно быть обработано Apache. Обратите внимание, что CGI-скрипты должны отдавать корректные CGI-заголовки. Как минимум, CGI-скрипт должен создавать заголовок Content-Type. 
 Перед тем, как осуществится выполнение подзапроса, все буферы сбрасываются и выдаются в браузер, при этом отсылаются заголовки, помещенные в буфер. 
 Эта функция поддерживается только если PHPустановлен в качестве модуля Apache. </description>
<parameters>filename - Имя файла, для которого будет выполнен подзапрос. </parameters>
<output>Результат выполнения подзапроса в случае успеха или FALSE в случае ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1755> 
<name>ovrimos_exec</name>
<versions>(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)</versions>
<short-description>Executes an SQL statement</short-description>
<description>int ovrimos_exec ( int $connection_id , string $query ) 
 Executes an SQL statement (query or update) and returns a result identifier. </description>
<parameters>connection_id - The Ovrimos connection identifier, returned by ovrimos_connect(). 
query - The SQL statement. Evidently, it should not contain parameters. Use ovrimos_prepare() for prepared statements. </parameters>
<output>Returns the result identifier as an integer, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1756> 
<name>msession_list</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)</versions>
<short-description>List all sessions</short-description>
<description>array msession_list ( void ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1757> 
<name>variant_date_to_timestamp</name>
<versions>(PHP 5)</versions>
<short-description>Converts a variant date/time value to Unix timestamp</short-description>
<description>int variant_date_to_timestamp ( variant $variant ) 
 Converts variant from a VT_DATE (or similar) value into a Unix timestamp. This allows easier interopability between the Unix-ish parts of PHP and COM. </description>
<parameters>variant - The variant. </parameters>
<output>Returns a unix timestamp. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1758> 
<name>hw_Close</name>
<versions>(PHP 4)</versions>
<short-description>Closes the Hyperwave connection</short-description>
<description>bool hw_close ( int $connection ) 
 Closes down the connection to a Hyperwave server. </description>
<parameters>connection - The connection identifier. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1759> 
<name>ftp_nb_get</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Скачивает файл с FTP-сервера в асинхронном режиме и сохраняет его в локальный файл</short-description>
<description>int ftp_nb_get ( resource $ftp_stream , string $local_file , string $remote_file , int $mode [, int $resumepos = 0 ] ) 
 ftp_nb_get() скачивает удалённый файл с FTP-сервера и сохраняет его в локальный файл. 
 Разница между этой функцией и ftp_get() заключается в том, что эта функция получает файл асинхронно, так что ваша программа может совершать другие операции, пока файл cкачивается. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером. 
local_file - Путь к локальному файлу (файл будет перезаписан, если уже существует). 
remote_file - Путь к удалённому файлу. 
mode - Режим передачи. Должен быть либо FTP_ASCII, либо FTP_BINARY. 
resumepos - Позиция начала загрузки в удаленном файле.</parameters>
<output>Возвращает FTP_FAILED, FTP_FINISHED или FTP_MOREDATA. </output>
<errors></errors>
<example><?php
// Начало скачивания
$ret = ftp_nb_get($my_connection, "test", "README", FTP_BINARY);
while ($ret == FTP_MOREDATA) {
   
   // производим какие-то действия ...
   echo ".";
   // продолжение скачивания ...
   $ret = ftp_nb_continue($my_connection);
}if ($ret != FTP_FINISHED) {
   echo "При скачивании файла произошла ошибка...";
   exit(1);
}?></example>
<example_result></example_result>
</object>

<object id=1760> 
<name>hw_dummy</name>
<versions>(PHP 4)</versions>
<short-description>Hyperwave dummy function</short-description>
<description>string hw_dummy ( int $link , int $id , int $msgid ) 
 Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1761> 
<name>pg_port</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает номер порта, соответствующий заданному соединению </short-description>
<description>int pg_port ([ resource $connection ] ) 
 pg_port() возвращает номер порта, соответствующего заданному соединению PostgreSQL connection. </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). </parameters>
<output>Число типа int соответствующее номеру порта, либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$pgsql_conn = pg_connect("dbname=mark host=localhost");
if ($pgsql_conn) {
   print "Успешно соединено с портом : " . pg_port($pgsql_conn) . "<br/>\n";
} else {
   print pg_last_error($pgsql_conn);
   exit;
}?></example>
<example_result></example_result>
</object>

<object id=1762> 
<name>is_resource</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Проверяет, является ли переменная ресурсом </short-description>
<description>bool is_resource ( mixed $var ) 
 Проверяет, является ли данная переменная ресурсом. </description>
<parameters>var - Проверяемая переменная. </parameters>
<output>Возвращает TRUE, если var является ресурсом, или FALSE в противном случае. </output>
<errors></errors>
<example><?php
$db_link = @mysql_connect('localhost', 'mysql_user', 'mysql_pass');
if (!is_resource($db_link)) {
    die('Ошибка соединения : ' . mysql_error());
}
?></example>
<example_result></example_result>
</object>

<object id=1763> 
<name>is_uploaded_file</name>
<versions>(PHP 4 >= 4.0.3, PHP 5)</versions>
<short-description>Определяет, был ли файл загружен при помощи HTTP POST</short-description>
<description>bool is_uploaded_file ( string $filename ) 
 Возвращает TRUE, если файл filename был загружен при помощи HTTP POST. Это полезно для удостоверения того, что злонамеренный пользователь не пытается обмануть скрипт так, чтобы он работал с файлами, с которыми работать не должен - к примеру, /etc/passwd. 
 Такие проверки особенно полезны, если существует вероятность того, что операции над файлом могут показать его содержимое пользователю или даже другим пользователям той же системы. 
 Для правильной работы, функции is_uploaded_file() нужен аргумент вида $_FILES['userfile']['tmp_name'], - имя закачиваемого файла на клиентской машине $_FILES['userfile']['name'] не подходит. </description>
<parameters>filename - Имя проверяемого файла. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
if (is_uploaded_file($_FILES['userfile']['tmp_name'])) {
   echo "Файл ". $_FILES['userfile']['name'] ." успешно загружен.\n";
   echo "Отображаем содержимое\n";
   readfile($_FILES['userfile']['tmp_name']);
} else {
   echo "Возможная атака с участием загрузки файла: ";
   echo "файл '". $_FILES['userfile']['tmp_name'] . "'.";
}
?></example>
<example_result></example_result>
</object>

<object id=1764> 
<name>nl_langinfo</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Возвращает информацию о языке и локали</short-description>
<description>string nl_langinfo ( int $item ) 
 nl_langinfo() используется для доступа к отдельным элементам различных категорий текущей локали. В отличии от localeconv(), возвращающей все элементы, nl_langinfo() позволяет выбрать отдельный элемент. </description>
<parameters>item - item может быть целым числом или соответствующей константой. Ниже приведены возможные константы для item и их описания. Для некоторых локалей отдельные константы могут быть неопределены. Константы nl_langinfo Константа Описание Константы в категории LC_TIME ABDAY_(1-7) Сокращенное название n-го дня недели. DAY_(1-7) Полное название n-го дня недели (DAY_1 соответствует воскресенью). ABMON_(1-12) Сокращенное название n-го месяца. MON_(1-12) Полное название n-го месяца. AM_STR Обозначение "до полудня". PM_STR Обозначение "после полудня". D_T_FMT Строка, которую можно использовать в качестве формата с функцией strftime() для вывода даты и времени. D_FMT Строка, которую можно использовать в качестве формата с функцией strftime() для вывода даты. T_FMT Строка, которую можно использовать в качестве формата с функцией strftime() для вывода времени. T_FMT_AMPM Строка, которую можно использовать в качестве формата с функцией strftime() для вывода времени в 12-часовом формате. ERA Эра ERA_YEAR Год в формате с эрой ERA_D_T_FMT Дата и время в формате с эрой (строка, которую можно использовать в качестве формата с функцией strftime()). ERA_D_FMT Дата в формате с эрой (строка, которую можно использовать в качестве формата с функцией strftime()). ERA_T_FMT Время в формате с эрой (строка, которую можно использовать в качестве формата с функцией strftime()). Константы в категории LC_MONETARY INT_CURR_SYMBOL Международное обозначение валюты. CURRENCY_SYMBOL Национальное обозначение валюты. CRNCYSTR Аналог CURRENCY_SYMBOL. MON_DECIMAL_POINT Символ десятичной точки. MON_THOUSANDS_SEP Разделитель тысяч (групп из 3 цифр). MON_GROUPING Аналогичен элементу "grouping". POSITIVE_SIGN Знак для положительных чисел. NEGATIVE_SIGN Знак для отрицательных чисел. INT_FRAC_DIGITS Количество знаков после запятой (международный формат). FRAC_DIGITS Количество знаков после запятой (национальный формат). P_CS_PRECEDES Возвращает 1, если CURRENCY_SYMBOL записывется перед положительным значением. P_SEP_BY_SPACE Возвращает 1, если CURRENCY_SYMBOL отделяется от положительного значения пробелом. N_CS_PRECEDES Возвращает 1, если CURRENCY_SYMBOL записывется перед отрицательным значением. N_SEP_BY_SPACE Возвращает 1, если CURRENCY_SYMBOL отделяется от отрицательного значения пробелом. P_SIGN_POSN Возвращает 0, если число и обозначение валюты CURRENCY_SYMBOL заключаются в скобки Возвращает 1, если знак записывается перед числом и обозначением валюты CURRENCY_SYMBOL Возвращает 2, если знак записывается после числа и обозначения валюты CURRENCY_SYMBOL Возвращает 3, если знак записывается перед обозначением валюты CURRENCY_SYMBOL Возвращает 4, если знак записывается после обозначения валюты CURRENCY_SYMBOL N_SIGN_POSN Константы в категории LC_NUMERIC DECIMAL_POINT Символ десятичной точки. RADIXCHAR Аналогично DECIMAL_POINT. THOUSANDS_SEP Разделитель тысяч (групп из 3 цифр). THOUSEP Аналогично THOUSANDS_SEP. GROUPING Константы в категории LC_MESSAGES YESEXPR Регулярное выражение, при совпадении с которым строка рассматривается как положительный ответ ("yes"). NOEXPR Регулярное выражение, при совпадении с которым строка рассматривается как отрицательный ответ ("no"). YESSTR Слово "да" ("yes"). NOSTR Слово "нет" ("no"). Константы в категории LC_CTYPE CODESET Возвращает строку с именем текущей кодировки. </parameters>
<output>Возвращает элемент в виде строки, или FALSE если item передан неправильно. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1765> 
<name>openssl_x509_export</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Exports a certificate as a string</short-description>
<description>bool openssl_x509_export ( mixed $x509 , string &$output [, bool $notext = TRUE ] ) 
 openssl_x509_export() stores x509 into a string named by output in a PEM encoded format. </description>
<parameters>x509 - Для списка корректных значений смотрите Параметры ключей/сертификатов. 
output - On success, this will hold the PEM. 
notext - Необязательный параметр notext влияет на детализацию сообщений вывода; если он установлен в FALSE,то в вывод добавляется дополнительная человекочитаемая информация. Значением по умолчаниюnotext является TRUE.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1766> 
<name>xml_set_external_entity_ref_handler</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Установка обработчика внешних сущностей </short-description>
<description>bool xml_set_external_entity_ref_handler ( resource $parser , callback $handler ) 
 Задает функцию обработчик внешних сущностей для XML анализатора parser. </description>
<parameters>parser - Ссылка на XML анализатор. 
handler - handler - строка содержащая имя функции, которая должна быть определена на момент вызова функции xml_parse() из анализатора parser. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1767> 
<name>acos</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Арккосинус</short-description>
<description>float acos ( float $arg ) 
 Возвращает арккосинус числа arg в радианах. acos() - обратная тригонометрическая функция к cos(), т.е. a==cos(acos(a)) для каждого значения а, входящего в область значений функции acos(). </description>
<parameters>arg - Аргумент функции </parameters>
<output>Арккосинус числа arg в радианах. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1768> 
<name>ftp_mkdir</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Создаёт директорию</short-description>
<description>string ftp_mkdir ( resource $ftp_stream , string $directory ) 
 Создает директорию directory на FTP сервере. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP сервером. 
directory - Имя создаваемой директории. </parameters>
<output>Возвращает имя только что созданной директории в случае успеха или FALSE в противном случае. </output>
<errors></errors>
<example><?php
$dir = 'www';
// установка соединения
$conn_id = ftp_connect($ftp_server);
// вход с именем пользователя и паролем
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);
// попытка создания директории $dir
if (ftp_mkdir($conn_id, $dir)) {
 echo "Создана директория $dir\n";
} else {
 echo "Не удалось создать директорию $dir\n";
}
// закрытие соединения
ftp_close($conn_id);
?></example>
<example_result></example_result>
</object>

<object id=1769> 
<name>gethostbyname</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает адрес IPv4, соответствующий переданному имени узла интернета </short-description>
<description>string gethostbyname ( string $hostname ) 
 Возвращает адрес IPv4 по имени узла hostname. </description>
<parameters>hostname - Имя узла. </parameters>
<output>Возвращает адрес IPv4 или строку, содержащую неизмененный hostname при ошибке. </output>
<errors></errors>
<example><?php
$ip = gethostbyname('www.example.com');
echo $ip;
?></example>
<example_result></example_result>
</object>

<object id=1770> 
<name>compact</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Создает массив, содержащий названия переменных и их значения</short-description>
<description>array compact ( mixed $varname [, mixed $... ] ) 
 Создает массив, содержащий переменные и их значения. 
 Для каждого из переданного параметров, функция compact() ищет переменную с указанным именем в текущей таблице символов и добавляет их в выводимый массив так, что имя переменной становится ключом, а содержимое переменной становится значением этого ключа. Короче говоря, она обратна функции extract(). 
 Любые неустановленные строки будут просто пропущены. </description>
<parameters>varname - compact() принимает неограниченное количество параметров. Любой из параметров может быть либо строкой, содержащей название переменной, либо массивом названий переменных. Массив может содержать вложенные массивы названий переменных; функция compact() обрабатывает их рекурсивно. </parameters>
<output>Возвращает массив со всеми переменными, добавленными в него. </output>
<errors></errors>
<example><?php
$city  = "San Francisco";
$state = "CA";
$event = "SIGGRAPH";
$location_vars = array("city", "state");
$result = compact("event", "nothing_here", $location_vars);
print_r($result);
?></example>
<example_result>
 
Array
(
    [event] => SIGGRAPH
    [city] => San Francisco
    [state] => CA
)
</example_result>
</object>

<object id=1771> 
<name>posix_uname</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get system name</short-description>
<description>array posix_uname ( void ) 
 Gets information about the system. 
 Posix requires that assumptions must not be made about the format of the values, e.g. the assumption that a release may contain three digits or anything else returned by this function. </description>
<parameters></parameters>
<output>Returns a hash of strings with information about the system. The indices of the hash are sysname - operating system name (e.g. Linux) nodename - system name (e.g. valiant) release - operating system release (e.g. 2.2.10) version - operating system version (e.g. #4 Tue Jul 20 17:01:36 MEST 1999) machine - system architecture (e.g. i586) domainname - DNS domainname (e.g. example.com) </output>
<errors></errors>
<example><?php
$uname=posix_uname();
print_r($uname);
?></example>
<example_result>
 
Array
(
    [sysname] => Linux
    [nodename] => funbox
    [release] => 2.6.20-15-server
    [version] => #2 SMP Sun Apr 15 07:41:34 UTC 2007
    [machine] => i686
)
</example_result>
</object>

<object id=1772> 
<name>mb_list_encodings</name>
<versions>(PHP 5)</versions>
<short-description>Возвращает массив всех поддерживаемых кодировок</short-description>
<description>array mb_list_encodings ( void ) 
 Возвращает массив, содержащий все поддерживаемые кодировки. </description>
<parameters></parameters>
<output>Возвращает индексный массив. </output>
<errors>Эта функция не порождает каких-либо ошибок. </errors>
<example><?php
print_r(mb_list_encodings());
?></example>
<example_result>
 
Array
(
    [0] => pass
    [1] => auto
    [2] => wchar
    [3] => byte2be
    [4] => byte2le
    [5] => byte4be
    [6] => byte4le
    [7] => BASE64
    [8] => UUENCODE
    [9] => HTML-ENTITIES
    [10] => Quoted-Printable
    [11] => 7bit
    [12] => 8bit
    [13] => UCS-4
    [14] => UCS-4BE
    [15] => UCS-4LE
    [16] => UCS-2
    [17] => UCS-2BE
    [18] => UCS-2LE
    [19] => UTF-32
    [20] => UTF-32BE
    [21] => UTF-32LE
    [22] => UTF-16
    [23] => UTF-16BE
    [24] => UTF-16LE
    [25] => UTF-8
    [26] => UTF-7
    [27] => UTF7-IMAP
    [28] => ASCII
    [29] => EUC-JP
    [30] => SJIS
    [31] => eucJP-win
    [32] => SJIS-win
    [33] => JIS
    [34] => ISO-2022-JP
    [35] => Windows-1252
    [36] => ISO-8859-1
    [37] => ISO-8859-2
    [38] => ISO-8859-3
    [39] => ISO-8859-4
    [40] => ISO-8859-5
    [41] => ISO-8859-6
    [42] => ISO-8859-7
    [43] => ISO-8859-8
    [44] => ISO-8859-9
    [45] => ISO-8859-10
    [46] => ISO-8859-13
    [47] => ISO-8859-14
    [48] => ISO-8859-15
    [49] => EUC-CN
    [50] => CP936
    [51] => HZ
    [52] => EUC-TW
    [53] => BIG-5
    [54] => EUC-KR
    [55] => UHC
    [56] => ISO-2022-KR
    [57] => Windows-1251
    [58] => CP866
    [59] => KOI8-R
)
</example_result>
</object>

<object id=1773> 
<name>passthru</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выполняет внешнюю программу и отображает необработанный вывод</short-description>
<description>void passthru ( string $command [, int &$return_var ] ) 
 Функция passthru() похожа на функцию exec() в том, что она выполняет команду command. Эта функция должна быть использована вместо функции exec() или system() когда вывод команды Unix является двоичными данными, которые необходимо передать непосредственно в браузер. Стандартное использование этой функции - выполнить команду, такую, как утилиты pbmplus, которые выводят непосредственно поток изображения. Установив Content-type в image/gif и затем вызвав программу pbmplus для вывода gif-рисунка, вы можете создать PHP-скрипты, которые выводят изображения непосредственно в браузер. </description>
<parameters>command - Команда, которая будет выполнена. 
return_var - Если присутствует аргумент return_var, то код возврата Unix-команды будет помещён здесь. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1774> 
<name>strtotime</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Преобразует текстовое представление даты на английском языке в метку времени Unix</short-description>
<description>int strtotime ( string $time [, int $now = time() ] ) 
 Первым параметром функции должна быть строка с датой на английском языке, которая будет преобразована в метку времени Unix (количество секунд, прошедших с 1 января 00:00:00 UTC) относительно метки времени, переданной в now, или текущего времени, если аргумент now опущен. 
 Каждый параметр функции использует временную метку по умолчанию, пока она не указана в этом параметре напрямую. Будьте внимательны и не используйте различные временные метки в параметрах, если на то нет прямой необходимости. Обратите внимание на date_default_timezone_get() для задания временной зоны различными способами. </description>
<parameters>time - Строка даты/времени. Объяснение корректных форматов дано в Форматы даты и времени.
now - Временная метка, используемая в качестве базы для вычисления относительных дат. </parameters>
<output>Возвращает временную метку в случае успеха, иначе возвращается FALSE. До версии PHP 5.1.0 в случае ошибки эта функция возвращала -1. </output>
<errors>Каждый вызов к функциям даты/времени при неправильных настройках временной зоны сгенерирует ошибку уровня E_NOTICE,и/или ошибку уровня E_STRICT или E_WARNING при использовании системныхнастроек или переменной окружения TZ. Смотрите также date_default_timezone_set()</errors>
<example><?php
echo strtotime("now"), "\n";
echo strtotime("10 September 2000"), "\n";
echo strtotime("+1 day"), "\n";
echo strtotime("+1 week"), "\n";
echo strtotime("+1 week 2 days 4 hours 2 seconds"), "\n";
echo strtotime("next Thursday"), "\n";
echo strtotime("last Monday"), "\n";
?></example>
<example_result></example_result>
</object>

<object id=1775> 
<name>str_rot13</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Выполняет преобразование ROT13 над строкой</short-description>
<description>string str_rot13 ( string $str ) 
 Выполняет над строкой str преобразование ROT13 и возвращает полученную строку. 
 Преобразование ROT13 заключается в простом сдвиге каждой латинской буквы на 13 позиций в алфавите, остальные символы не изменяются. Обратное преобразование выполняется той же функцией, так как передача закодированной строки в качестве аргумента вернет ее оригинальную версию. </description>
<parameters>str - Входная строка. </parameters>
<output>Возвращает ROT13 версию переданной строки. </output>
<errors></errors>
<example><?php
echo str_rot13('PHP 4.3.0'); // CUC 4.3.0
?></example>
<example_result></example_result>
</object>

<object id=1776> 
<name>timezone_open</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Псевдоним DateTimeZone::__construct()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1777> 
<name>udm_close_stored</name>
<versions>(PHP 4 >= 4.2.0)</versions>
<short-description>Close connection to stored</short-description>
<description>int udm_close_stored ( resource $agent , int $link ) 
 Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1778> 
<name>stristr</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Регистро-независимый вариант функции strstr()</short-description>
<description>string stristr ( string $haystack , mixed $needle [, bool $before_needle = false ] ) 
 Возвращает всю строку haystack начиная с первого вхождения needle. </description>
<parameters>haystack - Строка, в которой производится поиск 
needle - Если needle не является строкой, он приводится к целому и трактуется как код символа. 
before_needle - Если установлен в TRUE, stristr() возвращает часть строки haystack до первого вхождения needle. </parameters>
<output>Возвращает указанную подстроку. Если подстрока needle не найдена, возвращается FALSE. </output>
<errors></errors>
<example><?php
  $email = 'USER@EXAMPLE.com';
  echo stristr($email, 'e'); // выводит ER@EXAMPLE.com
  echo stristr($email, 'e', true); // Начиная с PHP 5.3.0, выводит US
?></example>
<example_result></example_result>
</object>

<object id=1779> 
<name>openssl_pkey_get_public</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Extract public key from certificate and prepare it for use</short-description>
<description>resource openssl_pkey_get_public ( mixed $certificate ) 
 openssl_get_publickey() extracts the public key from certificate and prepares it for use by other functions. </description>
<parameters>certificate - certificate can be one of the following: an X.509 certificate resource a string having the format file://path/to/file.pem. The named file must contain a PEM encoded certificate/private key (it may contain both). A PEM formatted private key. </parameters>
<output>Returns a positive key resource identifier on success, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1780> 
<name>ocistatementtype</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_statement_type()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1781> 
<name>imap_fetchheader</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Returns header for a message</short-description>
<description>string imap_fetchheader ( resource $imap_stream , int $msg_number [, int $options = 0 ] ) 
 This function causes a fetch of the complete, unfiltered &raquo; RFC2822 format header of the specified message. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
msg_number - The message number 
options - The possible options are: FT_UID - The msgno argument is a UID FT_INTERNAL - The return string is in "internal" format, without any attempt to canonicalize to CRLF newlines FT_PREFETCHTEXT - The RFC822.TEXT should be pre-fetched at the same time. This avoids an extra RTT on an IMAP connection if a full message text is desired (e.g. in a "save to local file" operation) </parameters>
<output>Returns the header of the specified message as a text string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1782> 
<name>snmpget</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Fetch an SNMP object</short-description>
<description>string snmpget ( string $hostname , string $community , string $object_id [, int $timeout = 1000000 [, int $retries = 5 ]] ) 
 The snmpget() function is used to read the value of an SNMP object specified by the object_id. </description>
<parameters>hostname - The SNMP agent. 
community - The read community. 
object_id - The SNMP object. 
timeout - The number of microseconds until the first timeout. 
retries - The number of times to retry if timeouts occur. </parameters>
<output>Returns SNMP object value on success or FALSE on error. </output>
<errors></errors>
<example><?php
$syscontact = snmpget("127.0.0.1", "public", "system.SysContact.0");
?></example>
<example_result></example_result>
</object>

<object id=1783> 
<name>PDF_set_info_author</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Fill the author document info field [deprecated]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1784> 
<name>vpopmail_add_alias_domain_ex</name>
<versions>(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)</versions>
<short-description>Add alias to an existing virtual domain</short-description>
<description>bool vpopmail_add_alias_domain_ex ( string $olddomain , string $newdomain ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1785> 
<name>headers_list</name>
<versions>(PHP 5)</versions>
<short-description>Возвращает список переданных (или готовых к передаче) заголовков</short-description>
<description>array headers_list ( void ) 
 Функция headers_list() возвращает список заголовков, передаваемых браузеру / клиенту. Для точго чтобы определить были ли переданы уже переданы заголовки воспользуйтесь функцией headers_sent(). </description>
<parameters></parameters>
<output>Возвращает нумерованный массив заголовков. </output>
<errors></errors>
<example><?php
/* Функция setcookie() добавит заголовок сама по себе */
setcookie('foo', 'bar');
/* Определение пользовательского заголовка
   Это будет проигнорировано большинством клиентов */
header("X-Sample-Test: foo");
/* Передача простого текстового контента */
header('Content-type: text/plain');
/* Какие загловки готовы к отправке? */
var_dump(headers_list());
?></example>
<example_result>
 
array(4) {
  [0]=>
  string(23) "X-Powered-By: PHP/5.1.3"
  [1]=>
  string(19) "Set-Cookie: foo=bar"
  [2]=>
  string(18) "X-Sample-Test: foo"
  [3]=>
  string(24) "Content-type: text/plain"
}

</example_result>
</object>

<object id=1786> 
<name>hw_Deleteobject</name>
<versions>(PHP 4)</versions>
<short-description>Deletes object</short-description>
<description>bool hw_deleteobject ( int $connection , int $object_to_delete ) 
 Deletes the object with the given object id in the second parameter. It will delete all instances of the object. </description>
<parameters>connection - The connection identifier. 
object_to_delete - The object identifier. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1787> 
<name>vpopmail_set_user_quota</name>
<versions>(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)</versions>
<short-description>Sets a virtual user&#039;s quota</short-description>
<description>bool vpopmail_set_user_quota ( string $user , string $domain , string $quota ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1788> 
<name>preg_quote</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Экранирует символы в регулярных выражениях</short-description>
<description>string preg_quote ( string $str [, string $delimiter = NULL ] ) 
 Функция preg_quote() принимает строку str и добавляет обратный слэш перед каждым служебным символом. Это бывает полезно, если в составлении шаблона участвуют строковые переменные, значение которых в процессе работы скрипта может меняться. 
 В регулярных выражениях служебными считаются следующие символы: . \ + * ? [ ^ ] $ ( ) { } = ! < > | : - </description>
<parameters>str - Входная строка. 
delimiter - В случае если указан необязательный параметр delimiter, он будет также экранироваться. Это удобно для экранирования разделителя, который используется в PCRE функциях. Наиболее распространенным разделителем является символ &#039;/&#039;. </parameters>
<output>Возвращает экранированную строку. </output>
<errors></errors>
<example><?php
$keywords = '$40 за g3/400';
$keywords = preg_quote($keywords, '/');
echo $keywords; // возвращает \$40 за g3\/400
?></example>
<example_result></example_result>
</object>

<object id=1789> 
<name>mcrypt_cfb</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Encrypts/decrypts data in CFB mode</short-description>
<description>string mcrypt_cfb ( int $cipher , string $key , string $data , int $mode , string $iv ) string mcrypt_cfb ( string $cipher , string $key , string $data , int $mode [, string $iv ] )</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1790> 
<name>array_count_values</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Подсчитывает количество всех значений массива</short-description>
<description>array array_count_values ( array $input ) 
 Функция array_count_values() возвращает массив, ключами которого являются значения массива input, а значениями - частота повторения значений input. </description>
<parameters>input - Массив подсчитываемых значений </parameters>
<output>Возвращает ассоциативный массив со значениями input в качестве ключей и их количества в качестве значений. </output>
<errors>Генерирует ошибку уровня E_WARNING для каждого элемента, не являющегося string или integer. </errors>
<example><?php
$array = array(1, "hello", 1, "world", "hello");
print_r(array_count_values($array));
?></example>
<example_result>
 
Array
(
    [1] => 2
    [hello] => 2
    [world] => 1
)
</example_result>
</object>

<object id=1791> 
<name>mssql_field_type</name>
<versions>(PHP 4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Gets the type of a field</short-description>
<description>string mssql_field_type ( resource $result [, int $offset = -1 ] ) 
 Returns the type of field no. offset in result. </description>
<parameters>result - The result resource that is being evaluated. This result comes from a call to mssql_query(). 
offset - The field offset, starts at 0. If omitted, the current field is used. </parameters>
<output>The type of the specified field index on success или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Connect to MSSQL and select the database
mssql_connect('MANGO\SQLEXPRESS', 'sa', 'phpfi');
mssql_select_db('php');
// Send a select query to MSSQL
$query = mssql_query('SELECT [name] FROM [php].[dbo].[persons]');
// Print the field type and length
echo '\'' . mssql_field_name($query, 0) . '\' is a type of ' . 
     strtoupper(mssql_field_type($query, 0)) . 
     '(' . mssql_field_length($query, 0) . ')';
// Free the query result
mssql_free_result($query);
?></example>
<example_result>
 
&#039;name&#039; is a type of CHAR(50)
</example_result>
</object>

<object id=1792> 
<name>swf_shapelinesolid</name>
<versions>(PHP 4)</versions>
<short-description>Set the current line style</short-description>
<description>void swf_shapelinesolid ( float $r , float $g , float $b , float $a , float $width ) 
 Sets the current line style to the given color and width. </description>
<parameters>r - Red value 
g - Green value 
b - Blue value 
a - Alpha value 
width - The line width. If 0.0 is given then no lines are drawn. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1793> 
<name>json_last_error</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Возвращает последнюю ошибку</short-description>
<description>int json_last_error ( void ) 
 Если при последнем JSON кодировании/декодировании возникла ошибка, то возвращает её код. </description>
<parameters></parameters>
<output>Возвращает целочисленное значение, которое может быть одной из следующих констант: </output>
<errors></errors>
<example><?php
// Верная json-строка
$json[] = '{"Organization": "PHP Documentation Team"}';
// Неверная json-строка, которая вызовет синтаксическую ошибку,
// здесь в качестве кавычек мы используем ' вместо "
$json[] = "{'Organization': 'PHP Documentation Team'}";

foreach ($json as $string) {
    echo 'Декодируем: ' . $string;
    json_decode($string);
    switch (json_last_error()) {
        case JSON_ERROR_NONE:
            echo ' - Ошибок нет';
        break;
        case JSON_ERROR_DEPTH:
            echo ' - Достигнута максимальная глубина стека';
        break;
        case JSON_ERROR_STATE_MISMATCH:
            echo ' - Некорректные разряды или не совпадение режимов';
        break;
        case JSON_ERROR_CTRL_CHAR:
            echo ' - Некорректный управляющий символ';
        break;
        case JSON_ERROR_SYNTAX:
            echo ' - Синтаксическая ошибка, не корректный JSON';
        break;
        case JSON_ERROR_UTF8:
            echo ' - Некорректные символы UTF-8, возможно неверная кодировка';
        break;
        default:
            echo ' - Неизвестная ошибка';
        break;
    }
    echo PHP_EOL;
}?></example>
<example_result>
 
Декодируем: {"Organization": "PHP Documentation Team"} - Ошибок нет
Декодируем: {&#039;Organization&#039;: &#039;PHP Documentation Team&#039;} - Синтаксическая ошибка, некорректный JSON
</example_result>
</object>

<object id=1794> 
<name>mysqli_report</name>
<versions>(PHP 5)</versions>
<short-description>Enables or disables internal report functions</short-description>
<description>bool mysqli_report ( int $flags ) 
 mysqli_report() is a powerful function to improve your queries and code during development and testing phase. Depending on the flags it reports errors from mysqli function calls or queries which don&#039;t use an index (or use a bad index). </description>
<parameters>flags - Supported flags Name Description MYSQLI_REPORT_OFF Turns reporting off MYSQLI_REPORT_ERROR Report errors from mysqli function calls MYSQLI_REPORT_STRICT Throw mysqli_sql_exception for errors instead of warnings MYSQLI_REPORT_INDEX Report if no index or bad index was used in a query MYSQLI_REPORT_ALL Set all options (report all) </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
/* activate reporting */
mysqli_report(MYSQLI_REPORT_ALL);
$mysqli = new mysqli("localhost", "my_user", "my_password", "world");
/* check connection */
if (mysqli_connect_errno()) {
    printf("Connect failed: %s\n", mysqli_connect_error());
    exit();
}
/* this query should report an error */
$result = $mysqli->query("SELECT Name FROM Nonexistingtable WHERE population > 50000");
/* this query should report a bad index */
$result = $mysqli->query("SELECT Name FROM City WHERE population > 50000");
$result->close();
$mysqli->close();
?></example>
<example_result></example_result>
</object>

<object id=1795> 
<name>session_module_name</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get and/or set the current session module</short-description>
<description>string session_module_name ([ string $module ] ) 
 session_module_name() gets the name of the current session module. </description>
<parameters>module - If module is specified, that module will be used instead. </parameters>
<output>Returns the name of the current session module. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1796> 
<name>natcasesort</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сортирует массив, используя алгоритм "natural order" без учета регистра символов</short-description>
<description>bool natcasesort ( array &$array ) 
 natcasesort() - это регистронезависимый аналог natsort(). 
 Эта функция реализует алгоритм сортировки, при котором порядок буквенно-цифровых строк будет привычным для человека. Такой алгоритм называется "natural ordering". </description>
<parameters>array - Входной массив. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$array1 = $array2 = array('IMG0.png', 'img12.png', 'img10.png', 'img2.png', 'img1.png', 'IMG3.png');
sort($array1);
echo "Обычная сортировка\n";
print_r($array1);
natcasesort($array2);
echo "\nNatural order сортировка (без учета регистра)\n";
print_r($array2);
?></example>
<example_result>
 
Обычная сортировка
Array
(
    [0] => IMG0.png
    [1] => IMG3.png
    [2] => img1.png
    [3] => img10.png
    [4] => img12.png
    [5] => img2.png
)

Natural order сортировка (без учета регистра)
Array
(
    [0] => IMG0.png
    [4] => img1.png
    [3] => img2.png
    [5] => IMG3.png
    [2] => img10.png
    [1] => img12.png
)
</example_result>
</object>

<object id=1797> 
<name>ncurses_wvline</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Draws a vertical line in a window at current position using an attributed character and max. n characters long</short-description>
<description>int ncurses_wvline ( resource $window , int $charattr , int $n ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>window - 
charattr - 
n - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1798> 
<name>setcookie</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Send a cookie</short-description>
<description>bool setcookie ( string $name [, string $value [, int $expire = 0 [, string $path [, string $domain [, bool $secure = false [, bool $httponly = false ]]]]]] ) 
 setcookie() defines a cookie to be sent along with the rest of the HTTP headers. Like other headers, cookies must be sent before any output from your script (this is a protocol restriction). This requires that you place calls to this function prior to any output, including <html> and <head> tags as well as any whitespace. 
 Once the cookies have been set, they can be accessed on the next page load with the $_COOKIE or $HTTP_COOKIE_VARS arrays. Note, superglobals such as $_COOKIE became available in PHP 4.1.0. Cookie values also exist in $_REQUEST. </description>
<parameters>name - The name of the cookie. 
value - The value of the cookie. This value is stored on the clients computer; do not store sensitive information. Assuming the name is &#039;cookiename&#039;, this value is retrieved through $_COOKIE['cookiename'] 
expire - The time the cookie expires. This is a Unix timestamp so is in number of seconds since the epoch. In other words, you&#039;ll most likely set this with the time() function plus the number of seconds before you want it to expire. Or you might use mktime(). time()+60*60*24*30 will set the cookie to expire in 30 days. If set to 0, or omitted, the cookie will expire at the end of the session (when the browser closes). 
path - The path on the server in which the cookie will be available on. If set to &#039;/&#039;, the cookie will be available within the entire domain. If set to &#039;/foo/&#039;, the cookie will only be available within the /foo/ directory and all sub-directories such as /foo/bar/ of domain. The default value is the current directory that the cookie is being set in. 
domain - The domain that the cookie is available to. Setting the domain to &#039;www.example.com&#039; will make the cookie available in the www subdomain and higher subdomains. Cookies available to a lower domain, such as &#039;example.com&#039; will be available to higher subdomains, such as &#039;www.example.com&#039;. Older browsers still implementing the deprecated &raquo; RFC 2109 may require a leading . to match all subdomains. 
secure - Indicates that the cookie should only be transmitted over a secure HTTPS connection from the client. When set to TRUE, the cookie will only be set if a secure connection exists. On the server-side, it&#039;s on the programmer to send this kind of cookie only on secure connection (e.g. with respect to $_SERVER["HTTPS"]). 
httponly - When TRUE the cookie will be made accessible only through the HTTP protocol. This means that the cookie won&#039;t be accessible by scripting languages, such as JavaScript. It has been suggested that this setting can effectively help to reduce identity theft through XSS attacks (although it is not supported by all browsers), but that claim is often disputed. Added in PHP 5.2.0. TRUE or FALSE </parameters>
<output>If output exists prior to calling this function, setcookie() will fail and return FALSE. If setcookie() successfully runs, it will return TRUE. This does not indicate whether the user accepted the cookie. </output>
<errors></errors>
<example><?php
$value = 'something from somewhere';
setcookie("TestCookie", $value);
setcookie("TestCookie", $value, time()+3600);  /* expire in 1 hour */
setcookie("TestCookie", $value, time()+3600, "/~rasmus/", "example.com", 1);
?></example>
<example_result>
 
three : cookiethree
two : cookietwo
one : cookieone
</example_result>
</object>

<object id=1799> 
<name>PDF_setflat</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set flatness</short-description>
<description>bool PDF_setflat ( resource $pdfdoc , float $flatness ) 
 Sets the flatness parameter. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1800> 
<name>ncurses_beep</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Let the terminal beep </short-description>
<description>int ncurses_beep ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1801> 
<name>ldap_next_reference</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Возвращает следующую справку</short-description>
<description>resource ldap_next_reference ( resource $link , resource $entry ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1802> 
<name>PDF_set_horiz_scaling</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set horizontal text scaling [deprecated]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1803> 
<name>tidy_get_output</name>
<versions>(PHP 5, PECL tidy >= 0.5.2)</versions>
<short-description>Возвращает строку, представляющую разобранную tidy-разметку</short-description>
<description>string tidy_get_output ( tidy $object ) 
 Получить строку с восстановленным html. </description>
<parameters>object - Объект Tidy. </parameters>
<output>Возвращает разобранную tidy-разметку. </output>
<errors></errors>
<example><?php
$html = '<p>параграф</i>';
$tidy = tidy_parse_string($html);
$tidy->cleanRepair();
echo tidy_get_output($tidy);
?></example>
<example_result>
 
<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 3.2//EN">
<html>
<head>
<title></title>
</head>
<body>
<p>параграф</p>
</body>
</html>
</example_result>
</object>

<object id=1804> 
<name>fgetcsv</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Читает строку из файла и производит разбор данных CSV</short-description>
<description>array fgetcsv ( resource $handle [, int $length = 0 [, string $delimiter = &#039;,&#039; [, string $enclosure = &#039;"&#039; [, string $escape = &#039;\\&#039; ]]]] ) 
 Данная функция похожа на функцию fgets(), с той разницей, что она производит анализ строки на наличие записей в формате CSV и возвращает найденные поля в качестве массива. </description>
<parameters>handle - Корректный файловый указатель на файл, успешно открытый при помощи fopen(), popen() или fsockopen(). 
length - Должен быть больше самой длинной строки (в символах), найденной в CSV-файле (включая завершающий символ конца строки). Данный параметр стал необязательным в PHP 5. Если этот аргумент не указан (или равен 0 в версиях PHP 5.0.4 и выше), максимальная длина строки не ограничена, но функция работает немного медленнее. 
delimiter - Устанавливает разделитель поля (только один символ). 
enclosure - Устанавливает символ ограничителя поля (только один символ). 
escape - Устанавливает экранирующий символ (только один символ). По умолчанию равен обратному слэшу. </parameters>
<output>Возвращает индексированный массив с прочтенными полями. </output>
<errors></errors>
<example><?php
$row = 1;
if (($handle = fopen("test.csv", "r")) !== FALSE) {
    while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
        $num = count($data);
        echo "<p> $num полей в строке $row: <br /></p>\n";
        $row++;
        for ($c=0; $c < $num; $c++) {
            echo $data[$c] . "<br />\n";
        }
    }
    fclose($handle);
}?></example>
<example_result></example_result>
</object>

<object id=1805> 
<name>yaz_database</name>
<versions>(PHP 4 >= 4.0.6, PECL yaz >= 0.9.0)</versions>
<short-description>Specifies the databases within a session </short-description>
<description>bool yaz_database ( resource $id , string $databases ) 
 This function allows you to change databases within a session by specifying one or more databases to be used in search, retrieval, etc. - overriding databases specified in call to yaz_connect(). </description>
<parameters>id - The connection resource returned by yaz_connect(). 
databases - A string containing one or more databases. Multiple databases are separated by a plus sign +. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1806> 
<name>output_reset_rewrite_vars</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Сброс значений установленных обработчиком URL</short-description>
<description>bool output_reset_rewrite_vars ( void ) 
 Эта функция отключает обработчик URL и удаляет все значения, установленные функцией output_add_rewrite_var() или механизмом сессий (если session.use_trans_sid был установлен для session_start()). </description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
session_start();
output_add_rewrite_var('var', 'value');
echo '<a href="file.php">ссылка</a>';
ob_flush();
output_reset_rewrite_vars();
echo '<a href="file.php">ссылка</a>';
?></example>
<example_result>
 
<a href="file.php?PHPSESSID=xxx&var=value">ссылка</a>
<a href="file.php">ссылка</a>
</example_result>
</object>

<object id=1807> 
<name>dbplus_rrename</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Rename a relation</short-description>
<description>int dbplus_rrename ( resource $relation , string $name ) 
 dbplus_rrename() will change the name of relation to name. </description>
<parameters>relation - A relation opened by dbplus_open(). 
name - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1808> 
<name>XMLWriter::endCData</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Завершить текущую секцию CDATA</short-description>
<description>bool XMLWriter::endCData ( void ) 
 Процедурный стиль bool xmlwriter_end_cdata ( resource $xmlwriter )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1809> 
<name>wddx_packet_end</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Ends a WDDX packet with the specified ID</short-description>
<description>string wddx_packet_end ( resource $packet_id ) 
 Ends and returns the given WDDX packet. </description>
<parameters>packet_id - A WDDX packet, returned by wddx_packet_start(). </parameters>
<output>Returns the string containing the WDDX packet. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1810> 
<name>fgets</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Читает строку из файла</short-description>
<description>string fgets ( resource $handle [, int $length ] ) 
 Читает строку из файлового указателя. </description>
<parameters>handle - Указатель на файл должен быть корректным и указыватьна файл, успешно открытый функциями fopen() илиfsockopen() (и все еще не закрытым функцией fclose()).
length - Чтения заканчивается по достижении length - 1 байт, если встретилась новая строка (которая включается в возвращаемый результат) или конец файла (что встретилось первым). Если длина не указана, чтение из потока будет продолжаться до тех пор, пока не достигнет конца строки. </parameters>
<output>Возвращает строку размером в length - 1 байт, прочитанную из дескриптора файла, на который указывает параметр handle. Если данных для чтения больше нет, то возвращает FALSE. </output>
<errors></errors>
<example><?php
$handle = @fopen("/tmp/inputfile.txt", "r");
if ($handle) {
    while (($buffer = fgets($handle, 4096)) !== false) {
        echo $buffer;
    }
    if (!feof($handle)) {
        echo "Error: unexpected fgets() fail\n";
    }
    fclose($handle);
}?></example>
<example_result></example_result>
</object>

<object id=1811> 
<name>intval</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает целое значение переменной</short-description>
<description>int intval ( mixed $var [, int $base = 10 ] ) 
 Возвращает целое значение переменной var, используя указанное основание системы исчисления base для преобразования (по умолчанию основание равно 10). intval() нельзя использовать с объектами, попытка это сделать вызовет ошибку уровня E_NOTICE и вернет значение 1. </description>
<parameters>var - Скалярное значение для конвертации в целое 
base - Основание системы исчисления для преобразования </parameters>
<output>Целое значение переменной var в случае успеха, или 0 в случае неудачи. Для пустых массивов возвращается 0, для непустых возвращается 1. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=1812> 
<name>wddx_deserialize</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Unserializes a WDDX packet</short-description>
<description>mixed wddx_deserialize ( string $packet ) 
 Unserializes a WDDX packet. </description>
<parameters>packet - A WDDX packet, as a string or stream. </parameters>
<output>Returns the deserialized value which can be a string, a number or an array. Note that structures are deserialized into associative arrays. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1813> 
<name>imagecreate</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Create a new palette based image</short-description>
<description>resource imagecreate ( int $width , int $height ) 
 imagecreate() returns an image identifier representing a blank image of specified size. 
 We recommend the use of imagecreatetruecolor(). </description>
<parameters>width - The image width. 
height - The image height. </parameters>
<output>Возвращает ресурс изображения в случае успеха, или FALSE в случае ошибки.</output>
<errors></errors>
<example><?php
header("Content-Type: image/png");
$im = @imagecreate(110, 20)
    or die("Cannot Initialize new GD image stream");
$background_color = imagecolorallocate($im, 0, 0, 0);
$text_color = imagecolorallocate($im, 233, 14, 91);
imagestring($im, 1, 5, 5,  "A Simple Text String", $text_color);
imagepng($im);
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=1814> 
<name>get_browser</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сообщает о возможностях браузера пользователя</short-description>
<description>mixed get_browser ([ string $user_agent [, bool $return_array = false ]] ) 
 Пытается определить возможности браузера пользователя производя поиск информации о браузере в файле browscap.ini. </description>
<parameters>user_agent - Анализируется User Agent. По умолчанию, используется значение HTTP User-Agent. Тем не менее этот параметр можно пропустить для получения дополнительной информации о браузере. 
return_array - Если равен TRUE, то функция вернет массив (array)вместо объекта (object). </parameters>
<output>Информация возвращается в виде объекта, либо в виде архива, который содержит различные данные, к примеру, мажорную и минорную версию браузера и строку ID; TRUE/FALSE наличие функций браузера, таких как фреймы, JavaScript, cookies и т.д. </output>
<errors></errors>
<example><?php
echo $_SERVER['HTTP_USER_AGENT'] . "\n\n";
$browser = get_browser(null, true);
print_r($browser);
?></example>
<example_result>
 
Mozilla/5.0 (Windows; U; Windows NT 5.1; en-US; rv:1.7) Gecko/20040803 Firefox/0.9.3

Array
(
    [browser_name_regex] => ^mozilla/5\.0 (windows; .; windows nt 5\.1; .*rv:.*) gecko/.* firefox/0\.9.*$
    [browser_name_pattern] => Mozilla/5.0 (Windows; ?; Windows NT 5.1; *rv:*) Gecko/* Firefox/0.9*
    [parent] => Firefox 0.9
    [platform] => WinXP
    [browser] => Firefox
    [version] => 0.9
    [majorver] => 0
    [minorver] => 9
    [cssversion] => 2
    [frames] => 1
    [iframes] => 1
    [tables] => 1
    [cookies] => 1
    [backgroundsounds] =>
    [vbscript] =>
    [javascript] => 1
    [javaapplets] => 1
    [activexcontrols] =>
    [cdf] =>
    [aol] =>
    [beta] => 1
    [win16] =>
    [crawler] =>
    [stripper] =>
    [wap] =>
    [netclr] =>
)
</example_result>
</object>

<object id=1815> 
<name>posix_ttyname</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Determine terminal device name</short-description>
<description>string posix_ttyname ( int $fd ) 
 Returns a string for the absolute path to the current terminal device that is open on the file descriptor fd. </description>
<parameters>fd - The file descriptor. </parameters>
<output>On success, returns a string of the absolute path of the fd. On failure, returns FALSE </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1816> 
<name>gzgetc</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает символ из gz-файла</short-description>
<description>string gzgetc ( resource $zp ) 
 Возвращает один символ (после распаковки) из gz-файла по его указателю. </description>
<parameters>zp - Указатель на gz-файл, возвращённый, после его успешного открытия, функцией gzopen(). </parameters>
<output>Символ (после распаковки) или FALSE в случае EOF (в отличие от gzeof()). </output>
<errors></errors>
<example><?php
$gz = gzopen('somefile.gz', 'r');
while (!gzeof($gz)) {
  echo gzgetc($gz);
}gzclose($gz);
?></example>
<example_result></example_result>
</object>

<object id=1817> 
<name>pg_version</name>
<versions>(PHP 5)</versions>
<short-description>Возвращает массив, содержащий версии клиента, протокола клиент-серверного взаимодействия и сервера (если доступно) </short-description>
<description>array pg_version ([ resource $connection ] ) 
 pg_version() возвращает массив, содержащий версии клиента, протокола клиент-серверного взаимодействия и сервера. Версии протокола и сервера доступны, только если PHP-расширение скомпилировано для PostgreSQL версии 7.4 или выше. 
 Для получения детальной информации о сервере используйте функцию pg_parameter_status(). </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). </parameters>
<output>Возвращает массив с ключами client, protocol и server и соответствующими значениями версий, либо FALSE в случае ошибки или некорректно работающего соединения. </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("host=localhost port=5432 dbname=mary")
     or die("Could not connect");
     
  $v = pg_version($dbconn);
  
  echo $v['client'];
?></example>
<example_result>
 
7.4
</example_result>
</object>

<object id=1818> 
<name>mktime</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает метку времени Unix для заданной даты</short-description>
<description>int mktime ([ int $hour = date("H") [, int $minute = date("i") [, int $second = date("s") [, int $month = date("n") [, int $day = date("j") [, int $year = date("Y") [, int $is_dst = -1 ]]]]]]] ) 
 Функция возвращает метку времени Unix, соответствующую дате и времени, заданным аргументами. Метка времени - это целое число, равное разнице в секундах между заданной датой/временем и началом Эпохи Unix (The Unix Epoch, 1 января 1970 00:00:00 GMT). 
 Аргументы могут быть опущены в порядке справа налево. В этом случае их значения по умолчанию равны соответствующим компонентам локальной даты/времени. </description>
<parameters>hour - Количество часов, прошедших с начала дня, указанного параметрами month, day и year. Отрицательные значения определяют часы до полуночи указанного дня. Значения большие 23 определяют соответствующий час следующего дня (или дней). 
minute - Количество минут, прошедших от начала часа, указанного параметром hour. Отрицательные значения определяют минуты предыдущего часа. Значения большие 59 определяют соответствующие минуты следующего часа (или часов). 
second - Количество секунд, прошедших от начала минуты, указанной параметром minute. Отрицательные знаения определяют секунды из предыдущей минуты. Значения большие 59 определяют соответствующие секунды следующей минуты (или минут). 
month - Количество месяцев, прошедших с конца предыдущего года. Значения от 1 до 12 определяют нормальные обычные календарные месяцы года. Значения меньшие 1 (включая отрицательные значения) определяют месяца предыдущего года в обратном порядке, т.е. 0 будет декабрем, -1 - ноябрем и т.д. Значения больше 12 определяют соответствующий месяц в следующем году (или годах). 
day - Количество дней, прошедших с конца предыдущего месяца. Значения от 1 до 28, 29, 30 или 31 (в зависимости от месяца) определяют нормальные дни соответствующего месяца. Значения меньшие 1 (включая отрицательные значения) определяют дни предыдущего месяца, таким образом, 0 является последним днем предыдущего месяца, -1 - предпоследним днем предыдущего месяца и т.д. Значения большие количества дней соответствующего месяца определяют соответствующий день следующего месяца (или месяцев). 
year - Номер года, может быть указан двумя или четырьмя цифрами, причем значения между 0-69 будут трактованы как 2000-2069, а между 70-100 - как 1970-2000. На тех системах, где time_t является 32-битным знаковым целым (наиболее распространенный вариант на сегодня), корректный диапазон для параметра year содержит даты где-то между 1901 и 2038. Однако, до версии PHP 5.1.0, на некоторых системах этот диапазон был ограничен датами между 1970 и 2038 (например, Windows). 
is_dst - Данный параметр может быть установлен в 1, если заданной дате соответствует летнее время (DST), 0 в противном случае, или -1 (значение по умолчанию), если неизвестно, действует ли летнее время на заданную дату. В последнем случае PHP пытается определить это самостоятельно. Это можно привести к неожиданному результату (который, тем не менее, не будет неверным). Некоторые даты могут быть неверными, если летнее время применимо к системе, на которой запущен PHP, или параметр is_dst установлен в 1. Если переход на летнее время происходит, например, в 2:00, все даты между 2:00 и 3:00 станут некорректными и mktime() вернет неопределенное (обычно отрицательное) значение. Некоторые системы (например, Solaris 8) осуществляют переход на летнее время в полночь, так что время 0:30 дня, когда был осуществлен переход на летнее время будет обрабатываться как 23:30 предыдущего дня. </parameters>
<output>mktime() возвращает временную метку Unix в соответствии с переданными аргументами. Если были переданы некорректными аргументы, функция вернет FALSE (до версии PHP 5.1 возвращалась -1). </output>
<errors>Каждый вызов к функциям даты/времени при неправильных настройках временной зоны сгенерирует ошибку уровня E_NOTICE,и/или ошибку уровня E_STRICT или E_WARNING при использовании системныхнастроек или переменной окружения TZ. Смотрите также date_default_timezone_set()</errors>
<example><?php
// Устанавливаем используемую по умолчанию временную зону. Доступно, начиная с версии PHP 5.1
date_default_timezone_set('UTC');
// Выводит: July 1, 2000 is on a Saturday
echo "July 1, 2000 is on a " . date("l", mktime(0, 0, 0, 7, 1, 2000));
// Выводит что-то вроде: 2006-04-05T01:02:03+00:00
echo date('c', mktime(1, 2, 3, 4, 5, 2006));
?></example>
<example_result></example_result>
</object>

<object id=1819> 
<name>mb_check_encoding</name>
<versions>(PHP 4 >= 4.4.3, PHP 5 >= 5.1.3)</versions>
<short-description>Проверяет, что кодировка для строки выбрана верно </short-description>
<description>bool mb_check_encoding ([ string $var = NULL [, string $encoding = mb_internal_encoding() ]] ) 
 Проверяет, что для потока данных подходит выбранная кодировка. Функция может быть полезной для предотвращения так называемой "Атаки неправильной кодировкой". 
 </description>
<parameters>var - Поток данных для проверки. Если не задан, функция проверит все входные данные с начала запроса. 
encoding - Ожидаемая кодировка. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1820> 
<name>ibase_delete_user</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Delete a user from a security database (only for IB6 or later)</short-description>
<description>bool ibase_delete_user ( resource $service_handle , string $user_name ) 
 PHP 4 uses server, dba_user_name and dba_user_password instead of service_handle parameter. Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1821> 
<name>pspell_new_personal</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Загружает новый словарь с персональным списком слов</short-description>
<description>int pspell_new_personal ( string $personal , string $language [, string $spelling [, string $jargon [, string $encoding [, int $mode = 0 ]]]] ) 
 pspell_new_personal() открывает новый словарь с персональным списком слов. Список слов может быть модифицирован и сохранён функцией pspell_save_wordlist(), если потребуется. Однако замещающие пары не сохраняются. Для сохранения замещающих пар вы должны создать конфигурацию, используя pspell_config_create(), установить файл персонального списка слов функцией pspell_config_personal(), установить файл для замещающих пар функцией pspell_config_repl(), и открыть новый словарь с помощью pspell_new_config(). 
 Более подробную информацию и примеры можно найти в руководстве по pspell на сайте:&raquo; http://aspell.net/. </description>
<parameters>personal - Файл, в который будут сохранены слова, добавленные в персональный список. Это должен быть абсолютный путь к файлу, начинающийся с &#039;/&#039;, так как иначе он будет относительным к $HOME, которым является "/root" для большинства систем, что, вероятно, не то, что вам нужно. 
language - Код языка, который состоит из двухбуквенного кода языка по стандарту ISO 639 и необязательного двубуквенного кода страны по стандарту ISO 3166 после тире или подчеркивания. 
spelling - Определяет вариант проверки орфографии для языков с более чем одним вариантом правописания, таких, как английский. Известные значения: &#039;american&#039;, &#039;british&#039;, и &#039;canadian&#039;. 
jargon - Дополнительная информацию для различения двух различных списков слов, имеющих одинаковые параметры language и spelling. 
encoding - Кодировка, в которой, как ожидается, даны слова. Допустимые значения: utf-8, iso8859-*, koi8-r, viscii, cp1252, machine unsigned 16, machine unsigned 32. 
mode - Режим, в котором будет работать проверка орфографии. Доступно несколько режимов: PSPELL_FAST - Быстрый режим (наименьшее число вариантов исправления) PSPELL_NORMAL - Нормальный режим (больше вариантов исправления) PSPELL_BAD_SPELLERS - Медленный режим (много вариантов исправления) PSPELL_RUN_TOGETHER - рассматривает объединённые слова как правильные сложные слова. То есть, "thecat" будет считаться правильным сложным словом, хотя между артиклем и словом должен быть пробел. Изменение этой установки влияет только на результаты, возвращаемые функцией pspell_check(); pspell_suggest() будет продолжать выдавать варианты исправления. Mode - это битовая маска, сконструированная из различных перечисленных выше констант. Однако, PSPELL_FAST, PSPELL_NORMAL и PSPELL_BAD_SPELLERS являются взаимноисключающими, так что вы должны выбрать только одну из них. </parameters>
<output>Возвращает ссылку на словарь для использования в других функциях pspell. </output>
<errors></errors>
<example><?php
$pspell_link = pspell_new_personal ("/var/dictionaries/custom.pws",
        "en", "", "", "", PSPELL_FAST|PSPELL_RUN_TOGETHER);
?></example>
<example_result></example_result>
</object>

<object id=1822> 
<name>mysql_list_fields</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает список колонок таблицы</short-description>
<description>resource mysql_list_fields ( string $database_name , string $table_name [, resource $link_identifier ] ) 
 Возвращает информацию о таблице с переданным именем. 
 Эта функция устарела. Вместо нее рекомендуется использовать mysql_query() с SQL-запросом SHOW COLUMNS FROM table [LIKE &#039;name&#039;]. </description>
<parameters>database_name - Имя опрашиваемой базы данных. 
table_name - Имя опрашиваемой таблицы. 
link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Дескриптор результата (resource) в случае успеха, или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$result = mysql_query("SHOW COLUMNS FROM sometable");
if (!$result) {
    echo 'Ошибка при выполнении запроса: ' . mysql_error();
    exit;
}if (mysql_num_rows($result) > 0) {
    while ($row = mysql_fetch_assoc($result)) {
        print_r($row);
    }
}?></example>
<example_result>
 
Array
(
    [Field] => id
    [Type] => int(7)
    [Null] =>
    [Key] => PRI
    [Default] =>
    [Extra] => auto_increment
)
Array
(
    [Field] => email
    [Type] => varchar(100)
    [Null] =>
    [Key] =>
    [Default] =>
    [Extra] =>
)
</example_result>
</object>

<object id=1823> 
<name>sybase_min_message_severity</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Sets minimum message severity</short-description>
<description>void sybase_min_message_severity ( int $severity ) 
 sybase_min_message_severity() sets the minimum message severity level. </description>
<parameters>severity - </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1824> 
<name>xmlrpc_encode</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Генерирует XML для PHP значения</short-description>
<description>string xmlrpc_encode ( mixed $value ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1825> 
<name>fbsql_fetch_field</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Get column information from a result and return as an object</short-description>
<description>object fbsql_fetch_field ( resource $result [, int $field_offset ] ) 
 Used in order to obtain information about fields in a certain query result. </description>
<parameters>result - Идентификатор результата запроса, полученный изfbsql_query() илиfbsql_db_query().
field_offset - The numerical offset of the field. The field index starts at 0. If not specified, the next field that wasn&#039;t yet retrieved by fbsql_fetch_field() is retrieved. </parameters>
<output>Returns an object containing field information, or FALSE on errors. </output>
<errors></errors>
<example><?php
fbsql_connect($host, $user, $password)
    or die("Could not connect");
$result = fbsql_db_query("database", "select * from table")
    or die("Query failed");
# get column metadata
$i = 0;
while ($i < fbsql_num_fields($result)) {
    echo "Information for column $i:<br />\n";
    $meta = fbsql_fetch_field($result);
    if (!$meta) {
        echo "No information available<br />\n";
    }
    echo "<pre>
max_length:   $meta->max_length
name:         $meta->name
not_null:     $meta->not_null
table:        $meta->table
type:         $meta->type
</pre>";
    $i++;
}fbsql_free_result($result);
?></example>
<example_result></example_result>
</object>

<object id=1826> 
<name>mysql_fetch_row</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Обрабатывает ряд результата запроса и возвращает массив с числовыми индексами</short-description>
<description>array mysql_fetch_row ( resource $result ) 
 Возвращает массив с числовыми индексами, содержащий данные обработанного ряда, и сдвигает внутренний указатель результата вперед. </description>
<parameters>result - Обрабатываемый результат запроса.Этот результат может быть получен с помощью функции mysql_query().</parameters>
<output>Возвращает массив строк с числовыми индексами, содержащий данные обработанного ряда, или FALSE, если рядов не осталось. </output>
<errors></errors>
<example><?php
$result = mysql_query("SELECT id,email FROM people WHERE id = '42'");
if (!$result) {
    echo 'Ошибка запроса: ' . mysql_error();
    exit;
}$row = mysql_fetch_row($result);
echo $row[0]; // 42
echo $row[1]; // email
?></example>
<example_result></example_result>
</object>

<object id=1827> 
<name>spl_autoload</name>
<versions>(PHP 5 >= 5.1.2)</versions>
<short-description>Default implementation for __autoload()</short-description>
<description>void spl_autoload ( string $class_name [, string $file_extensions = spl_autoload_extensions() ] ) 
 This function is intended to be used as a default implementation for __autoload(). If nothing else is specified and spl_autoload_register() is called without any parameters then this functions will be used for any later call to __autoload(). </description>
<parameters>class_name - The lowercased name of the class (and namespace) being instantiated. 
file_extensions - By default it checks all include paths to contain filenames built up by the lowercase class name appended by the filename extensions .inc and .php. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1828> 
<name>hw_Document_Content</name>
<versions>(PHP 4)</versions>
<short-description>Returns content of hw_document</short-description>
<description>string hw_document_content ( int $hw_document ) 
 Gets the content of the document. </description>
<parameters>hw_document - The document identifier. </parameters>
<output>Returns the content of the document. If the document is an HTML document the content is everything after the BODY tag. Information from the HEAD and BODY tag is in the stored in the object record. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1829> 
<name>unregister_tick_function</name>
<versions>(PHP 4 >= 4.0.3, PHP 5)</versions>
<short-description>Удаляет функцию из списка зарегистрированных для выполнения при каждом тике</short-description>
<description>void unregister_tick_function ( string $function_name ) 
 Удаляет function_name из списка функций, зарегистрированных для выполнения при каждом тике (см. tick). </description>
<parameters>function_name - Название функции, строка. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1830> 
<name>ifx_create_char</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Creates an char object</short-description>
<description>int ifx_create_char ( string $param ) 
 Creates an char object. </description>
<parameters>param - The char content. </parameters>
<output>Returns the new char object id, or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1831> 
<name>XMLWriter::setIndentString</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Установить строку, используемую для отступов</short-description>
<description>bool XMLWriter::setIndentString ( string $indentString ) 
 Процедурный стиль bool xmlwriter_set_indent_string ( resource $xmlwriter , string $indentString )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
indentString - Отступ строки. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1832> 
<name>pg_lo_read_all</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Читает содержимое большого объекта и посылает напрямую в броузер </short-description>
<description>int pg_lo_read_all ( resource $large_object ) 
 pg_lo_read_all() читает большой объект и посылает данные напрямую в броузер после отправки всех необходимых заголовков. Используется в основном для пересылки двоичных данных, таких как изображения или звук. 
 Операции с использованием интерфейса больших объектов необходимо заключать в блок транзакции. 
 Замечание: 
 Прежнее название функции: pg_loreadall(). </description>
<parameters>large_object - Ресурс большого объекта (LOB) PostgreSQL, возвращаемый функцией pg_lo_open(). </parameters>
<output>Количество прочитанных байт, либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
   header('Content-type: image/jpeg');
   $image_oid = 189762345;
   $database = pg_connect("dbname=jacarta");
   pg_query($database, "begin");
   $handle = pg_lo_open($database, $image_oid, "r");
   pg_lo_read_all($handle);
   pg_query($database, "commit");
?></example>
<example_result></example_result>
</object>

<object id=1833> 
<name>sqlite_next</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Переходит на следующую запись</short-description>
<description>bool sqlite_next ( resource $result ) 
 Объектно-ориентированный стиль (метод): bool SQLiteResult::next ( void )</description>
<parameters>result - Ресурс результата SQLite. Этот параметр не требуется при использовании объектно-ориентированного метода. </parameters>
<output>Возвращает TRUE в случае успеха, или FALSE, если записей больше нет. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1834> 
<name>hw_GetAnchors</name>
<versions>(PHP 4)</versions>
<short-description>Object ids of anchors of document</short-description>
<description>array hw_getanchors ( int $connection , int $objectID ) 
 Returns an array of object ids with anchors of the specified document. </description>
<parameters>connection - The connection identifier. 
objectID - The document object id. </parameters>
<output>Returns an array of object ids. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1835> 
<name>filepro</name>
<versions>(PHP 4, PHP 5 <= 5.1.6)</versions>
<short-description>Read and verify the map file</short-description>
<description>bool filepro ( string $directory ) 
 This reads and verifies the map file, storing the field count and info. 
 No locking is done, so you should avoid modifying your filePro database while it may be opened in PHP. 
 Замечание: Когда опция safe mode включена, PHP проверяет,имеют ли файлы/каталоги, с которыми вы собираетесь работать, такойже UID (владельца), как и выполняемый скрипт. </description>
<parameters>directory - The map directory. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1836> 
<name>imagesettile</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Set the tile image for filling</short-description>
<description>bool imagesettile ( resource $image , resource $tile ) 
 imagesettile() sets the tile image to be used by all region filling functions (such as imagefill() and imagefilledpolygon()) when filling with the special color IMG_COLOR_TILED. 
 A tile is an image used to fill an area with a repeated pattern. Any GD image can be used as a tile, and by setting the transparent color index of the tile image with imagecolortransparent(), a tile allows certain parts of the underlying area to shine through can be created. 
 Замечание: 
 You need not take special action when you are finished with a tile, but if you destroy the tile image, you must not use the IMG_COLOR_TILED color until you have set a new tile image! </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
tile - The image resource to be used as a tile. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Load an external image
$zend = imagecreatefromgif('./zend.gif');
// Create a 200x200 image
$im = imagecreatetruecolor(200, 200);
// Set the tile
imagesettile($im, $zend);
// Make the image repeat
imagefilledrectangle($im, 0, 0, 199, 199, IMG_COLOR_TILED);
// Output image to the browser
header('Content-Type: image/png');
imagepng($im);
imagedestroy($im);
imagedestroy($zend);
?></example>
<example_result></example_result>
</object>

<object id=1837> 
<name>pg_field_is_null</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Проверка поля на значение SQL NULL</short-description>
<description>int pg_field_is_null ( resource $result , int $row , mixed $field ) int pg_field_is_null ( resource $result , mixed $field )</description>
<parameters>result - Ресурс результата запроса PostgreSQL, возвращаемый функциями pg_query(), pg_query_params() или pg_execute() (в числе прочих). 
row - Номер строки результата запроса с нужным полем. Нумерация строк начинается с нуля. Если аргумент не задан, будет выбрана текущая строка. 
field - Номер поля (начиная с нуля) как integer или имя поля как string. </parameters>
<output>Возвращает 1, если выбранное значение SQL NULL, 0 для других значений. Функция вернет FALSE, если номер строки будет вне допустимого диапазона, и при прочих ошибках. </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die ("Невозможно соединиться с базой");
  $res = pg_query($dbconn, "select * from authors where author = 'Orwell'");
  if ($res) {
      if (pg_field_is_null($res, 0, "year") == 1) {
          echo "Значение поля year null.\n";
      }
      if (pg_field_is_null($res, 0, "year") == 0) {
          echo "Значение поля year не null.\n";
    }
 }
?></example>
<example_result></example_result>
</object>

<object id=1838> 
<name>XMLWriter::fullEndElement</name>
<versions>(PHP 5 >= 5.2.0, PECL xmlwriter >= 2.0.4)</versions>
<short-description>Завершить текущий элемент</short-description>
<description>bool XMLWriter::fullEndElement ( void ) 
 Процедурный стиль bool xmlwriter_full_end_element ( resource $xmlwriter )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1839> 
<name>stream_set_blocking</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Устанавливает блокирующий/неблокирующий режим на потоке</short-description>
<description>bool stream_set_blocking ( resource $stream , int $mode ) 
 Устанавливает блокирующий или неблокирующий режим на потоке stream. 
 Эта функция работает на любом потоке, который поддерживает неблокирующий режим (в настоящее время это обычные файлы и сокетные потоки). </description>
<parameters>stream - Поток. 
mode - Если параметр mode равен 0, указанный поток будет переключен в неблокирующий режим, а если он равен 1, поток будет переключен в блокирующий режим. Это влияет на такие вызовы, как fgets() и fread(), которые читают из потока. В неблокирующем режиме вызов функции fgets() будет всегда возвращаться сразу, тогда как в блокирующем режиме он будет ожидать, пока данные станут доступны на потоке. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1840> 
<name>udm_hash32</name>
<versions>(PHP 4 >= 4.3.3, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)</versions>
<short-description>Возвращает контрольную сумму Hash32 данной строки</short-description>
<description>int udm_hash32 ( resource $agent , string $str ) 
 udm_hash32() принимает строку str и возвращает практически уникальную 32-битную хэш-сумму этой строки. </description>
<parameters>agent - Ссылка на идентификатор агента, полученная после вызова udm_alloc_agent(). 
str - Входная строка. </parameters>
<output>Возвращает 32-битную хэш-сумму. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1841> 
<name>jpeg2wbmp</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Конвертирует изображение из формата JPEG в WBMP</short-description>
<description>bool jpeg2wbmp ( string $jpegname , string $wbmpname , int $dest_height , int $dest_width , int $threshold ) 
 Конвертирует JPEG-файл в WBMP. </description>
<parameters>jpegname - Путь к JPEG-файлу. 
wbmpname - Путьдля размещения WBMP-файла. 
dest_height - Высота WBMP-изображения. 
dest_width - Ширина WBMP-изображения. 
threshold - Пороговое значение, от 0 до 8 (включительно). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Путь к исходному jpeg-изображению 
$path = './test.jpg';
// Получаем размеры изображения
$image = getimagesize($path);
// Конвертируем изображение
jpeg2wbmp($path, './test.wbmp', $image[1], $image[0], 5);
?></example>
<example_result></example_result>
</object>

<object id=1842> 
<name>PDF_circle</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Рисует окружность</short-description>
<description>bool PDF_circle ( resource $pdfdoc , float $x , float $y , float $r ) 
 Добавляет окружность. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1843> 
<name>PDF_restore</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Restore graphics state</short-description>
<description>bool PDF_restore ( resource $p ) 
 Restores the most recently saved graphics state. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1844> 
<name>ncurses_end</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Stop using ncurses, clean up the screen </short-description>
<description>int ncurses_end ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1845> 
<name>phpcredits</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Prints out the credits for PHP</short-description>
<description>bool phpcredits ([ int $flag = CREDITS_ALL ] ) 
 This function prints out the credits listing the PHP developers, modules, etc. It generates the appropriate HTML codes to insert the information in a page. </description>
<parameters>flag - To generate a custom credits page, you may want to use the flag parameter. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
phpcredits(CREDITS_GENERAL);
?></example>
<example_result></example_result>
</object>

<object id=1846> 
<name>XMLWriter::endDTDElement</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Завершить текущий элемент DTD</short-description>
<description>bool XMLWriter::endDTDElement ( void ) 
 Процедурный стиль bool xmlwriter_end_dtd_element ( resource $xmlwriter )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1847> 
<name>opendir</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Открывает дескриптор каталога</short-description>
<description>resource opendir ( string $path [, resource $context ] ) 
 Открывает дескриптор каталога для последующего использования с функциями closedir(), readdir() и rewinddir(). </description>
<parameters>path - Путь к открываемому каталогу 
context - Для описания параметра context обратитесь к разделу "Потоки". </parameters>
<output>Возвращает дескриптор каталога (resource) в случае успеха или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$dir = "/etc/php5/";
// Открыть известный каталог и начать считывать его содержимое
if (is_dir($dir)) {
    if ($dh = opendir($dir)) {
        while (($file = readdir($dh)) !== false) {
            echo "файл: $file : тип: " . filetype($dir . $file) . "\n";
        }
        closedir($dh);
    }
}?></example>
<example_result>
 
файл: . : тип: dir
файл: .. : тип: dir
файл: apache : тип: dir
файл: cgi : тип: dir
файл: cli : тип: dir
</example_result>
</object>

<object id=1848> 
<name>hw_GetObjectByQueryColl</name>
<versions>(PHP 4)</versions>
<short-description>Search object in collection</short-description>
<description>array hw_getobjectbyquerycoll ( int $connection , int $objectID , string $query , int $max_hits ) 
 Searches for objects in collection with ID objectID and returns an array of object ids. </description>
<parameters>connection - The connection identifier. 
objectID - The collection id. 
query - The query will only work with indexed attributes. 
max_hits - The maximum number of matches is limited to max_hits. If max_hits is set to -1 the maximum number of matches is unlimited. </parameters>
<output>Returns an array of object ids. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1849> 
<name>posix_getuid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Return the real user ID of the current process</short-description>
<description>int posix_getuid ( void ) 
 Return the numeric real user ID of the current process. </description>
<parameters></parameters>
<output>Returns the user id, as an integer </output>
<errors></errors>
<example><?php
echo posix_getuid(); //10000
?></example>
<example_result></example_result>
</object>

<object id=1850> 
<name>gmp_jacobi</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Символ Якоби</short-description>
<description>int gmp_jacobi ( resource $a , resource $p ) 
 Вычисляет &raquo; Символ Якоби для чисел a и p. p должно быть положительным и нечетным. </description>
<parameters>a - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.
p - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.</parameters>
<output>Число GMP. </output>
<errors></errors>
<example><?php
echo gmp_jacobi("1", "3") . "\n";
echo gmp_jacobi("2", "3") . "\n";
?></example>
<example_result>
 
1
0
</example_result>
</object>

<object id=1851> 
<name>ingres_field_nullable</name>
<versions>(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)</versions>
<short-description>Test if a field is nullable</short-description>
<description>bool ingres_field_nullable ( resource $result , int $index ) 
 Test if a field is nullable. 
 Замечание: Related Configurations
 
 See ingres.array_index_start in Runtime Configuration </description>
<parameters>result - The query result identifier 
index - index is the field whose nullability will be retrieved. </parameters>
<output>ingres_field_nullable() returns TRUE if the field can be set to the NULL value and FALSE if it cannot </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1852> 
<name>is_link</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Определяет, является ли файл символической ссылкой</short-description>
<description>bool is_link ( string $filename ) 
 Определяет, является ли файл символической ссылкой. </description>
<parameters>filename - Путь к файлу. </parameters>
<output>Возвращает TRUE, если файл существует и является символической ссылкой, иначе возвращает FALSE. </output>
<errors>В случае неудачного завершения работы генерируется ошибка уровня E_WARNING.</errors>
<example><?php
$link = 'uploads';
if (is_link($link)) {
    echo(readlink($link));
} else {
    symlink('uploads.php', $link);
}?></example>
<example_result></example_result>
</object>

<object id=1853> 
<name>ldap_add</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Добавить запись в LDAP директорию</short-description>
<description>bool ldap_add ( resource $link_identifier , string $dn , array $entry ) 
 Добавляет запись в LDAP директорию. </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
dn - Отличительное имя LDAP объекта. 
entry - Массив, который определяет информацию о записи. Значения в записи индексируются индивидуальными атрибутами. В случае множественных значений для атрибута, они индексируются с использованием целых чисел, начиная с 0. <?php
$entree["attribut1"] = "value";
$entree["attribut2"][0] = "value1";
$entree["attribut2"][1] = "value2";
?> </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$ds = ldap_connect("localhost");  // предположим, что сервер LDAP находится тут
if ($ds) {
    // привязка к соответствующему dn для возможности обновления
    $r = ldap_bind($ds, "cn=root, o=My Company, c=US", "secret");
    // prepare data
    $info["cn"] = "John Jones";
    $info["sn"] = "Jones";
    $info["mail"] = "jonj@example.com";
    $info["objectclass"] = "person";
    // Добавление данных
    $r = ldap_add($ds, "cn=John Jones, o=My Company, c=US", $info);
    ldap_close($ds);
} else {
    echo "Не могу соединиться с сервером LDAP";
}?></example>
<example_result></example_result>
</object>

<object id=1854> 
<name>com_print_typeinfo</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Print out a PHP class definition for a dispatchable interface</short-description>
<description>bool com_print_typeinfo ( object $comobject [, string $dispinterface [, bool $wantsink = false ]] ) 
 The purpose of this function is to help generate a skeleton class for use as an event sink. You may also use it to generate a dump of any COM object, provided that it supports enough of the introspection interfaces, and that you know the name of the interface you want to display. </description>
<parameters>comobject - comobject should be either an instance of a COM object, or be the name of a typelibrary (which will be resolved according to the rules set out in com_load_typelib()). 
dispinterface - The name of an IDispatch descendant interface that you want to display. 
wantsink - If set to TRUE, the corresponding sink interface will be displayed instead. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1855> 
<name>pg_free_result</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Очистка результата запроса и освобождение памяти</short-description>
<description>bool pg_free_result ( resource $result ) 
 pg_free_result() освобождает память, занятую результатом запроста PostgreSQL resource. 
 Вызывать эту функцию следует только в случае нехватки памяти при выполнении скрипта. В любом случае память будет освобождена автоматически по окончании работы скрипта. 
 Замечание: 
 Прежнее название функции: pg_freeresult(). </description>
<parameters>result - Ресурс результата запроса PostgreSQL, возвращаемый функциями pg_query(), pg_query_params() или pg_execute() (в числе прочих). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$db = pg_connect("dbname=users user=me") || die();
$res = pg_query($db, "SELECT 1 UNION ALL SELECT 2");
$val = pg_fetch_result($res, 1, 0);
echo "Первое поле во второй строчке: ", $val, "\n";
pg_free_result($res);
?></example>
<example_result>
 
Первое поле во второй строчке: 2
</example_result>
</object>

<object id=1856> 
<name>sqlite_column</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Выбирает столбец из текущей записи результата запроса</short-description>
<description>mixed sqlite_column ( resource $result , mixed $index_or_name [, bool $decode_binary = true ] ) mixed SQLiteResult::column ( mixed $index_or_name [, bool $decode_binary = true ] )</description>
<parameters>result - Ресурс результата SQLite. Этот параметр не требуется при использовании объектно-ориентированного метода. 
index_or_name - Индекс или имя возвращаемого столбца. 
decode_binary - Когда параметрdecode_binary установлен в TRUE (по умолчанию),PHP будет декодировать бинарный код, примененный к данным, как если бы они были закодированы функциейsqlite_escape_string(). Обычно вам следует оставлятьэто значение по умолчанию, если только вы не работаете с базой данныхsqlite, которая была создана в ином приложении.</parameters>
<output>Возвращает значение столбца. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1857> 
<name>mysql_fetch_lengths</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает длину каждого поля в результате</short-description>
<description>array mysql_fetch_lengths ( resource $result ) 
 Возвращает массив длин для каждого поля, содержащегося в последнем ряду результата, полученном из MySQL. 
 mysql_fetch_lengths() возвращает длины каждого поля, содержащегося в последнем ряду, обработанном функциями mysql_fetch_row(), mysql_fetch_assoc(), mysql_fetch_array() и mysql_fetch_object() в массиве, начинающемся с 0. </description>
<parameters>result - Обрабатываемый результат запроса.Этот результат может быть получен с помощью функции mysql_query().</parameters>
<output>Массив (array) длин в случае успеха или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$result = mysql_query("SELECT id,email FROM people WHERE id = '42'");
if (!$result) {
    echo 'Ошибка выполнения запроса: ' . mysql_error();
    exit;
}$row     = mysql_fetch_assoc($result);
$lengths = mysql_fetch_lengths($result);
print_r($row);
print_r($lengths);
?></example>
<example_result>
 
Array
(
    [id] => 42
    [email] => user@example.com
)
Array
(
    [0] => 2
    [1] => 16
)
</example_result>
</object>

<object id=1858> 
<name>odbc_fetch_array</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Fetch a result row as an associative array</short-description>
<description>array odbc_fetch_array ( resource $result [, int $rownumber ] ) 
 Fetch an associative array from an ODBC query. See the changelog below for when this function is available. </description>
<parameters>result - The result resource from odbc_exec(). 
rownumber - Optionally choose which row number to retrieve. </parameters>
<output>Returns an array that corresponds to the fetched row, or FALSE if there are no more rows. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1859> 
<name>strtoupper</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Преобразует строку в верхний регистр</short-description>
<description>string strtoupper ( string $string ) 
 Возвращает строку string, в которой все буквенные символы переведены в верхний регистр. 
 Принадлежность того или иного символа к буквенным определяется с учетом текущей локали. Это означает, что, например, в используемой по умолчанию локали "C", символ ä не будет преобразован. </description>
<parameters>string - Входная строка. </parameters>
<output>Возвращает строку в верхнем регистре. </output>
<errors></errors>
<example><?php
$str = "Mary Had A Little Lamb and She LOVED It So";
$str = strtoupper($str);
echo $str; // выводит: MARY HAD A LITTLE LAMB AND SHE LOVED IT SO
?></example>
<example_result></example_result>
</object>

<object id=1860> 
<name>socket_set_option</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Sets socket options for the socket</short-description>
<description>bool socket_set_option ( resource $socket , int $level , int $optname , mixed $optval ) 
 The socket_set_option() function sets the option specified by the optname parameter, at the specified protocol level, to the value pointed to by the optval parameter for the socket. </description>
<parameters>socket - A valid socket resource created with socket_create() or socket_accept(). 
level - The level parameter specifies the protocol level at which the option resides. For example, to retrieve options at the socket level, a level parameter of SOL_SOCKET would be used. Other levels, such as TCP, can be used by specifying the protocol number of that level. Protocol numbers can be found by using the getprotobyname() function. 
optname - The available socket options are the same as those for the socket_get_option() function. 
optval - The option value. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$socket = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);
if (!is_resource($socket)) {
    echo 'Unable to create socket: '. socket_strerror(socket_last_error()) . PHP_EOL;
}
if (!socket_set_option($socket, SOL_SOCKET, SO_REUSEADDR, 1)) {
    echo 'Unable to set option on socket: '. socket_strerror(socket_last_error()) . PHP_EOL;
}
if (!socket_bind($socket, '127.0.0.1', 1223)) {
    echo 'Unable to bind socket: '. socket_strerror(socket_last_error()) . PHP_EOL;
}
$rval = socket_get_option($socket, SOL_SOCKET, SO_REUSEADDR);
if ($rval === false) {
    echo 'Unable to get socket option: '. socket_strerror(socket_last_error()) . PHP_EOL;
} else if ($rval !== 0) {
    echo 'SO_REUSEADDR is set on socket !' . PHP_EOL;
}?></example>
<example_result></example_result>
</object>

<object id=1861> 
<name>pg_lo_open</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Открывает большой объект базы данных</short-description>
<description>resource pg_lo_open ( resource $connection , int $oid , string $mode ) 
 pg_lo_open() открывает большой объект базы данных и возвращает его ресурс. Внимание 
 Не следует закрывать соединение с базой данных до того, как завершится работа с большим объектом. </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). 
oid - OID большого объекта в базе данных. 
mode - Режим доступа к объекту. Возможные значения: "r" - только для чтения, "w" - только для записи, "rw" - для чтения и записи. </parameters>
<output>Ресурс большого объекта, либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
   $database = pg_connect("dbname=jacarta");
   pg_query($database, "begin");
   $oid = pg_lo_create($database);
   echo "$oid\n";
   $handle = pg_lo_open($database, $oid, "w");
   echo "$handle\n";
   pg_lo_write($handle, "large object data");
   pg_lo_close($handle);
   pg_query($database, "commit");
?></example>
<example_result></example_result>
</object>

<object id=1862> 
<name>set_time_limit</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Limits the maximum execution time</short-description>
<description>void set_time_limit ( int $seconds ) 
 Set the number of seconds a script is allowed to run. If this is reached, the script returns a fatal error. The default limit is 30 seconds or, if it exists, the max_execution_time value defined in the php.ini. 
 When called, set_time_limit() restarts the timeout counter from zero. In other words, if the timeout is the default 30 seconds, and 25 seconds into script execution a call such as set_time_limit(20) is made, the script will run for a total of 45 seconds before timing out. </description>
<parameters>seconds - The maximum execution time, in seconds. If set to zero, no time limit is imposed. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1863> 
<name>ocicolumnname</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_field_name()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1864> 
<name>bind_textdomain_codeset</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Устанавливает кодировку, в которой будут возвращаться сообщения из каталога сообщений домена</short-description>
<description>string bind_textdomain_codeset ( string $domain , string $codeset ) 
 Функция bind_textdomain_codeset() устанавливает кодировку, в которой будут возвращаться сообщения из domain, такими функциями как gettext(). </description>
<parameters>domain - Домен. 
codeset - Кодировка. </parameters>
<output>Строка в случае успеха. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1865> 
<name>fbsql_field_flags</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Get the flags associated with the specified field in a result</short-description>
<description>string fbsql_field_flags ( resource $result [, int $field_offset ] ) 
 Gets the flags associated with the specified field in a result. </description>
<parameters>result - A result pointer returned by fbsql_list_fields(). 
field_offset - The numerical offset of the field. The field index starts at 0. </parameters>
<output>Returns the field flags of the specified field as a single word per flag separated by a single space, so that you can split the returned value using explode(). </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1866> 
<name>vpopmail_add_user</name>
<versions>(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)</versions>
<short-description>Add a new user to the specified virtual domain</short-description>
<description>bool vpopmail_add_user ( string $user , string $domain , string $password [, string $gecos [, bool $apop ]] ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1867> 
<name>vpopmail_alias_get_all</name>
<versions>(PHP 4 >= 4.0.7, PECL vpopmail >= 0.2)</versions>
<short-description>Get all lines of an alias for a domain</short-description>
<description>array vpopmail_alias_get_all ( string $domain ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1868> 
<name>ingres_rollback</name>
<versions>(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)</versions>
<short-description>Roll back a transaction</short-description>
<description>bool ingres_rollback ( resource $link ) 
 ingres_rollback() rolls back the currently open transaction, actually cancelling all changes made to the database during the transaction. 
 This closes the transaction. A new transaction can be opened by sending a query with ingres_query(). </description>
<parameters>link - The connection link identifier </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1869> 
<name>ini_set</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Sets the value of a configuration option</short-description>
<description>string ini_set ( string $varname , string $newvalue ) 
 Sets the value of the given configuration option. The configuration option will keep this new value during the script&#039;s execution, and will be restored at the script&#039;s ending. </description>
<parameters>varname - 
newvalue - The new value for the option. </parameters>
<output>Returns the old value on success, FALSE on failure. </output>
<errors></errors>
<example><?php
echo ini_get('display_errors');
if (!ini_get('display_errors')) {
    ini_set('display_errors', 1);
}
echo ini_get('display_errors');
?></example>
<example_result></example_result>
</object>

<object id=1870> 
<name>filectime</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает время изменения индексного дескриптора файла</short-description>
<description>int filectime ( string $filename ) 
 Возвращает время изменения индексного дескриптора (inode) файла. </description>
<parameters>filename - Путь к файлу. </parameters>
<output>Возвращает время последнего изменения файла, или FALSE в случае возникновения ошибки. Время возвращается в формате временной метки Unix. </output>
<errors>В случае неудачного завершения работы генерируется ошибка уровня E_WARNING.</errors>
<example><?php
// Пример вывода: Файл somefile.txt в последний раз был изменен: December 29 2002 22:16:23.
$filename = 'somefile.txt';
if (file_exists($filename)) {
    echo "Файл $filename в последний раз был изменен: " . date("F d Y H:i:s.", filectime($filename));
}
?></example>
<example_result></example_result>
</object>

<object id=1871> 
<name>PDF_close_pdi_page</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Close the page handle</short-description>
<description>bool PDF_close_pdi_page ( resource $p , int $page ) 
 Closes the page handle, and frees all page-related resources. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1872> 
<name>vpopmail_del_user</name>
<versions>(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)</versions>
<short-description>Delete a user from a virtual domain</short-description>
<description>bool vpopmail_del_user ( string $user , string $domain ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1873> 
<name>ocisetprefetch</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_set_prefetch()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1874> 
<name>ftp_fput</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Загружает предварительно открытый файл на FTP-сервер</short-description>
<description>bool ftp_fput ( resource $ftp_stream , string $remote_file , resource $handle , int $mode [, int $startpos = 0 ] ) 
 ftp_fput() загружает данные из файлового дескриптора в удалённый файл на FTP сервере. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером. 
remote_file - Путь к удалённому файлу. 
handle - Открытый файловый дескриптор локального файла. Чтение прекращается при достижении конца файла. 
mode - Режим передачи. Должен быть либо FTP_ASCII, либо FTP_BINARY. 
startpos - Позиция начала загрузки в удаленном файле.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// открыть файл для чтения
$file = 'somefile.txt';
$fp = fopen($file, 'r');
// установка соединения
$conn_id = ftp_connect($ftp_server);
// вход с именем пользователя и паролем
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);
// попытка закачивания файла
if (ftp_fput($conn_id, $file, $fp, FTP_ASCII)) {
    echo "Файл $file успешно загружен\n";
} else {
    echo "При закачке $file произошла проблема\n";
}
// закрываем соединение и дескриптор файла
ftp_close($conn_id);
fclose($fp);
?></example>
<example_result></example_result>
</object>

<object id=1875> 
<name>fbsql_field_type</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Get the type of the specified field in a result</short-description>
<description>string fbsql_field_type ( resource $result [, int $field_offset ] ) 
 fbsql_field_type() is similar to the fbsql_field_name() function, but the field type is returned instead. </description>
<parameters>result - Идентификатор результата запроса, полученный изfbsql_query() илиfbsql_db_query().
field_offset - The numerical offset of the field. The field index starts at 0. </parameters>
<output>Returns the field type, as a string. </output>
<errors></errors>
<example><?php
fbsql_connect("localhost", "_SYSTEM", "");
fbsql_select_db("wisconsin");
$result = fbsql_query("SELECT * FROM onek;");
$fields = fbsql_num_fields($result);
$rows   = fbsql_num_rows($result);
$i = 0;
$table = fbsql_field_table($result, $i);
echo "Your '" . $table . "' table has " . $fields . " fields and " . $rows . " records <br />";
echo "The table has the following fields <br />";
while ($i < $fields) {
    $type  = fbsql_field_type($result, $i);
    $name  = fbsql_field_name($result, $i);
    $len   = fbsql_field_len($result, $i);
    $flags = fbsql_field_flags($result, $i);
    echo $type . " " . $name . " " . $len . " " . $flags . "<br />";
    $i++;
}fbsql_close();
?></example>
<example_result></example_result>
</object>

<object id=1876> 
<name>mb_send_mail</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Send encoded mail</short-description>
<description>bool mb_send_mail ( string $to , string $subject , string $message [, string $additional_headers = NULL [, string $additional_parameter = NULL ]] ) 
 Sends email. Headers and messages are converted and encoded according to the mb_language() setting. It&#039;s a wrapper function for mail(), so see also mail() for details. </description>
<parameters>to - The mail addresses being sent to. Multiple recipients may be specified by putting a comma between each address in to. This parameter is not automatically encoded. 
subject - The subject of the mail. 
message - The message of the mail. 
additional_headers - additional_headers is inserted at the end of the header. This is typically used to add extra headers. Multiple extra headers are separated with a newline ("\n"). 
additional_parameter - additional_parameter is a MTA command line parameter. It is useful when setting the correct Return-Path header when using sendmail. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1877> 
<name>yp_match</name>
<versions>(PHP 4, PHP 5 <= 5.0.5)</versions>
<short-description>Returns the matched line</short-description>
<description>string yp_match ( string $domain , string $map , string $key ) 
 Returns the value associated with the passed key out of the specified map. </description>
<parameters>domain - The NIS domain name. 
map - The NIS map. 
key - This key must be exact. </parameters>
<output>Returns the value, or FALSE on errors. </output>
<errors></errors>
<example><?php
$entry = yp_match($domain, "passwd.byname", "joe");
echo "Matched entry is: " . $entry;
?></example>
<example_result>
 
joe:##joe:11111:100:Joe User:/home/j/joe:/usr/local/bin/bash
</example_result>
</object>

<object id=1878> 
<name>hw_Children</name>
<versions>(PHP 4)</versions>
<short-description>Object ids of children</short-description>
<description>array hw_children ( int $connection , int $objectID ) 
 Returns the identifiers of the collection children. </description>
<parameters>connection - The connection identifier. 
objectID - The object identifier. </parameters>
<output>Returns an array of object ids. Each id belongs to a child of the collection with ID objectID. The array contains all children both documents and collections. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1879> 
<name>openssl_get_privatekey</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Псевдоним openssl_pkey_get_private()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1880> 
<name>parse_url</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Разбирает URL и возвращает его компоненты</short-description>
<description>mixed parse_url ( string $url [, int $component = -1 ] ) 
 Эта функция разбирает URL и возвращает ассоциативный массив, содержащий все компоненты URL, которые в нём присутствуют. 
 Эта функция не предназначена для проверки на корректность данного URL, она только разбивает его на нижеперечисленные части. Частичные URL также принимаются, parse_url() пытается сделать всё возможное, чтобы разобрать их корректно. </description>
<parameters>url - URL для разбора. Недопустимые символы будут заменены на знаки подчёркивания _. 
component - Укажите одну из констант PHP_URL_SCHEME, PHP_URL_HOST, PHP_URL_PORT, PHP_URL_USER, PHP_URL_PASS, PHP_URL_PATH, PHP_URL_QUERY или PHP_URL_FRAGMENT, чтобы получить только конкретный компонент URL в виде строки (string). Исключением является указание PHP_URL_PORT, в этом случае возвращаемое значение будет типа integer. </parameters>
<output>При разборе значительно некорректных URL-адресов parse_url() может вернуть FALSE. </output>
<errors></errors>
<example><?php
$url = 'http://username:password@hostname/path?arg=value#anchor';
print_r(parse_url($url));
echo parse_url($url, PHP_URL_PATH);
?></example>
<example_result>
 
Array
(
    [scheme] => http
    [host] => hostname
    [user] => username
    [pass] => password
    [path] => /path
    [query] => arg=value
    [fragment] => anchor
)
/path
</example_result>
</object>

<object id=1881> 
<name>sin</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Синус</short-description>
<description>float sin ( float $arg ) 
 sin() возвращает синус параметра arg . Параметр arg задаётся в радианах. </description>
<parameters>arg - Значение в радианах </parameters>
<output>Синус угла arg </output>
<errors></errors>
<example><?php
// Точность зависит от ваших настроек точности
echo sin(deg2rad(60));  //  0.866025403 ...
echo sin(60);           // -0.304810621 ...
?></example>
<example_result></example_result>
</object>

<object id=1882> 
<name>sybase_deadlock_retry_count</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Sets the deadlock retry count</short-description>
<description>void sybase_deadlock_retry_count ( int $retry_count ) 
 Using sybase_deadlock_retry_count(), the number of retries can be defined in cases of deadlocks. By default, every deadlock is retried an infinite number of times or until the process is killed by Sybase, the executing script is killed (for instance, by set_time_limit()) or the query succeeds. </description>
<parameters>retry_count - Values for retry_count -1 Retry forever (default) 0 Do not retry n Retry n times </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1883> 
<name>current</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает текущий элемент массива</short-description>
<description>mixed current ( array &$array ) 
 У каждого массива имеется внутренний указатель на его "текущий" элемент, который инициализирован первым элементом, добавленным в массив. </description>
<parameters>array - Массив. </parameters>
<output>Функция current() просто возвращает значение элемента массива, на который указывает его внутренний указатель. Она не перемещает указатель куда бы то ни было. Если внутренний указатель находится за пределами списка элементов или массив пуст, current() возвращает FALSE. </output>
<errors></errors>
<example><?php
$transport = array('foot', 'bike', 'car', 'plane');
$mode = current($transport); // $mode = 'foot';
$mode = next($transport);    // $mode = 'bike';
$mode = current($transport); // $mode = 'bike';
$mode = prev($transport);    // $mode = 'foot';
$mode = end($transport);     // $mode = 'plane';
$mode = current($transport); // $mode = 'plane';
$arr = array();
var_dump(current($arr)); // bool(false)
$arr = array(array());
var_dump(current($arr)); // array(0) { }
?></example>
<example_result></example_result>
</object>

<object id=1884> 
<name>fbsql_clob_size</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Get the size of a CLOB</short-description>
<description>int fbsql_clob_size ( string $clob_handle [, resource $link_identifier ] ) 
 Returns the size of the given CLOB. </description>
<parameters>clob_handle - A CLOB handle, returned by fbsql_create_clob(). 
link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Returns the CLOB size as an integer, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1885> 
<name>popen</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Открывает файловый указатель процесса</short-description>
<description>resource popen ( string $command , string $mode ) 
 Открывает поток к процессу, выполняемую при помощи форка команды, заданной в параметре command. </description>
<parameters>command - Команда 
mode - Режим </parameters>
<output>Возвращает файловый указатель, идентичный возвращаемому функцией fopen(), за исключением того, что он односторонний (может быть использован только для чтения или записи) и должен быть закрыт при помощи pclose(). Этот указатель может быть использован с fgets(), fgetss() и fwrite(). Если в качестве режима указано &#039;r&#039;, файловый указатель аналогичен потоку вывода (STDOUT) команды, если же указано &#039;w&#039;, то файловый указатель аналогичен потоку ввода (STDIN) команды. </output>
<errors></errors>
<example><?php
$handle = popen("/bin/ls", "r");
?></example>
<example_result></example_result>
</object>

<object id=1886> 
<name>m_settimeout</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Set maximum transaction time (per trans)</short-description>
<description>int m_settimeout ( resource $conn , int $seconds ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
seconds - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1887> 
<name>strtok</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Разбивает строку на токены</short-description>
<description>string strtok ( string $str , string $token ) string strtok ( string $token )</description>
<parameters>str - Строка (string), разбиваемая на подстроки (токены). 
token - Разделитель строки str. </parameters>
<output>Токен (string). </output>
<errors></errors>
<example><?php
$string = "This is\tan example\nstring";
/* В качестве разделителей используем пробел, табуляцию и перевод строки */
$tok = strtok($string, " \n\t");
while ($tok !== false) {
    echo "Word=$tok<br />";
    $tok = strtok(" \n\t");
}?></example>
<example_result>
 
 string(0) ""
    string(9) "something"
</example_result>
</object>

<object id=1888> 
<name>ncurses_insch</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Insert character moving rest of line including character at current position </short-description>
<description>int ncurses_insch ( int $character ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>character - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1889> 
<name>ocilogoff</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_close()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1890> 
<name>swf_fonttracking</name>
<versions>(PHP 4)</versions>
<short-description>Set the current font tracking</short-description>
<description>void swf_fonttracking ( float $tracking ) 
 Set the font tracking to the value specified by the tracking parameter. This function is used to increase the spacing between letters and text, positive values increase the space and negative values decrease the space between letters. </description>
<parameters>tracking - The font tracking. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1891> 
<name>pspell_config_ignore</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Игнорирует слова длиной менее N символов</short-description>
<description>bool pspell_config_ignore ( int $dictionary_link , int $n ) 
 pspell_config_ignore() должна быть использвана для конфигурации до вызова pspell_new_config(). Эта функция позволяет пропускать короткие слова при проверке орфографии. </description>
<parameters>dictionary_link - 
n - Слова длиной менее n символов будут пропущены. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$pspell_config = pspell_config_create("en");
pspell_config_ignore($pspell_config, 5);
$pspell_link = pspell_new_config($pspell_config);
pspell_check($pspell_link, "abcd");    //Сообщение об ошибке не будет сгенерировано
?></example>
<example_result></example_result>
</object>

<object id=1892> 
<name>ibase_timefmt</name>
<versions>(PHP 4)</versions>
<short-description>Sets the format of timestamp, date and time type columns returned from queries</short-description>
<description>bool ibase_timefmt ( string $format [, int $columntype = IBASE_TIMESTAMP ] ) 
 Sets the format of timestamp, date or time type columns returned from queries. 
 You can set defaults for these formats with the PHP configuration directives ibase.timestampformat, ibase.dateformat and ibase.timeformat. 
 Замечание: 
 This function has been removed from PHP 5, use ini_set() instead. </description>
<parameters>format - Internally, the columns are formatted by c-function strftime(), so refer to its documentation regarding to the format of the string. 
columntype - columntype is one of the constants IBASE_TIMESTAMP, IBASE_DATE and IBASE_TIME. If omitted, defaults to IBASE_TIMESTAMP for backwards compatibility. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
/* InterBase 6 TIME-type columns will be returned in
 * the form '05 hours 37 minutes'. */
ibase_timefmt("%H hours %M minutes", IBASE_TIME);
?></example>
<example_result></example_result>
</object>

<object id=1893> 
<name>hw_DocByAnchor</name>
<versions>(PHP 4)</versions>
<short-description>Object id object belonging to anchor</short-description>
<description>int hw_docbyanchor ( int $connection , int $anchorID ) 
 Returns an th object id of the document to which anchorID belongs. </description>
<parameters>connection - The connection identifier. 
anchorID - The anchor identifier. </parameters>
<output>Returns the document object id. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1894> 
<name>shmop_close</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Закрытие блока разделяемой памяти</short-description>
<description>void shmop_close ( int $shmid ) 
 shmop_close() используется для завершения доступа к блоку разделяемой памяти. </description>
<parameters>shmid - Идентификатор блока памяти, возвращаемый функцией shmop_open() </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
shmop_close($shm_id);
?></example>
<example_result></example_result>
</object>

<object id=1895> 
<name>ereg</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Совпадение с регулярным выражением</short-description>
<description>int ereg ( string $pattern , string $string [, array &$regs ] ) 
 Ищет в строке string совпадения с регулярным выражением, заданным в pattern регистрозависимым образом. Внимание
 С версии PHP 5.3.0 эта функция считаетсяУСТАРЕВШЕЙ. Крайне не рекомендуется полагаться на эту возможность.</description>
<parameters>pattern - Регулярное выражение, чувствительное к регистру. 
string - Входная строка. 
regs - Если совпадения найдены для подстрок в скобках из pattern, и функция вызывается с третьим аргументом regs, совпадения будут сохранены в элементах массива regs. </parameters>
<output>Возвращает длину совпавшей строки, если совпадение c pattern найдено в string, или FALSE, если совпадений не было или возникла ошибка. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=1896> 
<name>ifx_affected_rows</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Get number of rows affected by a query</short-description>
<description>int ifx_affected_rows ( resource $result_id ) 
 Returns the number of rows affected by a query associated with result_id. 
 For inserts, updates and deletes the number is the real number (sqlerrd[2]) of affected rows. For selects it is an estimate (sqlerrd[0]). Don&#039;t rely on it. The database server can never return the actual number of rows that will be returned by a SELECT because it has not even begun fetching them at this stage (just after the "PREPARE" when the optimizer has determined the query plan). 
 Useful after ifx_prepare() to limit queries to reasonable result sets. </description>
<parameters>result_id - A valid result id returned by ifx_query() or ifx_prepare(). </parameters>
<output>Returns the number of rows as an integer. </output>
<errors></errors>
<example><?php
$rid = ifx_prepare("select * from emp
                     where name like " . $name, $connid);
if (! $rid) {
    /* ... error ... */
}
$rowcount = ifx_affected_rows($rid);
if ($rowcount > 1000) {
    printf ("Too many rows in result set (%d)\n<br />", $rowcount);
    die ("Please restrict your query<br />\n");
}?></example>
<example_result></example_result>
</object>

<object id=1897> 
<name>JDToGregorian</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Переводит число дней в Юлианском летоисчислении в дату по Григорианскому календарю </short-description>
<description>string jdtogregorian ( int $julianday ) 
 Переводит число дней в Юлианском летоисчислении в строку содержащую Григорианскую дату в формате "месяц/день/год". </description>
<parameters>julianday - Номер дня в Юлианском летоисчислении </parameters>
<output>Дата по Григорианскому календарю в виде строки формата "месяц/день/год" </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1898> 
<name>PDF_set_info_title</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Fill the title document info field [deprecated]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1899> 
<name>imagecreatefromwbmp</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Создает новое изображение из файла или URL</short-description>
<description>resource imagecreatefromwbmp ( string $filename ) 
 imagecreatefromwbmp() returns an image identifier representing the image obtained from the given filename. Подсказка
 Для этой функции вы можете использовать URLв качестве имени файла, если была включена опция fopen wrappers. Смотрите болееподробную информацию об определении имени файла в описании функцииfopen(). Смотрите также список поддерживаемых оберток URL, их возможности, замечания по использованию и списокпредопределенных констант в Поддерживаемые протоколы и обработчики (wrappers).</description>
<parameters>filename - Path to the WBMP image. </parameters>
<output>Возвращает ресурс изображения в случае успеха, или FALSE в случае ошибки.</output>
<errors></errors>
<example><?php
function LoadWBMP($imgname)
{    /* Attempt to open */
    $im = @imagecreatefromwbmp($imgname);
    /* See if it failed */
    if(!$im)
    {
        /* Create a blank image */
        $im  = imagecreatetruecolor(150, 30);
        $bgc = imagecolorallocate($im, 255, 255, 255);
        $tc  = imagecolorallocate($im, 0, 0, 0);
        imagefilledrectangle($im, 0, 0, 150, 30, $bgc);
        /* Output an error message */
        imagestring($im, 1, 5, 5, 'Error loading ' . $imgname, $tc);
    }
    return $im;
}
header('Content-Type: image/vnd.wap.wbmp');
$img = LoadWBMP('bogus.image');
imagewbmp($img);
imagedestroy($img);
?></example>
<example_result></example_result>
</object>

<object id=1900> 
<name>PDF_setmiterlimit</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set miter limit</short-description>
<description>bool PDF_setmiterlimit ( resource $pdfdoc , float $miter ) 
 Sets the miter limit.Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1901> 
<name>imap_utf8</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Converts MIME-encoded text to UTF-8</short-description>
<description>string imap_utf8 ( string $mime_encoded_text ) 
 Converts the given mime_encoded_text to UTF-8. </description>
<parameters>mime_encoded_text - A MIME encoded string. MIME encoding method and the UTF-8 specification are described in &raquo; RFC2047 and &raquo; RFC2044 respectively. </parameters>
<output>Returns an UTF-8 encoded string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1902> 
<name>hw_GetAndLock</name>
<versions>(PHP 4)</versions>
<short-description>Return object record and lock object</short-description>
<description>string hw_getandlock ( int $connection , int $objectID ) 
 Returns the object record for the object with ID objectID. It will also lock the object, so other users cannot access it until it is unlocked. </description>
<parameters>connection - The connection identifier. 
objectID - The object identifier. </parameters>
<output>Returns the object record for the object with ID objectID. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1903> 
<name>swf_shapecurveto3</name>
<versions>(PHP 4)</versions>
<short-description>Draw a cubic bezier curve</short-description>
<description>void swf_shapecurveto3 ( float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3 ) 
 Draw a cubic bezier curve using the given coordinates. 
 The current position is then set to the x3,y3 coordinate. </description>
<parameters>x1 - x-coordinate of the first off curve control point. 
y1 - y-coordinate of the first off curve control point. 
x2 - x-coordinate of the second off curve control point. 
y2 - y-coordinate of the second off curve control point. 
x3 - x-coordinate of the endpoint. 
y3 - y-coordinate of the endpoint. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1904> 
<name>pspell_config_personal</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Устанавливает файл, содержащий персональный список слов</short-description>
<description>bool pspell_config_personal ( int $dictionary_link , string $file ) 
 Устанавливает файл, содержащий персональный список слов. Персональный список слов будет загружен и использован в дополнение к стандартному после тго, как вы вызовите pspell_new_config(). Это тот же самый файл, в который функция pspell_save_wordlist() сохранит персональный список слов. 
 pspell_config_personal() должна быть использвана для конфигурации до вызова pspell_new_config(). </description>
<parameters>dictionary_link - 
file - Персональный список слов. Если файл не существует, он будет создан. Файл должен быть доступен для записи любому, кто запускает PHP (например, nobody). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$pspell_config = pspell_config_create("en");
pspell_config_personal($pspell_config, "/var/dictionaries/custom.pws");
$pspell_link = pspell_new_config($pspell_config);
pspell_check($pspell_link, "thecat");
?></example>
<example_result></example_result>
</object>

<object id=1905> 
<name>mcrypt_get_key_size</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the key size of the specified cipher</short-description>
<description>int mcrypt_get_key_size ( int $cipher ) int mcrypt_get_key_size ( string $cipher , string $module )</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example><?php
    echo mcrypt_get_key_size('tripledes', 'ecb');
?></example>
<example_result>
 
24
</example_result>
</object>

<object id=1906> 
<name>variant_imp</name>
<versions>(PHP 5)</versions>
<short-description>Performs a bitwise implication on two variants</short-description>
<description>mixed variant_imp ( mixed $left , mixed $right ) 
 Performs a bitwise implication operation. </description>
<parameters>left - The left operand. 
right - The right operand. </parameters>
<output>Variant Implication Table If left is If right is then the result is TRUETRUETRUE TRUEFALSETRUE TRUENULLTRUE FALSETRUETRUE FALSEFALSETRUE FALSENULLTRUE NULLTRUETRUE NULLFALSENULL NULLNULLNULL </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1907> 
<name>ocifetch</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_fetch()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1908> 
<name>pcntl_wstopsig</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Returns the signal which caused the child to stop</short-description>
<description>int pcntl_wstopsig ( int $status ) 
 Returns the number of the signal which caused the child to stop. This function is only useful if pcntl_wifstopped() returned TRUE. </description>
<parameters>status - Параметр status - этопараметр статуса, передаваемый для успешного вызова функции pcntl_waitpid().</parameters>
<output>Returns the signal number. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1909> 
<name>ftp_pwd</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает имя текущей директории</short-description>
<description>string ftp_pwd ( resource $ftp_stream ) 
 </description>
<parameters>ftp_stream - Идентификатор соединения с FTP сервером </parameters>
<output>Возвращает имя текущей директории, или FALSE при возникновении ошибки. </output>
<errors></errors>
<example><?php
// установка соединения
$conn_id = ftp_connect($ftp_server);
// проверка имени пользователя и пароля
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);
// смена текущей директории на public_html
ftp_chdir($conn_id, 'public_html');
// вывод имени текущей директории
echo ftp_pwd($conn_id); // /public_html
// закрытие соединения
ftp_close($conn_id);
?></example>
<example_result></example_result>
</object>

<object id=1910> 
<name>ldap_free_result</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Освободить память результата</short-description>
<description>bool ldap_free_result ( resource $result_identifier ) 
 Освобождает память, внутренне выделенную для хранения результата. Вся память результата будет автоматически освобождена, когда сценарий завершится. 
 Обычно вся память, выделенная для результата LDAP, освобождается в конеце сценария. В случае, если сценарий делает последовательные операции поиска, которые возвращают большие наборы результатов, ldap_free_result() может быть вызвана, чтобы сохранить небольшое использование памяти по время выполнения сценария. </description>
<parameters>result_identifier - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1911> 
<name>swf_actionsettarget</name>
<versions>(PHP 4)</versions>
<short-description>Set the context for actions</short-description>
<description>void swf_actionsettarget ( string $target ) 
 Sets the context for all actions. You can use this to control other flash movies that are currently playing. </description>
<parameters>target - The target, as a string. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1912> 
<name>sybase_field_seek</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Sets field offset</short-description>
<description>bool sybase_field_seek ( resource $result , int $field_offset ) 
 Seeks to the specified field offset. If the next call to sybase_fetch_field() won&#039;t include a field offset, this field would be returned. </description>
<parameters>result - 
field_offset - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1913> 
<name>m_getcellbynum</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Get a specific cell from a comma delimited response by column number</short-description>
<description>string m_getcellbynum ( resource $conn , int $identifier , int $column , int $row ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
identifier - 
column - 
row - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1914> 
<name>dl</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Loads a PHP extension at runtime</short-description>
<description>bool dl ( string $library ) 
 Loads the PHP extension given by the parameter library. 
 Use extension_loaded() to test whether a given extension is already available or not. This works on both built-in extensions and dynamically loaded ones (either through php.ini or dl()). Внимание 
 This function has been removed from some SAPIs in PHP 5.3. </description>
<parameters>library - This parameter is only the filename of the extension to load which also depends on your platform. For example, the sockets extension (if compiled as a shared module, not the default!) would be called sockets.so on Unix platforms whereas it is called php_sockets.dll on the Windows platform. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. If the functionality of loading modules is not available or has been disabled (either by setting enable_dl off or by enabling безопасный режим in php.ini) an E_ERROR is emitted and execution is stopped. If dl() fails because the specified library couldn&#039;t be loaded, in addition to FALSE an E_WARNING message is emitted. </output>
<errors></errors>
<example><?php
// Example loading an extension based on OS
if (!extension_loaded('sqlite')) {
    if (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') {
        dl('php_sqlite.dll');
    } else {
        dl('sqlite.so');
    }
}
// Or, the PHP_SHLIB_SUFFIX constant is available as of PHP 4.3.0
if (!extension_loaded('sqlite')) {
    $prefix = (PHP_SHLIB_SUFFIX === 'dll') ? 'php_' : '';
    dl($prefix . 'sqlite.' . PHP_SHLIB_SUFFIX);
}?></example>
<example_result></example_result>
</object>

<object id=1915> 
<name>ifx_free_blob</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Deletes the blob object</short-description>
<description>bool ifx_free_blob ( int $bid ) 
 Deletes the blobobject for the given blob object-id. </description>
<parameters>bid - The BLOB object id. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1916> 
<name>imagerotate</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Поворот изображения с заданным углом</short-description>
<description>resource imagerotate ( resource $image , float $angle , int $bgd_color [, int $ignore_transparent = 0 ] ) 
 Поворот изображения image на заданный угол angle в градусах. 
 Центром поворота является центр изображения. Поворачиваемое изображение может отличаться размером от оригинала. 
 </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
angle - Угол поворота в градусах против часовой стрелки. 
bgd_color - Цвет фона свободной зоны после поворота. 
ignore_transparent - Если установлено и не равно нулю, прозрачность игнорируются (иначе сохраняется). </parameters>
<output>Возвращает ресурс повёрнутого изображения в случае успеха, или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=1917> 
<name>dbplus_close</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Close a relation</short-description>
<description>mixed dbplus_close ( resource $relation ) 
 Closes a relation previously opened by dbplus_open(). </description>
<parameters>relation - A relation opened by dbplus_open(). </parameters>
<output>Returns TRUE on success or DBPLUS_ERR_UNKNOWN on failure. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1918> 
<name>func_get_arg</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает элемент из списка аргументов</short-description>
<description>mixed func_get_arg ( int $arg_num ) 
 Возвращает указанный аргумент из списка аргументов пользовательской функции. 
 Эта функция может быть использована совместно с func_get_args() и func_num_args() для создания функций с переменным количеством аргументов. </description>
<parameters>arg_num - Номер аргумента. Аргументы функции считаются с нуля. </parameters>
<output>Возвращает указанный аргумент, или FALSE в случае ошибки. </output>
<errors>Генерирует предупреждение при вызове вне определения функции, или если arg_num больше реально переданного количества аргументов. </errors>
<example><?php
function foo()
{     $numargs = func_num_args();
     echo "Количество аргументов: $numargs<br />\n";
     if ($numargs >= 2) {
         echo "Второй аргумент: " . func_get_arg(1) . "<br />\n";
     }
}
foo (1, 2, 3);
?></example>
<example_result>
 
&#039;Второй аргумент&#039;
</example_result>
</object>

<object id=1919> 
<name>pg_end_copy</name>
<versions>(PHP 4 >= 4.0.3, PHP 5)</versions>
<short-description>Синхронизирует с бэкендом PostgreSQL</short-description>
<description>bool pg_end_copy ([ resource $connection ] ) 
 pg_end_copy() синхронизирует данные между фронтендом PostgreSQL (обычно процессом веб-сервера) и сервером PostgreSQL после завершения копирования данных, совершенных с помощью функции pg_put_line(). Использование pg_end_copy() необходимо, чтобы избежать рассинхронизации сервера PostgreSQL с фронтендом и сообщений об ошибках. </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
  $conn = pg_pconnect("dbname=foo");
  pg_query($conn, "create table bar (a int4, b char(16), d float8)");
  pg_query($conn, "copy bar from stdin");
  pg_put_line($conn, "3\thello world\t4.5\n");
  pg_put_line($conn, "4\tgoodbye world\t7.11\n");
  pg_put_line($conn, "\\.\n");
  pg_end_copy($conn);
?></example>
<example_result></example_result>
</object>

<object id=1920> 
<name>openssl_pkcs7_sign</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Sign an S/MIME message</short-description>
<description>bool openssl_pkcs7_sign ( string $infilename , string $outfilename , mixed $signcert , mixed $privkey , array $headers [, int $flags = PKCS7_DETACHED [, string $extracerts ]] ) 
 openssl_pkcs7_sign() takes the contents of the file named infilename and signs them using the certificate and its matching private key specified by signcert and privkey parameters. </description>
<parameters>infilename - 
outfilename - 
signcert - 
privkey - 
headers - headers is an array of headers that will be prepended to the data after it has been signed (see openssl_pkcs7_encrypt() for more information about the format of this parameter). 
flags - flags can be used to alter the output - see PKCS7 constants. 
extracerts - extracerts specifies the name of a file containing a bunch of extra certificates to include in the signature which can for example be used to help the recipient to verify the certificate that you used. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// the message you want to sign so that recipient can be sure it was you that
// sent it
$data = <<<EOD

You have my authorization to spend $10,000 on dinner expenses.
The CEO
EOD;
// save message to file
$fp = fopen("msg.txt", "w");
fwrite($fp, $data);
fclose($fp);
// encrypt it
if (openssl_pkcs7_sign("msg.txt", "signed.txt", "mycert.pem",
    array("file://mycert.pem", "mypassphrase"),
    array("To" => "joes@example.com", // keyed syntax
          "From: HQ <ceo@example.com>", // indexed syntax
          "Subject" => "Eyes only")
    )) {
    // message signed - send it!
    exec(ini_get("sendmail_path") . " < signed.txt");
}?></example>
<example_result></example_result>
</object>

<object id=1921> 
<name>swf_actionnextframe</name>
<versions>(PHP 4)</versions>
<short-description>Go forward one frame</short-description>
<description>void swf_actionnextframe ( void ) 
 Go forward one frame. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1922> 
<name>clearstatcache</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Очищает кэш состояния файлов</short-description>
<description>void clearstatcache ([ bool $clear_realpath_cache = false [, string $filename ]] ) 
 Для обеспечения большей производительности при использовании функций stat(), lstat() или любой другой функции, перечисленных в приведенном ниже списке, PHP кеширует результаты их выполнения. Однако, в некоторых случаях вам может потребоваться очистка этого кэша. Например, когда ваш скрипт несколько раз проверяет состояние одного и того же файла, который может быть изменен или удален во время выполнения скрипта, вы можете захотеть очистить кэш состояния. В этом случае необходимо использовать функцию clearstatcache() для очистки в PHP кэшированной информации об указанном файле. 
 Обратите внимание, что PHP не кэширует информацию о несуществующих файлах. Так что если вы вызовите file_exists() на несуществующем файле, она будет возвращать FALSE до тех пор, пока вы не создадите этот файл. Если же вы создадите файл, она будет возвращать TRUE даже если затем вы его удалите. Однако, функция unlink() очистит данный кэш автоматически. 
 Замечание: 
 Данная фукнция кэширует информацию об определенных файлах, поэтому имеет смысл вызывать clearstatcache() только в том случае, если вы совершаете несколько операций с одним и тем же файлом и не хотите получать кэшированную информацию об этом файле. 
 Список функций, результаты выполнения которых кешируются: stat(), lstat(), file_exists(), is_writable(), is_readable(), is_executable(), is_file(), is_dir(), is_link(), filectime(), fileatime(), filemtime(), fileinode(), filegroup(), fileowner(), filesize(), filetype() и fileperms(). </description>
<parameters>clear_realpath_cache - Очищать кэш realpath или нет. 
filename - Очистить кэш realpath для определенного файла, используется только если параметр clear_realpath_cache установлен в TRUE. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
$file = 'output_log.txt';
function get_owner($file)
{    $stat = stat($file);
    $user = posix_getpwuid($stat['uid']);
    return $user['name'];
}
$format = "UID @ %s: %s\n";
printf($format, date('r'), get_owner($file));
chown($file, 'ross');
printf($format, date('r'), get_owner($file));
clearstatcache();
printf($format, date('r'), get_owner($file));
?></example>
<example_result>
 
UID @ Sun, 12 Oct 2008 20:48:28 +0100: root
UID @ Sun, 12 Oct 2008 20:48:28 +0100: root
UID @ Sun, 12 Oct 2008 20:48:28 +0100: ross
</example_result>
</object>

<object id=1923> 
<name>ifxus_write_slob</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Writes a string into the slob object</short-description>
<description>int ifxus_write_slob ( int $bid , string $content ) 
 Writes a string into the slob object. </description>
<parameters>bid - An existing slob id. 
content - The content to write, as a string. </parameters>
<output>Returns the bytes written as an integer, or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1924> 
<name>exif_read_data</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Reads the EXIF headers from JPEG or TIFF</short-description>
<description>array exif_read_data ( string $filename [, string $sections = NULL [, bool $arrays = false [, bool $thumbnail = false ]]] ) 
 exif_read_data() reads the EXIF headers from a JPEG or TIFF image file. This way you can read meta data generated by digital cameras. 
 EXIF headers tend to be present in JPEG/TIFF images generated by digital cameras, but unfortunately each digital camera maker has a different idea of how to actually tag their images, so you can&#039;t always rely on a specific Exif header being present. 
 Height and Width are computed the same way getimagesize() does so their values must not be part of any header returned. Also, html is a height/width text string to be used inside normal HTML. 
 When an Exif header contains a Copyright note, this itself can contain two values. As the solution is inconsistent in the Exif 2.10 standard, the COMPUTED section will return both entries Copyright.Photographer and Copyright.Editor while the IFD0 sections contains the byte array with the NULL character that splits both entries. Or just the first entry if the datatype was wrong (normal behaviour of Exif). The COMPUTED will also contain the entry Copyright which is either the original copyright string, or a comma separated list of the photo and editor copyright. 
 The tag UserComment has the same problem as the Copyright tag. It can store two values. First the encoding used, and second the value itself. If so the IFD section only contains the encoding or a byte array. The COMPUTED section will store both in the entries UserCommentEncoding and UserComment. The entry UserComment is available in both cases so it should be used in preference to the value in IFD0 section. 
 exif_read_data() also validates EXIF data tags according to the EXIF specification (&raquo; http://exif.org/Exif2-2.PDF, page 20). 
 Замечание: 
 Windows Me/XP can both wipe the Exif headers when connecting to a camera. </description>
<parameters>filename - The name of the image file being read. This cannot be an URL. 
sections - Is a comma separated list of sections that need to be present in file to produce a result array. If none of the requested sections could be found the return value is FALSE. FILE FileName, FileSize, FileDateTime, SectionsFound COMPUTED html, Width, Height, IsColor, and more if available. Height and Width are computed the same way getimagesize() does so their values must not be part of any header returned. Also, html is a height/width text string to be used inside normal HTML. ANY_TAG Any information that has a Tag e.g. IFD0, EXIF, ... IFD0 All tagged data of IFD0. In normal imagefiles this contains image size and so forth. THUMBNAIL A file is supposed to contain a thumbnail if it has a second IFD. All tagged information about the embedded thumbnail is stored in this section. COMMENT Comment headers of JPEG images. EXIF The EXIF section is a sub section of IFD0. It contains more detailed information about an image. Most of these entries are digital camera related. 
arrays - Specifies whether or not each section becomes an array. The sections COMPUTED, THUMBNAIL, and COMMENT always become arrays as they may contain values whose names conflict with other sections. 
thumbnail - When set to TRUE the thumbnail itself is read. Otherwise, only the tagged data is read. </parameters>
<output>It returns an associative array where the array indexes are the header names and the array values are the values associated with those headers. If no data can be returned, exif_read_data() will return FALSE. </output>
<errors></errors>
<example><?php
echo "test1.jpg:<br />\n";
$exif = exif_read_data('tests/test1.jpg', 'IFD0');
echo $exif===false ? "No header data found.<br />\n" : "Image contains headers<br />\n";
$exif = exif_read_data('tests/test2.jpg', 0, true);
echo "test2.jpg:<br />\n";
foreach ($exif as $key => $section) {
    foreach ($section as $name => $val) {
        echo "$key.$name: $val<br />\n";
    }
}?></example>
<example_result>
 
test1.jpg:
No header data found.
test2.jpg:
FILE.FileName: test2.jpg
FILE.FileDateTime: 1017666176
FILE.FileSize: 1240
FILE.FileType: 2
FILE.SectionsFound: ANY_TAG, IFD0, THUMBNAIL, COMMENT
COMPUTED.html: width="1" height="1"
COMPUTED.Height: 1
COMPUTED.Width: 1
COMPUTED.IsColor: 1
COMPUTED.ByteOrderMotorola: 1
COMPUTED.UserComment: Exif test image.
COMPUTED.UserCommentEncoding: ASCII
COMPUTED.Copyright: Photo (c) M.Boerger, Edited by M.Boerger.
COMPUTED.Copyright.Photographer: Photo (c) M.Boerger
COMPUTED.Copyright.Editor: Edited by M.Boerger.
IFD0.Copyright: Photo (c) M.Boerger
IFD0.UserComment: ASCII
THUMBNAIL.JPEGInterchangeFormat: 134
THUMBNAIL.JPEGInterchangeFormatLength: 523
COMMENT.0: Comment #1.
COMMENT.1: Comment #2.
COMMENT.2: Comment #3end
THUMBNAIL.JPEGInterchangeFormat: 134
THUMBNAIL.Thumbnail.Height: 1
THUMBNAIL.Thumbnail.Height: 1
</example_result>
</object>

<object id=1925> 
<name>PDF_begin_template</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Start template definition [deprecated]</short-description>
<description>int PDF_begin_template ( resource $pdfdoc , float $width , float $height ) 
 Starts a new template definition. 
 This function is deprecated since PDFlib version 7, use PDF_begin_template_ext() instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1926> 
<name>ibase_rollback</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Roll back a transaction</short-description>
<description>bool ibase_rollback ([ resource $link_or_trans_identifier = NULL ] ) 
 Rolls back a transaction. </description>
<parameters>link_or_trans_identifier - If called without an argument, this function rolls back the default transaction of the default link. If the argument is a connection identifier, the default transaction of the corresponding connection will be rolled back. If the argument is a transaction identifier, the corresponding transaction will be rolled back. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1927> 
<name>ifx_textasvarchar</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Set the default text mode</short-description>
<description>bool ifx_textasvarchar ( int $mode ) 
 Sets the default text mode for all select-queries. </description>
<parameters>mode - Mode "0" will return a blob id, and mode "1" will return a varchar with text content. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1928> 
<name>XMLWriter::startDocument</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Создать тэг документа</short-description>
<description>bool XMLWriter::startDocument ([ string $version [, string $encoding [, string $standalone ]]] ) 
 Процедурный стиль bool xmlwriter_start_document ( resource $xmlwriter [, string $version [, string $encoding [, string $standalone = NULL ]]] )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
version - Номер версии документа как часть объявления XML. По умолчанию 1.0. 
encoding - Кодировка документа как часть объявления XML. По умолчанию NULL. 
standalone - yes или no. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1929> 
<name>trigger_error</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Вызывает пользовательскую ошибку/предупреждение/уведомление </short-description>
<description>bool trigger_error ( string $error_msg [, int $error_type = E_USER_NOTICE ] ) 
 Используется для вызова пользовательских ошибок, можно использовать в связке с встроенным обработчиком ошибок, а также с пользовательским обработчиком, заданным функцией set_error_handler(). 
 Эта функция может быть полезной, если требуется сгенерировать определенную реакцию на исключение во время выполнения. </description>
<parameters>error_msg - Сообщение, соответствующее этой ошибке. Ограничено 1024 символами в длину. Символы дальше 1024-го будут обрезаны. 
error_type - Назначенный тип ошибки. Работает только с семейством констант E_USER. По умолчанию E_USER_NOTICE. </parameters>
<output>Функция возвращает FALSE, если задан неправильный error_type, и TRUE в остальных случаях. </output>
<errors></errors>
<example>
 set_error_handler(). </example>
<example_result></example_result>
</object>

<object id=1930> 
<name>pg_parameter_status</name>
<versions>(PHP 5)</versions>
<short-description>Просмотр текущих значений параметров сервера</short-description>
<description>string pg_parameter_status ([ resource $connection ], string $param_name ) 
 Получает текущее значение заданного параметра сервера. 
 Значения некоторых параметров сервер сообщает автоматически при установлении подключения или при изменении данных значений. Функция pg_parameter_status() может запрашивать подобные значения. Она возвращает значение параметра, если оно определено, либо FALSE в случае ошибки. 
 Список параметров серверов PostgreSQL версий 8.0 и выше: server_version, server_encoding, client_encoding, is_superuser, session_authorization, DateStyle, TimeZone, и integer_datetimes. (server_encoding, TimeZone, и integer_datetimes не определяются для версий ниже 8.0.) Стоит отметить, что значения server_version, server_encoding и integer_datetimes нельзя изменить после запуска PostgreSQL. 
 Несмотря на то, что PostgreSQL версий 7.3 и ниже не сообщают значений своих параметров, pg_parameter_status() позволяет определить значения параметров server_version и client_encoding. Для определения значений этих параметров предпочтительней использовать pg_parameter_status(), нежели специально разрабатывать другие функции. Предостережение 
 Если при использовании сервера PostgreSQL версий 7.4 и ниже изменить параметр client_encoding посредством команды сервера SET уже после установки соединения, функция pg_parameter_status() не сможет отразить этот факт. </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). 
param_name - Допустимые значения аргумента: server_version, server_encoding, client_encoding, is_superuser, session_authorization, DateStyle, TimeZone и integer_datetimes. </parameters>
<output>Значение запрашиваемого параметра в виде строки, либо FALSE, если передан недопустимый параметр. </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Невозможно соединиться с сервером");
  echo "Кодировка сервера: ", pg_parameter_status($dbconn, "server_encoding");
?></example>
<example_result>
 
Кодировка сервера: SQL_ASCII
</example_result>
</object>

<object id=1931> 
<name>fbsql_username</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Get or set the username for the connection</short-description>
<description>string fbsql_username ( resource $link_identifier [, string $username ] ) 
 Get or set the username used for the connection. </description>
<parameters>link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().
username - If provided, this is the new username to set. </parameters>
<output>Returns the current username used with the connection, as a string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1932> 
<name>xml_parse_into_struct</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Разбор XML данных и помещение в массив </short-description>
<description>int xml_parse_into_struct ( resource $parser , string $data , array &$values [, array &$index ] ) 
 Эта функция разбирает XML строку и помещает данные в 2 массива. Массив index содержит указатели на размещение значений в массиве values. Аргументы, задающие массивы, должны передаваться в функцию по ссылке. </description>
<parameters>parser - Ссылка на используемый XML анализатор. 
data - Строка XML данных. 
values - Массив значений XML данных. 
index - Массив указателей на соответствующие значения в массиве $values. </parameters>
<output>xml_parse_into_struct() возвращает 0 при неудачном разборе строки и 1 при успешном. Это не тоже самое, что FALSE и TRUE, будьте осторожны с такими операторами, как ===. </output>
<errors></errors>
<example><?php
$simple = "<para><note>simple note</note></para>";
$p = xml_parser_create();
xml_parse_into_struct($p, $simple, $vals, $index);
xml_parser_free($p);
echo "Index array\n";
print_r($index);
echo "\nМассив Vals\n";
print_r($vals);
?></example>
<example_result>
 
Index array
Array
(
    [PARA] => Array
        (
            [0] => 0
            [1] => 2
        )

    [NOTE] => Array
        (
            [0] => 1
        )

)

Массив Vals
Array
(
    [0] => Array
        (
            [tag] => PARA
            [type] => open
            [level] => 1
        )

    [1] => Array
        (
            [tag] => NOTE
            [type] => complete
            [level] => 2
            [value] => simple note
        )

    [2] => Array
        (
            [tag] => PARA
            [type] => close
            [level] => 1
        )

)
</example_result>
</object>

<object id=1933> 
<name>ncurses_wnoutrefresh</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Copies window to virtual screen</short-description>
<description>int ncurses_wnoutrefresh ( resource $window ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>window - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1934> 
<name>ldap_delete</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Удаляет запись из директории LDAP</short-description>
<description>bool ldap_delete ( resource $link_identifier , string $dn ) 
 Удаление конкретной записи из директории LDAP. </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращаемый ldap_connect(). 
dn - Уникальное имя LDAP записи. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1935> 
<name>xml_set_element_handler</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Установка обработчика начального и конечного элементов </short-description>
<description>bool xml_set_element_handler ( resource $parser , callback $start_element_handler , callback $end_element_handler ) 
 Устанавливает функцию обработчик элементов для XML анализатора parser. start_element_handler и end_element_handler - строки, содержащие имена функций, которые должны быть определены на момент вызова функции xml_parse() из анализатора parser. </description>
<parameters>parser - Ссылка на XML анализатор. 
start_element_handler - Функция с именем start_element_handler должна принимать три аргумента: start_element_handler ( resource $parser , string $name , array $attribs ) parser Первый аргумент parser является ссылкой на XML анализатор вызывающий обработчик. name Второй аргумент name содержит имя элемента, для которого этот обработчик вызывается. Если настройка case-folding включена для этого анализатора, имя элемента будет в верхнем регистре. attribs Третий аргумент attribs содержит ассоциативный массив с атрибутами элемента (если есть). Индексами этого массива будут имена атрибутов, а значения массива будут соответствовать значениям атрибутов. Имена атрибутов должны быть приведены к регистру в соответствии с теми же критериями, что и имена элементов. Значения атрибутов не приводятся к какому-либо регистру. Атрибуты извлекаются из элемента в порядке прямого обхода по attribs, используя функцию each().Первый индекс в массиве соответствует первому атрибуту и так далее. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1936> 
<name>gmp_div_qr</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Деление чисел и получение частного и остатка</short-description>
<description>array gmp_div_qr ( resource $n , resource $d [, int $round = GMP_ROUND_ZERO ] ) 
 Функция делит n на d. </description>
<parameters>n - Делимое. 
d - Делитель числа n. 
round - В документации к функции gmp_div_q() приведено описание аргумента round. </parameters>
<output>Возвращает массив (array), в котором первый элемент содержит [n/d] (целое частное), а второй (n - [n/d] * d) (остаток от деления). </output>
<errors></errors>
<example><?php
     $a = gmp_init("0x41682179fbf5");
     $res = gmp_div_qr($a, "0xDEFE75");
     printf("Результат: q - %s, r - %s",
     gmp_strval($res[0]), gmp_strval($res[1]));
     ?></example>
<example_result></example_result>
</object>

<object id=1937> 
<name>pg_tty</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает имя терминала TTY, связанное с соединением </short-description>
<description>string pg_tty ([ resource $connection ] ) 
 pg_tty() возвращает имя терминала, связанного с подключением PostgreSQL connection, на который выводится отладочная информация. 
 Замечание: 
 pg_tty() устарела, но оставлена для обратной совместимости. </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). </parameters>
<output>Имя TTY для подключения connection в виде строки (string) либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$pgsql_conn = pg_connect("dbname=mark host=localhost");
if ($pgsql_conn) {
   print "Server debug TTY is: " . pg_tty($pgsql_conn) . "<br/>\n";
} else {
   print pg_last_error($pgsql_conn);
   exit;
}?></example>
<example_result></example_result>
</object>

<object id=1938> 
<name>reset</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Устанавливает внутренний указатель массива на его первый элемент</short-description>
<description>mixed reset ( array &$array ) 
 reset() перемещает внутренний указатель array к его первому элементу и возвращает значение первого элемента массива. </description>
<parameters>array - Входной массив. </parameters>
<output>Возвращает значение первого элемента массива, или FALSE, если массив пуст. </output>
<errors></errors>
<example><?php
$array = array('первый шаг', 'второй шаг', 'третий шаг', 'четвертый шаг');
  
// по умолчанию указатель указывает на первый элемент
echo current($array) . "<br />\n"; // "первый шаг"
// пропускаем два шага    
next($array);
next($array);
echo current($array) . "<br />\n"; // "третий шаг"
  
// сбрасываем указатель, тем самым возвращаемся к первому шагу
reset($array);
echo current($array) . "<br />\n"; // "первый шаг"
?></example>
<example_result></example_result>
</object>

<object id=1939> 
<name>htmlspecialchars_decode</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Преобразует специальные HTML-сущности обратно в соответствующие символы </short-description>
<description>string htmlspecialchars_decode ( string $string [, int $quote_style = ENT_COMPAT ] ) 
 Эта функция является антиподом htmlspecialchars(). Она преобразует специальные HTML-сущности обратно в соответствующие символы. 
 Конвертируемые сущности : &, &quot; (когда ENT_NOQUOTES не установлена), &#039; (когда ENT_QUOTES установлена), < и >. </description>
<parameters>string - Строка, которую надо преобразовать 
quote_style - Стиль кавычек. Может принимать значение одной из следующих констант: Константы quote_style Имя константы Описание ENT_COMPAT Преобразует двойные кавычки и пропускает одинарные (по умолчанию) ENT_QUOTES Преобразует и двойные, и одинарные кавычки ENT_NOQUOTES Не преобразует ни двойные, ни одинарные кавычки </parameters>
<output>Возвращает преобразованную строку. </output>
<errors></errors>
<example><?php
$str = '<p>this -> &quot;</p>';
echo htmlspecialchars_decode($str);
// обратите внимание, что в данном случае кавычки не будут преобразованы
echo htmlspecialchars_decode($str, ENT_NOQUOTES);
?></example>
<example_result>
 
<p>this -> "</p>
<p>this -> &quot;</p>
</example_result>
</object>

<object id=1940> 
<name>mcrypt_module_is_block_algorithm_mode</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Returns if the specified module is a block algorithm or not</short-description>
<description>bool mcrypt_module_is_block_algorithm_mode ( string $mode [, string $lib_dir ] ) 
 This function returns TRUE if the mode is for use with block algorithms, otherwise it returns FALSE. (e.g. FALSE for stream, and TRUE for cbc, cfb, ofb). </description>
<parameters>mode - The mode to check. 
lib_dir - The optional lib_dir parameter can contain the location where the algorithm module is on the system. </parameters>
<output>This function returns TRUE if the mode is for use with block algorithms, otherwise it returns FALSE. (e.g. FALSE for stream, and TRUE for cbc, cfb, ofb). </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1941> 
<name>imap_rfc822_parse_headers</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Parse mail headers from a string</short-description>
<description>object imap_rfc822_parse_headers ( string $headers [, string $defaulthost = "UNKNOWN" ] ) 
 Gets an object of various header elements, similar to imap_header(). </description>
<parameters>headers - The parsed headers data 
defaulthost - The default host name </parameters>
<output>Returns an object similar to the one returned by imap_header(), except for the flags and other properties that come from the IMAP server. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1942> 
<name>ocirollback</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_rollback()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1943> 
<name>aggregate_info</name>
<versions>(PHP 4 >= 4.3.0)</versions>
<short-description>Gets aggregation information for a given object </short-description>
<description>array aggregate_info ( object $object ) 
 Gets the aggregation information for the given object. </description>
<parameters>object - </parameters>
<output>Returns the aggregation information as an associative array of arrays of methods and properties. The key for the main array is the name of the aggregated class. </output>
<errors></errors>
<example><?php
class Slicer {
    var $vegetable;
    function Slicer($vegetable) 
    {
        $this->vegetable = $vegetable;
    }
    function slice_it($num_cuts) 
    {
        echo "Doing some simple slicing\n";
        for ($i=0; $i < $num_cuts; $i++) {
            // do some slicing
        }
    }
}
class Dicer {
    var $vegetable;
    var $rotation_angle = 90;   // degrees
    function Dicer($vegetable) 
    {
        $this->vegetable = $vegetable;
    }
    function dice_it($num_cuts) 
    {
        echo "Cutting in one direction\n";
        for ($i=0; $i < $num_cuts; $i++) {
            // do some cutting
        }
        $this->rotate($this->rotation_angle);
        echo "Cutting in a second direction\n";
        for ($i=0; $i < $num_cuts; $i++) {
            // do some more cutting
        }
    }
    function rotate($deg) 
    {
        echo "Now rotating {$this->vegetable} {$deg} degrees\n";
    }
    function _secret_super_dicing($num_cuts) 
    {
        // so secret we cannot show you ;-)
    }
}
$obj = new Slicer('onion');
aggregate($obj, 'Dicer');
print_r(aggregate_info($obj));
?></example>
<example_result>
 
Array
(
    [dicer] => Array
        (
            [methods] => Array
                (
                    [0] => dice_it
                    [1] => rotate
                )

            [properties] => Array
                (
                    [0] => rotation_angle
                )

        )

)
</example_result>
</object>

<object id=1944> 
<name>imap_check</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Check current mailbox</short-description>
<description>object imap_check ( resource $imap_stream ) 
 Checks information about the current mailbox. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().</parameters>
<output>Returns the information in an object with following properties: Date - current system time formatted according to &raquo; RFC2822 Driver - protocol used to access this mailbox: POP3, IMAP, NNTP Mailbox - the mailbox name Nmsgs - number of messages in the mailbox Recent - number of recent messages in the mailbox </output>
<errors></errors>
<example><?php
$imap_obj = imap_check($imap_stream);
var_dump($imap_obj);
?></example>
<example_result>
 
object(stdClass)(5) {
  ["Date"]=>
  string(37) "Wed, 10 Dec 2003 17:56:54 +0100 (CET)"
  ["Driver"]=>
  string(4) "imap"
  ["Mailbox"]=>
  string(54)
  "{www.example.com:143/imap/user="foo@example.com"}INBOX"
  ["Nmsgs"]=>
  int(1)
  ["Recent"]=>
  int(0)
}
</example_result>
</object>

<object id=1945> 
<name>mb_decode_mimeheader</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Декодирует строку в MIME-заголовке</short-description>
<description>string mb_decode_mimeheader ( string $str ) 
 Декодирует закодированную строку string str в MIME-заголовке. </description>
<parameters>str - Строка string для декодирования. </parameters>
<output>Декодированная строка string во внутренней кодировке скрипта. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1946> 
<name>PDF_set_info</name>
<versions>(PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0)</versions>
<short-description>Fill document info field</short-description>
<description>bool PDF_set_info ( resource $p , string $key , string $value ) 
 Fill document information field key with value. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1947> 
<name>ifxus_seek_slob</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Sets the current file or seek position</short-description>
<description>int ifxus_seek_slob ( int $bid , int $mode , int $offset ) 
 Sets the current file or seek position of an open slob object. </description>
<parameters>bid - An existing slob id. 
mode - 0 = LO_SEEK_SET, 1 = LO_SEEK_CUR, 2 = LO_SEEK_END. 
offset - A byte offset. </parameters>
<output>Returns the seek position as an integer, or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1948> 
<name>ftruncate</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Урезает файл до указанной длинны</short-description>
<description>bool ftruncate ( resource $handle , int $size ) 
 Принимает файловый указатель handle и урезает соответствующий файл до размера size. </description>
<parameters>handle - Файловый указатель. 
size - Размер файла, до которого он будет обрезан. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$filename = 'lorem_ipsum.txt';
$handle = fopen($filename, 'r+');
ftruncate($handle, rand(1, filesize($filename)));
rewind($handle);
echo fread($handle, filesize($filename));
fclose($handle);
?></example>
<example_result></example_result>
</object>

<object id=1949> 
<name>ncurses_panel_above</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Returns the panel above panel</short-description>
<description>resource ncurses_panel_above ( resource $panel ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>panel - </parameters>
<output>If panel is null, returns the bottom panel in the stack. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1950> 
<name>fbsql_field_table</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Get name of the table the specified field is in</short-description>
<description>string fbsql_field_table ( resource $result [, int $field_offset ] ) 
 Returns the name of the table that the specified field is in. </description>
<parameters>result - Идентификатор результата запроса, полученный изfbsql_query() илиfbsql_db_query().
field_offset - The numerical offset of the field. The field index starts at 0. </parameters>
<output>Returns the name of the table, as a string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1951> 
<name>mysqli_bind_result</name>
<versions>(PHP 5)</versions>
<short-description>Синоним функции mysqli_stmt_bind_result()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1952> 
<name>date_parse_from_format</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Получение информации о заданной в определенном формате дате </short-description>
<description>array date_parse_from_format ( string $format , string $date ) 
 Возвращает ассоциативный массив с подробной информацией о заданной дате. </description>
<parameters>format - Формат, распознаваемый функцией DateTime::createFromFormat(). 
date - Строка, представляющая дату. </parameters>
<output>Возвращает ассоциативный массив с подробной информацией о заданной дате. </output>
<errors></errors>
<example><?php
$date = "6.1.2009 13:00+01:00";
print_r(date_parse_from_format("j.n.Y H:iP", $date));
?></example>
<example_result>
 
Array
(
    [year] => 2009
    [month] => 1
    [day] => 6
    [hour] => 13
    [minute] => 0
    [second] => 0
    [fraction] => 
    [warning_count] => 0
    [warnings] => Array
        (
        )

    [error_count] => 0
    [errors] => Array
        (
        )

    [is_localtime] => 1
    [zone_type] => 1
    [zone] => -60
    [is_dst] => 
)
</example_result>
</object>

<object id=1953> 
<name>xml_set_notation_decl_handler</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Установка обработчика объявления условных обозначений </short-description>
<description>bool xml_set_notation_decl_handler ( resource $parser , callback $handler ) 
 Задает обработчик объявления обозначений для XML анализатора parser. 
 Раздел объявления обозначений является частью DTD документа и имеет следующий формат: 
 <!NOTATION <parameter>name</parameter>{ <parameter>systemId</parameter> | <parameter>publicId</parameter>?></description>
<parameters>parser - Ссылка на XML анализатор. 
handler - handler - строка содержащая имя функции, которая должна быть определена на момент вызова функции xml_parse() из анализатора parser. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1954> 
<name>imap_utf7_decode</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Decodes a modified UTF-7 encoded string</short-description>
<description>string imap_utf7_decode ( string $text ) 
 Decodes modified UTF-7 text into ISO-8859-1 string. 
 This function is needed to decode mailbox names that contain certain characters which are not in range of printable ASCII characters. </description>
<parameters>text - A modified UTF-7 encoding string, as defined in &raquo; RFC 2060, section 5.1.3 (original UTF-7 was defined in &raquo; RFC1642). </parameters>
<output>Returns a string that is encoded in ISO-8859-1 and consists of the same sequence of characters in text, or FALSE if text contains invalid modified UTF-7 sequence or text contains a character that is not part of ISO-8859-1 character set. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1955> 
<name>is_long</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним is_int()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1956> 
<name>XMLWriter::startElement</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Создать стартовый тэг элемента</short-description>
<description>bool XMLWriter::startElement ( string $name ) 
 Процедурный стиль bool xmlwriter_start_element ( resource $xmlwriter , string $name )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
name - Имя элемента. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1957> 
<name>ftp_chdir</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Изменяет текущую директорию на FTP сервере</short-description>
<description>bool ftp_chdir ( resource $ftp_stream , string $directory ) 
 Меняет текущую директорию на заданную аргументом. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером 
directory - Целевая директория. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. Если изменение директории завершилось неудачей, PHP вызовет предупреждение. </output>
<errors></errors>
<example><?php
// установка соединения
$conn_id = ftp_connect($ftp_server); 
// вход с именем пользователя и паролем
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass); 
// проверка соединения
if ((!$conn_id) || (!$login_result)) {
    die("Не удалось подключиться к FTP-серверу!");
}
echo "Текущая директория: " . ftp_pwd($conn_id) . "\n";
// пытаемся сменить текущую директорию на somedir
if (ftp_chdir($conn_id, "somedir")) {
    echo "Новая текущая директория: " . ftp_pwd($conn_id) . "\n";
} else { 
    echo "Не удалось сменить директорию\n";
}
// закрытие соединения
ftp_close($conn_id);
?></example>
<example_result></example_result>
</object>

<object id=1958> 
<name>imagearc</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Draws an arc</short-description>
<description>bool imagearc ( resource $image , int $cx , int $cy , int $width , int $height , int $start , int $end , int $color ) 
 imagearc() draws an arc of circle centered at the given coordinates. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
cx - x-coordinate of the center. 
cy - y-coordinate of the center. 
width - The arc width. 
height - The arc height. 
start - The arc start angle, in degrees. 
end - The arc end angle, in degrees. 0° is located at the three-o&#039;clock position, and the arc is drawn clockwise. 
color - A color identifier created with imagecolorallocate(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// create a 200*200 image
$img = imagecreatetruecolor(200, 200);
// allocate some colors
$white = imagecolorallocate($img, 255, 255, 255);
$red   = imagecolorallocate($img, 255,   0,   0);
$green = imagecolorallocate($img,   0, 255,   0);
$blue  = imagecolorallocate($img,   0,   0, 255);
// draw the head
imagearc($img, 100, 100, 200, 200,  0, 360, $white);
// mouth
imagearc($img, 100, 100, 150, 150, 25, 155, $red);
// left and then the right eye
imagearc($img,  60,  75,  50,  50,  0, 360, $green);
imagearc($img, 140,  75,  50,  50,  0, 360, $blue);
// output image in the browser
header("Content-type: image/png");
imagepng($img);
// free memory
imagedestroy($img);
?></example>
<example_result></example_result>
</object>

<object id=1959> 
<name>com_load</name>
<versions>(PHP 4)</versions>
<short-description>Creates a new reference to a COM component [deprecated]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1960> 
<name>fbsql_num_rows</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Get number of rows in result</short-description>
<description>int fbsql_num_rows ( resource $result ) 
 Gets the number of rows in the given result set. 
 This function is only valid for SELECT statements. To retrieve the number of rows returned from a INSERT, UPDATE or DELETE query, use fbsql_affected_rows(). </description>
<parameters>result - Идентификатор результата запроса, полученный изfbsql_query() илиfbsql_db_query().</parameters>
<output>Returns the number of rows returned by the last SELECT statement. </output>
<errors></errors>
<example><?php
$link = fbsql_connect("localhost", "username", "password");
fbsql_select_db("database", $link);
$result = fbsql_query("SELECT * FROM table1;", $link);
$num_rows = fbsql_num_rows($result);
echo "$num_rows Rows\n";
?></example>
<example_result></example_result>
</object>

<object id=1961> 
<name>atanh</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Гиперболический арктангенс</short-description>
<description>float atanh ( float $arg ) 
 Возвращает гиперболический арктангенс arg, т.е. значение, чей гиперболический тангенс равен arg. </description>
<parameters>arg - Входное значение </parameters>
<output>Гиперболический арктангенс arg </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1962> 
<name>imap_mailboxmsginfo</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get information about the current mailbox</short-description>
<description>object imap_mailboxmsginfo ( resource $imap_stream ) 
 Checks the current mailbox status on the server. It is similar to imap_status(), but will additionally sum up the size of all messages in the mailbox, which will take some additional time to execute. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().</parameters>
<output>Returns the information in an object with following properties: Mailbox properties Date date of last change (current datetime) Driver driver Mailbox name of the mailbox Nmsgs number of messages Recent number of recent messages Unread number of unread messages Deleted number of deleted messages Size mailbox size </output>
<errors></errors>
<example><?php
$mbox = imap_open("{imap.example.org}INBOX", "username", "password")
      or die("can't connect: " . imap_last_error());
$check = imap_mailboxmsginfo($mbox);
if ($check) {
    echo "Date: "     . $check->Date    . "<br />\n" ;
    echo "Driver: "   . $check->Driver  . "<br />\n" ;
    echo "Mailbox: "  . $check->Mailbox . "<br />\n" ;
    echo "Messages: " . $check->Nmsgs   . "<br />\n" ;
    echo "Recent: "   . $check->Recent  . "<br />\n" ;
    echo "Unread: "   . $check->Unread  . "<br />\n" ;
    echo "Deleted: "  . $check->Deleted . "<br />\n" ;
    echo "Size: "     . $check->Size    . "<br />\n" ;
} else {
    echo "imap_check() failed: " . imap_last_error() . "<br />\n";
}
imap_close($mbox);
?></example>
<example_result></example_result>
</object>

<object id=1963> 
<name>ftp_get_option</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Получает текущие параметры FTP соединения</short-description>
<description>mixed ftp_get_option ( resource $ftp_stream , int $option ) 
 Эта функция возвращает значение запрошенной опции option для указанного FTP соединения. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP сервером. 
option - На текущий момент, поддежриваются следующие опции: Поддерживаемые текущие опции FTP FTP_TIMEOUT_SEC Возвращает текущий таймаут, используемый в сетевых операциях. FTP_AUTOSEEK Возвращает TRUE, если эта опция включена, иначе FALSE. </parameters>
<output>Возвращает значение в случае успешного выполнения, или FALSE, если указанная опция option не поддерживается. В последнем случае так же вызывается предупреждение. </output>
<errors></errors>
<example><?php
// Получаем таймаут соединения
$timeout = ftp_get_option($conn_id, FTP_TIMEOUT_SEC);
?></example>
<example_result></example_result>
</object>

<object id=1964> 
<name>get_include_path</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Gets the current include_path configuration option</short-description>
<description>string get_include_path ( void ) 
 Gets the current include_path configuration option value. </description>
<parameters></parameters>
<output>Returns the path, as a string. </output>
<errors></errors>
<example><?php
// Works as of PHP 4.3.0
echo get_include_path();
// Works in all PHP versions
echo ini_get('include_path');
?></example>
<example_result></example_result>
</object>

<object id=1965> 
<name>session_status</name>
<versions>(PHP >=5.4.0)</versions>
<short-description>Returns the current session status</short-description>
<description>int session_status ( void ) 
 session_status() is used to return the current session status. </description>
<parameters></parameters>
<output>PHP_SESSION_DISABLED if sessions are disabled. PHP_SESSION_NONE if sessions are enabled, but none exists. PHP_SESSION_ACTIVE if sessions are enabled, and one exists. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1966> 
<name>dio_fcntl</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)</versions>
<short-description>Performs a c library fcntl on fd</short-description>
<description>mixed dio_fcntl ( resource $fd , int $cmd [, mixed $args ] ) 
 The dio_fcntl() function performs the operation specified by cmd on the file descriptor fd. Some commands require additional arguments args to be supplied. </description>
<parameters>fd - The file descriptor returned by dio_open(). 
cmd - Can be one of the following operations: 
 F_SETLK - Lock is set or cleared. If the lock is held by someone else dio_fcntl() returns -1. 
args - args is an associative array, when cmd is F_SETLK or F_SETLLW, with the following keys: 
 "start" - offset where lock begins </parameters>
<output>Returns the result of the C call. </output>
<errors></errors>
<example><?php
$fd = dio_open('/dev/ttyS0', O_RDWR);
if (dio_fcntl($fd, F_SETLK, Array("type"=>F_WRLCK)) == -1) {
   // the file descriptor appears locked
   echo "The lock can not be cleared. It is held by someone else.";
} else {
   echo "Lock succesfully set/cleared";
}
dio_close($fd);
?></example>
<example_result></example_result>
</object>

<object id=1967> 
<name>dbplus_unselect</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Remove a constraint from relation</short-description>
<description>int dbplus_unselect ( resource $relation ) 
 Calling dbplus_unselect() will remove a constraint previously set by dbplus_find() on relation. </description>
<parameters>relation - A relation opened by dbplus_open(). </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1968> 
<name>ifx_connect</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Open Informix server connection</short-description>
<description>resource ifx_connect ([ string $database [, string $userid [, string $password ]]] ) 
 ifx_connect() establishes a connection to an Informix server. 
 In case a second call is made to ifx_connect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned. 
 The link to the server will be closed as soon as the execution of the script ends, unless it&#039;s closed earlier by explicitly calling ifx_close(). </description>
<parameters>database - The database name, as a string. 
userid - The username, as a string. 
password - The password, as a string. </parameters>
<output>Returns a connection identifier on success, or FALSE on error. </output>
<errors></errors>
<example><?php
$conn_id = ifx_connect ("mydb@ol_srv1", "imyself", "mypassword");
?></example>
<example_result></example_result>
</object>

<object id=1969> 
<name>escapeshellarg</name>
<versions>(PHP 4 >= 4.0.3, PHP 5)</versions>
<short-description>Экранирует строку для того, чтобы она могла быть использована как аргумент командной строки</short-description>
<description>string escapeshellarg ( string $arg ) 
 Функция escapeshellarg() добавляет по одной кавычке вокруг строки и добавляет кавычки/экранирует любые существующие единичные кавычки, позволяя вам передать строку непосредственно шелл-функции и рассматривать её как один безопасный аргумент. Эта функция должна быть использована для того, чтобы экранировать отдельные аргументы для шелл-функций, полученные из ввода пользователя. Шелл-функции включают exec(), system() и оператор "обратный апостроф". </description>
<parameters>arg - Аргумент, который будет экранирован. </parameters>
<output>Экранированная строка. </output>
<errors></errors>
<example><?php
system('ls '.escapeshellarg($dir));
?></example>
<example_result></example_result>
</object>

<object id=1970> 
<name>PDF_open_tiff</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Открывает TIFF-изображение [устаревшее]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1971> 
<name>fdf_set_on_import_javascript</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Adds javascript code to be executed when Acrobat opens the FDF</short-description>
<description>bool fdf_set_on_import_javascript ( resource $fdf_document , string $script , bool $before_data_import ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1972> 
<name>PDF_add_thumbnail</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Add thumbnail for current page</short-description>
<description>bool PDF_add_thumbnail ( resource $pdfdoc , int $image ) 
 Adds an existing image as thumbnail for the current page. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1973> 
<name>ncurses_nl</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Translate newline and carriage return / line feed </short-description>
<description>bool ncurses_nl ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1974> 
<name>ifxus_create_slob</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Creates an slob object and opens it</short-description>
<description>int ifxus_create_slob ( int $mode ) 
 Creates an slob object and opens it. </description>
<parameters>mode - A combination of IFX_LO_RDONLY, IFX_LO_WRONLY, IFX_LO_APPEND IFX_LO_RDWR, IFX_LO_BUFFER, IFX_LO_NOBUFFER. </parameters>
<output>Return the new slob object-id, or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1975> 
<name>ibase_wait_event</name>
<versions>(PHP 5)</versions>
<short-description>Wait for an event to be posted by the database</short-description>
<description>string ibase_wait_event ( string $event_name1 [, string $event_name2 [, string $... ]] ) string ibase_wait_event ( resource $connection , string $event_name1 [, string $event_name2 [, string $... ]] )</description>
<parameters>event_name1 - The event name. 
event_name2 - 
... - </parameters>
<output>Returns the name of the event that was posted. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1976> 
<name>vpopmail_add_domain_ex</name>
<versions>(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)</versions>
<short-description>Add a new virtual domain</short-description>
<description>bool vpopmail_add_domain_ex ( string $domain , string $passwd [, string $quota [, string $bounce [, bool $apop ]]] ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1977> 
<name>PDF_scale</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Масштабирует систему координат</short-description>
<description>bool PDF_scale ( resource $p , float $sx , float $sy ) 
 Масштабирует систему координат. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1978> 
<name>imagegd2</name>
<versions>(PHP 4 >= 4.0.7, PHP 5)</versions>
<short-description>Output GD2 image to browser or file</short-description>
<description>bool imagegd2 ( resource $image [, string $filename [, int $chunk_size [, int $type = IMG_GD2_RAW ]]] ) 
 Outputs a GD2 image to the given filename. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
filename - Путь для сохранения файла. Если не установлен или равен NULL, изображение будет выведено в поток вывода в бинарном виде.
chunk_size - Chunk size. 
type - Either IMG_GD2_RAW or IMG_GD2_COMPRESSED. Default is IMG_GD2_RAW. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Create a blank image and add some text
$im = imagecreatetruecolor(120, 20);
$text_color = imagecolorallocate($im, 233, 14, 91);
imagestring($im, 1, 5, 5,  "A Simple Text String", $text_color);
// Output the image
imagegd2($im);
// Free up memory
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=1979> 
<name>odbc_specialcolumns</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Retrieves special columns</short-description>
<description>resource odbc_specialcolumns ( resource $connection_id , int $type , string $qualifier , string $owner , string $table , int $scope , int $nullable ) 
 Retrieves either the optimal set of columns that uniquely identifies a row in the table, or columns that are automatically updated when any value in the row is updated by a transaction. </description>
<parameters>connection_id - Идентификатор соединения ODBC,за подробностями обращайтесь к odbc_connect().
type When the type argument is SQL_BEST_ROWID, odbc_specialcolumns() returns the column or columns that uniquely identify each row in the table. When the type argument is SQL_ROWVER, odbc_specialcolumns() returns the column or columns in the specified table, if any, that are automatically updated by the data source when any value in the row is updated by any transaction. qualifier - The qualifier. 
owner - The owner. 
table - The table. 
scope - The scope, which orders the result set. 
nullable - The nullable option. </parameters>
<output>Returns an ODBC result identifier or FALSE on failure. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1980> 
<name>swf_endsymbol</name>
<versions>(PHP 4)</versions>
<short-description>End the definition of a symbol</short-description>
<description>void swf_endsymbol ( void ) 
 Ends the definition of a symbol that was started by the swf_startsymbol() function. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1981> 
<name>connection_timeout</name>
<versions>(PHP 4 <= 4.0.4)</versions>
<short-description>Проверяет превышение скриптом максимального времени выполнения</short-description>
<description>int connection_timeout ( void ) 
 Определяет, не превысило ли выполнение скрипта максимальное время выполнения. </description>
<parameters></parameters>
<output>Возвращает 1, если выполнение скрипта превысило максимальное время, если нет, то возвращает 0. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1982> 
<name>pg_num_fields</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает количество полей в выборке</short-description>
<description>int pg_num_fields ( resource $result ) 
 pg_num_fields() возвращает количество полей (столбцов) в результате запроса PostgreSQL. 
 Замечание: 
 Ранее функция называлась pg_numfields(). </description>
<parameters>result - Ресурс результата запроса PostgreSQL, возвращаемый функциями pg_query(), pg_query_params() или pg_execute() (и прочих). </parameters>
<output>Количество полей (столбцов) в выборке. В случае ошибки возвращает -1. </output>
<errors></errors>
<example><?php
$result = pg_query($conn, "SELECT 1, 2");
$num = pg_num_fields($result);
echo "Возвращено полей: " . $num . ".\n";
?></example>
<example_result>
 
Возвращено полей: 2.
</example_result>
</object>

<object id=1983> 
<name>ncurses_qiflush</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Flush on signal characters </short-description>
<description>void ncurses_qiflush ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1984> 
<name>ovrimos_commit</name>
<versions>(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)</versions>
<short-description>Commits the transaction</short-description>
<description>bool ovrimos_commit ( int $connection_id ) 
 Commits the transaction. </description>
<parameters>connection_id - The Ovrimos connection identifier, returned by ovrimos_connect(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1985> 
<name>ncurses_vidattr</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Display the string on the terminal in the video attribute mode</short-description>
<description>int ncurses_vidattr ( int $intarg ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>intarg - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1986> 
<name>ncurses_slk_clear</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Clears soft labels from screen</short-description>
<description>bool ncurses_slk_clear ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Returns TRUE on errors, FALSE otherwise. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1987> 
<name>mcrypt_module_open</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Opens the module of the algorithm and the mode to be used</short-description>
<description>resource mcrypt_module_open ( string $algorithm , string $algorithm_directory , string $mode , string $mode_directory ) 
 This function opens the module of the algorithm and the mode to be used. The name of the algorithm is specified in algorithm, e.g. "twofish" or is one of the MCRYPT_ciphername constants. The module is closed by calling mcrypt_module_close(). </description>
<parameters>algorithm - The algorithm to be used. 
algorithm_directory - The algorithm_directory parameter is used to locate the encryption module. When you supply a directory name, it is used. When you set it to an empty string (""), the value set by the mcrypt.algorithms_dir php.ini directive is used. When it is not set, the default directory that is used is the one that was compiled into libmcrypt (usually /usr/local/lib/libmcrypt). 
mode - The mode to be used. 
mode_directory - The mode_directory parameter is used to locate the encryption module. When you supply a directory name, it is used. When you set it to an empty string (""), the value set by the mcrypt.modes_dir php.ini directive is used. When it is not set, the default directory that is used is the one that was compiled-in into libmcrypt (usually /usr/local/lib/libmcrypt). </parameters>
<output>Normally it returns an encryption descriptor, or FALSE on error. </output>
<errors></errors>
<example><?php
    $td = mcrypt_module_open(MCRYPT_DES, '',
        MCRYPT_MODE_ECB, '/usr/lib/mcrypt-modes');
    $td = mcrypt_module_open('rijndael-256', '', 'ofb', '');
?></example>
<example_result></example_result>
</object>

<object id=1988> 
<name>imap_savebody</name>
<versions>(PHP 5 >= 5.1.3)</versions>
<short-description>Save a specific body section to a file</short-description>
<description>bool imap_savebody ( resource $imap_stream , mixed $file , int $msg_number [, string $part_number = "" [, int $options = 0 ]] ) 
 Saves a part or the whole body of the specified message. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
file - The path to the saved file as a string, or a valid file descriptor returned by fopen(). 
msg_number - The message number 
part_number - The part number. It is a string of integers delimited by period which index into a body part list as per the IMAP4 specification 
options - A bitmask with one or more of the following: FT_UID - The msg_number is a UID FT_PEEK - Do not set the \Seen flag if not already set FT_INTERNAL - The return string is in internal format, will not canonicalize to CRLF. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1989> 
<name>pg_affected_rows</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает количество затронутых запросом записей (кортежей)</short-description>
<description>int pg_affected_rows ( resource $result ) 
 pg_affected_rows() возвращает количество кортежей (сущностей/записей/рядов) затронутых запросом INSERT, UPDATE, и DELETE queries. 
 Замечание: 
 Ранее данная функция называлась pg_cmdtuples(). </description>
<parameters>result - Результат запроса к PostgreSQL , значение типа resource, возвращаемое функцией pg_query(), pg_query_params() или pg_execute() (среди прочих). </parameters>
<output>Количество записей, затронутых запросом. Если ни один кортеж не был затронут, функция вернет 0. </output>
<errors></errors>
<example><?php
$result = pg_query($conn, "INSERT INTO authors VALUES ('Orwell', 2002, 'Animal Farm')");
$cmdtuples = pg_affected_rows($result);
echo $cmdtuples . " кортежей затронуто.\n";
?></example>
<example_result>
 
1 кортежей затронуто.
</example_result>
</object>

<object id=1990> 
<name>ocinewcollection</name>
<versions>(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_new_collection()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1991> 
<name>ncurses_cbreak</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Switch of input buffering </short-description>
<description>bool ncurses_cbreak ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Returns TRUE or NCURSES_ERR if any error occurred. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1992> 
<name>rad2deg</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Преобразует значение из радианов в градусы </short-description>
<description>float rad2deg ( float $number ) 
 Функция преобразует значение number из радианов в градусы. </description>
<parameters>number - Значение в радианах </parameters>
<output>Эквивалент number в градусах </output>
<errors></errors>
<example><?php
echo rad2deg(M_PI_4); // 45
?></example>
<example_result></example_result>
</object>

<object id=1993> 
<name>array_diff_key</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Вычисляет расхождение массивов, сравнивая ключи</short-description>
<description>array array_diff_key ( array $array1 , array $array2 [, array $... ] ) 
 Сравнивает ключи array1 с ключами array2 и возвращает разницу. Эта функция схожа с array_diff() за исключением того, что сравниваются ключи, а не значения. </description>
<parameters>array1 - Исходный массив 
array2 - Массив, с которым идет сравнение 
... - Дополнительные массивы, с которыми осуществляется сравнение </parameters>
<output>Возвращает array, содержащий все элементы array1 с ключами, которых нет в во всех последующих массивах. </output>
<errors></errors>
<example>
 key => value считаются равными только тогда, когда (string) $key1 === (string) $key2 . Другими словами, применяется строгая проверка, означающая что строковые представления должны быть одинаковыми. </example>
<example_result>
 
array(2) {
  ["red"]=>
  int(2)
  ["purple"]=>
  int(4)
}
</example_result>
</object>

<object id=1994> 
<name>iconv_strrpos</name>
<versions>(PHP 5)</versions>
<short-description>Возвращает позицию последнего вхождения подстроки</short-description>
<description>int iconv_strrpos ( string $haystack , string $needle [, string $charset = ini_get("iconv.internal_encoding") ] ) 
 Находит последнюю позицию подстроки needle в строке haystack. 
 В отличие от strrpos(), iconv_strrpos() возвращает смещение перед искомой строкой в символах, а не в байтах. Количество символов трактуется в зависимости от указанной параметром charset кодировки. </description>
<parameters>haystack - Строка, в которой производится поиск. 
needle - Искомая подстрока. 
charset - Если параметр charset не указан, то подразумевается, что string имеет кодировку iconv.internal_encoding. </parameters>
<output>Возвращает номер позиции последнего вхождения строки needle в haystack. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1995> 
<name>udm_alloc_agent_array</name>
<versions>(PHP 4 >= 4.3.3, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)</versions>
<short-description>Allocate mnoGoSearch session</short-description>
<description>resource udm_alloc_agent_array ( array $databases ) 
 udm_alloc_agent_array() will create an agent with multiple database connections. </description>
<parameters>databases - The array databases must contain one database URL per element, analog to the first parameter of udm_alloc_agent(). </parameters>
<output>Returns a resource link identifier on success или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1996> 
<name>addcslashes</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Экранирует cтроку слэшами в стиле языка C</short-description>
<description>string addcslashes ( string $str , string $charlist ) 
 Возвращает строку, экранированную обратными слэшами перед символами, указанными в параметре charlist. </description>
<parameters>str - Экранируемая строка. 
charlist - Список экранируемых символов. Если charlist содержит символы \n, \r и т.п., они будут преобразованы в стиле C, тогда как другие нецифробуквенные символы с ASCII-кодами ниже 32 и выше 126 будут преобразованы в восьмеричное представление. </parameters>
<output>Возвращает экранированную строку. </output>
<errors></errors>
<example><?php
$escaped = addcslashes($not_escaped, "\0..\37!@\177..\377");
?></example>
<example_result></example_result>
</object>

<object id=1997> 
<name>date_isodate_set</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Псевдоним DateTime::setISODate()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1998> 
<name>tanh</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Гиперболический тангенс</short-description>
<description>float tanh ( float $arg ) 
 Возвращает гиперболический тангенс arg, определяемый как sinh(arg)/cosh(arg). </description>
<parameters>arg - Входное значение </parameters>
<output>Гиперболический тангенс arg </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=1999> 
<name>gmp_sign</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Знак числа</short-description>
<description>int gmp_sign ( resource $a ) 
 Проверяет знак числа. </description>
<parameters>a - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.</parameters>
<output>Возвращает 1, если a положительное; -1, если a отрицательное; и 0, если a равно нулю. </output>
<errors></errors>
<example><?php
// положительное
echo gmp_sign("500") . "\n";
// отрицательное
echo gmp_sign("-500") . "\n";
// ноль
echo gmp_sign("0") . "\n";
?></example>
<example_result>
 
1
-1
0
</example_result>
</object>

<object id=2000> 
<name>oci_execute</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Выполняет подготовленное выражение</short-description>
<description>bool oci_execute ( resource $statement [, int $mode = OCI_COMMIT_ON_SUCCESS ] ) 
 Выполняет подготовленное выражение statement, созданное с помощью функции oci_parse(). 
 Сразу после выполнения выражения подобного INSERT, по умолчанию все данные сразу будут сохранены в базе данных. Для выражений подобных SELECT, выполняется только логика запроса. Результат же запроса можно получить позже в PHP с помощью функций подобных oci_fetch_array(). 
 Каждое подготовленное выражение может быть выполнено несколько раз для экономии на издержках от повторной подготовки запроса. Это чаще всего применяется для выражений INSERT, когда к ним привязанны данные с помощью oci_bind_by_name(). </description>
<parameters>statement - Правильное подготовленное выражение OCI. 
mode - Необязательный второй параметр с одним из следующих значений: Режим выполнения Константа Описание OCI_COMMIT_ON_SUCCESS Автоматически сохранять все несохраненные изменения, произведенные за текущую сессию при успешном выполнении выражения. Этот режим установлен по умолчанию. OCI_DEFAULT Устаревшая начиная с PHP 5.3.2 (PECL OCI8 1.4), но все еще доступная для обратной совместимости. Используйте ее эквивалент OCI_NO_AUTO_COMMIT в новых приложениях. OCI_DESCRIBE_ONLY Делает доступными метаданные запроса для функций подобных oci_field_name(), но не создает результат выполнения выражения. Любое последующее получение данных, например с помощью oci_fetch_array() не будет произведено. OCI_NO_AUTO_COMMIT Не сохранять автоматически изменения. Для PHP 5.3.2 (PECL OCI8 1.4) используйте OCI_DEFAULT, которая является эквивалентом для OCI_NO_AUTO_COMMIT. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$conn = oci_connect('hr', 'welcome', 'localhost/XE');
$stid = oci_parse($conn, 'SELECT * FROM employees');
oci_execute($stid);
echo "<table border='1'>\n";
while ($row = oci_fetch_array($stid, OCI_ASSOC+OCI_RETURN_NULLS)) {
    echo "<tr>\n";
    foreach ($row as $item) {
        echo "    <td>" . ($item !== null ? htmlentities($item, ENT_QUOTES) : "") . "</td>\n";
    }
    echo "</tr>\n";
}echo "</table>\n";
?></example>
<example_result></example_result>
</object>

<object id=2001> 
<name>gzwrite</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Бинарная запись в gz-файл</short-description>
<description>int gzwrite ( resource $zp , string $string [, int $length ] ) 
 Записывает содержимое string в данный gz-файл. </description>
<parameters>zp - Указатель на gz-файл, возвращённый, после его успешного открытия, функцией gzopen(). 
string - Записываемая строка. 
length - Число записываемых байтов (до сжатия). Если указано, операция завершится после записи length байт или при достижении конца строки string. </parameters>
<output>Возвращает число действительно записанных байт (без учёта сжатия) в поток gz-файла. </output>
<errors></errors>
<example><?php
$string = 'Какие-то данные для сжатия';
$gz = gzopen('somefile.gz','w9');
gzwrite($gz, $string);
gzclose($gz);
?></example>
<example_result></example_result>
</object>

<object id=2002> 
<name>class_alias</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Создает псевдоним для указанного класса</short-description>
<description>bool class_alias ([ string $original [, string $alias ]] ) 
 Создает псевдоним alias для класса original. Новый класс с псевдонимом будет точно таким же, как и оригинальный класс. </description>
<parameters>original - Оригинальный класс. 
alias - Имя псевдонима для класса. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
class foo { }
class_alias('foo', 'bar');
$a = new foo;
$b = new bar;
// объекты одинаковы
var_dump($a == $b, $a === $b);
var_dump($a instanceof $b);
// классы одинаковы
var_dump($a instanceof foo);
var_dump($a instanceof bar);
var_dump($b instanceof foo);
var_dump($b instanceof bar);
?></example>
<example_result>
 
bool(true)
bool(false)
bool(true)
bool(true)
bool(true)
bool(true)
bool(true)
</example_result>
</object>

<object id=2003> 
<name>ob_get_clean</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Получить содержимое буфера и очистить его</short-description>
<description>string ob_get_clean ( void ) 
 Получает текущее содержимое буфера и очищает текущий буфер вывода. 
 ob_get_clean() по сути выполняет ob_get_contents() и ob_end_clean(). </description>
<parameters></parameters>
<output>Возвращает содержимое буфера вывода и заканчивает буферизацию вывода. Если буферизация вывода не активирована, то функция вернет FALSE. </output>
<errors></errors>
<example><?php
ob_start();
echo "Привет мир";
$out = ob_get_clean();
$out = strtolower($out);
var_dump($out);
?></example>
<example_result>
 

string(11) "привет мир"

</example_result>
</object>

<object id=2004> 
<name>array_uintersect_uassoc</name>
<versions>(PHP 5)</versions>
<short-description>Вычисляет пересечение массивов с дополнительной проверкой индекса, используя для сравнения индексов и значений callback-функцию</short-description>
<description>array array_uintersect_uassoc ( array $array1 , array $array2 [, array $ ... ], callback $data_compare_func , callback $key_compare_func ) 
 Вычисляет пересечение массивов с дополнительной проверкой индекса, используя для сравнения индексов и значений callback-функцию. Обратите внимание, что в отличии от array_uintersect(), в сравнении принимают участие ключи. Для сравнения и ключей, и значений используется callback-функция. </description>
<parameters>array1 - Первый массив. 
array2 - Второй массив. 
data_compare_func - Используемая для сравнения callback-функция, предоставленная пользователем. Она должна возвращать целое число меньшее, равное или большее нуля, если первый параметр, соответственно, должен быть меньше, равен или больше второго. 
key_compare_func - Callback-функция для сравнения ключей. </parameters>
<output>Возвращает массив, содержащий все элементы array1, которые существуют во всех остальных аргументах. </output>
<errors></errors>
<example><?php
$array1 = array("a" => "green", "b" => "brown", "c" => "blue", "red");
$array2 = array("a" => "GREEN", "B" => "brown", "yellow", "red");
print_r(array_uintersect_uassoc($array1, $array2, "strcasecmp", "strcasecmp"));
?></example>
<example_result>
 
Array
(
    [a] => green
    [b] => brown
)
</example_result>
</object>

<object id=2005> 
<name>hw_setlinkroot</name>
<versions>(PHP 4)</versions>
<short-description>Set the id to which links are calculated</short-description>
<description>int hw_setlinkroot ( int $link , int $rootid ) 
 Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2006> 
<name>ldap_connect</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Подключиться к серверу LDAP</short-description>
<description>resource ldap_connect ([ string $hostname = NULL [, int $port = 389 ]] ) 
 Установить соединение с сервером LDAP, определённым параметрами hostname и port. </description>
<parameters>hostname - Если вы используете OpenLDAP 2.x.x, вы можете определить URL вместо имя хоста. Чтобы использовать LDAP с SSL, скомпилируйте OpenLDAP 2.x.x с поддержкой SSL, сконфигурируйте PHP с SSL, и установите этот параметр как ldaps://hostname/. 
port - Порт для соединения. Не применяется, в случае использования URL. </parameters>
<output>Возвращает положительный идентификатор ссылки LDAP в случае успеха или FALSE в случае ошибки. Когда используется OpenLDAP 2.x.x , ldap_connect() будет всегда возвращать resource, поскольку она фактически не соединяется, а только инициализирует параметры соединения. Фактическое подключение происходит при последующих вызовах ldap_* функций, обычно при вызове ldap_bind(). </output>
<errors></errors>
<example><?php
// LDAP переменные
$ldaphost = "ldap.example.com";  // Ваш сервер ldap
$ldapport = 389;                 // Порт вашего сервера ldap
// Соединение с LDAP
$ldapconn = ldap_connect($ldaphost, $ldapport)
          or die("Невозможно соединиться с $ldaphost");
?></example>
<example_result></example_result>
</object>

<object id=2007> 
<name>dbplus_first</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Get first tuple from relation</short-description>
<description>int dbplus_first ( resource $relation , array &$tuple ) 
 Reads the data for the first tuple for the given relation, makes it the current tuple and pass it back as an associative array in tuple. </description>
<parameters>relation - A relation opened by dbplus_open(). 
tuple - </parameters>
<output>Returns DBPLUS_ERR_NOERR on success or a db++ error code on failure. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2008> 
<name>ignore_user_abort</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Устанавливает, необходимо ли прерывать работу скрипта при отключении клиента</short-description>
<description>int ignore_user_abort ([ string $value ] ) 
 Устанавливает, необходимо ли прерывать работу скрипта при отключении клиента. 
 При работе с PHP скриптом в командной строке, когда терминал скрипта отключается без прерывания работы скрипта, скрипт будет остановлен, если параметр value не равен TRUE </description>
<parameters>value - Если параметр задан, то функция устанавливает заданный параметр value функции ignore_user_abort в ini настройку. Если же параметр не задано, то функция вернут предыдущее значение без его изменения. </parameters>
<output>Возвращает предыдущее значение в виде целого числа. </output>
<errors></errors>
<example><?php
// Игнорирует отключение пользователя и позволяет скрипту
// быть запущенным постоянно
ignore_user_abort(true);
set_time_limit(0);
echo 'Тестирование управления соединением PHP';
// Запуск бесконечного цикла,
// который будет завершен при выходе со страницы
// либо при нажатии кнопки "Stop".
while(1)
{    // Завершено ли соединение?
    if(connection_status() != CONNECTION_NORMAL)
    {
        break;
    }
    // Пауза на 10 секунд
    sleep(10);
}
// Если скрипт достиг этой строки, то была
// выполнена функция 'break' из цикла while
// Здесь можно производить журналирование, либо
// выполнять другие необходимые операции независимо
// от браузера.
?></example>
<example_result></example_result>
</object>

<object id=2009> 
<name>fam_monitor_directory</name>
<versions>(PHP 5 <= 5.0.5)</versions>
<short-description>Monitor a directory for changes</short-description>
<description>resource fam_monitor_directory ( resource $fam , string $dirname ) 
 Requests monitoring for a directory and all contained files. 
 A FAM event will be generated whenever the status of the directory (i.e. the result of function stat() on that directory) or its content (i.e. the results of readdir()) changes. 
 The possible event codes are described in detail in the constants part of this section. </description>
<parameters>fam - A resource representing a connection to the FAM service returned by fam_open() 
dirname - Path to the monitored directory </parameters>
<output>Returns a monitoring resource or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2010> 
<name>xml_get_error_code</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает код ошибки XML-парсера</short-description>
<description>int xml_get_error_code ( resource $parser ) 
 Получает код ошибки XML-парсера. </description>
<parameters>parser - Ссылка на парсер XML для получения кода ошибки. </parameters>
<output>Эта функция возвращает FALSE, если ссылка параметра parser не ведет к действующему парсеру, или же возвращает один из кодов ошибок из списка, расположенного в разделе кодов ошибок. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2011> 
<name>msql_fetch_row</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get row as enumerated array</short-description>
<description>array msql_fetch_row ( resource $result ) 
 msql_fetch_row() fetches one row of data from the result associated with the specified query identifier. The row is returned as an array. Each result column is stored in an array offset, starting at offset 0. 
 Subsequent call to msql_fetch_row() would return the next row in the result set, or FALSE if there are no more rows. </description>
<parameters>result - Обрабатываемый результат запроса,полученный с помощью функции msql_query().</parameters>
<output>Returns an array that corresponds to the fetched row, or FALSE if there are no more rows. </output>
<errors></errors>
<example><?php
$con = msql_connect();
if (!$con) {
    die('Server connection problem: ' . msql_error());
}
if (!msql_select_db('test', $con)) {
    die('Database connection problem: ' . msql_error());
}
$result = msql_query('SELECT id, name FROM people', $con);
if (!$result) {
    die('Query execution problem: ' . msql_error());
}
while ($row = msql_fetch_row($result)) {
    echo $row[0] . ': ' . $row[1] . "\n";
}
msql_free_result($result);
?></example>
<example_result></example_result>
</object>

<object id=2012> 
<name>yaz_scan</name>
<versions>(PHP 4 >= 4.0.5, PECL yaz >= 0.9.0)</versions>
<short-description>Prepares for a scan</short-description>
<description>void yaz_scan ( resource $id , string $type , string $startterm [, array $flags ] ) 
 This function prepares for a Z39.50 Scan Request on the specified connection. 
 To actually transfer the Scan Request to the server and receive the Scan Response, yaz_wait() must be called. Upon completion of yaz_wait() call yaz_error() and yaz_scan_result() to handle the response. </description>
<parameters>id - The connection resource returned by yaz_connect(). 
type - Currently only type rpn is supported. 
startterm - Starting term point for the scan. 
flags - This optional parameter specifies additional information to control the behaviour of the scan request. Three indexes are currently read from the flags array: number (number of terms requested), position (preferred position of term) and stepSize (preferred step size). </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
function scan_titles($id, $startterm) 
{  yaz_scan($id, "rpn", "@attr 1=4 " . $startterm);
  yaz_wait();
  $errno = yaz_errno($id);
  if ($errno == 0) {
    $ar = yaz_scan_result($id, $options);
    echo 'Scan ok; ';
    foreach ($options as $key => $val) {
      echo "$key = $val &nbsp;";
    }
    echo '<br /><table>';
    while (list($key, list($k, $term, $tcount)) = each($ar)) {
      if (empty($k)) continue;
      echo "<tr><td>$term</td><td>$tcount</td></tr>";
    }
    echo '</table>';
  } else {
    echo "Scan failed. Error: " . yaz_error($id) . "<br />";
  }
}?></example>
<example_result></example_result>
</object>

<object id=2013> 
<name>posix_getpgid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get process group id for job control</short-description>
<description>int posix_getpgid ( int $pid ) 
 Returns the process group identifier of the process pid или FALSE в случае возникновения ошибки. </description>
<parameters>pid - The process id. </parameters>
<output>Returns the identifier, as an integer. </output>
<errors></errors>
<example><?php
$pid = posix_getppid();
echo posix_getpgid($pid); //35
?></example>
<example_result></example_result>
</object>

<object id=2014> 
<name>oci_set_edition</name>
<versions>(PHP 5.3.2, PECL OCI8 >= 1.4.0)</versions>
<short-description>Задает выпуск (edition) базы данных </short-description>
<description>bool oci_set_edition ( string $edition ) 
 Задает "серию" объектов для использования на нижестоящих соединениях. 
 Подобные "выпуски" Oracle позволяют запускать приложения, использующие одинаковые схемы и имена объектов в конкурентном режиме. Это может быть полезным при модернизации работающих систем без их отключения. 
 Вызывайте oci_set_edition() до вызова oci_connect(), oci_pconnect() или oci_new_connect(). 
 Если заданный выпуск является недопустимым в базе данных, соединение не будет устанавливаться, даже если функция oci_set_edition() успешно выполнится. 
 При использовании постоянных соединений, если соединение с данным значением серии уже существует, оно будет использовано повторно. В остальных случаях будет создаваться новое соединение. </description>
<parameters>edition - Имя "выпуска" базы данных Oracle, ранее созданное SQL командой "CREATE EDITION". </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Файл 1
echo "Версия приложения 1\n";
oci_set_edition('ORA$BASE');
$c = oci_connect('hr', 'welcome', 'localhost/XE');
$s = oci_parse($c, "begin :r := myfunc(); end;");
oci_bind_by_name($s, ":r", $r, 20);
oci_execute($s);
echo "Результат: $r\n";
?></example>
<example_result></example_result>
</object>

<object id=2015> 
<name>version_compare</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Compares two "PHP-standardized" version number strings</short-description>
<description>mixed version_compare ( string $version1 , string $version2 [, string $operator ] ) 
 version_compare() compares two "PHP-standardized" version number strings. This is useful if you would like to write programs working only on some versions of PHP. 
 The function first replaces _, - and + with a dot . in the version strings and also inserts dots . before and after any non number so that for example &#039;4.3.2RC1&#039; becomes &#039;4.3.2.RC.1&#039;. Then it splits the results like if you were using explode(&#039;.&#039;, $ver). Then it compares the parts starting from left to right. If a part contains special version strings these are handled in the following order: any string not found in this list < dev < alpha = a < beta = b < RC = rc < # < pl = p. This way not only versions with different levels like &#039;4.1&#039; and &#039;4.1.2&#039; can be compared but also any PHP specific version containing development state. </description>
<parameters>version1 - First version number. 
version2 - Second version number. 
operator - If you specify the third optional operator argument, you can test for a particular relationship. The possible operators are: <, lt, <=, le, >, gt, >=, ge, ==, =, eq, !=, <>, ne respectively. </parameters>
<output>By default, version_compare() returns -1 if the first version is lower than the second, 0 if they are equal, and 1 if the second is lower. </output>
<errors></errors>
<example><?php
if (version_compare(PHP_VERSION, '6.0.0') >= 0) {
    echo 'I am at least PHP version 6.0.0, my version: ' . PHP_VERSION . "\n";
}
if (version_compare(PHP_VERSION, '5.3.0') >= 0) {
    echo 'I am at least PHP version 5.3.0, my version: ' . PHP_VERSION . "\n";
}
if (version_compare(PHP_VERSION, '5.0.0', '>=')) {
    echo 'I am using PHP 5, my version: ' . PHP_VERSION . "\n";
}
if (version_compare(PHP_VERSION, '5.0.0', '<')) {
    echo 'I am using PHP 4, my version: ' . PHP_VERSION . "\n";
}?></example>
<example_result></example_result>
</object>

<object id=2016> 
<name>ncurses_noecho</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Switch off keyboard input echo </short-description>
<description>bool ncurses_noecho ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Returns TRUE if any error occurred, FALSE otherwise. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2017> 
<name>imap_get_quota</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Retrieve the quota level settings, and usage statics per mailbox</short-description>
<description>array imap_get_quota ( resource $imap_stream , string $quota_root ) 
 Retrieve the quota level settings, and usage statics per mailbox. 
 For a non-admin user version of this function, please see the imap_get_quotaroot() function of PHP. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
quota_root - quota_root should normally be in the form of user.name where name is the mailbox you wish to retrieve information about. </parameters>
<output>Returns an array with integer values limit and usage for the given mailbox. The value of limit represents the total amount of space allowed for this mailbox. The usage value represents the mailboxes current level of capacity. Will return FALSE in the case of failure. </output>
<errors></errors>
<example><?php
$mbox = imap_open("{imap.example.org}", "mailadmin", "password", OP_HALFOPEN)
      or die("can't connect: " . imap_last_error());
$quota_value = imap_get_quota($mbox, "user.kalowsky");
if (is_array($quota_value)) {
    echo "Usage level is: " . $quota_value['usage'];
    echo "Limit level is: " . $quota_value['limit'];
}
imap_close($mbox);
?></example>
<example_result></example_result>
</object>

<object id=2018> 
<name>msession_get</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)</versions>
<short-description>Get value from session</short-description>
<description>string msession_get ( string $session , string $name , string $value ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2019> 
<name>ncurses_def_prog_mode</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Saves terminals (program) mode</short-description>
<description>bool ncurses_def_prog_mode ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Returns FALSE on success, otherwise TRUE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2020> 
<name>XMLWriter::startElementNS</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Создать начальный тег элемента пространства имен</short-description>
<description>bool XMLWriter::startElementNS ( string $prefix , string $name , string $uri ) 
 Процедурный стиль bool xmlwriter_start_element_ns ( resource $xmlwriter , string $prefix , string $name , string $uri )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
prefix - Префикс пространства имен. 
name - Имя элемента. 
uri - URI пространства имен. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2021> 
<name>fbsql_password</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Get or set the user password used with a connection</short-description>
<description>string fbsql_password ( resource $link_identifier [, string $password ] ) 
 Get or set the user password used with a connection. </description>
<parameters>link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().
password - If provided, this will be the new connection password. </parameters>
<output>Returns the current password used for the connection. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2022> 
<name>idn_to_ascii</name>
<versions>(PHP 5 >= 5.3.0, PECL intl >= 1.0.2, PECL idn >= 0.1)</versions>
<short-description>Convert domain name to IDNA ASCII form.</short-description>
<description>string idn_to_ascii ( string $domain [, int $options = 0 [, int $variant = INTL_IDNA_VARIANT_2003 [, array &$idna_info ]]] ) 
 This function converts Unicode domain name to IDNA ASCII-compatible format. </description>
<parameters>domain - Domain to convert. In PHP 5 must be UTF-8 encoded. 
options - Conversion options - combination of IDNA_* constants (except IDNA_ERROR_* constants). 
variant - Either INTL_IDNA_VARIANT_2003 for IDNA 2003 or INTL_IDNA_VARIANT_UTS46 for UTS #46. 
idna_info - This parameter can be used only if INTL_IDNA_VARIANT_UTS46 was used for variant. In that case, it will be filled with an array with the keys &#039;result&#039;, the possibly illegal result of the transformation, &#039;isTransitionalDifferent&#039;, a boolean indicating whether the usage of the transitional mechanisms of UTS #46 either has or would have changed the result and &#039;errors&#039;, which is an int representing a bitset of the error constants IDNA_ERROR_*. </parameters>
<output>Domain name encoded in ASCII-compatible form. или FALSE в случае возникновения ошибки </output>
<errors></errors>
<example><?php
echo idn_to_ascii('täst.de'); 
?></example>
<example_result>
 
xn--tst-qla.de
</example_result>
</object>

<object id=2023> 
<name>dbplus_unlockrel</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Give up write lock on relation</short-description>
<description>int dbplus_unlockrel ( resource $relation ) 
 Release a write lock previously obtained by dbplus_lockrel(). </description>
<parameters>relation - A relation opened by dbplus_open(). </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2024> 
<name>xmlrpc_is_fault</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Определяет, является ли массив значений представлением ошибки XMLRPC</short-description>
<description>bool xmlrpc_is_fault ( array $arg ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>arg - Массив, возвращаемый xmlrpc_decode(). </parameters>
<output>Возвращает TRUE, если аргумент означает ошибку, в противном случае - FALSE. Описание ошибки доступно в $arg["faultString"],а код ошибки в $arg["faultCode"]. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2025> 
<name>next</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Передвигает внутренний указатель массива на одну позицию вперёд</short-description>
<description>mixed next ( array &$array ) 
 next() ведёт себя подобно current(), но с одним отличием. Перед тем, как возвратить значение элемента массива, эта функция передвигает его внутренний указатель на одну позицию вперёд. Другими словами, она возвращает следующий элемент массива и сдвигает его внутренний указатель на одну позицию. </description>
<parameters>array - Массив array модифицируется данной функцией. </parameters>
<output>Возвращает значение элемента массива, находящегося на позиции, следующей за позицией внутренний указателя или FALSE, если достигнут конец массива. </output>
<errors></errors>
<example><?php
$transport = array('foot', 'bike', 'car', 'plane');
$mode = current($transport); // $mode = 'foot';
$mode = next($transport);    // $mode = 'bike';
$mode = next($transport);    // $mode = 'car';
$mode = prev($transport);    // $mode = 'bike';
$mode = end($transport);     // $mode = 'plane';
?></example>
<example_result></example_result>
</object>

<object id=2026> 
<name>snmp3_walk</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Fetch all the SNMP objects from an agent</short-description>
<description>array snmp3_walk ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] ) 
 snmp3_walk() function is used to read all the values from an SNMP agent specified by the hostname. 
 Even if the security level does not use an auth or priv protocol/password valid values have to be specified. </description>
<parameters>host - The hostname of the SNMP agent (server). 
sec_name - the security name, usually some kind of username 
sec_level - the security level (noAuthNoPriv|authNoPriv|authPriv) 
auth_protocol - the authentication protocol (MD5 or SHA) 
auth_passphrase - the authentication pass phrase 
priv_protocol - the privacy protocol (DES or AES) 
priv_passphrase - the privacy pass phrase 
object_id - If NULL, object_id is taken as the root of the SNMP objects tree and all objects under that tree are returned as an array. 
timeout - The number of microseconds until the first timeout. 
retries - The number of times to retry if timeouts occur. </parameters>
<output>Returns an array of SNMP object values starting from the object_id as root or FALSE on error. </output>
<errors></errors>
<example><?php
$ret = snmp3_walk('localhost', 'james', 'authPriv', 'SHA', 'secret007', 'AES', 'secret007', 'IF-MIB::ifName');
var_export($ret);
?></example>
<example_result>
 
array (
  0 => &#039;STRING: lo&#039;,
  1 => &#039;STRING: eth0&#039;,
  2 => &#039;STRING: eth2&#039;,
  3 => &#039;STRING: sit0&#039;,
  4 => &#039;STRING: sixxs&#039;,
)
</example_result>
</object>

<object id=2027> 
<name>yaz_sort</name>
<versions>(PHP 4 >= 4.0.7, PECL yaz >= 0.9.0)</versions>
<short-description>Задает критерий сортировки</short-description>
<description>void yaz_sort ( resource $id , string $criteria ) 
 Функция задает критерий сортировки и включает сортировку по Z39.50. 
 Эта функция должна быть вызвана до yaz_search(). Вызов этой функции отдельно не имеет никакого смысла. Когда она используется совместно с yaz_search(), параметры сортировки будут отосланы после поискового запроса и до того, как какая-либо запись будет получена по Z39.50 (yaz_present()). </description>
<parameters>id - Дескриптор соединения, возвращаемый yaz_connect(). 
criteria - Строка, принимающая вид поле1 флаг1 поле2 флаг2, где поле1 устанавливает первый атрибут сортировки, поле2 - второй и т.д. 
a - Сортировка по возрастанию 
d - Сортировка по убыванию 
i - Сортировка без учета регистра символов 
s - Сортировка с учетом регистра символов </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example>
 
 1=4 ia</example>
<example_result></example_result>
</object>

<object id=2028> 
<name>snmp2_get</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Fetch an SNMP object</short-description>
<description>string snmp2_get ( string $host , string $community , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] ) 
 The snmp2_get() function is used to read the value of an SNMP object specified by the object_id. </description>
<parameters>host - The SNMP agent. 
community - The read community. 
object_id - The SNMP object. 
timeout - The number of microseconds until the first timeout. 
retries - The number of times to retry if timeouts occur. </parameters>
<output>Returns SNMP object value on success or FALSE on error. </output>
<errors></errors>
<example><?php
$syscontact = snmp2_get("127.0.0.1", "public", "system.SysContact.0");
?></example>
<example_result></example_result>
</object>

<object id=2029> 
<name>ncurses_erasechar</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Returns current erase character </short-description>
<description>string ncurses_erasechar ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>The current erase char, as a string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2030> 
<name>ldap_8859_to_t61</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Переводит символы из кодировки ISO-8859 в t61</short-description>
<description>string ldap_8859_to_t61 ( string $value ) 
 Переводит символы из кодировки ISO-8859 в t61. 
 Эта функция полезна, если необходимо работать с устаревшим LDAPv2 сервером. </description>
<parameters>value - Текст, которые должен быть переведён. </parameters>
<output>Возвращает кодированный в t61 параметр value. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2031> 
<name>xmlrpc_decode</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Декодирует XML в нативные типы PHP</short-description>
<description>mixed xmlrpc_decode ( string $xml [, string $encoding = "iso-8859-1" ] ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>xml - XML ответ, возвращаемый методом XMLRPC. 
encoding - Входящая кодировка, поддерживаемая iconv. </parameters>
<output>Возвращает массив, или число, или строку, или логическое значение в соответствии с ответом, возвращаемым методом XMLRPC. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2032> 
<name>imap_lsub</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>List all the subscribed mailboxes</short-description>
<description>array imap_lsub ( resource $imap_stream , string $ref , string $pattern ) 
 Gets an array of all the mailboxes that you have subscribed. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
ref - ref should normally be just the server specification as described in imap_open() 
pattern - Определяет начало поиска в иерархии почтовых ящиков.</parameters>
<output>Returns an array of all the subscribed mailboxes. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2033> 
<name>ftp_close</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Закрывает соединение с FTP-сервером</short-description>
<description>bool ftp_close ( resource $ftp_stream ) 
 ftp_close() закрывает указанный идентификатор соединения с сервером и освобождает resource. 
 Замечание: 
 После вызова этой функции, соединение больше не может быть использовано, и при необходимости должно быть установлено заново при помощи функции ftp_connect(). </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// установка соединения
$conn_id = ftp_connect($ftp_server);
// вход с именем пользователя и паролем
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass); 
// вывод текущей директории
echo ftp_pwd($conn_id); // /
// закрытие соединения
ftp_close($conn_id);
?></example>
<example_result></example_result>
</object>

<object id=2034> 
<name>stream_set_write_buffer</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Устанавливает буферизацию файла при записи в указанный поток</short-description>
<description>int stream_set_write_buffer ( resource $stream , int $buffer ) 
 Устанавливает буферизацию для операций записи на заданном потоке stream в число buffer байт. 
 Вывод с использованием функции fwrite() обычно буферизуется по 8 килобайт. Это означает, что если два процесса хотят записывать данные в один и тот же поток вывода (файл), каждый будет останавливаться после 8 килобайт данных для того, чтобы позволить записать данные другому. </description>
<parameters>stream - Файловый указатель. 
buffer - Число байт для буферизации. Если аргумент buffer равен 0, то операции записи не буферизуются. Это гарантирует, что все операции записи с использованием функции fwrite() будут завершены перед тем, как другим процессам будет позволено записывать в поток вывода. </parameters>
<output>Возвращает 0 в случае успеха, или EOF в случае, если запрос не может быть выполнен. </output>
<errors></errors>
<example>
 stream_set_write_buffer() для создания небуферизуемого потока. </example>
<example_result></example_result>
</object>

<object id=2035> 
<name>md5_file</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает MD5-хэш файла</short-description>
<description>string md5_file ( string $filename [, bool $raw_output = false ] ) 
 Вычисляет MD5-хэш файла, имя которого задано аргументом filename, используя &raquo; алгоритм MD5 RSA Data Security, Inc. и возвращает этот хэш. Хэш представляет собой 32-значное шестнадцатеричное число. </description>
<parameters>filename - Имя файла 
raw_output - Если имеет значение TRUE, то возвращается бинарная строка из 16 символов. </parameters>
<output>Возвращает строку в случае успеха, иначе FALSE. </output>
<errors></errors>
<example><?php
$file = 'php-5.3.0alpha2-Win32-VC9-x64.zip';
echo 'MD5-хэш файла ' . $file . ': ' . md5_file($file);
?></example>
<example_result></example_result>
</object>

<object id=2036> 
<name>XMLWriter::startPI</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Создать начальный тэг PI</short-description>
<description>bool XMLWriter::startPI ( string $target ) 
 Процедурный стиль bool xmlwriter_start_pi ( resource $xmlwriter , string $target )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
target - Цель инструкций обработки. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2037> 
<name>ldap_parse_result</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Извлечь информацию из результата</short-description>
<description>bool ldap_parse_result ( resource $link , resource $result , int &$errcode [, string &$matcheddn [, string &$errmsg [, array &$referrals ]]] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2038> 
<name>msql_fetch_object</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Fetch row as object</short-description>
<description>object msql_fetch_object ( resource $result ) 
 msql_fetch_object() is similar to msql_fetch_array(), with one difference - an object is returned, instead of an array. Indirectly, that means that you can only access the data by the field names, and not by their offsets (numbers are illegal property names). 
 Speed-wise, the function is identical to msql_fetch_array(), and almost as quick as msql_fetch_row() (the difference is insignificant). </description>
<parameters>result - Обрабатываемый результат запроса,полученный с помощью функции msql_query().</parameters>
<output>Returns an object with properties that correspond to the fetched row, or FALSE if there are no more rows. </output>
<errors></errors>
<example><?php
$con = msql_connect();
if (!$con) {
    die('Server connection problem: ' . msql_error());
}
if (!msql_select_db('test', $con)) {
    die('Database connection problem: ' . msql_error());
}
$result = msql_query('SELECT id, name FROM people', $con);
if (!$result) {
    die('Query execution problem: ' . msql_error());
}
while ($row = msql_fetch_object($result, MSQL_ASSOC)) {
    echo $row->id . ': ' . $row->name . "\n";
}
msql_free_result($result);
?></example>
<example_result></example_result>
</object>

<object id=2039> 
<name>pg_delete</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Удаляет записи </short-description>
<description>mixed pg_delete ( resource $connection , string $table_name , array $assoc_array [, int $options = PGSQL_DML_EXEC ] ) 
 pg_delete() удаляет из таблицы записи, соответствующие ключам и значениям массива assoc_array. Если задан аргумент options, то массив assoc_array будет предварительно обработан функцией pg_convert(), вызванной с указанными параметрами. </description>
<parameters>connection - Ресурс соединения с базой данных PostgreSQL. 
table_name - Имя таблицы, из которой удаляются записи. 
assoc_array - Ассоциативный массив, ключи которого соответствуют именам полей таблицы table_name, а значения соответствуют удаляемым значениям в этих колонках. 
options - Комбинация констант PGSQL_CONV_FORCE_NULL, PGSQL_DML_NO_CONV, PGSQL_DML_EXEC или PGSQL_DML_STRING. Если константа PGSQL_DML_STRING присутствует в аргументе options, то функция вернет строку, содержащую запрос. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. Возвращает строку, если в аргументе options передана константа PGSQL_DML_STRING. </output>
<errors></errors>
<example><?php
  $db = pg_connect('dbname=foo');
  // Это безопасно, поскольку $_POST автоматически конвертируется
  $res = pg_delete($db, 'post_log', $_POST);
  if ($res) {
      echo "Данные из POST удалены: $res\n";
  } else {
      echo "Пользователь отправил неверные входные данные\n";
  }
?></example>
<example_result></example_result>
</object>

<object id=2040> 
<name>ifx_do</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Execute a previously prepared SQL-statement</short-description>
<description>bool ifx_do ( resource $result_id ) 
 Executes a previously prepared query or opens a cursor for it. 
 Does NOT free result_id on error. 
 Also sets the real number of ifx_affected_rows() for non-select statements for retrieval by ifx_affected_rows(). </description>
<parameters>result_id - result_id is a valid resultid returned by ifx_query() or ifx_prepare() (select type queries only!). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2041> 
<name>ibase_query</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Execute a query on an InterBase database</short-description>
<description>resource ibase_query ([ resource $link_identifier ], string $query [, int $bind_args ] ) 
 Performs a query on an InterBase database. </description>
<parameters>link_identifier - An InterBase link identifier. If omitted, the last opened link is assumed. 
query - An InterBase query. 
bind_args - </parameters>
<output>If the query raises an error, returns FALSE. If it is successful and there is a (possibly empty) result set (such as with a SELECT query), returns a result identifier. If the query was successful and there were no results, returns TRUE. </output>
<errors>If you get some error like "arithmetic exception, numeric overflow, or string truncation. Cannot transliterate character between character sets" (this occurs when you try use some character with accents) when using this and after ibase_query() you must set the character set (i.e. ISO8859_1 or your current character set). </errors>
<example><?php
$host = 'localhost:/path/to/your.gdb';
$dbh = ibase_connect($host, $username, $password);
$stmt = 'SELECT * FROM tblname';
$sth = ibase_query($dbh, $stmt) or die(ibase_errmsg());
?></example>
<example_result></example_result>
</object>

<object id=2042> 
<name>iconv_set_encoding</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Устанавливает значение одной из внутренних переменных</short-description>
<description>bool iconv_set_encoding ( string $type , string $charset ) 
 Изменяет значение внутренней переменной, указанной параметром type, на charset. </description>
<parameters>type - Возможные значения параметра type: input_encoding output_encoding internal_encoding 
charset - Кодировка. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
iconv_set_encoding("internal_encoding", "UTF-8");
iconv_set_encoding("output_encoding", "WINDOWS-1251");
?></example>
<example_result></example_result>
</object>

<object id=2043> 
<name>stream_set_timeout</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Устанавливает значение тайм-аута на потоке</short-description>
<description>bool stream_set_timeout ( resource $stream , int $seconds [, int $microseconds = 0 ] ) 
 Устанавливает значение тайм-аута на потоке stream, равное сумме параметров seconds и microseconds. 
 Когда время работы потока истекает, ключ &#039;timed_out&#039; массива, возвращаемого функцией stream_get_meta_data(), устанавливается в значение TRUE, хотя ошибка или предупреждение не генерируется. </description>
<parameters>stream - Целевой поток. 
seconds - Секунды в устанавливаемом тайм-ауте. 
microseconds - Микросекунды в устанавливаемом тайм-ауте. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$fp = fsockopen("www.example.com", 80);
if (!$fp) {
    echo "Невозможно открыть сокет\n";
} else {
    fwrite($fp, "GET / HTTP/1.0\r\n\r\n");
    stream_set_timeout($fp, 2);
    $res = fread($fp, 2000);
    $info = stream_get_meta_data($fp);
    fclose($fp);
    if ($info['timed_out']) {
        echo 'Истекло время соединения!';
    } else {
        echo $res;
    }
}
?></example>
<example_result></example_result>
</object>

<object id=2044> 
<name>strtolower</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Преобразует строку в нижний регистр</short-description>
<description>string strtolower ( string $str ) 
 Возвращает строку string, в которой все буквенные символы переведены в нижний регистр. 
 Принадлежность того или иного символа к буквенным определяется с учетом текущей локали. Это означает, что, например, в используемой по умолчанию локали "C", символ Ä не будет преобразован. </description>
<parameters>str - Входная строка. </parameters>
<output>Возвращает строку в нижнем регистре. </output>
<errors></errors>
<example><?php
$str = "Mary Had A Little Lamb and She LOVED It So";
$str = strtolower($str);
echo $str; // выводит: mary had a little lamb and she loved it so
?></example>
<example_result></example_result>
</object>

<object id=2045> 
<name>ingres_fetch_object</name>
<versions>(PHP 4 >= 4.0.2, PHP 5 <= 5.0.5, PECL ingres >= 1.0.0)</versions>
<short-description>Fetch a row of result into an object</short-description>
<description>object ingres_fetch_object ( resource $result [, int $result_type ] ) 
 This function is similar to ingres_fetch_array(), with one difference - an object is returned instead of an array. Indirectly, this means that you can access the data only by the field names and not by their offsets (numbers are illegal property names). 
 With regard to speed, the function is identical to ingres_fetch_array(), and almost as quick as ingres_fetch_row() (the difference is insignificant). 
 Замечание: Related Configurations
 
 See also the ingres.fetch_buffer_size and ingres.utf8 directives in Runtime Configuration. </description>
<parameters>link - The query result identifier 
result_type - (Optional argument.) result_type is a constant and can take the following values: INGRES_ASSOC, INGRES_NUM, and INGRES_BOTH. </parameters>
<output>Returns an object that corresponds to the fetched row, or FALSE if there are no more rows </output>
<errors></errors>
<example><?php
$link = ingres_connect($database, $user, $password);
$result = ingres_query($link, "select * from table");
while ($row = ingres_fetch_object($result)) {
    echo $row->user_id;
    echo $row->fullname;
}?></example>
<example_result></example_result>
</object>

<object id=2046> 
<name>mssql_fetch_object</name>
<versions>(PHP 4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Fetch row as object</short-description>
<description>object mssql_fetch_object ( resource $result ) 
 mssql_fetch_object() is similar to mssql_fetch_array(), with one difference - an object is returned, instead of an array. Indirectly, that means that you can only access the data by the field names, and not by their offsets (numbers are illegal property names). 
 Speed-wise, the function is identical to mssql_fetch_array(), and almost as quick as mssql_fetch_row() (the difference is insignificant). </description>
<parameters>result - The result resource that is being evaluated. This result comes from a call to mssql_query(). </parameters>
<output>Returns an object with properties that correspond to the fetched row, or FALSE if there are no more rows. </output>
<errors></errors>
<example><?php
// Send a select query to MSSQL
$query = mssql_query('SELECT [username], [name] FROM [php].[dbo].[userlist]');
// Check if there were any records
if (!mssql_num_rows($query)) {
    echo 'No records found';
} else {
    // Print a nice list of users in the format of:
    // * name (username)
    echo '<ul>';
    while ($row = mssql_fetch_object($query)) {
        echo '<li>' . $row->name . ' (' . $row->username . ')</li>';
    }
    echo '</ul>';
}
// Free the query result
mssql_free_result($query);
?></example>
<example_result></example_result>
</object>

<object id=2047> 
<name>PDF_setmatrix</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Set current transformation matrix</short-description>
<description>bool PDF_setmatrix ( resource $p , float $a , float $b , float $c , float $d , float $e , float $f ) 
 Explicitly sets the current transformation matrix. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2048> 
<name>fbsql_close</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Close FrontBase connection</short-description>
<description>bool fbsql_close ([ resource $link_identifier ] ) 
 Closes the connection to the FrontBase server that&#039;s associated with the specified link identifier. 
 Using fbsql_close() isn&#039;t usually necessary, as non-persistent open links are automatically closed at the end of the script&#039;s execution. </description>
<parameters>link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$link = fbsql_connect("localhost", "_SYSTEM", "secret")
    or die("Could not connect");
echo "Connected successfully";
fbsql_close($link);
?></example>
<example_result></example_result>
</object>

<object id=2049> 
<name>ksort</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сортирует массив по ключам</short-description>
<description>bool ksort ( array &$array [, int $sort_flags = SORT_REGULAR ] ) 
 Сортирует массив по ключам, сохраняя отношения между ключами и значениями. Эта функция полезна, в основном, для работы с ассоциативными массивами. </description>
<parameters>array - Входной массив. 
sort_flags - Вы можете изменить поведение сортировки, используя дополнительный параметр sort_flags, подробнее смотри функцию sort(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$fruits = array("d"=>"lemon", "a"=>"orange", "b"=>"banana", "c"=>"apple");
ksort($fruits);
foreach ($fruits as $key => $val) {
    echo "$key = $val\n";
}?></example>
<example_result>
 
a = orange
b = banana
c = apple
d = lemon
</example_result>
</object>

<object id=2050> 
<name>gmp_sqrt</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Вычисление квадратного корня</short-description>
<description>resource gmp_sqrt ( resource $a ) 
 Вычисляет квадратный корень числа a. </description>
<parameters>a - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.</parameters>
<output>Целая часть корня в виде GMP числа. </output>
<errors></errors>
<example><?php
$sqrt1 = gmp_sqrt("9");
$sqrt2 = gmp_sqrt("7");
$sqrt3 = gmp_sqrt("1524157875019052100");
echo gmp_strval($sqrt1) . "\n";
echo gmp_strval($sqrt2) . "\n";
echo gmp_strval($sqrt3) . "\n";
?></example>
<example_result>
 
3
2
1234567890
</example_result>
</object>

<object id=2051> 
<name>func_num_args</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает количество аргументов, переданных функции</short-description>
<description>int func_num_args ( void ) 
 Возвращает количество аргументов, переданных функции. 
 Эта функция также может быть использована совместно с func_get_arg() и func_get_args() для создания функций с переменным количеством аргументов. </description>
<parameters></parameters>
<output>Возвращает количество аргументов, переданных текущей пользовательской функции. </output>
<errors>Генерирует предупреждение при вызове вне определения функции. </errors>
<example><?php
function foo()
{    $numargs = func_num_args();
    echo "Количество аргументов: $numargs\n";
}
foo(1, 2, 3);
?></example>
<example_result>
 
Количество аргументов: 3
</example_result>
</object>

<object id=2052> 
<name>odbc_foreignkeys</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Retrieves a list of foreign keys</short-description>
<description>resource odbc_foreignkeys ( resource $connection_id , string $pk_qualifier , string $pk_owner , string $pk_table , string $fk_qualifier , string $fk_owner , string $fk_table ) 
 Retrieves a list of foreign keys in the specified table or a list of foreign keys in other tables that refer to the primary key in the specified table </description>
<parameters>connection_id - Идентификатор соединения ODBC,за подробностями обращайтесь к odbc_connect().
pk_qualifier - The primary key qualifier. 
pk_owner - The primary key owner. 
pk_table - The primary key table. 
fk_qualifier - The foreign key qualifier. 
fk_owner - The foreign key owner. 
fk_table - The foreign key table. </parameters>
<output>Returns an ODBC result identifier или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2053> 
<name>mysql_field_name</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает название указанной колонки результата запроса</short-description>
<description>string mysql_field_name ( resource $result , int $field_offset ) 
 mysql_field_name() возвращает название колонки с указанным индексом. </description>
<parameters>result - Обрабатываемый результат запроса.Этот результат может быть получен с помощью функции mysql_query().
field_offset - Числовое смещение поля.field_offset начинается с 0. Еслиfield_offset не существует, генерируется ошибка уровняE_WARNING.</parameters>
<output>Название поля по указанному индексу в случае успеха или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
/* Таблица пользователей состоит из трёх колонок:
 *   user_id
 *   username
 *   password.
 */
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Ошибка соединения с MySQL: ' . mysql_error());
}$dbname = 'mydb';
$db_selected = mysql_select_db($dbname, $link);
if (!$db_selected) {
    die("Не удалось выбрать базу $dbname: " . mysql_error());
}$res = mysql_query('select * from users', $link);
echo mysql_field_name($res, 0) . "\n";
echo mysql_field_name($res, 2);
?></example>
<example_result>
 
user_id
password
</example_result>
</object>

<object id=2054> 
<name>putenv</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Sets the value of an environment variable</short-description>
<description>bool putenv ( string $setting ) 
 Adds setting to the server environment. The environment variable will only exist for the duration of the current request. At the end of the request the environment is restored to its original state. 
 Setting certain environment variables may be a potential security breach. The safe_mode_allowed_env_vars directive contains a comma-delimited list of prefixes. In Safe Mode, the user may only alter environment variables whose names begin with the prefixes supplied by this directive. By default, users will only be able to set environment variables that begin with PHP_ (e.g. PHP_FOO=BAR). Note: if this directive is empty, PHP will let the user modify ANY environment variable! 
 The safe_mode_protected_env_vars directive contains a comma-delimited list of environment variables, that the end user won&#039;t be able to change using putenv(). These variables will be protected even if safe_mode_allowed_env_vars is set to allow to change them. </description>
<parameters>setting - The setting, like "FOO=BAR" </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
putenv("UNIQID=$uniqid");
?></example>
<example_result></example_result>
</object>

<object id=2055> 
<name>PDF_add_launchlink</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Add launch annotation for current page [deprecated]</short-description>
<description>bool PDF_add_launchlink ( resource $pdfdoc , float $llx , float $lly , float $urx , float $ury , string $filename ) 
 Adds a link to a web resource. 
 This function is deprecated since PDFlib version 6, use PDF_create_action() with type=Launch and PDF_create_annotation() with type=Link instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2056> 
<name>array_uintersect</name>
<versions>(PHP 5)</versions>
<short-description>Вычисляет пересечение массивов, используя для сравнения значений callback-функцию</short-description>
<description>array array_uintersect ( array $array1 , array $array2 [, array $ ... ], callback $data_compare_func ) 
 Вычисляет пересечение массивов, используя для сравнения значений callback-функцию. </description>
<parameters>array1 - Первый массив. 
array2 - Второй массив. 
data_compare_func - Используемая для сравнения callback-функция. </parameters>
<output>Возвращает массив, содержащий все элементы array1, которые существуют во всех остальных аргументах. </output>
<errors></errors>
<example><?php
$array1 = array("a" => "green", "b" => "brown", "c" => "blue", "red");
$array2 = array("a" => "GREEN", "B" => "brown", "yellow", "red");
print_r(array_uintersect($array1, $array2, "strcasecmp"));
?></example>
<example_result>
 
Array
(
    [a] => green
    [b] => brown
    [0] => red
)
</example_result>
</object>

<object id=2057> 
<name>fdf_get_attachment</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Extracts uploaded file embedded in the FDF</short-description>
<description>array fdf_get_attachment ( resource $fdf_document , string $fieldname , string $savepath ) 
 Extracts a file uploaded by means of the "file selection" field fieldname and stores it under savepath. </description>
<parameters>fdf_document - The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string(). 
fieldname - 
savepath - May be the name of a plain file or an existing directory in which the file is to be created under its original name. Any existing file under the same name will be overwritten. </parameters>
<output>The returned array contains the following fields: path - path were the file got stored size - size of the stored file in bytes type - mimetype if given in the FDF </output>
<errors></errors>
<example><?php
  $fdf = fdf_open_string($HTTP_FDF_DATA);
  $data = fdf_get_attachment($fdf, "filename", "/tmpdir");
  echo "The uploaded file is stored in $data[path]";
?></example>
<example_result></example_result>
</object>

<object id=2058> 
<name>ftp_get</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Загружает файл с FTP-сервера</short-description>
<description>bool ftp_get ( resource $ftp_stream , string $local_file , string $remote_file , int $mode [, int $resumepos = 0 ] ) 
 ftp_get() загружает удалённый файл с FTP-сервера и сохраняет его локально. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP сервером. 
local_file - Путь к локальному файлу (файл будет перезаписан, если уже существует). 
remote_file - Путь к удалённому файлу. 
mode - Режим передачи. Должен быть либо FTP_ASCII, либо FTP_BINARY. 
resumepos - Позиция начала загрузки в удаленном файле.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// объявление переменных
$local_file = 'local.zip';
$server_file = 'server.zip';
// установка соединения
$conn_id = ftp_connect($ftp_server);
// вход с именем пользователя и паролем
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);
// попытка скачать $server_file и сохранить в $local_file
if (ftp_get($conn_id, $local_file, $server_file, FTP_BINARY)) {
    echo "Произведена запись в $local_file\n";
} else {
    echo "Не удалось завершить операцию\n";
}
// закрытие соединения
ftp_close($conn_id);
?></example>
<example_result></example_result>
</object>

<object id=2059> 
<name>mb_strrpos</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Find position of last occurrence of a string in a string</short-description>
<description>int mb_strrpos ( string $haystack , string $needle [, int $offset = 0 [, string $encoding ]] ) 
 Performs a multibyte safe strrpos() operation based on the number of characters. needle position is counted from the beginning of haystack. First character&#039;s position is 0. Second character position is 1. </description>
<parameters>haystack - The string being checked, for the last occurrence of needle 
needle - The string to find in haystack. 
offset May be specified to begin searching an arbitrary number of characters into the string. Negative values will stop searching at an arbitrary point prior to the end of the string. encoding - Параметр encodingпредставляет собой символьную кодировку. Если он опущен, вместо него будет использовано значение внутренней кодировки.</parameters>
<output>Returns the numeric position of the last occurrence of needle in the haystack string. If needle is not found, it returns FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2060> 
<name>link</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Создаёт жёсткую ссылку</short-description>
<description>bool link ( string $target , string $link ) 
 link() создаёт жесткую ссылку. </description>
<parameters>target - Цель ссылки. 
link - Имя ссылки. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$target = 'source.ext'; // Это уже существующий файл
$link = 'newfile.ext'; // Это файл, который вы хотите привязать к первому
link($target, $link);
?></example>
<example_result></example_result>
</object>

<object id=2061> 
<name>simplexml_load_string</name>
<versions>(PHP 5)</versions>
<short-description>Интерпретирует строку с XML в объект </short-description>
<description>SimpleXMLElement simplexml_load_string ( string $data [, string $class_name = "SimpleXMLElement" [, int $options = 0 [, string $ns = "" [, bool $is_prefix = false ]]]] ) 
 Получает правильно сформированную XML-строку и возвращает ее как объект. </description>
<parameters>data - Правильно сформированная XML-строка 
class_name - Вы можете использовать этот необязательный параметр для того, чтобы функция simplexml_load_string() возвращала объект указанного класса. Этот класс должен расширять класс SimpleXMLElement. 
options - Начиная с PHP 5.1.0 и Libxml 2.6.0, вы также можете использовать параметр options чтобы указать дополнительные параметры Libxml. 
ns - Префикс пространства имен или URI. 
is_prefix - TRUE если ns является префиксом, и FALSE если URI; по умолчанию равен FALSE. </parameters>
<output>Возвращает объект (object) класса SimpleXMLElement со свойствами, содержащими данные, которые хранятся внутри XML-документа или FALSE в случае возникновения ошибки. </output>
<errors>Генерирует сообщение об ошибке уровня E_WARNING для каждой ошибки, найденной в XML-данных. </errors>
<example><?php
$string = <<<XML
<?xml version='1.0'?> 
<document>
 <title>Что 40?</title>
 <from>Джо</from>
 <to>Джейн</to>
 <body>
  Я знаю, что это - ответ. В чем заключается вопрос?
 </body>
</document>
XML;
$xml = simplexml_load_string($string);
print_r($xml);
?></example>
<example_result>
 
SimpleXMLElement Object
(
  [title] => Что 40?
  [from] => Джо
  [to] => Джейн
  [body] =>
   Я знаю, что это - ответ. В чем заключается вопрос?
)
</example_result>
</object>

<object id=2062> 
<name>getmyuid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets PHP script owner&#039;s UID</short-description>
<description>int getmyuid ( void ) 
 Gets the user ID of the current script. </description>
<parameters></parameters>
<output>Returns the user ID of the current script, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2063> 
<name>imagepng</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Output a PNG image to either the browser or a file</short-description>
<description>bool imagepng ( resource $image [, string $filename [, int $quality [, int $filters ]]] ) 
 Outputs or saves a PNG image from the given image. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
filename - Путь для сохранения файла. Если не установлен или равен NULL, изображение будет выведено в поток вывода в бинарном виде.
quality - Compression level: from 0 (no compression) to 9. 
filters - Allows reducing the PNG file size. It is a bitmask field which may be set to any combination of the PNG_FILTER_XXX constants. PNG_NO_FILTER or PNG_ALL_FILTERS may also be used to respectively disable or activate all filters. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$im = imagecreatefrompng("test.png");
header('Content-Type: image/png');
imagepng($im);
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=2064> 
<name>imageftbbox</name>
<versions>(PHP 4 >= 4.0.7, PHP 5)</versions>
<short-description>Give the bounding box of a text using fonts via freetype2</short-description>
<description>array imageftbbox ( float $size , float $angle , string $fontfile , string $text [, array $extrainfo ] ) 
 This function calculates and returns the bounding box in pixels for a FreeType text. </description>
<parameters>size - Размер шрифта. В зависимости от вашей версии GD, он должен быть указан либо в пикселах (GD1) либо в типографских пунктах (GD2).
angle - Angle in degrees in which text will be measured. 
fontfile - The name of the TrueType font file (can be a URL). Depending on which version of the GD library that PHP is using, it may attempt to search for files that do not begin with a leading &#039;/&#039; by appending &#039;.ttf&#039; to the filename and searching along a library-defined font path. 
text - The string to be measured. 
extrainfo - Possible array indexes for extrainfo Key Type Meaning linespacing float Defines drawing linespacing </parameters>
<output>imageftbbox() returns an array with 8 elements representing four points making the bounding box of the text: 0 lower left corner, X position 1 lower left corner, Y position 2 lower right corner, X position 3 lower right corner, Y position 4 upper right corner, X position 5 upper right corner, Y position 6 upper left corner, X position 7 upper left corner, Y position </output>
<errors></errors>
<example><?php
// Create a 300x150 image
$im = imagecreatetruecolor(300, 150);
$black = imagecolorallocate($im, 0, 0, 0);
$white = imagecolorallocate($im, 255, 255, 255);
// Set the background to be white
imagefilledrectangle($im, 0, 0, 299, 299, $white);
// Path to our font file
$font = './arial.ttf';
// First we create our bounding box
$bbox = imageftbbox(10, 0, $font, 'The PHP Documentation Group');
// This is our cordinates for X and Y
$x = $bbox[0] + (imagesx($im) / 2) - ($bbox[4] / 2) - 5;
$y = $bbox[1] + (imagesy($im) / 2) - ($bbox[5] / 2) - 5;
imagefttext($im, 10, 0, $x, $y, $black, $font, 'The PHP Documentation Group');
// Output to browser
header('Content-Type: image/png');
imagepng($im);
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=2065> 
<name>fam_cancel_monitor</name>
<versions>(PHP 5 <= 5.0.5)</versions>
<short-description>Terminate monitoring</short-description>
<description>bool fam_cancel_monitor ( resource $fam , resource $fam_monitor ) 
 Terminates monitoring on a resource. 
 In addition an FAMAcknowledge event occurs. </description>
<parameters>fam - A resource representing a connection to the FAM service returned by fam_open() 
fam_monitor - A resource returned by one of the fam_monitor_XXX functions </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2066> 
<name>ereg_replace</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Осуществляет замену по регулярному выражению</short-description>
<description>string ereg_replace ( string $pattern , string $replacement , string $string ) 
 Эта функция сканирует строку string для поиска совпадений с pattern, затем заменяет совпавший текст на replacement. Внимание
 С версии PHP 5.3.0 эта функция считаетсяУСТАРЕВШЕЙ. Крайне не рекомендуется полагаться на эту возможность.</description>
<parameters>pattern - Расширенное регулярное выражение POSIX. 
replacement - Если pattern содержит подстроки в скобках, replacement может содержать подстроки вида \\digit, которые будут заменены текстом, совпавшим с digit-подстрокой в скобках; \\0 воспроизведет все содержимое строки. Может использоваться до 9 подстрок. Круглые скобки могут быть вложенными, в этом случае они подсчитываются по открывающим скобкам. 
string - Исходная cтрока. </parameters>
<output>Возвращается измененная строка. Если в строке string совпадений не найдено, она возвратится без изменений. </output>
<errors></errors>
<example><?php
$string = "This is a test";
echo str_replace(" is", " was", $string);
echo ereg_replace("( )is", "\\1was", $string);
echo ereg_replace("(( )is)", "\\2was", $string);
?></example>
<example_result></example_result>
</object>

<object id=2067> 
<name>sqlite_error_string</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Возвращает строку с описанием ошибки</short-description>
<description>string sqlite_error_string ( int $error_code ) 
 Возвращает читабельное описание ошибки с кодом error_code, полученного из функции sqlite_last_error(). </description>
<parameters>error_code - Код ошибки, полученный из sqlite_last_error(). </parameters>
<output>Возвращает читабельное описание ошибки с кодом error_code в виде string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2068> 
<name>XMLWriter::writeAttributeNS</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Записать полный атрибут пространства имен</short-description>
<description>bool XMLWriter::writeAttributeNS ( string $prefix , string $name , string $uri , string $content ) 
 Процедурный стиль bool xmlwriter_write_attribute_ns ( resource $xmlwriter , string $prefix , string $name , string $uri , string $content )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
prefix - Префикс пространства имен. 
name - Имя атрибута. 
uri - URI пространства имен. 
content - Значение атрибута. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2069> 
<name>mb_convert_variables</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Преобразует символы в переменной(-ых) из одной кодировки в другую </short-description>
<description>string mb_convert_variables ( string $to_encoding , mixed $from_encoding , mixed &$vars [, mixed &$... ] ) 
 Конвертирует символы в переменных vars из кодировки from_encoding в кодировку to_encoding. 
 mb_convert_variables() объединяет строки из массива или объекта для определения их кодировки, так как в случае коротких строк определить кодировку зачастую не удается. Вследствие этого, недопустимо помещать в один массив или объект строки в разных кодировках. </description>
<parameters>to_encoding - Кодировка, в которую необходимо перекодировать строку string. 
from_encoding - from_encoding задается в виде массива array или строки string с разделенными запятой кодировками. Функция попытается определить кодировку исходной строки на основе списка возможных кодировок в аргументе from-coding. Если from_encoding опущен, используется detect_order. 
vars - vars - ссылка на переменную, содержимое которой необходимо преобразовать. Это может быть строка, массив или объект. mb_convert_variables() принимает, что все эти аргументы имеют одинаковою кодировку. 
... - Дополнительные vars. </parameters>
<output>Исходную кодировку в случае успеха или FALSE в случае неудачи. </output>
<errors></errors>
<example><?php
/* Преобразование переменных $post1, $post2 во внутреннюю кодировку скрипта */
$interenc = mb_internal_encoding();
$inputenc = mb_convert_variables($interenc, "ASCII,UTF-8,SJIS-win", $post1, $post2);
?></example>
<example_result></example_result>
</object>

<object id=2070> 
<name>mb_strrichr</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Finds the last occurrence of a character in a string within another, case insensitive</short-description>
<description>string mb_strrichr ( string $haystack , string $needle [, bool $part = false [, string $encoding ]] ) 
 mb_strrichr() finds the last occurrence of needle in haystack and returns the portion of haystack. Unlike mb_strrchr(), mb_strrichr() is case-insensitive. If needle is not found, it returns FALSE. </description>
<parameters>haystack - The string from which to get the last occurrence of needle 
needle - The string to find in haystack 
part - Determines which portion of haystack this function returns. If set to TRUE, it returns all of haystack from the beginning to the last occurrence of needle. If set to FALSE, it returns all of haystack from the last occurrence of needle to the end, 
encoding - Character encoding name to use. If it is omitted, internal character encoding is used. </parameters>
<output>Returns the portion of haystack. or FALSE if needle is not found. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2071> 
<name>ibase_num_params</name>
<versions>(PHP 5)</versions>
<short-description>Return the number of parameters in a prepared query</short-description>
<description>int ibase_num_params ( resource $query ) 
 This function returns the number of parameters in the prepared query specified by query. This is the number of binding arguments that must be present when calling ibase_execute(). </description>
<parameters>query - The prepared query handle. </parameters>
<output>Returns the number of parameters as an integer. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2072> 
<name>swf_definetext</name>
<versions>(PHP 4)</versions>
<short-description>Define a text string</short-description>
<description>void swf_definetext ( int $objid , string $str , int $docenter ) 
 Defines a text string using the current font and font size. </description>
<parameters>objid - The object id. 
str - The text, as a string. 
docenter - The docenter is where the word is centered, if docenter is 1, then the word is centered in x. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
$Xposition = 50;
$Yposition = 50;
$Zposition = 0;
$Obj_depth = 1;
$char = 'THIS IS THE TEXT';
swf_pushmatrix();
swf_definefont (swf_nextid(), "Mod");
swf_fontsize(10);
$secondid = swf_nextid();
swf_definetext($secondid, $char, 1);
swf_translate($Xposition, $Yposition, Zposition);
swf_placeobject($secondid, $Obj_depth);
swf_popmatrix();
?></example>
<example_result></example_result>
</object>

<object id=2073> 
<name>imagegammacorrect</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Apply a gamma correction to a GD image</short-description>
<description>bool imagegammacorrect ( resource $image , float $inputgamma , float $outputgamma ) 
 Applies gamma correction to the given gd image given an input and an output gamma. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
inputgamma - The input gamma. 
outputgamma - The output gamma. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Create image instance
$im = imagecreatefromgif('php.gif');
// Correct gamma, out = 1.537
imagegammacorrect($im, 1.0, 1.537);
// Save and free image
imagegif($im, './php_gamma_corrected.gif');
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=2074> 
<name>dbplus_rquery</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Perform local (raw) AQL query</short-description>
<description>resource dbplus_rquery ( string $query [, string $dbpath ] ) 
 dbplus_rquery() performs a local (raw) AQL query using an AQL interpreter embedded into the db++ client library. dbplus_rquery() is faster than dbplus_aql() but will work on local data only. </description>
<parameters>query - 
dbpath - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2075> 
<name>mysql_insert_id</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает идентификатор, сгенерированный при последнем INSERT-запросе</short-description>
<description>int mysql_insert_id ([ resource $link_identifier ] ) 
 Возвращает идентификатор, сгенерированный колонкой с AUTO_INCREMENT последним запросом (обычно INSERT). </description>
<parameters>link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Идентификатор, сгенерированный колонкой с AUTO_INCREMENT последним запросом в случае успеха , 0, если последний запрос не генерирует значение AUTO_INCREMENT value, и FALSE, если соединение MySQL не было установлено. </output>
<errors></errors>
<example><?php
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Ошибка соединения: ' . mysql_error());
}mysql_select_db('mydb');
mysql_query("INSERT INTO mytable (product) values ('kossu')");
printf("Идентификатор последней вставленной записи %d\n", mysql_insert_id());
?></example>
<example_result></example_result>
</object>

<object id=2076> 
<name>sybase_affected_rows</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets number of affected rows in last query</short-description>
<description>int sybase_affected_rows ([ resource $link_identifier ] ) 
 sybase_affected_rows() returns the number of rows affected by the last INSERT, UPDATE or DELETE query on the server associated with the specified link identifier. 
 This command is not effective for SELECT statements, only on statements which modify records. To retrieve the number of rows returned from a SELECT, use sybase_num_rows(). </description>
<parameters>link_identifier - If the link identifier isn&#039;t specified, the last opened link is assumed. </parameters>
<output>Returns the number of affected rows, as an integer. </output>
<errors></errors>
<example><?php
/* connect to database */
sybase_connect('SYBASE', '', '') or
die("Could not connect");
sybase_select_db("db");
sybase_query("DELETE FROM sometable WHERE id < 10");
printf("Records deleted: %d\n", sybase_affected_rows());
?></example>
<example_result>
 
Records deleted: 10
</example_result>
</object>

<object id=2077> 
<name>dcngettext</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Версия dcgettext для множественного числа</short-description>
<description>string dcngettext ( string $domain , string $msgid1 , string $msgid2 , int $n , int $category ) 
 Данная функция позволяет переопределить одно сообщение с использованием множественного числа в текущем домене. </description>
<parameters>domain - Домен. 
msgid1 - 
msgid2 - 
n - 
category - </parameters>
<output>В случае успеха возвращает значение типа string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2078> 
<name>spl_autoload_extensions</name>
<versions>(PHP 5 >= 5.1.2)</versions>
<short-description>Register and return default file extensions for spl_autoload</short-description>
<description>string spl_autoload_extensions ([ string $file_extensions ] ) 
 This function can modify and check the file extensions that the built in __autoload() fallback function spl_autoload() will be using. </description>
<parameters>file_extensions - When calling without an argument, it simply returns the current list of extensions each separated by comma. To modify the list of file extensions, simply invoke the functions with the new list of file extensions to use in a single string with each extensions separated by comma. </parameters>
<output>A comma delimited list of default file extensions for spl_autoload(). </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2079> 
<name>imagecolorresolvealpha</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Get the index of the specified color + alpha or its closest possible alternative</short-description>
<description>int imagecolorresolvealpha ( resource $image , int $red , int $green , int $blue , int $alpha ) 
 This function is guaranteed to return a color index for a requested color, either the exact color or the closest possible alternative. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
red - Значение красного компонента цвета.
green - Значение зеленого компонента цвета.
blue - Значение синего компонента цвета.
alpha - A value between 0 and 127. 0 indicates completely opaque while 127 indicates completely transparent. </parameters>
<output>Returns a color index. </output>
<errors></errors>
<example><?php
// Load an image
$im = imagecreatefromgif('phplogo.gif');
// Get closest colors from the image
$colors = array();
$colors[] = imagecolorresolvealpha($im, 255, 255, 255, 0);
$colors[] = imagecolorresolvealpha($im, 0, 0, 200, 127);
// Output
print_r($colors);
imagedestroy($im);
?></example>
<example_result>
 
Array
(
    [0] => 89
    [1] => 85
)
</example_result>
</object>

<object id=2080> 
<name>imap_gc</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Clears IMAP cache</short-description>
<description>bool imap_gc ( resource $imap_stream , int $caches ) 
 Purges the cache of entries of a specific type. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
caches - Specifies the cache to purge. It may one or a combination of the following constants: IMAP_GC_ELT (message cache elements), IMAP_GC_ENV (enveloppe and bodies), IMAP_GC_TEXTS (texts). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$mbox = imap_open("{imap.example.org:143}", "username", "password");
imap_gc($mbox, IMAP_GC_ELT);
?></example>
<example_result></example_result>
</object>

<object id=2081> 
<name>interface_exists</name>
<versions>(PHP 5 >= 5.0.2)</versions>
<short-description>Проверяет, определен ли интерфейс</short-description>
<description>bool interface_exists ( string $interface_name [, bool $autoload = true ] ) 
 Проверяет, определен ли указанный интерфейс. </description>
<parameters>interface_name - Имя интерфейса 
autoload - Определяет, использовать ли по умолчанию __autoload или нет </parameters>
<output>Возвращает TRUE, если интерфейс, заданный именем interface_name был определен, FALSE в остальных случаях. </output>
<errors></errors>
<example><?php
// Проверяем существование интерфейса перед его использованием
if (interface_exists('MyInterface')) {
    class MyClass implements MyInterface
    {
        // Методы
    }
}
?></example>
<example_result></example_result>
</object>

<object id=2082> 
<name>posix_getgrnam</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Return info about a group by name</short-description>
<description>array posix_getgrnam ( string $name ) 
 Gets information about a group provided its name. </description>
<parameters>name - The name of the group</parameters>
<output>The array elements returned are: The group information array Element Description name The name element contains the name of the group. This is a short, usually less than 16 character "handle" of the group, not the real, full name. This should be the same as the name parameter used when calling the function, and hence redundant. passwd The passwd element contains the group&#039;s password in an encrypted format. Often, for example on a system employing "shadow" passwords, an asterisk is returned instead. gid Group ID of the group in numeric form. members This consists of an array of string&#039;s for all the members in the group. </output>
<errors></errors>
<example><?php
$groupinfo = posix_getgrnam("toons");
print_r($groupinfo);
?></example>
<example_result>
 
Array
(
    [name]    => toons
    [passwd]  => x
    [members] => Array
        (
            [0] => tom
            [1] => jerry
        )
    [gid]     => 42
)
</example_result>
</object>

<object id=2083> 
<name>swf_polarview</name>
<versions>(PHP 4)</versions>
<short-description>Define the viewer&#039;s position with polar coordinates</short-description>
<description>void swf_polarview ( float $dist , float $azimuth , float $incidence , float $twist ) 
 The swf_polarview() function defines the viewer&#039;s position in polar coordinates. </description>
<parameters>dist - The distance between the viewpoint to the world space origin. 
azimuth - Defines the azimuthal angle in the x,y coordinate plane, measured in distance from the y axis. 
incidence - Defines the angle of incidence in the y,z plane, measured in distance from the z axis. The incidence angle is defined as the angle of the viewport relative to the z axis. 
twist - Specifies the amount that the viewpoint is to be rotated about the line of sight using the right hand rule. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2084> 
<name>gmp_divexact</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Деление чисел без остатка</short-description>
<description>resource gmp_divexact ( resource $n , resource $d ) 
 Делит число n на d, используя быстрый алгоритм деления без остатка. Функция выдает корректный результат, только если заведомо известно, что число d делит n нацело. </description>
<parameters>n - Делимое. 
d - Делитель числа a. </parameters>
<output>Число GMP. </output>
<errors></errors>
<example><?php
$div1 = gmp_divexact("10", "2");
echo gmp_strval($div1) . "\n";
$div2 = gmp_divexact("10", "3"); // некорректный результат
echo gmp_strval($div2) . "\n";
?></example>
<example_result>
 
5
2863311534
</example_result>
</object>

<object id=2085> 
<name>ibase_blob_add</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Add data into a newly created blob</short-description>
<description>void ibase_blob_add ( resource $blob_handle , string $data ) 
 ibase_blob_add() adds data into a blob created with ibase_blob_create(). </description>
<parameters>blob_handle - A blob handle opened with ibase_blob_create(). 
data - The data to be added. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2086> 
<name>swf_openfile</name>
<versions>(PHP 4)</versions>
<short-description>Open a new Shockwave Flash file</short-description>
<description>void swf_openfile ( string $filename , float $width , float $height , float $framerate , float $r , float $g , float $b ) 
 Opens a new file. This must be the first function you call, otherwise your script will not work. </description>
<parameters>filename - The path to the SWF file. If you want to send your output to the screen, set this to php://stdout. 
width - The movie width 
height - The movie height 
framerate - The frame rate. 
r - Red value for the background. 
g - Green value for the background. 
b - Blue value for the background. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2087> 
<name>gzeof</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Проверяет, находится ли текущая позиция в конце (EOF) gz-файла</short-description>
<description>int gzeof ( resource $zp ) 
 Проверяет, соответствует ли позиция указателя в GZ-файле позиции EOF (end-of-file, конец файла). </description>
<parameters>zp - Указатель на gz-файл, возвращённый, после его успешного открытия, функцией gzopen(). </parameters>
<output>Возвращает TRUE если позиция указателя в gz-файле соответствует EOF или в случае ошибки; иначе возвращает FALSE. </output>
<errors></errors>
<example><?php
$gz = gzopen('somefile.gz', 'r');
while (!gzeof($gz)) {
  echo gzgetc($gz);
}gzclose($gz);
?></example>
<example_result></example_result>
</object>

<object id=2088> 
<name>odbc_autocommit</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Toggle autocommit behaviour</short-description>
<description>mixed odbc_autocommit ( resource $connection_id [, bool $OnOff = false ] ) 
 Toggles autocommit behaviour. 
 By default, auto-commit is on for a connection. Disabling auto-commit is equivalent with starting a transaction. </description>
<parameters>connection_id - Идентификатор соединения ODBC,за подробностями обращайтесь к odbc_connect().
OnOff - If OnOff is TRUE, auto-commit is enabled, if it is FALSE auto-commit is disabled. </parameters>
<output>Without the OnOff parameter, this function returns auto-commit status for connection_id. Non-zero is returned if auto-commit is on, 0 if it is off, or FALSE if an error occurs. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2089> 
<name>swf_fontslant</name>
<versions>(PHP 4)</versions>
<short-description>Set the font slant</short-description>
<description>void swf_fontslant ( float $slant ) 
 Set the current font slant to the angle indicated by the slant parameter. </description>
<parameters>slant - Positive values create a forward slant, negative values create a negative slant. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2090> 
<name>ob_get_status</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Получить статус буфера вывода</short-description>
<description>array ob_get_status ([ bool $full_status = FALSE ] ) 
 Если full_status установлен в TRUE, то ob_get_status() вернет информацию о состоянии буфера вывода верхнего уровня, иначе функция вернет массив уровней всех активных буферов. </description>
<parameters>full_status - Если TRUE, то вернет все уровни активных буферов. Если FALSE или не установлен, то вернет статус только самого верхнего уровня. </parameters>
<output>Если функция вызвана без параметра full_status или full_status = FALSE, то возвращается простой массив из следующих элементов: 
 Array( [level] => 2 [type] => 0 [status] => 0 [name] => URL-Rewriter [del] => 1) Результаты простого вызова ob_get_status() Ключ:levelЗначение:Уровень вложенности вывода Ключ:typeЗначение:PHP_OUTPUT_HANDLER_INTERNAL (0) или PHP_OUTPUT_HANDLER_USER (1) Ключ:statusЗначение:Один из PHP_OUTPUT_HANDLER_START (0), PHP_OUTPUT_HANDLER_CONT (1) или PHP_OUTPUT_HANDLER_END (2) Ключ:nameЗначение:Название действующего обработчика вывода или &#039;default output handler&#039; если не задан Ключ:delЗначение:Флаг очистки установленный ob_start() </output>
<errors></errors>
<example></example>
<example_result>
 
Array
(
    [0] => Array
        (
            [chunk_size] => 0
            [size] => 40960
            [block_size] => 10240
            [type] => 1
            [status] => 0
            [name] => default output handler
            [del] => 1
        )

    [1] => Array
        (
            [chunk_size] => 0
            [size] => 40960
            [block_size] => 10240
            [type] => 0
            [buffer_size] => 0
            [status] => 0
            [name] => URL-Rewriter
            [del] => 1
        )

)
</example_result>
</object>

<object id=2091> 
<name>mb_detect_encoding</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Определение кодировки символов</short-description>
<description>string mb_detect_encoding ( string $str [, mixed $encoding_list = mb_detect_order() [, bool $strict = false ]] ) 
 Определяет кодировку символов в строке string str. </description>
<parameters>str - Строка string, кодировку в которой требуется определить. 
encoding_list - encoding_list список возможных кодировок. Может быть представлен массивом или строкой, в которой будут перечислены названия кодировок, отделенные запятыми. 
strict - strict задает режим точного определения кодировки. По умолчанию FALSE. </parameters>
<output>Название кодировки или FALSE, если для заданной строки определить кодировку не удалось. </output>
<errors></errors>
<example><?php
/* Определение кодировки с текущим detect_order */
echo mb_detect_encoding($str);
/* "auto" раскрывается в соответствии с mbstring.language */
echo mb_detect_encoding($str, "auto");
/* Зададим список кодировок encoding_list в виде строки */
echo mb_detect_encoding($str, "JIS, eucjp-win, sjis-win");
/* Использование массива для задания возможных кодировок encoding_list  */
$ary[] = "ASCII";
$ary[] = "JIS";
$ary[] = "EUC-JP";
echo mb_detect_encoding($str, $ary);
?></example>
<example_result></example_result>
</object>

<object id=2092> 
<name>swf_actionprevframe</name>
<versions>(PHP 4)</versions>
<short-description>Go backwards one frame</short-description>
<description>void swf_actionprevframe ( void ) 
 Go backwards one frame. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2093> 
<name>stream_context_get_default</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Получает контекст потока по умолчанию</short-description>
<description>resource stream_context_get_default ([ array $options ] ) 
 Возвращает контекст потока по умолчанию, который используется в любых файловых операциях (fopen(), file_get_contents(), etc...), вызванных без параметра контекста. Опции для контекста по умолчанию могут быть опционально указаны с этой функцией импользуя тот же синтаксис, что и для stream_context_create(). </description>
<parameters>options options должны быть ассоциативным массивом ассоциативных массивов в формате $arr[&#039;wrapper&#039;][&#039;option&#039;] = $value. 
 Замечание: - Начиная с PHP 5.3.0, функция stream_context_set_default() может быть использована для установки контекста по умолчанию. </parameters>
<output>Ресурс resource контекста потока. </output>
<errors></errors>
<example><?php
$default_opts = array(
  'http'=>array(
    'method'=>"GET",
    'header'=>"Accept-language: en\r\n" .
              "Cookie: foo=bar",
    'proxy'=>"tcp://10.54.1.39:8000"
  )
);
$alternate_opts = array(
  'http'=>array(
    'method'=>"POST",
    'header'=>"Content-type: application/x-www-form-urlencoded\r\n" .
              "Content-length: " . strlen("baz=bomb"),
    'content'=>"baz=bomb"
  )
);
$default = stream_context_get_default($default_opts);
$alternate = stream_context_create($alternate_opts);
/* Отправляет обычный GET запрос на прокси-сервер 10.54.1.39
 * Для www.example.com используются опции контекста, указанные в $default_opts
 */
readfile('http://www.example.com');
/* Отправляет POST запрос напрямую к www.example.com
 * Используемые опции контекста определены в $alternate_opts
 */
readfile('http://www.example.com', false, $alternate);
?></example>
<example_result></example_result>
</object>

<object id=2094> 
<name>stream_copy_to_stream</name>
<versions>(PHP 5)</versions>
<short-description>Копирует данные из одного потока в другой</short-description>
<description>int stream_copy_to_stream ( resource $source , resource $dest [, int $maxlength = -1 [, int $offset = 0 ]] ) 
 Делает копию до maxlength байт данных от текущей позиции (или от позиции offset, если указана) потока source в поток dest. Если maxlength не указан, будет скопировано всё оставшееся содержимое из source. </description>
<parameters>source - Исходный поток 
dest - Поток назначения 
maxlength - Максимальное количество байт для копирования 
offset - Смещение, с которого будут копироваться данные </parameters>
<output>Возвращает общее количество скопированных байт. </output>
<errors></errors>
<example><?php
$src = fopen('http://www.example.com', 'r');
$dest1 = fopen('first1k.txt', 'w');
$dest2 = fopen('remainder.txt', 'w');
echo stream_copy_to_stream($src, $dest1, 1024) . " байт скопировано в first1k.txt\n";
echo stream_copy_to_stream($src, $dest2) . " байт скопировано в remainder.txt\n";
?></example>
<example_result></example_result>
</object>

<object id=2095> 
<name>m_destroyengine</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Free memory associated with IP/SSL connectivity</short-description>
<description>void m_destroyengine ( void ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2096> 
<name>decoct</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Переводит число из десятичной системы счисления в восьмеричную</short-description>
<description>string decoct ( int $number ) 
 Возвращает строку, содержащую восьмеричное представление указанного аргумента number. Наибольшее число, которое может быть преобразовано - 4294967295, в восьмеричном представлении "37777777777". </description>
<parameters>number - Десятичное значение для преобразования </parameters>
<output>Восьмеричное строковое представление number </output>
<errors></errors>
<example><?php
echo decoct(15) . "\n";
echo decoct(264);
?></example>
<example_result>
 
17
410
</example_result>
</object>

<object id=2097> 
<name>restore_error_handler</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Восстанавливает предыдущий обработчик ошибок </short-description>
<description>bool restore_error_handler ( void ) 
 Используется после смены обработчика ошибок функцией set_error_handler(), чтобы вернуть предыдущий обработчик (который может быть как встроенной функцией, так и определенной пользователем). </description>
<parameters></parameters>
<output>Эта функция всегда возвращает TRUE. </output>
<errors></errors>
<example>
 unserialize(), и затем восстановление исходного обработчика ошибок. </example>
<example_result>
 
Сериализуемое значение недопустимо.
</example_result>
</object>

<object id=2098> 
<name>aggregate_properties</name>
<versions>(PHP 4 >= 4.2.0)</versions>
<short-description>Dynamic aggregation of class properties to an object </short-description>
<description>void aggregate_properties ( object $object , string $class_name ) 
 Aggregates all properties defined in a class to an existing object, except for properties whose names start with an underscore character (_) which are considered private to the aggregated class. </description>
<parameters>object - 
class_name - </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2099> 
<name>timezone_offset_get</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Псевдоним DateTimeZone::getOffset()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2100> 
<name>dbase_open</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Открывает базу данных</short-description>
<description>int dbase_open ( string $filename , int $mode ) 
 dbase_open() открывает базу данных dBase с заданным режимом доступа. 
 Замечание: Когда опция safe mode включена, PHP проверяет,имеют ли файлы/каталоги, с которыми вы собираетесь работать, такойже UID (владельца), как и выполняемый скрипт. 
 Замечание: 
 На поведение этой функции влияетзначение директивы open_basedir. </description>
<parameters>filename - Имя базы данных. Это может быть относительный или абсолютный путь к файлу, в котором dBase будет хранить ваши данные. 
mode - Целое число, которое соответствует аналогичному в системном вызове open() (Обычно 0 означает режим для чтения, 1 - режим для записи, и 2 - режим для чтения и записи). </parameters>
<output>Возвращает идентификатор ссылки на базу данных, если база данных успешно открыта, или FALSE если произошла ошибка. </output>
<errors></errors>
<example><?php
// открытие в режиме чтения
$db = dbase_open('/tmp/test.dbf', 0);
if ($db) {
  // чтение некотрых данных
  
  dbase_close($db);
}
?></example>
<example_result></example_result>
</object>

<object id=2101> 
<name>hw_Output_Document</name>
<versions>(PHP 4)</versions>
<short-description>Prints hw_document</short-description>
<description>bool hw_output_document ( int $hw_document ) 
 Prints the document without the BODY tag. 
 For backward compatibility, hw_outputdocument() is also accepted. This is deprecated, however. </description>
<parameters>hw_document - The document identifier. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2102> 
<name>PDF_curveto</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Draw Bezier curve</short-description>
<description>bool PDF_curveto ( resource $p , float $x1 , float $y1 , float $x2 , float $y2 , float $x3 , float $y3 ) 
 Draws a Bezier curve from the current point, using 3 more control points. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2103> 
<name>yp_order</name>
<versions>(PHP 4, PHP 5 <= 5.0.5)</versions>
<short-description>Returns the order number for a map</short-description>
<description>int yp_order ( string $domain , string $map ) 
 Gets the order number for a map. </description>
<parameters>domain - 
map - </parameters>
<output>Returns the order number for a map or FALSE on error. </output>
<errors></errors>
<example><?php
    $number = yp_order($domain, $mapname);
    echo "Order number for this map is: " . $number;
?></example>
<example_result></example_result>
</object>

<object id=2104> 
<name>udm_clear_search_limits</name>
<versions>(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)</versions>
<short-description>Очищает все ограничения поиска mnoGoSearch</short-description>
<description>bool udm_clear_search_limits ( resource $agent ) 
 udm_clear_search_limits() сбрасывает определенные ограничения поиска. </description>
<parameters>agent - Ссылка на идентификатор агента, полученная после вызова udm_alloc_agent(). </parameters>
<output>Возвращает TRUE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2105> 
<name>ldap_mod_replace</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Заменить значения атрибутов на новые</short-description>
<description>bool ldap_mod_replace ( resource $link_identifier , string $dn , array $entry ) 
 Заменяет один или более атрибутов из указанного dn. Эта функция выполняет модификацию на уровне атрибута, а не на уровене объектов. На уровне объектов модификация осуществляются функцией ldap_modify(). </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
dn - Отличительное имя LDAP объекта. 
entry - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2106> 
<name>ocinlogon</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_new_connect()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2107> 
<name>gmdate</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Форматирует дату/время по Гринвичу</short-description>
<description>string gmdate ( string $format [, int $timestamp = time() ] ) 
 Эта функция идентична функции date() за исключением того, что возвращает время по Гринвичу (GMT). </description>
<parameters>format - Формат выводимой даты, string. Смотрите параметры форматирования для функции date(). 
timestamp - Необязательный параметр timestamp представляет собой integer метку времени, по умолчанию равную текущему локальному времени, если timestamp не указан. Другими словами, значение по умолчанию равно результату функции time(). </parameters>
<output>Возращает строку с форматированной датой. Если для параметра timestamp указано нечисловое значение, то будет возращено FALSE и вызвана ошибка уровня E_WARNING. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=2108> 
<name>is_real</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним is_float()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2109> 
<name>fbsql_database_password</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Sets or retrieves the password for a FrontBase database</short-description>
<description>string fbsql_database_password ( resource $link_identifier [, string $database_password ] ) 
 Sets and retrieves the database password used by the connection. If a database is protected by a database password, the user must call this function before calling fbsql_select_db(). 
 If no link is open, the function will try to establish a link as if fbsql_connect() was called, and use it. 
 This function does not change the database password in the database nor can it be used to retrieve the database password for a database. </description>
<parameters>link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().
database_password - The database password, as a string. If given, the function sets the database password for the specified link identifier. </parameters>
<output>Returns the database password associated with the link identifier. </output>
<errors></errors>
<example><?php
$link = fbsql_pconnect("localhost", "_SYSTEM", "secret")
    or die("Could not connect");
fbsql_database_password($link, "secret db password");
fbsql_select_db($database, $link);
?></example>
<example_result></example_result>
</object>

<object id=2110> 
<name>imagecreatefrompng</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Создает новое изображение из файла или URL</short-description>
<description>resource imagecreatefrompng ( string $filename ) 
 imagecreatefrompng() returns an image identifier representing the image obtained from the given filename. Подсказка
 Для этой функции вы можете использовать URLв качестве имени файла, если была включена опция fopen wrappers. Смотрите болееподробную информацию об определении имени файла в описании функцииfopen(). Смотрите также список поддерживаемых оберток URL, их возможности, замечания по использованию и списокпредопределенных констант в Поддерживаемые протоколы и обработчики (wrappers).</description>
<parameters>filename - Path to the PNG image. </parameters>
<output>Возвращает ресурс изображения в случае успеха, или FALSE в случае ошибки.</output>
<errors></errors>
<example><?php
function LoadPNG($imgname)
{    /* Attempt to open */
    $im = @imagecreatefrompng($imgname);
    /* See if it failed */
    if(!$im)
    {
        /* Create a blank image */
        $im  = imagecreatetruecolor(150, 30);
        $bgc = imagecolorallocate($im, 255, 255, 255);
        $tc  = imagecolorallocate($im, 0, 0, 0);
        imagefilledrectangle($im, 0, 0, 150, 30, $bgc);
        /* Output an error message */
        imagestring($im, 1, 5, 5, 'Error loading ' . $imgname, $tc);
    }
    return $im;
}
header('Content-Type: image/png');
$img = LoadPNG('bogus.image');
imagepng($img);
imagedestroy($img);
?></example>
<example_result></example_result>
</object>

<object id=2111> 
<name>pspell_new_config</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Загружает новый словарь с установками на основе заданной конфигурации </short-description>
<description>int pspell_new_config ( int $config ) 
 pspell_new_config() открывает новый словарь с параметрами, заданными в конфигурации, созданной с помощью pspell_config_create() и модифицированной с помощью функций pspell_config_*(). Этот метод дает наибольшую гибкость и имеет все функциональные возможности, предоставляемые pspell_new() и pspell_new_personal(). </description>
<parameters>config - Параметр config - это параметр возвращённый функцией pspell_config_create() после того, как конфигурация была создана. </parameters>
<output>В случае успеха возвращает ссылку на словарь. </output>
<errors></errors>
<example><?php
$pspell_config = pspell_config_create("en");
pspell_config_personal($pspell_config, "/var/dictionaries/custom.pws");
pspell_config_repl($pspell_config, "/var/dictionaries/custom.repl");
$pspell_link = pspell_new_config($pspell_config);
?></example>
<example_result></example_result>
</object>

<object id=2112> 
<name>ncurses_del_panel</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Remove panel from the stack and delete it (but not the associated window)</short-description>
<description>bool ncurses_del_panel ( resource $panel ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>panel - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2113> 
<name>bzclose</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Закрывает файл bzip2</short-description>
<description>int bzclose ( resource $bz ) 
 Закрывает переданный указатель на файл bzip2. </description>
<parameters>bz - Указатель на файл. Должен быть корректным и указывать на файл, успешно открытый bzopen(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2114> 
<name>readline_clear_history</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Clears the history</short-description>
<description>bool readline_clear_history ( void ) 
 This function clears the entire command line history. </description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2115> 
<name>ocilogon</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_connect()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2116> 
<name>pg_prepare</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Посылает запрос на создание параметризованного SQL выражения и ждет его завершения</short-description>
<description>resource pg_prepare ([ resource $connection ], string $stmtname , string $query ) 
 pg_prepare() создает заготовку SQL выражения на сервере для последующего запуска функциями pg_execute() или pg_send_execute(). Это позволяет многократно выполнять единожды созданные запросы с различными параметрами. pg_prepare() поддерживается PostgreSQL версии 7.4 и выше. Функция не будет работать c серверами ранних версий. 
 Функция создает заготовку SQL запроса с названием stmtname и телом query, которое должно содержать одно SQL выражение. stmtname может быть пустой строкой, тогда будет создана безымянная заготовка. Если какая-либо безымянная заготовка уже определена, она будет заменена на новую автоматически. В остальных случаях совпадение имен новой и существующей в данной сессии заготовок приведет к ошибке. Если в query будут передаваться параметры, то они заменят псевдопеременные $1, $2 и т.д. при передаче запроса. 
 Подобные заготовки запросов также можно делать с помощью SQL команды PREPARE (но pg_prepare() более гибкая, так как не требует строгой типизации своих параметров). Важно отметить, что в PHP нет функций для удаления подготовленных SQL выражений, для этого используйте команду SQL DEALLOCATE. </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). 
stmtname - Имя создаваемой заготовки. Должно быть уникальным в пределах сессии. Если задана пустая строка, будет создано безымянное SQL выражение. При этом оно перезапишет уже существующее безымянное выражение, определенное ранее. 
query - Параметризованный SQL запрос. Должен содержать только одно выражение (несколько выражений разделенных точкой с запятой не поддерживаются). Если в запрос будут передаваться параметры, то они заменят псевдопеременные $1, $2 и т.д. </parameters>
<output>Ресурс результата запроса или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Подключение к базе данных "mary" 
$dbconn = pg_connect("dbname=mary");
// Подготовка запроса 
$result = pg_prepare($dbconn, "my_query", 'SELECT * FROM shops WHERE name = $1');
// Запуск запроса на выполнение. Стоит отметить, что нет необходимости экранировать 
// спецсимволы в строке "Joe's Widgets" 
$result = pg_execute($dbconn, "my_query", array("Joe's Widgets"));
// Запуск на выполнение того же запроса, но с другим параметром  
$result = pg_execute($dbconn, "my_query", array("Clothes Clothes Clothes"));
?></example>
<example_result></example_result>
</object>

<object id=2117> 
<name>sqlite_seek</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Переходит к определенному номеру записи в буферизованном результирующем наборе</short-description>
<description>bool sqlite_seek ( resource $result , int $rownum ) 
 Объектно-ориентированный стиль (метод): bool SQLiteResult::seek ( int $rownum )</description>
<parameters>result - Ресурс результата SQLite. Этот параметр не требуется при использовании объектно-ориентированного метода. 
rownum - Порядковый номер записи, к которой производится перемещение. Нумерация начинается с нуля (0 указывает на первую запись). </parameters>
<output>Возвращает FALSE, если запись не существует, иначе возвращается TRUE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2118> 
<name>snmp3_get</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Fetch an SNMP object</short-description>
<description>string snmp3_get ( string $host , string $sec_name , string $sec_level , string $auth_protocol , string $auth_passphrase , string $priv_protocol , string $priv_passphrase , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] ) 
 The snmp3_get() function is used to read the value of an SNMP object specified by the object_id. </description>
<parameters>host - The hostname of the SNMP agent (server). 
sec_name - the security name, usually some kind of username 
sec_level - the security level (noAuthNoPriv|authNoPriv|authPriv) 
auth_protocol - the authentication protocol (MD5 or SHA) 
auth_passphrase - the authentication pass phrase 
priv_protocol - the privacy protocol (DES or AES) 
priv_passphrase - the privacy pass phrase 
object_id - The SNMP object id. 
timeout - The number of microseconds until the first timeout. 
retries - The number of times to retry if timeouts occur. </parameters>
<output>Returns SNMP object value on success or FALSE on error. </output>
<errors></errors>
<example><?php
$nameOfSecondInterface = snmp3_get('localhost', 'james', 'authPriv', 'SHA', 'secret007', 'AES', 'secret007', 'IF-MIB::ifName.2');
?></example>
<example_result></example_result>
</object>

<object id=2119> 
<name>cyrus_query</name>
<versions>(PHP 4 >= 4.1.0, PECL cyrus 1.0)</versions>
<short-description>Послать запрос Cyrus IMAP серверу</short-description>
<description>array cyrus_query ( resource $connection , string $query ) 
 Посылает запрос Cyrus IMAP серверу. </description>
<parameters>connection - Дескриптор соединения. 
query - Строка запроса. </parameters>
<output>Возвращает ассоциативный массив со следующими ключами: text, msgno и keyword. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2120> 
<name>ncurses_slk_attron</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Turn on the given attributes for soft function-key labels</short-description>
<description>int ncurses_slk_attron ( int $intarg ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>intarg - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2121> 
<name>mb_substr</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Возвращает часть строки</short-description>
<description>string mb_substr ( string $str , int $start [, int $length [, string $encoding ]] ) 
 Корректно выполняет substr() для многобайтовых кодировок, учитывая количество символов. Позиция отсчитывается от начала str. Позиция первого символа - 0, второго - 1 и т.д. </description>
<parameters>str - Исходная строка (string) для получения подстроки. 
start - Позиция символа str, с которой выделяется подстрока. 
length - Максимальное количество символов возвращаемой подстроки (string) 
encoding - Параметр encodingпредставляет собой символьную кодировку. Если он опущен, вместо него будет использовано значение внутренней кодировки.</parameters>
<output>mb_substr() Возвращает не более length символов, начиная с позиции start исходной строки. str </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2122> 
<name>curl_multi_exec</name>
<versions>(PHP 5)</versions>
<short-description>Запускает под-соединения текущего дескриптора cURL</short-description>
<description>int curl_multi_exec ( resource $mh , int &$still_running ) 
 Обрабатывает каждый дескриптор в стеке. Этот метод может быть вызван вне зависимости от необходимости дескриптора читать или записывать данные. </description>
<parameters>mh - Мульти-дескриптор cURL, полученный из curl_multi_init().
still_running - Ссылка на флаг, указывающий, идут ли еще какие-либо действия. </parameters>
<output>Код cURL, указанный в "Предопределенных константах" cURL. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=2123> 
<name>strcspn</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает длину участка в начале строки, не соответствующего маске</short-description>
<description>int strcspn ( string $str1 , string $str2 [, int $start [, int $length ]] ) 
 Возвращает длину участка в начале строки str1, который не содержит ни одного символа из строки str2. </description>
<parameters>str1 - Первая строка. 
str2 - Вторая строка. 
start - Начальная позиция сравнения строки. 
length - Длина сравнения строки. </parameters>
<output>Возвращает длину фрагмента в виде целого числа. </output>
<errors></errors>
<example><?php
$a = strcspn('abcd',  'apple');
$b = strcspn('abcd',  'banana');
$c = strcspn('hello', 'l');
$d = strcspn('hello', 'world');
var_dump($a);
var_dump($b);
var_dump($c);
var_dump($d);
?></example>
<example_result>
 
int(0)
int(0)
int(2)
int(2)
</example_result>
</object>

<object id=2124> 
<name>ftp_rawlist</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает подробный список файлов в заданной директории</short-description>
<description>array ftp_rawlist ( resource $ftp_stream , string $directory [, bool $recursive = false ] ) 
 ftp_rawlist() отправляет FTP-серверу команду LIST и возвращает результат в виде массива. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером. 
directory - Имя директории на сервере. Может включать аргументы для команды LIST. 
recursive - Если передано значение TRUE, серверу будет отправлена команда LIST -R. </parameters>
<output>Возвращает массив, каждый элемент которого содержит одну строку ответа сервера. </output>
<errors></errors>
<example><?php
// установка соединения
$conn_id = ftp_connect($ftp_server);
// проверка имени пользователя и пароля
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);
// получение списка файлов директории /
$buff = ftp_rawlist($conn_id, '/');
// закрытие соединения
ftp_close($conn_id);
// вывод буфера
var_dump($buff);
?></example>
<example_result>
 
array(3) {
  [0]=>
  string(65) "drwxr-x---   3 vincent  vincent      4096 Jul 12 12:16 public_ftp"
  [1]=>
  string(66) "drwxr-x---  15 vincent  vincent      4096 Nov  3 21:31 public_html"
  [2]=>
  string(73) "lrwxrwxrwx   1 vincent  vincent        11 Jul 12 12:16 www -> public_html"
}
</example_result>
</object>

<object id=2125> 
<name>fflush</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Сбрасывает буфер вывода в файл</short-description>
<description>bool fflush ( resource $handle ) 
 Данная функция осуществляет сброс буферизованных данных в файл, на который указывает handle. </description>
<parameters>handle - Указатель на файл должен быть корректным и указыватьна файл, успешно открытый функциями fopen() илиfsockopen() (и все еще не закрытым функцией fclose()).</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$filename = 'bar.txt';
$file = fopen($filename, 'r+');
rewind($file);
fwrite($file, 'Foo');
fflush($file);
ftruncate($file, ftell($file));
fclose($file);
?></example>
<example_result></example_result>
</object>

<object id=2126> 
<name>ldap_set_option</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Установить значение данной опции</short-description>
<description>bool ldap_set_option ( resource $link_identifier , int $option , mixed $newval ) 
 Устанавливает значение указанной опции в newval. </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
option - Параметр option может быть одним из: Опция Тип Доступна с LDAP_OPT_DEREF integer LDAP_OPT_SIZELIMIT integer LDAP_OPT_TIMELIMIT integer LDAP_OPT_NETWORK_TIMEOUT integer PHP 5.3.0 LDAP_OPT_PROTOCOL_VERSION integer LDAP_OPT_ERROR_NUMBER integer LDAP_OPT_REFERRALS bool LDAP_OPT_RESTART bool LDAP_OPT_HOST_NAME string LDAP_OPT_ERROR_STRING string LDAP_OPT_MATCHED_DN string LDAP_OPT_SERVER_CONTROLS array LDAP_OPT_CLIENT_CONTROLS array 
newval - Новое значение для указанной option (опции). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// $ds является действительным идентификатором связи с LDAP-сервером
if (ldap_set_option($ds, LDAP_OPT_PROTOCOL_VERSION, 3)) {
    echo "Используется LDAPv3";
} else {
    echo "Не удалось установить версию протокола в 3";
}?></example>
<example_result></example_result>
</object>

<object id=2127> 
<name>odbc_error</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Get the last error code</short-description>
<description>string odbc_error ([ resource $connection_id ] ) 
 Returns a six-digit ODBC state, or an empty string if there has been no errors. </description>
<parameters>connection_id - Идентификатор соединения ODBC,за подробностями обращайтесь к odbc_connect().</parameters>
<output>If connection_id is specified, the last state of that connection is returned, else the last state of any connection is returned. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2128> 
<name>PDF_set_info_subject</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Fill the subject document info field [deprecated]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2129> 
<name>bindtextdomain</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Устанавливает путь для домена</short-description>
<description>string bindtextdomain ( string $domain , string $directory ) 
 Функция bindtextdomain() устанавливает путь для домена. </description>
<parameters>domain - Домен 
directory - Путь к директории </parameters>
<output>Полный путь для домена, установленного параметром domain. </output>
<errors></errors>
<example><?php
$domain = 'myapp';
echo bindtextdomain($domain, '/usr/share/myapp/locale');
?></example>
<example_result>
 
/usr/share/myapp/locale
</example_result>
</object>

<object id=2130> 
<name>fdf_add_template</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Добавляет шаблон в FDF-документ</short-description>
<description>bool fdf_add_template ( resource $fdf_document , int $newpage , string $filename , string $template , int $rename ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2131> 
<name>openssl_public_decrypt</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Decrypts data with public key </short-description>
<description>bool openssl_public_decrypt ( string $data , string &$decrypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ] ) 
 openssl_public_decrypt() decrypts data that was previous encrypted via openssl_private_encrypt() and stores the result into decrypted. 
 You can use this function e.g. to check if the message was written by the owner of the private key. </description>
<parameters>data - 
decrypted - 
key - key must be the public key corresponding that was used to encrypt the data. 
padding - padding can be one of OPENSSL_PKCS1_PADDING, OPENSSL_NO_PADDING. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2132> 
<name>oci_new_cursor</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Возвращает идентификатор созданного курсора</short-description>
<description>resource oci_new_cursor ( resource $connection ) 
 Создает новый курсор для указанного соединения и возвращает его идентификатор. </description>
<parameters>connection - Идентификатор соединения с сервером Oracle, возвращаемый функцией oci_connect() или oci_pconnect(). </parameters>
<output>Возвращает указатель на новое выражение или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
// предположим, что хранимая процедура info.output возвращает ссылочный курсор в
:data
$conn = oci_connect("scott", "tiger");
$curs = oci_new_cursor($conn);
$stmt = oci_parse($conn, "begin info.output(:data); end;");
oci_bind_by_name($stmt, "data", $curs, -1, OCI_B_CURSOR);
oci_execute($stmt);
oci_execute($curs);
while ($data = oci_fetch_row($curs)) {
    var_dump($data);
}
oci_free_statement($stmt);
oci_free_statement($curs);
oci_close($conn);
?></example>
<example_result></example_result>
</object>

<object id=2133> 
<name>fnmatch</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Проверяет совпадение имени файла с шаблоном</short-description>
<description>bool fnmatch ( string $pattern , string $string [, int $flags = 0 ] ) 
 fnmatch() проверяет, совпадает ли переданный параметр string с указанным шаблоном подстановок оболочки pattern. </description>
<parameters>pattern - Шаблон подстановки оболочки операционной системы. 
string - Проверяемая строка. Данная функция особенно полезна для имен файлов, но также может быть использована с обычными строками. 
flags - Значением параметра flags может быть любая комбинация следующих флагов, объединенных с помощью бинарного оператора ИЛИ (|). Перечень возможных флагов для функции fnmatch() Flag Описание FNM_NOESCAPE Отключить экранирование обратных слэшей. FNM_PATHNAME Слэш в строке совпадает только со слэшем в указанном шаблоне. FNM_PERIOD Ведущая точка в строке должна точно совпадать с точкой в указанном шаблоне. FNM_CASEFOLD Совпадение без учета регистра. Является частью расширения GNU. </parameters>
<output>При совпадении возвращает TRUE, иначе возвращает FALSE. </output>
<errors></errors>
<example><?php
if (fnmatch("*gr[ae]y", $color)) {
  echo "какая-то форма серого цвета ...";
}?></example>
<example_result></example_result>
</object>

<object id=2134> 
<name>imap_listsubscribed</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним imap_lsub()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2135> 
<name>swf_shapemoveto</name>
<versions>(PHP 4)</versions>
<short-description>Move the current position</short-description>
<description>void swf_shapemoveto ( float $x , float $y ) 
 Moves the current position to the given point. </description>
<parameters>x - x-coordinate of the target. 
y - y-coordinate of the target. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2136> 
<name>PDF_set_border_dash</name>
<versions>(PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0)</versions>
<short-description>Set border dash style of annotations [deprecated]</short-description>
<description>bool PDF_set_border_dash ( resource $pdfdoc , float $black , float $white ) 
 Sets the border dash style for all kinds of annotations. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. 
 This function is deprecated since PDFlib version 6, use the option dasharray in PDF_create_annotation() instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2137> 
<name>fdf_get_version</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Gets version number for FDF API or file </short-description>
<description>string fdf_get_version ([ resource $fdf_document ] ) 
 Return the FDF version for the given document, or the toolkit API version number if no parameter is given. </description>
<parameters>fdf_document - The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string(). </parameters>
<output>Returns the version as a string. For the current FDF toolkit 5.0 the API version number is 5.0 and the document version number is either 1.2, 1.3 or 1.4. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2138> 
<name>variant_mul</name>
<versions>(PHP 5)</versions>
<short-description>Multiplies the values of the two variants</short-description>
<description>mixed variant_mul ( mixed $left , mixed $right ) 
 Multiplies left by right. </description>
<parameters>left - The left operand. 
right - The right operand. </parameters>
<output>Variant Multiplication Rules If Then Both expressions are of the string, date, character, boolean type Multiplication One expression is a string type and the other a character Multiplication One expression is numeric and the other is a string Multiplication Both expressions are numeric Multiplication Either expression is NULL NULL is returned Both expressions are empty Empty string is returned </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2139> 
<name>array_pad</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Дополнить размер массива определенным значением до заданной величины</short-description>
<description>array array_pad ( array $input , int $pad_size , mixed $pad_value ) 
 Функция array_pad() возвращает копию массива input, дополненного до размера pad_size элементами со значением pad_value. Если параметр pad_size положителен, то массив увеличивается вправо, если отрицателен - влево. Если абсолютное значение параметра pad_size меньше или равно размеру массива input, функция не производит никаких операций. За один раз возможно добавить максимум 1048576 элементов. </description>
<parameters>input - Исходный массив, к которому дополняются элементы. 
pad_size - Новый размер массива. 
pad_value - Дополняемое значение, если длина массива input меньше pad_size. </parameters>
<output>Возвращает копию input, дополненного до размера указанного pad_size значением pad_value. Если параметр pad_size положителен, то массив дополняется вправо, если он отрицателен - влево. Если абсолютное значение pad_size меньше либо равно длине input, то дополнение не происходит. </output>
<errors></errors>
<example><?php
$input = array(12, 10, 9);
$result = array_pad($input, 5, 0);
// результат: array(12, 10, 9, 0, 0)
$result = array_pad($input, -7, -1);
// результат: array(-1, -1, -1, -1, 12, 10, 9)
$result = array_pad($input, 2, "noop");
// операция не произведена</example>
<example_result></example_result>
</object>

<object id=2140> 
<name>mysqli_connect</name>
<versions>(PHP 5)</versions>
<short-description>Псевдоним mysqli::__construct()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2141> 
<name>array_uintersect_assoc</name>
<versions>(PHP 5)</versions>
<short-description>Вычисляет пересечение массивов с дополнительной проверкой индексов, используя для сравнения значений callback-функцию</short-description>
<description>array array_uintersect_assoc ( array $array1 , array $array2 [, array $ ... ], callback $data_compare_func ) 
 Вычисляет пересечение массивов с дополнительной проверкой индексов, используя для сравнения значений callback-функцию. 
 Учтите, что в сравнении используются ключи, в отличии от array_uintersect(). Значения сравниваются с помощью callback-функции. </description>
<parameters>array1 - Первый массив. 
array2 - Второй массив. 
data_compare_func - Используемая для сравнения callback-функция, предоставленная пользователем. Она должна возвращать целое число меньшее, равное или большее нуля, если первый параметр, соответственно, должен быть меньше, равен или больше второго. </parameters>
<output>Возвращает массив, содержащий все элементы array1, которые существуют во всех остальных аргументах. </output>
<errors></errors>
<example><?php
$array1 = array("a" => "green", "b" => "brown", "c" => "blue", "red");
$array2 = array("a" => "GREEN", "B" => "brown", "yellow", "red");
print_r(array_uintersect_assoc($array1, $array2, "strcasecmp"));
?></example>
<example_result>
 
Array
(
    [a] => green
)
</example_result>
</object>

<object id=2142> 
<name>imap_timeout</name>
<versions>(PHP 4 >= 4.3.3, PHP 5)</versions>
<short-description>Set or fetch imap timeout</short-description>
<description>mixed imap_timeout ( int $timeout_type [, int $timeout = -1 ] ) 
 Sets or fetches the imap timeout. </description>
<parameters>timeout_type - One of the following: IMAP_OPENTIMEOUT, IMAP_READTIMEOUT, IMAP_WRITETIMEOUT, or IMAP_CLOSETIMEOUT. 
timeout - The timeout, in seconds. </parameters>
<output>If the timeout parameter is set, this function returns TRUE on success and FALSE on failure. </output>
<errors></errors>
<example><?php
echo "The current read timeout is " . imap_timeout(IMAP_READTIMEOUT) . "\n";
?></example>
<example_result></example_result>
</object>

<object id=2143> 
<name>imap_mime_header_decode</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Decode MIME header elements</short-description>
<description>array imap_mime_header_decode ( string $text ) 
 Decodes MIME message header extensions that are non ASCII text (see &raquo; RFC2047). </description>
<parameters>text - The MIME text </parameters>
<output>The decoded elements are returned in an array of objects, where each object has two properties, charset and text. </output>
<errors></errors>
<example><?php
$text = "=?ISO-8859-1?Q?Keld_J=F8rn_Simonsen?= <keld@example.com>";
$elements = imap_mime_header_decode($text);
for ($i=0; $i<count($elements); $i++) {
    echo "Charset: {$elements[$i]->charset}\n";
    echo "Text: {$elements[$i]->text}\n\n";
}?></example>
<example_result>
 
Charset: ISO-8859-1
Text: Keld Jørn Simonsen

Charset: default
Text:  <keld@example.com>
</example_result>
</object>

<object id=2144> 
<name>mkdir</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Создаёт директорию</short-description>
<description>bool mkdir ( string $pathname [, int $mode = 0777 [, bool $recursive = false [, resource $context ]]] ) 
 Пытается создать директорию, заданную в pathname. </description>
<parameters>pathname - Путь к директории. 
mode - По умолчанию принимает значение 0777, что означает самые широкие права. Больше информации о режимах доступа можно узнать на странице руководства функции chmod(). 
recursive - Разрешает создание вложенных директорий, указанных в pathname. По умолчанию равен FALSE. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
mkdir("/path/to/my/dir", 0700);
?></example>
<example_result></example_result>
</object>

<object id=2145> 
<name>shm_has_var</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Check whether a specific entry exists</short-description>
<description>bool shm_has_var ( resource $shm_identifier , int $variable_key ) 
 Checks whether a specific key exists inside a shared memory segment. </description>
<parameters>shm_identifier - Shared memory segment, obtained from shm_attach(). 
variable_key - The variable key. </parameters>
<output>Returns TRUE if the entry exists, otherwise FALSE </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2146> 
<name>fdf_next_field_name</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get the next field name</short-description>
<description>string fdf_next_field_name ( resource $fdf_document [, string $fieldname ] ) 
 Gets the name of the field after the given field. This name can be used with several functions. </description>
<parameters>fdf_document - The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string(). 
fieldname - Name of the FDF field, as a string. If not given, the first field will be assumed. </parameters>
<output>Returns the field name as a string. </output>
<errors></errors>
<example><?php
$fdf = fdf_open($HTTP_FDF_DATA);
for ($field = fdf_next_field_name($fdf);
    $field != "";
    $field = fdf_next_field_name($fdf, $field)) {
    echo "field: $field\n";
}?></example>
<example_result></example_result>
</object>

<object id=2147> 
<name>PDF_set_leading</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set distance between text lines [deprecated]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2148> 
<name>msession_destroy</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)</versions>
<short-description>Destroy a session</short-description>
<description>bool msession_destroy ( string $name ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2149> 
<name>gmp_gcdext</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Вычисление НОД и множителей</short-description>
<description>array gmp_gcdext ( resource $a , resource $b ) 
 Вычисляет величины g, s и t, в выражении a*s + b*t = g = gcd(a,b), где gcd - наибольший общий делитель. Возвращает массив, значения которого соответствуют значениям величин g, s и t. 
 Эта функция может использоваться для решения Диофантовых уравнении с двумя переменными. Это такие уравнения, которые имеют только целочисленные решения и имеют вид: a*x + b*y = c. За дополнительной информацией обращайтесь на &raquo; страницу "Диофантово уравнение" в MathWorld </description>
<parameters>a - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.
b - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.</parameters>
<output>Массив array GMP чисел. </output>
<errors></errors>
<example><?php
// Решение уравнения a*s + b*t = g
// где a = 12, b = 21, g = gcd(12, 21) = 3
$a = gmp_init(12);
$b = gmp_init(21);
$g = gmp_gcd($a, $b);
$r = gmp_gcdext($a, $b);
$check_gcd = (gmp_strval($g) == gmp_strval($r['g']));
$eq_res = gmp_add(gmp_mul($a, $r['s']), gmp_mul($b, $r['t']));
$check_res = (gmp_strval($g) == gmp_strval($eq_res));
if ($check_gcd && $check_res) {
    $fmt = "Solution: %d*%d + %d*%d = %d\n";
    printf($fmt, gmp_strval($a), gmp_strval($r['s']), gmp_strval($b),
    gmp_strval($r['t']), gmp_strval($r['g']));
} else {
    echo "Ошибка во время решения уравнения\n";
}
// вывод: Решение: 12*2 + 21*-1 = 3
?></example>
<example_result></example_result>
</object>

<object id=2150> 
<name>ovrimos_num_rows</name>
<versions>(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)</versions>
<short-description>Returns the number of rows affected by update operations</short-description>
<description>int ovrimos_num_rows ( int $result_id ) 
 Gets the number of rows affected by update operations. </description>
<parameters>result_id - A result identifier, returned by ovrimos_execute() or ovrimos_exec(). </parameters>
<output>Returns the number of rows as an integer, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2151> 
<name>yp_master</name>
<versions>(PHP 4, PHP 5 <= 5.0.5)</versions>
<short-description>Returns the machine name of the master NIS server for a map</short-description>
<description>string yp_master ( string $domain , string $map ) 
 Returns the machine name of the master NIS server for a map. </description>
<parameters>domain - The NIS domain name. 
map - The NIS map. </parameters>
<output></output>
<errors></errors>
<example><?php
$number = yp_master($domain, $mapname);
echo "Master for this map is: " . $master;
?></example>
<example_result></example_result>
</object>

<object id=2152> 
<name>fclose</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Закрывает открытый дескриптор файла</short-description>
<description>bool fclose ( resource $handle ) 
 Функция закрывает файл, на который указывает дескриптор handle. </description>
<parameters>handle - Дескриптор должен быть корректным и указывать на файл, открытый ранее с помощью функции fopen() или fsockopen(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$handle = fopen('somefile.txt', 'r');
fclose($handle);
?></example>
<example_result></example_result>
</object>

<object id=2153> 
<name>ifxus_tell_slob</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Returns the current file or seek position</short-description>
<description>int ifxus_tell_slob ( int $bid ) 
 Returns the current file or seek position of an open slob object </description>
<parameters>bid - An existing slob id. </parameters>
<output>Returns the seek position as an integer, or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2154> 
<name>sqlite_escape_string</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Экранирует спецсимволы в строке для использования в запросе</short-description>
<description>string sqlite_escape_string ( string $item ) 
 sqlite_escape_string() экранирует спецсимволы в строке item для использования в запросе SQLite. Одиночные кавычки (&#039;) будут удвоены, а также будет произведена проверка на наличие небезопасных бинарных данных в строке. 
 Хотя кодирование и позволяет вставлять бинарные данные, операторы сравнения и LIKE для полей, содержащих такие данные, будут работать некорректно. На практике, однако, это не создает проблем, так как база данных должна быть спроектирована таким образом, чтобы не было необходимости использовать операции сравнения с бинарными данными. Фактически, для хранения таких данных лучше подходят другие способы, например, файлы. </description>
<parameters>item - Экранируемая строка (string). </parameters>
<output>Возвращает экранируемую строку (string) пригодную для использования в SQL-запросе SQLite. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2155> 
<name>mssql_num_fields</name>
<versions>(PHP 4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Gets the number of fields in result</short-description>
<description>int mssql_num_fields ( resource $result ) 
 mssql_num_fields() returns the number of fields in a result set. </description>
<parameters>result - The result resource that is being evaluated. This result comes from a call to mssql_query(). </parameters>
<output>Returns the number of fields, as an integer. </output>
<errors></errors>
<example><?php
// Connect to MSSQL and select the database
$link = mssql_connect('KALLESPC\SQLEXPRESS', 'sa', 'phpfi');
mssql_select_db('php', $link);
// Select some data from our database
$data = mssql_query('SELECT [name], [age] FROM [php].[dbo].[persons]');
// Construct a table
echo '<table border="1">';
$header = false;
// Iterate through returned results
while ($row = mssql_fetch_array($data)) {
    // Build the table header
    if (!$header) {
        echo '<thead>';
        echo '<tr>';
        for ($i = 1; ($i + 1) <= mssql_num_fields($data); ++$i) {
            echo '<td>' . ucfirst($row[$i]) . '</td>';
        }
        echo '</tr>';
        echo '</thead>';
        echo '<tbody>';
        $header = true;
    }
    // Build the row
    echo '<tr>';
    foreach($row as $value) {
        echo '<td>' . $value . '</td>';
    }
    echo '</tr>';
}
// Close table
echo '</tbody>';
echo '</table>';
// Clean up
mssql_free_result($data);
mssql_close($link);
?></example>
<example_result></example_result>
</object>

<object id=2156> 
<name>sqlite_fetch_object</name>
<versions>(PHP 5)</versions>
<short-description>Выбирает следующую запись из результата запроса и возвращает объект</short-description>
<description>object sqlite_fetch_object ( resource $result [, string $class_name [, array $ctor_params [, bool $decode_binary = true ]]] ) 
 Объектно-ориентированный стиль (метод): object SQLiteResult::fetchObject ([ string $class_name [, array $ctor_params [, bool $decode_binary = true ]]] )</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2157> 
<name>pspell_config_dict_dir</name>
<versions>(PHP 5)</versions>
<short-description>Расположение основного списка слов</short-description>
<description>bool pspell_config_dict_dir ( int $conf , string $directory ) 
 Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2158> 
<name>imagexbm</name>
<versions>(PHP 5)</versions>
<short-description>Output XBM image to browser or file</short-description>
<description>bool imagexbm ( resource $image , string $filename [, int $foreground ] ) 
 Outputs or save an XBM version of the given image. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
filename - Путь для сохранения файла. Если не установлен или равен NULL, изображение будет выведено в поток вывода в бинарном виде.
foreground - You can set the foreground color with this parameter by setting an identifier obtained from imagecolorallocate(). The default foreground color is black. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Create a blank image and add some text
$im = imagecreatetruecolor(120, 20);
$text_color = imagecolorallocate($im, 233, 14, 91);
imagestring($im, 1, 5, 5,  'A Simple Text String', $text_color);
// Save the image
imagexbm($im, 'simpletext.xbm');
// Free up memory
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=2159> 
<name>pg_field_size</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает размер поля </short-description>
<description>int pg_field_size ( resource $result , int $field_number ) 
 pg_field_size() возвращает объем памяти (в байтах), занимаемый значением поля результата запроса PostgreSQL result. 
 Замечание: 
 Прежнее название функции: pg_fieldsize(). </description>
<parameters>result - Ресурс результата запроса PostgreSQL, возвращаемый функциями pg_query(), pg_query_params() или pg_execute() (в числе прочих). 
field_number - Порядковый номер поля результата запроса, начиная с нуля. </parameters>
<output>Требуемый объем памяти (в байтах) для хранения значения поля. -1 указывает на переменный размер поля. FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Невозможно соединиться с базой");
  $res = pg_query($dbconn, "select * from authors where author = 'Orwell'");
  $i = pg_num_fields($res);
  for ($j = 0; $j < $i; $j++) {
      echo "column $j\n";
      $fieldname = pg_field_name($res, $j);
      echo "fieldname: $fieldname\n";
      echo "printed length: " . pg_field_prtlen($res, $fieldname) . " characters\n";
      echo "storage length: " . pg_field_size($res, $j) . " bytes\n";
      echo "field type: " . pg_field_type($res, $j) . " \n\n";
  }
?></example>
<example_result>
 
column 0
fieldname: author
printed length: 6 characters
storage length: -1 bytes
field type: varchar 

column 1
fieldname: year
printed length: 4 characters
storage length: 2 bytes
field type: int2 

column 2
fieldname: title
printed length: 24 characters
storage length: -1 bytes
field type: varchar 
</example_result>
</object>

<object id=2160> 
<name>preg_match_all</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выполняет глобальный поиск шаблона в строке</short-description>
<description>int preg_match_all ( string $pattern , string $subject [, array &$matches [, int $flags = PREG_PATTERN_ORDER [, int $offset = 0 ]]] ) 
 Ищет в строке subject все совпадения с шаблоном pattern и помещает результат в массив matches в порядке, определяемом комбинацией флагов flags. 
 После нахождения первого соответствия последующие поиски будут осуществляться не с начала строки, а от конца последнего найденного вхождения. </description>
<parameters>pattern - Искомый шаблон, строка. 
subject - Входная строка. 
matches - Параметр flags регулирует порядок вывода совпадений в возвращаемом многомерном массиве. 
flags - Может быть комбинацией следующих флагов (необходимо понимать, что использование PREG_PATTERN_ORDER одновременно с PREG_SET_ORDER бессмысленно): PREG_PATTERN_ORDER 
 Упорядочивает результаты так, что элемент $matches[0] содержит массив полных вхождений шаблона, элемент $matches[1] содержит массив вхождений первой подмаски, и так далее. </parameters>
<output>Возвращает количество найденных вхождений шаблона (которое может быть и нулем) либо FALSE, если во время выполнения возникли какие-либо ошибки. </output>
<errors></errors>
<example><?php
preg_match_all("/\(?  (\d{3})?  \)?  (?(1)  [\-\s] ) \d{3}-\d{4}/x",
                "Звоните 555-1212 или 1-800-555-1212", $phones);
?></example>
<example_result>
 
<b>пример: </b>, <div align=left>это тест</div>
пример: , это тест
</example_result>
</object>

<object id=2161> 
<name>aggregation_info</name>
<versions>(PHP 4 >= 4.2.0 and < 4.3.0)</versions>
<short-description>Псевдоним aggregate_info()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2162> 
<name>fdf_save</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Save a FDF document</short-description>
<description>bool fdf_save ( resource $fdf_document [, string $filename ] ) 
 Saves a FDF document. </description>
<parameters>fdf_document - The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string(). 
filename - If provided, the resulting FDF will be written in this parameter. Otherwise, this function will write the FDF to the default PHP output stream. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2163> 
<name>getservbyport</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает Интернет службу, соответствующую заданному порту и протоколу</short-description>
<description>string getservbyport ( int $port , string $protocol ) 
 Функция getservbyport() возвращает Интернет службу, соответствующую заданному в параметре port порту для определенного протокола protocol как в /etc/services. </description>
<parameters>port - Номер порта. 
protocol - Параметр protocol может быть "tcp" or "udp" (в нижнем регистре). </parameters>
<output>Возвращает имя Интернет службы в виде строки (string). </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2164> 
<name>session_write_close</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Write session data and end session</short-description>
<description>void session_write_close ( void ) 
 End the current session and store session data. 
 Session data is usually stored after your script terminated without the need to call session_write_close(), but as session data is locked to prevent concurrent writes only one script may operate on a session at any time. When using framesets together with sessions you will experience the frames loading one by one due to this locking. You can reduce the time needed to load all the frames by ending the session as soon as all changes to session variables are done. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2165> 
<name>libxml_disable_entity_loader</name>
<versions>(PHP 5 >= 5.2.11)</versions>
<short-description>Отключение возможности загрузки сущностей из внешних источников </short-description>
<description>bool libxml_disable_entity_loader ([ bool $disable = true ] ) 
 Отключение/включение возможности загружать внешние сущности. </description>
<parameters>disable - Отключение (TRUE) или включение (FALSE) libxml расширений (также как в DOM, XMLWriter и XMLReader) для загрузки внешних сущностей. </parameters>
<output>Возвращает предыдущее значение. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2166> 
<name>ibase_fetch_object</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get an object from a InterBase database</short-description>
<description>object ibase_fetch_object ( resource $result_id [, int $fetch_flag = 0 ] ) 
 Fetches a row as a pseudo-object from a given result identifier. 
 Subsequent calls to ibase_fetch_object() return the next row in the result set. </description>
<parameters>result_id - An InterBase result identifier obtained either by ibase_query() or ibase_execute(). 
fetch_flag - fetch_flag is a combination of the constants IBASE_TEXT and IBASE_UNIXTIME ORed together. Passing IBASE_TEXT will cause this function to return BLOB contents instead of BLOB ids. Passing IBASE_UNIXTIME will cause this function to return date/time values as Unix timestamps instead of as formatted strings. </parameters>
<output>Returns an object with the next row information, or FALSE if there are no more rows. </output>
<errors></errors>
<example><?php
$dbh = ibase_connect($host, $username, $password);
$stmt = 'SELECT * FROM tblname';
$sth = ibase_query($dbh, $stmt);
while ($row = ibase_fetch_object($sth)) {
    echo $row->email . "\n";
}ibase_close($dbh);
?></example>
<example_result></example_result>
</object>

<object id=2167> 
<name>date_offset_get</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Псевдоним DateTime::getOffset()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2168> 
<name>array_splice</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Удаляет часть массива и заменяет её чем-нибудь ещё</short-description>
<description>array array_splice ( array &$input , int $offset [, int $length = 0 [, mixed $replacement ]] ) 
 Удаляет length элементов, расположенных на расстоянии offset из массива input, и заменяет их элементами массива replacement, если он передан в качестве параметра. 
 Обратите внимание, что числовые ключи в массиве input не сохраняются. 
 Замечание: Если параметр replacement не является массивом, он будет преобразован к нему (т.е. (array) $parameter). Это может привести к не ожиданным результатам при использовании объекта или NULL в качестве replacement. </description>
<parameters>input - Входной массив. 
offset - Если параметр offset положителен, будут удалены элементы, находящиеся на расстоянии offset от начала input. Если offset отрицателен, будут удалены элементы, находящиеся на расстоянии offset от конца input. 
length - Если параметр length опущен, будут удалены все элементы начиная с позиции offset и до конца массива. Если length указан и он положителен, то будет удалено именно столько элементов. Если же параметр length отрицателен, то конец удаляемой части элементов будет отстоять на это количество от конца массива. Совет: для того, чтобы удалить все элементы массива, начиная с позиции offset до конца массива, в то время как указан параметр replacement, используйте count($input) в качестве параметра length. 
replacement - Если передан массив replacement в качестве аргумента, тогда удалённые элементы будут заменены элементами этого массива. </parameters>
<output>Возвращает массив, содержащий удалённые элементы. </output>
<errors></errors>
<example><?php
$input = array("red", "green", "blue", "yellow");
array_splice($input, 2);
// $input теперь array("red", "green")
$input = array("red", "green", "blue", "yellow");
array_splice($input, 1, -1);
// $input теперь array("red", "yellow")
$input = array("red", "green", "blue", "yellow");
array_splice($input, 1, count($input), "orange");
// $input теперь array("red", "orange")
$input = array("red", "green", "blue", "yellow");
array_splice($input, -1, 1, array("black", "maroon"));
// $input теперь array("red", "green", "blue", "black", "maroon")
$input = array("red", "green", "blue", "yellow");
array_splice($input, 3, 0, "purple");
// $input теперь array("red", "green", "blue", "purple", "yellow");
?></example>
<example_result></example_result>
</object>

<object id=2169> 
<name>openssl_public_encrypt</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Encrypts data with public key </short-description>
<description>bool openssl_public_encrypt ( string $data , string &$crypted , mixed $key [, int $padding = OPENSSL_PKCS1_PADDING ] ) 
 openssl_public_encrypt() encrypts data with public key and stores the result into crypted. Encrypted data can be decrypted via openssl_private_decrypt(). 
 This function can be used e.g. to encrypt message which can be then read only by owner of the private key. It can be also used to store secure data in database. </description>
<parameters>data - 
crypted - This will hold the result of the encryption. 
key - The public key. 
padding - padding can be one of OPENSSL_PKCS1_PADDING, OPENSSL_SSLV23_PADDING, OPENSSL_PKCS1_OAEP_PADDING, OPENSSL_NO_PADDING. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2170> 
<name>mysql_query</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Посылает запрос MySQL</short-description>
<description>resource mysql_query ( string $query [, resource $link_identifier ] ) 
 mysql_query() посылает один запрос (посылка нескольких запросов не поддерживается) активной базе данных сервера, на который ссылается переданный дескриптор link_identifier. </description>
<parameters>query - SQL-запрос 
link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Для запросов SELECT, SHOW, DESCRIBE, EXPLAIN и других запросов, возвращающих результат из нескольких рядов, mysql_query() возвращает дескриптор результата запроса (resource), или FALSE в случае ошибки. </output>
<errors></errors>
<example>
 mysql_query() вернёт FALSE. </example>
<example_result></example_result>
</object>

<object id=2171> 
<name>array_multisort</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сортирует несколько массивов или многомерные массивы</short-description>
<description>bool array_multisort ( array &$arr [, mixed $arg = SORT_ASC [, mixed $arg = SORT_REGULAR [, mixed $... ]]] ) 
 Функция array_multisort() может быть использована для сортировки сразу нескольких массивов или одного многомерного массива в соответствии с одной или несколькими размерностями. 
 Ассоциативные (string) ключи будут сохранены, но числовые ключи будут переиндексированы. </description>
<parameters>arr - Сортируемый массив (array). 
arg - Необязательные другие массивы (array), или опции сортировки для предыдущего аргумента (array): SORT_ASC, SORT_DESC, SORT_REGULAR, SORT_NUMERIC, SORT_STRING. 
... - Дополнительные параметры (arg). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$ar1 = array(10, 100, 100, 0);
$ar2 = array(1, 3, 2, 4);
array_multisort($ar1, $ar2);
var_dump($ar1);
var_dump($ar2);
?></example>
<example_result>
 
array(4) {
  [0]=> int(0)
  [1]=> int(10)
  [2]=> int(100)
  [3]=> int(100)
}
array(4) {
  [0]=> int(4)
  [1]=> int(1)
  [2]=> int(2)
  [3]=> int(3)
}
</example_result>
</object>

<object id=2172> 
<name>snmp_set_oid_numeric_print</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Return all objects including their respective object id within the specified one </short-description>
<description>void snmp_set_oid_numeric_print ( int $oid_format ) 
 Эта функция является псевдонимом: snmp_set_oid_output_format(). </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2173> 
<name>fbsql_blob_size</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Get the size of a BLOB</short-description>
<description>int fbsql_blob_size ( string $blob_handle [, resource $link_identifier ] ) 
 Returns the size of the given BLOB. </description>
<parameters>blob_handle - A BLOB handle, returned by fbsql_create_blob(). 
link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Returns the BLOB size as an integer, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2174> 
<name>sqlite_has_more</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Определяет, есть ли еще записи в результате запроса</short-description>
<description>bool sqlite_has_more ( resource $result ) 
 Определяет, есть ли еще записи в результате запроса. </description>
<parameters>result - Ресурс результата SQLite. </parameters>
<output>sqlite_has_more() возвращает TRUE если результат запроса result содержит записи, доступные для выборки, иначе возвращает FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2175> 
<name>readline_callback_handler_remove</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Removes a previously installed callback handler and restores terminal settings</short-description>
<description>bool readline_callback_handler_remove ( void ) 
 Removes a previously installed callback handler and restores terminal settings. </description>
<parameters></parameters>
<output>Returns TRUE if a previously installed callback handler was removed, or FALSE if one could not be found. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2176> 
<name>openssl_get_cipher_methods</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Gets available cipher methods</short-description>
<description>array openssl_get_cipher_methods ([ bool $aliases = false ] ) 
 Gets a list of available cipher methods. </description>
<parameters>aliases - Set to TRUE if cipher aliases should be included within the returned array. </parameters>
<output>An array of available cipher methods. </output>
<errors></errors>
<example>
 </example>
<example_result>
 
Array
(
    [0] => AES-128-CBC
    [1] => AES-128-CFB
    [2] => AES-128-CFB1
    [3] => AES-128-CFB8
    [4] => AES-128-ECB
    [5] => AES-128-OFB
    [6] => AES-192-CBC
    [7] => AES-192-CFB
    [8] => AES-192-CFB1
    [9] => AES-192-CFB8
    [10] => AES-192-ECB
    [11] => AES-192-OFB
    [12] => AES-256-CBC
    [13] => AES-256-CFB
    [14] => AES-256-CFB1
    [15] => AES-256-CFB8
    [16] => AES-256-ECB
    [17] => AES-256-OFB
    [18] => BF-CBC
    [19] => BF-CFB
    [20] => BF-ECB
    [21] => BF-OFB
    [22] => CAST5-CBC
    [23] => CAST5-CFB
    [24] => CAST5-ECB
    [25] => CAST5-OFB
    [26] => DES-CBC
    [27] => DES-CFB
    [28] => DES-CFB1
    [29] => DES-CFB8
    [30] => DES-ECB
    [31] => DES-EDE
    [32] => DES-EDE-CBC
    [33] => DES-EDE-CFB
    [34] => DES-EDE-OFB
    [35] => DES-EDE3
    [36] => DES-EDE3-CBC
    [37] => DES-EDE3-CFB
    [38] => DES-EDE3-OFB
    [39] => DES-OFB
    [40] => DESX-CBC
    [41] => IDEA-CBC
    [42] => IDEA-CFB
    [43] => IDEA-ECB
    [44] => IDEA-OFB
    [45] => RC2-40-CBC
    [46] => RC2-64-CBC
    [47] => RC2-CBC
    [48] => RC2-CFB
    [49] => RC2-ECB
    [50] => RC2-OFB
    [51] => RC4
    [52] => RC4-40
    [53] => aes-128-cbc
    [54] => aes-128-cfb
    [55] => aes-128-cfb1
    [56] => aes-128-cfb8
    [57] => aes-128-ecb
    [58] => aes-128-ofb
    [59] => aes-192-cbc
    [60] => aes-192-cfb
    [61] => aes-192-cfb1
    [62] => aes-192-cfb8
    [63] => aes-192-ecb
    [64] => aes-192-ofb
    [65] => aes-256-cbc
    [66] => aes-256-cfb
    [67] => aes-256-cfb1
    [68] => aes-256-cfb8
    [69] => aes-256-ecb
    [70] => aes-256-ofb
    [71] => bf-cbc
    [72] => bf-cfb
    [73] => bf-ecb
    [74] => bf-ofb
    [75] => cast5-cbc
    [76] => cast5-cfb
    [77] => cast5-ecb
    [78] => cast5-ofb
    [79] => des-cbc
    [80] => des-cfb
    [81] => des-cfb1
    [82] => des-cfb8
    [83] => des-ecb
    [84] => des-ede
    [85] => des-ede-cbc
    [86] => des-ede-cfb
    [87] => des-ede-ofb
    [88] => des-ede3
    [89] => des-ede3-cbc
    [90] => des-ede3-cfb
    [91] => des-ede3-ofb
    [92] => des-ofb
    [93] => desx-cbc
    [94] => idea-cbc
    [95] => idea-cfb
    [96] => idea-ecb
    [97] => idea-ofb
    [98] => rc2-40-cbc
    [99] => rc2-64-cbc
    [100] => rc2-cbc
    [101] => rc2-cfb
    [102] => rc2-ecb
    [103] => rc2-ofb
    [104] => rc4
    [105] => rc4-40
)
Array
(
    [18] => AES128
    [19] => AES192
    [20] => AES256
    [21] => BF
    [26] => CAST
    [27] => CAST-cbc
    [32] => DES
    [47] => DES3
    [48] => DESX
    [50] => IDEA
    [55] => RC2
    [82] => aes128
    [83] => aes192
    [84] => aes256
    [85] => bf
    [90] => blowfish
    [91] => cast
    [92] => cast-cbc
    [97] => des
    [112] => des3
    [113] => desx
    [115] => idea
    [120] => rc2
)

</example_result>
</object>

<object id=2177> 
<name>xml_set_object</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Использование XML анализатора внутри объекта </short-description>
<description>bool xml_set_object ( resource $parser , object &$object ) 
 Эта функция позволяет использовать parser внутри объекта object. Все callback-функции могут быть установлены функциями xml_set_element_handler() и т.п. и использоваться как методы объекта object. </description>
<parameters>parser - Ссылка на XML анализатор. 
object - Объект, в котором будет использоваться XML анализатор. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
class xml  {
    var $parser;
    function xml() 
    {
        $this->parser = xml_parser_create();
        xml_set_object($this->parser, $this);
        xml_set_element_handler($this->parser, "tag_open", "tag_close");
        xml_set_character_data_handler($this->parser, "cdata");
    }
    function parse($data) 
    {
        xml_parse($this->parser, $data);
    }
    function tag_open($parser, $tag, $attributes) 
    {
        var_dump($parser, $tag, $attributes); 
    }
    function cdata($parser, $cdata) 
    {
        var_dump($parser, $cdata);
    }
    function tag_close($parser, $tag) 
    {
        var_dump($parser, $tag);
    }
} // окончание определения класса xml
$xml_parser = new xml();
$xml_parser->parse("<A ID='hallo'>PHP</A>");
?></example>
<example_result></example_result>
</object>

<object id=2178> 
<name>fbsql_table_name</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Get table name of field</short-description>
<description>string fbsql_table_name ( resource $result , int $index ) 
 fbsql_table_name() gets the name of the current table in the given result set. 
 The fbsql_num_rows() function may be used to determine the number of tables in the result pointer. </description>
<parameters>result - A result pointer returned by fbsql_list_tables(). 
index - Integer index for the current table. </parameters>
<output>Returns the name of the table, as a string. </output>
<errors></errors>
<example><?php
fbsql_connect("localhost", "_SYSTEM", "");
$result = fbsql_list_tables("wisconsin");
$i = 0;
while ($i < fbsql_num_rows($result)) {
    $tb_names[$i] = fbsql_table_name($result, $i);
    echo $tb_names[$i] . "<br />";
    $i++;
}?></example>
<example_result></example_result>
</object>

<object id=2179> 
<name>is_float</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Проверяет, является ли переменная числом с плавающей точкой</short-description>
<description>bool is_float ( mixed $var ) 
 Проверяет, является ли данная переменная числом с плавающей точкой. 
 Замечание: 
 Чтобы проверить, является ли переменная числом или строкой, содержащей число (как поле ввода в форме, которое всегда является строкой), используйте is_numeric(). </description>
<parameters>var - Проверяемая переменная. </parameters>
<output>Возвращает TRUE, если var является переменной типа float, FALSE в противном случае. </output>
<errors></errors>
<example><?php
if (is_float(27.25)) {
    echo "is float\n";
} else {
    echo "is not float\n";
}var_dump(is_float('abc'));
var_dump(is_float(23));
var_dump(is_float(23.5));
var_dump(is_float(1e7));  //Научная форма записи
var_dump(is_float(true));
?></example>
<example_result>
 
is float
bool(false)
bool(false)
bool(true)
bool(true)
bool(false)
</example_result>
</object>

<object id=2180> 
<name>soundex</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает ключ soundex для строки</short-description>
<description>string soundex ( string $str ) 
 Возвращает ключ soundex для строки str. 
 Двум словам, имеющим схожее произношение, соответствует один и тот же ключ soundex. Это свойство может быть использовано, например, при поиске по базе даных, когда известно произношение слова и неизвестно его написание. Данная функция возвращает строку из 4 символов, начинающуюся с буквы. 
 Данная реализация функции soundex описана Дональдом Кнутом (Donald Knuth) в книге "The Art Of Computer Programming, vol. 3: Sorting And Searching", Addison-Wesley (1973), стр. 391-392. </description>
<parameters>str - Входная строка. </parameters>
<output>Возвращает ключ soundex в виде строки. </output>
<errors></errors>
<example><?php
soundex("Euler")       == soundex("Ellery");    // E460
soundex("Gauss")       == soundex("Ghosh");     // G200
soundex("Hilbert")     == soundex("Heilbronn"); // H416
soundex("Knuth")       == soundex("Kant");      // K530
soundex("Lloyd")       == soundex("Ladd");      // L300
soundex("Lukasiewicz") == soundex("Lissajous"); // L222
?></example>
<example_result></example_result>
</object>

<object id=2181> 
<name>lstat</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает информацию о файле или символической ссылке</short-description>
<description>array lstat ( string $filename ) 
 Собирает статистику на файл или символическую ссылку с именем filename. </description>
<parameters>filename - Путь к файлу или символической ссылке. </parameters>
<output>Обратитесь к странице руководства функции stat() для получения информации о структуре массива, который возвращает lstat(). Эта функция идентична функции stat(), за исключением того, что если filename является символической ссылкой, возвращается статус символической ссылки, а не того файла, на который она указывает. </output>
<errors>В случае неудачного завершения работы генерируется ошибка уровня E_WARNING.</errors>
<example><?php
symlink('uploads.php', 'uploads');
// Отличия между uploads.php и uploads
array_diff(stat('uploads'), lstat('uploads'));
?></example>
<example_result>
 
Array
(
    [ino] => 97236376
    [mode] => 33188
    [size] => 34
    [atime] => 1223580003
    [mtime] => 1223581848
    [ctime] => 1223581848
    [blocks] => 8
)
</example_result>
</object>

<object id=2182> 
<name>ncurses_start_color</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Initializes color functionality</short-description>
<description>int ncurses_start_color ( void ) 
 Initializes color functionality in ncurses. This function must be called before any color manipulation functions are called and after ncurses_init() is called. It is good practice to call this function right after ncurses_init(). </description>
<parameters></parameters>
<output>Returns 0 on success, or -1 if the color table could not be allocated or ncurses was not initialized. </output>
<errors></errors>
<example><?php
ncurses_init();
// If the terminal supports colors, initialize and set active color
if (ncurses_has_colors()) {
    ncurses_start_color();
    ncurses_init_pair(1, NCURSES_COLOR_YELLOW, NCURSES_COLOR_BLUE);
    ncurses_color_set(1);
}
// Write a string at specified location
ncurses_mvaddstr(10, 10, "Hello world! Yellow on blue text!");
// Flush output to screen
ncurses_refresh();
ncurses_end();
?></example>
<example_result></example_result>
</object>

<object id=2183> 
<name>PDF_set_text_rendering</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Determine text rendering [deprecated]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2184> 
<name>pspell_config_save_repl</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Определяет, сохранять ли список замещающих пар вместе со списком слов</short-description>
<description>bool pspell_config_save_repl ( int $dictionary_link , bool $flag ) 
 pspell_config_save_repl() определяет, будет ли pspell_save_wordlist() сохранять замещающие пары вместе со списком слов. Обычно нет необходимости использовать эту функцию, поскольку, если используется pspell_config_repl(), замещающие пары будут сохранены pspell_save_wordlist() в любом случае, и, если она не используется, замещающие пары не будут сохраняться. 
 pspell_config_save_repl() должна быть использвана для конфигурации до вызова pspell_new_config(). </description>
<parameters>dictionary_link - 
flag - TRUE если замещающие пары должны сохраняться, FALSE в противном случае. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2185> 
<name>stream_register_wrapper</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Псевдоним stream_wrapper_register()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2186> 
<name>ctype_punct</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Проверяет на наличие печатных символов, которые в то же время не являются пробельными или буквенно-цифровыми символами </short-description>
<description>bool ctype_punct ( string $text ) 
 Проверяет, все ли символы в переданной строке text являются знаками пунктуации. </description>
<parameters>text - Проверяемая строка. </parameters>
<output>Возвращает TRUE, если каждый символ в строке text является печатным, но не является ни буквой, ни цифрой, ни пустым символом, иначе будет возвращено FALSE. </output>
<errors></errors>
<example><?php
$strings = array('ABasdk!@!$#', '!@ # $', '*&$()');
foreach ($strings as $testcase) {
    if (ctype_punct($testcase)) {
        echo "Строка $testcase состоит только из знаков пунктуации.\n";
    } else {
        echo "Строка $testcase не состоит только из знаков пунктуации.\n";
    }
}?></example>
<example_result>
 
Строка ABasdk!@!$# не состоит только из знаков пунктуации.
Строка !@ # $ не состоит только из знаков пунктуации.
Строка *&$() состоит только из знаков пунктуации.
</example_result>
</object>

<object id=2187> 
<name>swf_mulcolor</name>
<versions>(PHP 4)</versions>
<short-description>Sets the global multiply color to the rgba value specified</short-description>
<description>void swf_mulcolor ( float $r , float $g , float $b , float $a ) 
 Sets the global multiply color to the given one. This color is then implicitly used by the swf_placeobject(), swf_modifyobject() and swf_addbuttonrecord() functions. 
 The color of the object will be multiplied by the given color values when the object is written to the screen. </description>
<parameters>r - Red value 
g - Green value 
b - Blue value 
a - Alpha value </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2188> 
<name>readdir</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает элемент каталога по его дескриптору</short-description>
<description>string readdir ([ resource $dir_handle ] ) 
 Возвращает имя следующего по порядку элемента каталога. Элементы возвращаются в том порядке, в котором они хранятся в файловой системе. </description>
<parameters>dir_handle - Дескриптор каталога (resource), ранее открытый функцией opendir(). Если дескриптор каталога не указан, используется последний дескриптор открытый функцией opendir(). </parameters>
<output>Возвращает имя элемента каталога в случае успеха или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example>
 readdir() в приведенном ниже примере. В этом примере осуществляется явная проверка значения на идентичность (выражения идентичны, когда они равны и являются значениями одного типа - за более подробной информацией обратитесь к главе " Операторы сравнения") значению FALSE, поскольку в ином случае, любой элемент каталога, чье имя может быть преобразовано к FALSE, остановит цикл (например, элемент с именем "0"). </example>
<example_result></example_result>
</object>

<object id=2189> 
<name>ncurses_mousemask</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Sets mouse options</short-description>
<description>int ncurses_mousemask ( int $newmask , int &$oldmask ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>newmask - Mouse mask options can be set with the following predefined constants: 
 NCURSES_BUTTON1_PRESSED
oldmask - This will be set to the previous value of the mouse event mask. </parameters>
<output>Returns a mask to indicated which of the in parameter newmask specified mouse events can be reported. On complete failure, it returns 0. </output>
<errors></errors>
<example><?php
$newmask = NCURSES_BUTTON1_CLICKED + NCURSES_BUTTON1_RELEASED;
$mask = ncurses_mousemask($newmask, $oldmask);
if ($mask & $newmask){
    printf("All specified mouse options will be supported\n");
}?></example>
<example_result></example_result>
</object>

<object id=2190> 
<name>imagewbmp</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Выводит изображение в браузер или пишет в файл</short-description>
<description>bool imagewbmp ( resource $image [, string $filename [, int $foreground ]] ) 
 imagewbmp() outputs or save a WBMP version of the given image. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
filename - Путь для сохранения файла. Если не установлен или равен NULL, изображение будет выведено в поток вывода в бинарном виде.
foreground - You can set the foreground color with this parameter by setting an identifier obtained from imagecolorallocate(). The default foreground color is black. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Create a blank image and add some text
$im = imagecreatetruecolor(120, 20);
$text_color = imagecolorallocate($im, 233, 14, 91);
imagestring($im, 1, 5, 5,  'A Simple Text String', $text_color);
// Set the content type header - in this case image/vnd.wap.wbmp
// Hint: see image_type_to_mime_type() for content-types
header('Content-Type: image/vnd.wap.wbmp');
// Output the image
imagewbmp($im);
// Free up memory
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=2191> 
<name>pg_fetch_object</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выбирает строку результата запроса и возвращает данные в виде объекта</short-description>
<description>object pg_fetch_object ( resource $result [, int $row [, int $result_type = PGSQL_ASSOC ]] ) object pg_fetch_object ( resource $result [, int $row [, string $class_name [, array $params ]]] )</description>
<parameters>result - Ресурс результата запроса PostgreSQL, возвращаемый функциями pg_query(), pg_query_params() или pg_execute() (в числе прочих). 
row - Номер выбираемой из результата запроса строки. Нумерация начинается с нуля. Если аргумент опущен или равен NULL, берется следующая по очереди строка. 
result_type - Устарел и не используется. 
class_name - Имя класса создаваемого и возвращаемого объекта. Если не задано, функция создаст экземпляр класса stdClass. 
params - Необязательный аргумент. Массив параметров для передачи в конструктор создаваемого объекта. </parameters>
<output>object, имена и значения свойств которого соответствуют именам и значениям полей результата запроса. Значения NULL базы данных преобразуются в PHP NULL. </output>
<errors></errors>
<example><?php 
$database = "store";
$db_conn = pg_connect("host=localhost port=5432 dbname=$database");
if (!$db_conn) {
  echo "Невозможно соединиться с postgres базой $database\n";
  exit;
}
$qu = pg_query($db_conn, "SELECT * FROM books ORDER BY author");

while ($data = pg_fetch_object($qu)) {
  echo $data->author . " (";
  echo $data->year . "): ";
  echo $data->title . "<br />";
}
pg_free_result($qu);
pg_close($db_conn);
?></example>
<example_result></example_result>
</object>

<object id=2192> 
<name>move_uploaded_file</name>
<versions>(PHP 4 >= 4.0.3, PHP 5)</versions>
<short-description>Перемещает загруженный файл в новое место</short-description>
<description>bool move_uploaded_file ( string $filename , string $destination ) 
 Эта функция проверяет, является ли файл filename загруженным на сервер (переданным по протоколу HTTP POST). Если файл действительно загружен на сервер, он будет перемещён в место, указанное в аргументе destination. 
 Такая проверка особенно важна в том случае, если существует шанс того, что какие-либо действия, производимые над загруженным файлом, могут открыть его содержимое пользователю или даже другим пользователям системы. </description>
<parameters>filename - Путь к загруженному файлу. 
destination - Назначение перемещаемого файла. </parameters>
<output>В случае успеха возвращает TRUE. </output>
<errors></errors>
<example><?php
$uploads_dir = '/uploads';
foreach ($_FILES["pictures"]["error"] as $key => $error) {
    if ($error == UPLOAD_ERR_OK) {
        $tmp_name = $_FILES["pictures"]["tmp_name"][$key];
        $name = $_FILES["pictures"]["name"][$key];
        move_uploaded_file($tmp_name, "$uploads_dir/$name");
    }
}?></example>
<example_result></example_result>
</object>

<object id=2193> 
<name>PDF_setcolor</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Set fill and stroke color</short-description>
<description>bool PDF_setcolor ( resource $p , string $fstype , string $colorspace , float $c1 , float $c2 , float $c3 , float $c4 ) 
 Sets the current color space and color. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2194> 
<name>imap_uid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>This function returns the UID for the given message sequence number</short-description>
<description>int imap_uid ( resource $imap_stream , int $msg_number ) 
 This function returns the UID for the given message sequence number. An UID is a unique identifier that will not change over time while a message sequence number may change whenever the content of the mailbox changes. 
 This function is the inverse of imap_msgno(). </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
msg_number - The message number. </parameters>
<output>The UID of the given message. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2195> 
<name>ftp_site</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Отправляет серверу команду SITE</short-description>
<description>bool ftp_site ( resource $ftp_stream , string $command ) 
 ftp_site() отправляет указанную команду SITE FTP-серверу. 
 Команды SITE не стандартизированы, и зависят от FTP-сервера. Они могут быть полезны для изменения прав доступа к файлам или смены владельца или группы. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером. 
command - Команда SITE. Обратите внимание, что этот параметр не проходит экранирование спецсимволов, так что могут возникнуть проблемы с именами, содержащими пробелы и прочие подобные символы. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Соединение с FTP-сервером
$conn = ftp_connect('ftp.example.com');
if (!$conn) die('Не удалось подключиться к ftp.example.com');
// Вход под именем "user" с паролем "pass"
if (!ftp_login($conn, 'user', 'pass')) die('Не удалось войти на ftp.example.com');
// Отправка "SITE CHMOD 0600 /home/user/privatefile" FTP-серверу
if (ftp_site($conn, 'CHMOD 0600 /home/user/privatefile')) {
   echo "Команда выполнена.\n";
} else {
   die('Команда не выполнена.');
}?></example>
<example_result></example_result>
</object>

<object id=2196> 
<name>cal_info</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Возвращает информацию о заданном календаре</short-description>
<description>array cal_info ([ int $calendar = -1 ] ) 
 cal_info() возвращает информацию о заданном календаре calendar. 
 Информация о календаре возвращается в виде массива с полями calname, calsymbol, month, abbrevmonth и maxdaysinmonth В качестве calendar могут быть использованы следующие календари: 0 or CAL_GREGORIAN - Грегорианский календарь 1 or CAL_JULIAN - Юлианский календарь 2 or CAL_JEWISH - Еврейский календарь 3 or CAL_FRENCH - Календарь со дня Французской революции 
 Если параметр calendar не задан, возвращается инофрмация обо всех календарях в виде массива. </description>
<parameters>calendar - Календарь, о котором будет возвращена информация. Если параметр не задан, возвращается информация обо всех календарях. </parameters>
<output></output>
<errors></errors>
<example><?php
$info = cal_info(0);
print_r($info);
?></example>
<example_result>
 
Array
(
    [months] => Array
        (
            [1] => January
            [2] => February
            [3] => March
            [4] => April
            [5] => May
            [6] => June
            [7] => July
            [8] => August
            [9] => September
            [10] => October
            [11] => November
            [12] => December
        )

    [abbrevmonths] => Array
        (
            [1] => Jan
            [2] => Feb
            [3] => Mar
            [4] => Apr
            [5] => May
            [6] => Jun
            [7] => Jul
            [8] => Aug
            [9] => Sep
            [10] => Oct
            [11] => Nov
            [12] => Dec
        )

    [maxdaysinmonth] => 31
    [calname] => Gregorian
    [calsymbol] => CAL_GREGORIAN
)
</example_result>
</object>

<object id=2197> 
<name>hw_getrellink</name>
<versions>(PHP 4)</versions>
<short-description>Get link from source to dest relative to rootid</short-description>
<description>string hw_getrellink ( int $link , int $rootid , int $sourceid , int $destid ) 
 Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2198> 
<name>m_setblocking</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Set blocking/non-blocking mode for connection</short-description>
<description>int m_setblocking ( resource $conn , int $tf ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
tf - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2199> 
<name>strncmp</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Бинарно-безопасное сравнение первых n символов строк без учета регистра</short-description>
<description>int strncmp ( string $str1 , string $str2 , int $len ) 
 Эта функция подобна strcmp(), за исключением того, что можно указать максимальное количество символов в обоих строках, которые будут участвовать в сравнении. 
 Эта функция учитывает регистр символов. </description>
<parameters>str1 - Первая строка. 
str2 - Вторая строка. 
len - Количество символов, используемых в сравнении. </parameters>
<output>Возвращает отрицательное число, если str1 меньше, чем str2, положительное число, если str1 больше, чем str2, и 0 если строки равны. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2200> 
<name>mdecrypt_generic</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Decrypts data</short-description>
<description>string mdecrypt_generic ( resource $td , string $data ) 
 This function decrypts data. Note that the length of the returned string can in fact be longer than the unencrypted string, due to the padding of the data. </description>
<parameters>td - An encryption descriptor returned by mcrypt_module_open() 
data - Encrypted data. </parameters>
<output></output>
<errors></errors>
<example><?php
    /* Data */
    $key = 'this is a very long key, even too long for the cipher';
    $plain_text = 'very important data';
    /* Open module, and create IV */
    $td = mcrypt_module_open('des', '', 'ecb', '');
    $key = substr($key, 0, mcrypt_enc_get_key_size($td));
    $iv_size = mcrypt_enc_get_iv_size($td);
    $iv = mcrypt_create_iv($iv_size, MCRYPT_RAND);
    /* Initialize encryption handle */
    if (mcrypt_generic_init($td, $key, $iv) != -1) {
        /* Encrypt data */
        $c_t = mcrypt_generic($td, $plain_text);
        mcrypt_generic_deinit($td);
        /* Reinitialize buffers for decryption */
        mcrypt_generic_init($td, $key, $iv);
        $p_t = mdecrypt_generic($td, $c_t);
        /* Clean up */
        mcrypt_generic_deinit($td);
        mcrypt_module_close($td);
    }
    if (strncmp($p_t, $plain_text, strlen($plain_text)) == 0) {
        echo "ok\n";
    } else {
        echo "error\n";
    }
?></example>
<example_result></example_result>
</object>

<object id=2201> 
<name>pg_fetch_all</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Выбирает все данные из результата запроса и помещает их в массив</short-description>
<description>array pg_fetch_all ( resource $result ) 
 pg_fetch_all() возвращает массив содержащий все записи из результата запроса. 
 Замечание: Эта функция устанавливает NULL-поляв значение NULL PHP. </description>
<parameters>result - Ресурс результата запроса PostgreSQL, возвращаемый функциями pg_query(), pg_query_params() или pg_execute() (в числе прочих). </parameters>
<output>Многомерный массив данных результата запроса. Каждая строка результата представляется массивом значений полей, индексированным именами этих полей. </output>
<errors></errors>
<example><?php 
$conn = pg_pconnect("dbname=publisher");
if (!$conn) {
    echo "Произошла ошибка.\n";
    exit;
}
$result = pg_query($conn, "SELECT * FROM authors");
if (!$result) {
    echo "Произошла ошибка.\n";
    exit;
}
$arr = pg_fetch_all($result);
print_r($arr);
?></example>
<example_result>
 
Array
(
    [0] => Array
        (
            [id] => 1
            [name] => Fred
        )

    [1] => Array
        (
            [id] => 2
            [name] => Bob
        )

)
</example_result>
</object>

<object id=2202> 
<name>ibase_name_result</name>
<versions>(PHP 5)</versions>
<short-description>Assigns a name to a result set</short-description>
<description>bool ibase_name_result ( resource $result , string $name ) 
 This function assigns a name to a result set. This name can be used later in UPDATE|DELETE ... WHERE CURRENT OF name statements. </description>
<parameters>result - An InterBase result set. 
name - The name to be assigned. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$result = ibase_query("SELECT field1,field2 FROM table FOR UPDATE");
ibase_name_result($result, "my_cursor");
$updateqry = ibase_prepare("UPDATE table SET field2 = ? WHERE CURRENT OF my_cursor");
for ($i = 0; ibase_fetch_row($result); ++$i) {
    ibase_execute($updateqry, $i);
}?></example>
<example_result></example_result>
</object>

<object id=2203> 
<name>mysqli_bind_param</name>
<versions>(PHP 5)</versions>
<short-description>Синоним функции mysqli_stmt_bind_param()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2204> 
<name>pcntl_wait</name>
<versions>(PHP 5)</versions>
<short-description>Waits on or returns the status of a forked child</short-description>
<description>int pcntl_wait ( int &$status [, int $options = 0 ] ) 
 The wait function suspends execution of the current process until a child has exited, or until a signal is delivered whose action is to terminate the current process or to call a signal handling function. If a child has already exited by the time of the call (a so-called "zombie" process), the function returns immediately. Any system resources used by the child are freed. Please see your system&#039;s wait(2) man page for specific details as to how wait works on your system. 
 Замечание: 
 This function is equivalent to calling pcntl_waitpid() with a -1 pid and no options. </description>
<parameters>status - pcntl_wait() will store status information in the status parameter which can be evaluated using the following functions: pcntl_wifexited(), pcntl_wifstopped(), pcntl_wifsignaled(), pcntl_wexitstatus(), pcntl_wtermsig() and pcntl_wstopsig(). 
options - If wait3 is available on your system (mostly BSD-style systems), you can provide the optional options parameter. If this parameter is not provided, wait will be used for the system call. If wait3 is not available, providing a value for options will have no effect. The value of options is the value of zero or more of the following two constants OR&#039;ed together: Possible values for options WNOHANG Return immediately if no child has exited. WUNTRACED Return for children which are stopped, and whose status has not been reported. </parameters>
<output>pcntl_wait() returns the process ID of the child which exited, -1 on error or zero if WNOHANG was provided as an option (on wait3-available systems) and no child was available. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2205> 
<name>printf</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выводит отформатированную строку</short-description>
<description>int printf ( string $format [, mixed $args [, mixed $... ]] ) 
 Выводит строку, отформатированную в соответствии с аргументом format. </description>
<parameters>format - Описание параметра format смотрите в описании функции sprintf(). 
args - 
... - </parameters>
<output>Возвращает длину выведенной строки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2206> 
<name>gmp_testbit</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Проверка, установлен ли бит в 1</short-description>
<description>bool gmp_testbit ( resource $a , int $index ) 
 Проверяет, установлен ли заданный бит в 1. </description>
<parameters>a - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.
index - Проверяемый бит </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors>E_WARNING возникает, когда значение index отрицательно. </errors>
<example><?php
$n = gmp_init("1000000");
var_dump(gmp_testbit($n, 1));
gmp_setbit($n, 1);
var_dump(gmp_testbit($n, 1));
?></example>
<example_result>
 
bool(false)
bool(true)
</example_result>
</object>

<object id=2207> 
<name>pspell_suggest</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Предлагает варианты исправления слова</short-description>
<description>array pspell_suggest ( int $dictionary_link , string $word ) 
 pspell_suggest() возвращает массив возможных вариантов исправления заданного слова. </description>
<parameters>dictionary_link - 
word - Проверяемое слово. </parameters>
<output>Возвращает массив возможных вариантов исправления. </output>
<errors></errors>
<example><?php
$pspell_link = pspell_new("en");
if (!pspell_check($pspell_link, "testt")) {
    $suggestions = pspell_suggest($pspell_link, "testt");
    foreach ($suggestions as $suggestion) {
        echo "Возможные вариант исправления: $suggestion<br />";
    }
}?></example>
<example_result></example_result>
</object>

<object id=2208> 
<name>array_intersect_assoc</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Вычисляет схождение массивов с дополнительной проверкой индекса</short-description>
<description>array array_intersect_assoc ( array $array1 , array $array2 [, array $ ... ] ) 
 Функция array_intersect_assoc() возвращает массив, содержащий все значения массива array1, которые содержатся во всех указанных аргументах. Обратите внимание, что при сравнении используются ключи, в отличии от функции array_intersect(). </description>
<parameters>array1 - Основной проверяемый массив. 
array2 - Массив, с которым идет сравнение 
array - Переменный список сравниваемых массивов </parameters>
<output>Возвращает ассоциативный массив, содержащий все элементы массива array1, которые существуют во всех переданных аргументах. </output>
<errors></errors>
<example><?php
$array1 = array("a" => "green", "b" => "brown", "c" => "blue", "red");
$array2 = array("a" => "green", "b" => "yellow", "blue", "red");
$result_array = array_intersect_assoc($array1, $array2);
print_r($result_array);
?></example>
<example_result>
 
Array
(
    [a] => green
)
</example_result>
</object>

<object id=2209> 
<name>imap_listscan</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Returns the list of mailboxes that matches the given text</short-description>
<description>array imap_listscan ( resource $imap_stream , string $ref , string $pattern , string $content ) 
 Returns an array containing the names of the mailboxes that have content in the text of the mailbox. 
 This function is similar to imap_listmailbox(), but it will additionally check for the presence of the string content inside the mailbox data. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
ref - ref should normally be just the server specification as described in imap_open() 
pattern - Определяет начало поиска в иерархии почтовых ящиков.
content - The searched string </parameters>
<output>Returns an array containing the names of the mailboxes that have content in the text of the mailbox. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2210> 
<name>ocisavelobfile</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним OCI-Lob::import()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2211> 
<name>stream_filter_append</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Прикрепляет фильтр к потоку</short-description>
<description>resource stream_filter_append ( resource $stream , string $filtername [, int $read_write [, mixed $params ]] ) 
 Добавляет filtername в список фильтров, прикреплённых к stream. </description>
<parameters>stream - Целевой поток. 
filtername - Название фильтра. 
read_write - По умолчанию stream_filter_append() будет прикреплять фильтр к цепочке фильтров чтения, если файл был открыт для чтения (т. е. режим файла: r, и/или +). Фильтр также будет прикреплён к цепочке фильтров записи, если файл был открыт для записи (т. е. режим файла: w, a, и/или +). Константы STREAM_FILTER_READ, STREAM_FILTER_WRITE, и/или STREAM_FILTER_ALL также могут быть переданы в параметре read_write, чтобы переопределить это поведение. 
params - Этот фильтр будет добавлен с указанными params к концу списка и, таким образом, будет вызван последним в списке потоковых операций. Чтобы добавить фильтр в начало списка, используйте stream_filter_prepend(). </parameters>
<output>Возвращает ресурс, который может быть использован для того, чтобы обратиться к этому экземпляру фильтра во время вызова stream_filter_remove(). </output>
<errors></errors>
<example><?php
/* Открываем тестовый файл для чтения и записи */
$fp = fopen('test.txt', 'w+');
/* Прикрепляем фильтр ROT13 к
 * цепочке фильтров записи, но не к
 * цепочке фильтров чтения */
stream_filter_append($fp, "string.rot13", STREAM_FILTER_WRITE);
/* Запишем простую строку в файл
 * она будет преобразована при помощи ROT13
 * на выходе */
fwrite($fp, "Это тест\n");
/* Назад к началу файла */
rewind($fp);
/* Прочитаем содержимое файла.
 * Если фильтр также был бы прикреплён к
 * цепочке фильтров чтения, мы бы увидели
 * преобразованный при помощи ROT13 текст в исходном состоянии */
fpassthru($fp);
fclose($fp);
/* Ожидаемый вывод
   ---------------
Guvf vf n grfg
 */
?></example>
<example_result></example_result>
</object>

<object id=2212> 
<name>ibase_rollback_ret</name>
<versions>(PHP 5)</versions>
<short-description>Roll back a transaction without closing it</short-description>
<description>bool ibase_rollback_ret ([ resource $link_or_trans_identifier = NULL ] ) 
 Rolls back a transaction without closing it. </description>
<parameters>link_or_trans_identifier - If called without an argument, this function rolls back the default transaction of the default link. If the argument is a connection identifier, the default transaction of the corresponding connection will be rolled back. If the argument is a transaction identifier, the corresponding transaction will be rolled back. The transaction context will be retained, so statements executed from within this transaction will not be invalidated. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2213> 
<name>mssql_fetch_array</name>
<versions>(PHP 4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Fetch a result row as an associative array, a numeric array, or both</short-description>
<description>array mssql_fetch_array ( resource $result [, int $result_type = MSSQL_BOTH ] ) 
 mssql_fetch_array() is an extended version of mssql_fetch_row(). In addition to storing the data in the numeric indices of the result array, it also stores the data in associative indices, using the field names as keys. 
 An important thing to note is that using mssql_fetch_array() is NOT significantly slower than using mssql_fetch_row(), while it provides a significant added value. </description>
<parameters>result - The result resource that is being evaluated. This result comes from a call to mssql_query(). 
result_type - The type of array that is to be fetched. It&#039;s a constant and can take the following values: MSSQL_ASSOC, MSSQL_NUM, and MSSQL_BOTH. </parameters>
<output>Returns an array that corresponds to the fetched row, or FALSE if there are no more rows. </output>
<errors></errors>
<example><?php
// Send a select query to MSSQL
$query = mssql_query('SELECT [username], [name] FROM [php].[dbo].[userlist]');
// Check if there were any records
if (!mssql_num_rows($query)) {
    echo 'No records found';
} else {
    // The following is equal to the code below:
    //
    // while ($row = mssql_fetch_row($query)) {
    while ($row = mssql_fetch_array($query, MSSQL_NUM)) {
        // ...
    }
}
// Free the query result
mssql_free_result($query);
?></example>
<example_result></example_result>
</object>

<object id=2214> 
<name>pg_escape_string</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Экранирование спецсимволов в строке запроса </short-description>
<description>string pg_escape_string ([ resource $connection ], string $data ) 
 Функция pg_escape_string() экранирует спецсимволы в строке запроса для базы данных. Она возвращает экранированную строку в формате PostgreSQL. Функция pg_escape_string() является наиболее предпочтительным способом экранирования SQL параметров для PostgreSQL, в то время как addslashes() не должна использоваться с PostgreSQL. Если тип столбца bytea, то должна использоваться функция pg_escape_bytea() вместо pg_escape_string. Функция pg_escape_identifier() должна использоваться для экранирования идентификаторов (например, имена таблиц или полей). 
 Замечание: 
 Функция поддерживается PostgreSQL версии 7.2 и выше. </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). 
data - Исходная экранируемая строка. </parameters>
<output>Возвращает строку, в которой экранированы все необходимые символы. </output>
<errors></errors>
<example><?php 
  // Подключение к базе данных 
  $dbconn = pg_connect('dbname=foo');
  
  // Чтение текстового файла (содержащего апострофы и обратные слеши)
  $data = file_get_contents('letter.txt');
  
  // Экранирование спецсимволов в строке 
  $escaped = pg_escape_string($data);
  
  // Вставка в таблицу базы данных 
  pg_query("INSERT INTO correspondence (name, data) VALUES ('My letter', '{$escaped}')");
?></example>
<example_result></example_result>
</object>

<object id=2215> 
<name>array_intersect_key</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Вычислить пересечение массивов, сравнивая ключи</short-description>
<description>array array_intersect_key ( array $array1 , array $array2 [, array $ ... ] ) 
 array_intersect_key() возвращает массив, содержащий все элементы array1, имеющие ключи, содержащиеся во всех последующих параметрах.. </description>
<parameters>array1 - Основной проверяемый массив. 
array2 - Массив, с которым идет сравнение. 
array - Переменный список сравниваемых массивов </parameters>
<output>Возвращает ассоциативный массив, содержащий все элементы array1, имеющие ключи, содержащиеся во всех остальных параметрах. arguments. </output>
<errors></errors>
<example><?php
$array1 = array('blue'  => 1, 'red'  => 2, 'green'  => 3, 'purple' => 4);
$array2 = array('green' => 5, 'blue' => 6, 'yellow' => 7, 'cyan'   => 8);
var_dump(array_intersect_key($array1, $array2));
?></example>
<example_result>
 
array(2) {
  ["blue"]=>
  int(1)
  ["green"]=>
  int(3)
}
</example_result>
</object>

<object id=2216> 
<name>ocicolumnprecision</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_field_precision()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2217> 
<name>sybase_min_server_severity</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Sets minimum server severity</short-description>
<description>void sybase_min_server_severity ( int $severity ) 
 sybase_min_server_severity() sets the minimum server severity level. </description>
<parameters>severity - </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2218> 
<name>dns_get_record</name>
<versions>(PHP 5)</versions>
<short-description>Fetch DNS Resource Records associated with a hostname</short-description>
<description>array dns_get_record ( string $hostname [, int $type = DNS_ANY [, array &$authns [, array &$addtl ]]] ) 
 Fetch DNS Resource Records associated with the given hostname. </description>
<parameters>hostname - hostname should be a valid DNS hostname such as "www.example.com". Reverse lookups can be generated using in-addr.arpa notation, but gethostbyaddr() is more suitable for the majority of reverse lookups. 
type - By default, dns_get_record() will search for any resource records associated with hostname. To limit the query, specify the optional type parameter. May be any one of the following: DNS_A, DNS_CNAME, DNS_HINFO, DNS_MX, DNS_NS, DNS_PTR, DNS_SOA, DNS_TXT, DNS_AAAA, DNS_SRV, DNS_NAPTR, DNS_A6, DNS_ALL or DNS_ANY. 
authns - Passed by reference and, if given, will be populated with Resource Records for the Authoritative Name Servers. 
addtl - Passed by reference and, if given, will be populated with any Additional Records. </parameters>
<output>This function returns an array of associative arrays, или FALSE в случае возникновения ошибки. Each associative array contains at minimum the following keys: Basic DNS attributes Attribute Meaning host The record in the DNS namespace to which the rest of the associated data refers. class dns_get_record() only returns Internet class records and as such this parameter will always return IN. type String containing the record type. Additional attributes will also be contained in the resulting array dependant on the value of type. See table below. ttl "Time To Live" remaining for this record. This will not equal the record&#039;s original ttl, but will rather equal the original ttl minus whatever length of time has passed since the authoritative name server was queried. </output>
<errors></errors>
<example><?php
$result = dns_get_record("php.net");
print_r($result);
?></example>
<example_result>
 
Array
(
    [0] => Array
        (
            [host] => php.net
            [type] => MX
            [pri] => 5
            [target] => pair2.php.net
            [class] => IN
            [ttl] => 6765
        )

    [1] => Array
        (
            [host] => php.net
            [type] => A
            [ip] => 64.246.30.37
            [class] => IN
            [ttl] => 8125
        )

)
</example_result>
</object>

<object id=2219> 
<name>ncurses_longname</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Returns terminals description</short-description>
<description>string ncurses_longname ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Returns the description, as a string truncated to 128 characters. On errors, returns NULL. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2220> 
<name>stream_resolve_include_path</name>
<versions>(PHP 5 >= 5.3.2)</versions>
<short-description>Составляет полное имя файла, используя пути включения </short-description>
<description>string stream_resolve_include_path ( string $filename ) 
 Составляет полное имя файла из параметра filename, используя пути включения в соответствии с теми же правилами, что и функции fopen()/include(). </description>
<parameters>filename - Имя файла, которое необходимо преобразовать. </parameters>
<output>Возвращает строку string, содержащую полученное абсолютное имя файла, или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example>
 </example>
<example_result>
 
string(22) "/var/www/html/test.php"
</example_result>
</object>

<object id=2221> 
<name>mcrypt_generic</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>This function encrypts data</short-description>
<description>string mcrypt_generic ( resource $td , string $data ) 
 This function encrypts data. The data is padded with "\0" to make sure the length of the data is n * blocksize. This function returns the encrypted data. Note that the length of the returned string can in fact be longer than the input, due to the padding of the data. 
 If you want to store the encrypted data in a database make sure to store the entire string as returned by mcrypt_generic, or the string will not entirely decrypt properly. If your original string is 10 characters long and the block size is 8 (use mcrypt_enc_get_block_size() to determine the blocksize), you would need at least 16 characters in your database field. Note the string returned by mdecrypt_generic() will be 16 characters as well...use rtrim($str, "\0") to remove the padding. 
 If you are for example storing the data in a MySQL database remember that varchar fields automatically have trailing spaces removed during insertion. As encrypted data can end in a space (ASCII 32), the data will be damaged by this removal. Store data in a tinyblob/tinytext (or larger) field instead. </description>
<parameters>td - The encryption descriptor. 
data - The data to encrypt. </parameters>
<output>Returns the encrypted data. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2222> 
<name>dbplus_ropen</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Open relation file local</short-description>
<description>resource dbplus_ropen ( string $name ) 
 dbplus_ropen() will open the relation file locally for quick access without any client/server overhead. Access is read only and only dbplus_curr() and dbplus_next() may be applied to the returned relation. </description>
<parameters>name - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2223> 
<name>mcrypt_enc_is_block_algorithm</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Checks whether the algorithm of the opened mode is a block algorithm</short-description>
<description>bool mcrypt_enc_is_block_algorithm ( resource $td ) 
 Tells whether the algorithm of the opened mode is a block algorithm. </description>
<parameters>td - The encryption descriptor. </parameters>
<output>Returns TRUE if the algorithm is a block algorithm or FALSE if it is a stream one. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2224> 
<name>ming_setcubicthreshold</name>
<versions>(PHP 4 >= 4.0.5, PHP 5, PECL ming SVN)</versions>
<short-description>Set cubic threshold </short-description>
<description>void ming_setcubicthreshold ( int $threshold ) 
 Sets the threshold error for drawing cubic beziers. </description>
<parameters>threshold - The Threshold. Lower is more accurate, hence larger file size. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2225> 
<name>ibase_affected_rows</name>
<versions>(PHP 5)</versions>
<short-description>Return the number of rows that were affected by the previous query</short-description>
<description>int ibase_affected_rows ([ resource $link_identifier ] ) 
 This function returns the number of rows that were affected by the previous query (INSERT, UPDATE or DELETE) that was executed from within the specified transaction context. </description>
<parameters>link_identifier - A transaction context. If link_identifier is a connection resource, its default transaction is used. </parameters>
<output>Returns the number of rows as an integer. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2226> 
<name>substr_compare</name>
<versions>(PHP 5)</versions>
<short-description>Бинарно-безопасное сравнение 2 строк со смещением, с учетом или без учета регистра</short-description>
<description>int substr_compare ( string $main_str , string $str , int $offset [, int $length [, bool $case_insensitivity = false ]] ) 
 substr_compare() сравнивает строку main_str (начиная с позиции offset) со строкой str. В сравнении участвуют максимум length символов. </description>
<parameters>main_str - Основная сравниваемая строка. 
str - Следующая сравниваемая строка. 
offset - Стартовая позиция сравнения. Если отрицательна, то обозначает смещение с конца строки. 
length - Длина сравнения. По умолчанию используется максимальная из длин str и main_str минус offset. 
case_insensitivity - Если case_sensitivity имеет значение TRUE, сравнение выполняется с учетом регистра. </parameters>
<output>Возвращает отрицательное число, если строка main_str (начиная с символа offset) меньше, чем str; положительное число, если она больше str; 0 если строки равны. Если offset больше или равен длине main_str или length передан и меньше 1, substr_compare() выводит предупреждение и возвращает FALSE. </output>
<errors></errors>
<example><?php
echo substr_compare("abcde", "bc", 1, 2); // 0
echo substr_compare("abcde", "de", -2, 2); // 0
echo substr_compare("abcde", "bcg", 1, 2); // 0
echo substr_compare("abcde", "BC", 1, 2, true); // 0
echo substr_compare("abcde", "bc", 1, 3); // 1
echo substr_compare("abcde", "cd", 1, 2); // -1
echo substr_compare("abcde", "abc", 5, 1); // предупреждение
?></example>
<example_result></example_result>
</object>

<object id=2227> 
<name>oci_new_connect</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Устанавливает новое соединение с сервером Oracle</short-description>
<description>resource oci_new_connect ( string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]] ) 
 Создает новое соединение с сервером Oracle и выполняет вход. 
 В отличие от oci_connect() и oci_pconnect(), функция oci_new_connect() не кэширует содеинения и при каждом вызове устанавливает новое соединение. Это полезно если приложению необходима транзакционная изоляция двух наборов запросов. </description>
<parameters>username - Имя пользователя Oracle. 
password - Пароль пользователя username. 
connection_string - Содержитэкземпляр Oracle для подключения. Это может быть&raquo; Easy Connect string, или Connect Name из файлаtnsnames.ora, или имя локального экземпляра Oracle.
character_set - Определяет кодировку, используемую клиентскимибиблиотеками Oracle. Данная кодировка не обязательно должна совпадать с кодировкой, используемой в самой базе данных.Если она не совпадает, Oracle сделает все возможное для конвертирования данных из- и в данную кодировку.В зависимости от используемых кодировок это может не всегда давать приемлемые результаты. Преобразование такжесоздает некоторые дополнительные временные затраты.
session_mode - Этот параметрдоступен начиная с версии PHP 5 (PECL OCI8 1.1) и принимает следующие значения:OCI_DEFAULT,OCI_SYSOPER и OCI_SYSDBA.Если были указаны OCI_SYSOPER илиOCI_SYSDBA, данная функция попытается установить привилегированное соединение, используя внешниеданные авторизации.По умолчанию привилегированные соединения отключены. Чтобы их включить, необходимо установитьoci8.privileged_connectв On.</parameters>
<output>Возвращает идентификатор соединения или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
echo "<html><pre>";
$db = "";
$c1 = oci_connect("scott", "tiger", $db);
$c2 = oci_new_connect("scott", "tiger", $db);
function create_table($conn)
{  $stmt = oci_parse($conn, "create table scott.hallo (test
varchar2(64))");
  oci_execute($stmt);
  echo $conn . " created table\n\n";
}
function drop_table($conn)
{  $stmt = oci_parse($conn, "drop table scott.hallo");
  oci_execute($stmt);
  echo $conn . " dropped table\n\n";
}
function insert_data($conn)
{  $stmt = oci_parse($conn, "insert into scott.hallo
            values('$conn' || ' ' || to_char(sysdate,'DD-MON-YY HH24:MI:SS'))");
  oci_execute($stmt, OCI_DEFAULT);
  echo $conn . " inserted hallo\n\n";
}
function delete_data($conn)
{  $stmt = oci_parse($conn, "delete from scott.hallo");
  oci_execute($stmt, OCI_DEFAULT);
  echo $conn . " deleted hallo\n\n";
}
function commit($conn)
{  oci_commit($conn);
  echo $conn . " committed\n\n";
}
function rollback($conn)
{  oci_rollback($conn);
  echo $conn . " rollback\n\n";
}
function select_data($conn)
{  $stmt = oci_parse($conn, "select * from scott.hallo");
  oci_execute($stmt, OCI_DEFAULT);
  echo $conn . "----selecting\n\n";
  while (oci_fetch($stmt)) {
    echo $conn . " <" . oci_result($stmt, "TEST") . ">\n\n";
  }
  echo $conn . "----done\n\n";
}
create_table($c1);
insert_data($c1);
select_data($c1);
select_data($c2);
rollback($c1);
select_data($c1);
select_data($c2);
insert_data($c2);
commit($c2);
select_data($c1);
delete_data($c1);
select_data($c1);
select_data($c2);
commit($c1);
select_data($c1);
select_data($c2);
drop_table($c1);
echo "</pre></html>";
?></example>
<example_result></example_result>
</object>

<object id=2228> 
<name>swf_labelframe</name>
<versions>(PHP 4)</versions>
<short-description>Label the current frame</short-description>
<description>void swf_labelframe ( string $name ) 
 Labels the current frame with the given name. </description>
<parameters>name - The frame label. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2229> 
<name>PDF_add_weblink</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Add weblink for current page [deprecated]</short-description>
<description>bool PDF_add_weblink ( resource $pdfdoc , float $lowerleftx , float $lowerlefty , float $upperrightx , float $upperrighty , string $url ) 
 Adds a weblink annotation to a target url on the Web. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. 
 This function is deprecated since PDFlib version 6, use PDF_create_action() with type=URI and PDF_create_annotation() with type=Link instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2230> 
<name>pg_connect</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Открывает соединение с базой данных PostgreSQL</short-description>
<description>resource pg_connect ( string $connection_string [, int $connect_type ] ) 
 pg_connect() открывает соединение с базой данных PostgreSQL, определенное строкой connection_string. 
 При повторном вызове функции pg_connect() с теми же значениями параметров в connection_string функция вернет существующее подключение. Чтобы принудительно создать новое соединение, необходимо передать строку подключения функции PGSQL_CONNECT_FORCE_NEW в качестве параметра connect_type. 
 Прежний синтаксис с множеством параметров $conn = pg_connect("host", "port", "options", "tty", "dbname") считается устаревшим. </description>
<parameters>connection_string - Строка connection_string может быть пустой строкой, или содержать несколько параметров разделенных пробелами. Каждый параметр указывается как keyword = value. Пробелы вокруг знака равно необязательны. Пустые строки в качестве значения или значения, содержащие пробелы отделяются одинарными кавычками, как например, keyword = &#039;a value&#039;. Для задания одинарных кавычек и обратных слешей в качестве значений их необходимо экранировать обратным слешем, то есть \&#039; и \\. 
connect_type - Если в функцию передана константа PGSQL_CONNECT_FORCE_NEW, будет создаваться новое подключение, даже если connection_string идентична строке существующего подключения. </parameters>
<output>Ресурс соединения с базой данных PostgreSQL либо FALSE, если подключиться не удалось. </output>
<errors></errors>
<example><?php
$dbconn = pg_connect("dbname=mary");
//подключиться к базе "mary"
$dbconn2 = pg_connect("host=localhost port=5432 dbname=mary");
//подключиться к базе "mary" на хосте "localhost", порт "5432"
$dbconn3 = pg_connect("host=sheep port=5432 dbname=mary user=lamb password=foo");
//подключиться к базе "mary" на хосте "sheep", используя имя пользователя и пароль
$conn_string = "host=sheep port=5432 dbname=test user=lamb password=bar";
$dbconn4 = pg_connect($conn_string);
//подключиться к базе "test" на хосте "sheep", используя имя пользователя и пароль
$dbconn5 = pg_connect("host=localhost options='--client_encoding=UTF8'");
//подключиться к базе на хосте "localhost" и передать параметр командной строки, задающий кодировку UTF-8
?></example>
<example_result></example_result>
</object>

<object id=2231> 
<name>fam_monitor_collection</name>
<versions>(PHP 5 <= 5.0.5)</versions>
<short-description>Monitor a collection of files in a directory for changes</short-description>
<description>resource fam_monitor_collection ( resource $fam , string $dirname , int $depth , string $mask ) 
 Requests monitoring for a collection of files within a directory. 
 A FAM event will be generated whenever the status of the files change. The possible event codes are described in detail in the constants part of this section. </description>
<parameters>fam - A resource representing a connection to the FAM service returned by fam_open() 
dirname - Directory path to the monitored files 
depth - The maximum search depth starting from this directory 
mask - A shell pattern mask restricting the file names to look for </parameters>
<output>Returns a monitoring resource or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2232> 
<name>stream_get_line</name>
<versions>(PHP 5)</versions>
<short-description>Получает строку из потокового ресурса до указанного разделителя</short-description>
<description>string stream_get_line ( resource $handle , int $length [, string $ending ] ) 
 Получает строку из указанного дескриптора. 
 Чтение заканчивается, когда прочитано length количество байт, когда строка, указанная в параметре ending найдена (она не включается в возвращаемое значение), или достигнут EOF (смотря что произойдет раньше). 
 Функция очень похожа на функцию fgets(), кроме того, что она позволяет использовать разделители строк, отличающиеся от стандартных \n, \r, и \r\n, и не возвращает сам разделитель. </description>
<parameters>handle - Допустимый дескриптор файла. 
length - Количество байт для чтения из дескриптора. 
ending - Необязательный разделитель строки. </parameters>
<output>Возвращает строку длиной до length байт, прочитанную из файла указанного параметром handle. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2233> 
<name>ibase_blob_close</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Close blob</short-description>
<description>mixed ibase_blob_close ( resource $blob_handle ) 
 This function closes a BLOB that has either been opened for reading by ibase_blob_open() or has been opened for writing by ibase_blob_create(). </description>
<parameters>blob_handle - A BLOB handle opened with ibase_blob_create() or ibase_blob_open(). </parameters>
<output>If the BLOB was being read, this function returns TRUE on success, if the BLOB was being written to, this function returns a string containing the BLOB id that has been assigned to it by the database. On failure, this function returns FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2234> 
<name>imagerectangle</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Draw a rectangle</short-description>
<description>bool imagerectangle ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color ) 
 imagerectangle() creates a rectangle starting at the specified coordinates. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
x1 - Upper left x coordinate. 
y1 - Upper left y coordinate 0, 0 is the top left corner of the image. 
x2 - Bottom right x coordinate. 
y2 - Bottom right y coordinate. 
color - A color identifier created with imagecolorallocate(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Create a 200 x 200 image
$canvas = imagecreatetruecolor(200, 200);
// Allocate colors
$pink = imagecolorallocate($canvas, 255, 105, 180);
$white = imagecolorallocate($canvas, 255, 255, 255);
$green = imagecolorallocate($canvas, 132, 135, 28);
// Draw three rectangles each with its own color
imagerectangle($canvas, 50, 50, 150, 150, $pink);
imagerectangle($canvas, 45, 60, 120, 100, $white);
imagerectangle($canvas, 100, 120, 75, 160, $green);
// Output and free from memory
header('Content-Type: image/jpeg');
imagejpeg($canvas);
imagedestroy($canvas);
?></example>
<example_result></example_result>
</object>

<object id=2235> 
<name>ftp_nb_fget</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Скачивает файл с FTP сервера в асинхронном режиме и сохраняет его в предварительно открытом файле</short-description>
<description>int ftp_nb_fget ( resource $ftp_stream , resource $handle , string $remote_file , int $mode [, int $resumepos = 0 ] ) 
 ftp_nb_fget() скачивает удалённый файл с FTP-сервера. 
 Разница между этой функцией и ftp_fget() заключается в том, что эта функция получает файл асинхронно, так что ваша программа может совершать другие операции, пока файл скачивается. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером. 
handle - Открытый файловый дескриптор для сохранения данных. 
remote_file - Путь к удалённому файлу. 
mode - Режим передачи. Должен быть либо FTP_ASCII, либо FTP_BINARY. 
resumepos - Позиция начала загрузки в удаленном файле.</parameters>
<output>Возвращает FTP_FAILED, FTP_FINISHED или FTP_MOREDATA. </output>
<errors></errors>
<example><?php
// открыть файл для записи
$file = 'index.php';
$fp = fopen($file, 'w');
$conn_id = ftp_connect($ftp_server);
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);
// Начало скачивания
$ret = ftp_nb_fget($conn_id, $fp, $file, FTP_BINARY);
while ($ret == FTP_MOREDATA) {
   // производим какие-то действия ...
   echo ".";
   // продолжение скачивания ...
   $ret = ftp_nb_continue($conn_id);
}if ($ret != FTP_FINISHED) {
   echo "При скачивании файла произошла ошибка...";
   exit(1);
}
// закрытие файла
fclose($fp);
?></example>
<example_result></example_result>
</object>

<object id=2236> 
<name>ncurses_timeout</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Set timeout for special key sequences </short-description>
<description>void ncurses_timeout ( int $millisec ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>millisec - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2237> 
<name>imagefilter</name>
<versions>(PHP 5)</versions>
<short-description>Applies a filter to an image</short-description>
<description>bool imagefilter ( resource $image , int $filtertype [, int $arg1 [, int $arg2 [, int $arg3 [, int $arg4 ]]]] ) 
 imagefilter() applies the given filter filtertype on the image. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
filtertype - filtertype can be one of the following: IMG_FILTER_NEGATE: Reverses all colors of the image. IMG_FILTER_GRAYSCALE: Converts the image into grayscale. IMG_FILTER_BRIGHTNESS: Changes the brightness of the image. Use arg1 to set the level of brightness. IMG_FILTER_CONTRAST: Changes the contrast of the image. Use arg1 to set the level of contrast. IMG_FILTER_COLORIZE: Like IMG_FILTER_GRAYSCALE, except you can specify the color. Use arg1, arg2 and arg3 in the form of red, blue, green and arg4 for the alpha channel. The range for each color is 0 to 255. IMG_FILTER_EDGEDETECT: Uses edge detection to highlight the edges in the image. IMG_FILTER_EMBOSS: Embosses the image. IMG_FILTER_GAUSSIAN_BLUR: Blurs the image using the Gaussian method. IMG_FILTER_SELECTIVE_BLUR: Blurs the image. IMG_FILTER_MEAN_REMOVAL: Uses mean removal to achieve a "sketchy" effect. IMG_FILTER_SMOOTH: Makes the image smoother. Use arg1 to set the level of smoothness. IMG_FILTER_PIXELATE: Applies pixelation effect to the image, use arg1 to set the block size and arg2 to set the pixelation effect mode. 
arg1 - IMG_FILTER_BRIGHTNESS: Brightness level. IMG_FILTER_CONTRAST: Contrast level. IMG_FILTER_COLORIZE: Значение красного компонента цвета. IMG_FILTER_SMOOTH: Smoothness level. IMG_FILTER_PIXELATE: Block size in pixels. 
arg2 - IMG_FILTER_COLORIZE: Значение зеленого компонента цвета. IMG_FILTER_PIXELATE: Whether to use advanced pixelation effect or not (defaults to FALSE). 
arg3 - IMG_FILTER_COLORIZE: Значение синего компонента цвета. 
arg4 - IMG_FILTER_COLORIZE: Alpha channel, A value between 0 and 127. 0 indicates completely opaque while 127 indicates completely transparent. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$im = imagecreatefrompng('dave.png');
if($im && imagefilter($im, IMG_FILTER_GRAYSCALE))
{    echo 'Image converted to grayscale.';
    imagepng($im, 'dave.png');
}else
{    echo 'Conversion to grayscale failed.';
}
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=2238> 
<name>xpath_eval_expression</name>
<versions>(PHP 4)</versions>
<short-description>Вычисляет XPath Location Path в переданной строке </short-description>
<description>XPathObject XPathContext::xpath_eval_expression ( string $expression [, domnode $contextnode ] ) XPathObject xpath_eval_expression ( XPathContext $xpath_context , string $expression [, domnode $contextnode ] )</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result>
 
object(XPathObject)(2) {
   ["type"]=>
   int(1)
   ["nodeset"]=>
   array(1) {
     [0]=>
     object(domattribute)(5) {
       ["type"]=>
       int(2)
       ["name"]=>
       string(8) "language"
       ["value"]=>
       string(2) "en"
       [0]=>
       int(7)
       [1]=>
       int(138004256)
     }
  }
}
</example_result>
</object>

<object id=2239> 
<name>openssl_pkey_get_details</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Returns an array with the key details</short-description>
<description>array openssl_pkey_get_details ( resource $key ) 
 This function returns the key details (bits, key, type). </description>
<parameters>key - Resource holding the key. </parameters>
<output>Returns an array with the key details in success or FALSE in failure. Returned array has indexes bits (number of bits), key (string representation of the public key) and type (type of the key which is one of OPENSSL_KEYTYPE_RSA, OPENSSL_KEYTYPE_DSA, OPENSSL_KEYTYPE_DH, OPENSSL_KEYTYPE_EC or -1 meaning unknown). </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2240> 
<name>ldap_get_dn</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получить DN результирующей записи</short-description>
<description>string ldap_get_dn ( resource $link_identifier , resource $result_entry_identifier ) 
 Обнаружить DN записи в результате. </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
result_entry_identifier - </parameters>
<output>Возвращает DN записи результата и FALSE в случае ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2241> 
<name>cyrus_unbind</name>
<versions>(PHP 4 >= 4.1.0, PECL cyrus 1.0)</versions>
<short-description>Убрать привязки обратных вызовов для Cyrus IMAP соединения</short-description>
<description>bool cyrus_unbind ( resource $connection , string $trigger_name ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>connection - Дескриптор соединения. 
trigger_name - Имя триггера. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2242> 
<name>array_replace</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Замена элементов массива элементами других переданных массивов</short-description>
<description>array array_replace ( array &$array , array &$array1 [, array &$... ] ) 
 array_replace() замещает значения первого массива array соответствующими по ключам значениями из других переданных массивов. Если ключ из первого массива присутствует во втором массиве, его значение заменяется на значение из второго массива. Если ключ есть во втором массиве, но отсутствует в первом - он будет создан в первом массиве. Если ключ присутствует только в первом массиве, то сохранится как есть. Если для замены передано несколько массивов, они будут обработаны в порядке передачи и более поздние массивы будут перезаписывать значения из предыдущих. 
 array_replace() не рекурсивная: значения первого массива будут заменены вне зависимости от типа значений второго массива, даже если это будут вложенные массивы. </description>
<parameters>array - Массив, элементы которого требуется заменить. 
array1 - Массив, элементами которого будут заменяться элементы первого массива. 
... - Еще массивы, из которых будут браться элементы для замены. Значения следующего массива затирают значения предыдущего. </parameters>
<output>Возвращает массив (array) или NULL в случае ошибки. </output>
<errors></errors>
<example><?php
$base = array("orange", "banana", "apple", "raspberry");
$replacements = array(0 => "pineapple", 4 => "cherry");
$replacements2 = array(0 => "grape");
$basket = array_replace($base, $replacements, $replacements2);
print_r($basket);
?></example>
<example_result>
 
Array
(
    [0] => grape
    [1] => banana
    [2] => apple
    [3] => raspberry
    [4] => cherry
)
</example_result>
</object>

<object id=2243> 
<name>mcrypt_module_close</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Closes the mcrypt module</short-description>
<description>bool mcrypt_module_close ( resource $td ) 
 Closes the specified encryption handle. </description>
<parameters>td - The encryption descriptor. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2244> 
<name>com_propset</name>
<versions>(PHP 4)</versions>
<short-description>Псевдоним com_set()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2245> 
<name>mysql_stat</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Возвращает текущий статус сервера</short-description>
<description>string mysql_stat ([ resource $link_identifier ] ) 
 mysql_stat() возвращает текущий статус сервера. </description>
<parameters>link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Возвращает строку с данными аптайма, количества потоков, запросов, количеством открытых таблиц и таблиц с сброшенным внутренним кэшем (flush tables), а также количество запросов в секунду. Для получения полного списка других переменных вам необходимо будет использовать SQL-запрос SHOW STATUS. Если передан некорректный link_identifier, то будет возвращен NULL. </output>
<errors></errors>
<example><?php
$link   = mysql_connect('localhost', 'mysql_user', 'mysql_password');
$status = explode('  ', mysql_stat($link));
print_r($status);
?></example>
<example_result>
 
Array
(
    [0] => Uptime: 5380
    [1] => Threads: 2
    [2] => Questions: 1321299
    [3] => Slow queries: 0
    [4] => Opens: 26
    [5] => Flush tables: 1
    [6] => Open tables: 17
    [7] => Queries per second avg: 245.595
)
</example_result>
</object>

<object id=2246> 
<name>sqlite_fetch_all</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Выбирает все записи из результата запроса и возвращает многомерный массив</short-description>
<description>array sqlite_fetch_all ( resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]] ) 
 Объектно-ориентированный стиль (метод): array SQLiteResult::fetchAll ([ int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]] )</description>
<parameters>result - Ресурс результата SQLite. Этот параметр не требуется при использовании объектно-ориентированного метода. 
result_type - Необязательный параметрresult_type принимает константу, определяющую, как будетиндексирован возвращаемый массив.При использовании SQLITE_ASSOC будет возвращенассоциативный массив, а при использовании SQLITE_NUM- числовой. SQLITE_BOTH вернет массив как сассоциативными, так и с числовыми индексами.Значением по умолчанию для этой функции являетсяSQLITE_BOTH.
decode_binary - Когда параметрdecode_binary установлен в TRUE (по умолчанию),PHP будет декодировать бинарный код, примененный к данным, как если бы они были закодированы функциейsqlite_escape_string(). Обычно вам следует оставлятьэто значение по умолчанию, если только вы не работаете с базой данныхsqlite, которая была создана в ином приложении.</parameters>
<output>Возвращает массив с оставшимися рядами в результиующем наборе. Возвращает все ряды при вызове сразу после sqlite_query(). При вызове после sqlite_fetch_array(), функция вернет оставшиеся ряды. Если в результирующем наборе больше нет рядов, то будет возвращен пустой массив. </output>
<errors></errors>
<example><?php
$dbhandle = sqlite_open('sqlitedb');
$query = sqlite_query($dbhandle, 'SELECT name, email FROM users LIMIT 25');
$result = sqlite_fetch_all($query, SQLITE_ASSOC);
foreach ($result as $entry) {
    echo 'Имя: ' . $entry['name'] . '  E-mail: ' . $entry['email'];
}?></example>
<example_result></example_result>
</object>

<object id=2247> 
<name>ftp_put</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Загружает файл на FTP-сервер</short-description>
<description>bool ftp_put ( resource $ftp_stream , string $remote_file , string $local_file , int $mode [, int $startpos = 0 ] ) 
 ftp_put() загружает локальный файл на FTP-сервер. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером. 
remote_file - Путь к файлу на FTP-сервере. 
local_file - Путь к локальному файлу. 
mode - Задает режим передачи. Может принимать значения FTP_ASCII или FTP_BINARY. 
startpos - Задает позицию в удаленном файле, в которую начнется загрузка</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$file = 'somefile.txt';
$remote_file = 'readme.txt';
// установка соединения
$conn_id = ftp_connect($ftp_server);
// проверка имени пользователя и пароля
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);
// загрузка файла 
if (ftp_put($conn_id, $remote_file, $file, FTP_ASCII)) {
 echo "$file успешно загружен на сервер\n";
} else {
 echo "Не удалось загрузить $file на сервер\n";
}
// закрытие соединения
ftp_close($conn_id);
?></example>
<example_result></example_result>
</object>

<object id=2248> 
<name>gzdeflate</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Сжимает строку</short-description>
<description>string gzdeflate ( string $data [, int $level = -1 ] ) 
 Данная функция сжимает строку, используя формат данных DEFLATE. 
 Подробности об алгоритме сжатия DEFLATE см. "&raquo; Формат сжатия данных DEFLATE. Спецификация версии 1.3" (RFC 1951). </description>
<parameters>data - Данные для сжатия. 
level - Уровень сжатия. 0 - без сжатия, 9 - максимум. Если не указан, будет использоваться уровень сжатия по умолчанию библиотеки zlib. </parameters>
<output>Сжатая строка или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$compressed = gzdeflate('Сожми меня', 9);
echo $compressed;
?></example>
<example_result></example_result>
</object>

<object id=2249> 
<name></name>
<versions>(PHP 4, PHP5)</versions>
<short-description></short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2250> 
<name>m_setip</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Set the connection method to IP</short-description>
<description>int m_setip ( resource $conn , string $host , int $port ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
host - 
port - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2251> 
<name>msession_create</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)</versions>
<short-description>Create a session</short-description>
<description>bool msession_create ( string $session [, string $classname [, string $data ]] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2252> 
<name>swf_oncondition</name>
<versions>(PHP 4)</versions>
<short-description>Describe a transition used to trigger an action list</short-description>
<description>void swf_oncondition ( int $transition ) 
 The swf_oncondition() function describes a transition that will trigger an action list. </description>
<parameters>transition - There are several types of possible transitions, the following are for buttons defined as TYPE_MENUBUTTON: IdletoOverUp OverUptoIdle OverUptoOverDown OverDowntoOverUp IdletoOverDown OutDowntoIdle MenuEnter (IdletoOverUp|IdletoOverDown) MenuExit (OverUptoIdle|OverDowntoIdle) For TYPE_PUSHBUTTON there are the following options: IdletoOverUp OverUptoIdle OverUptoOverDown OverDowntoOverUp OverDowntoOutDown OutDowntoOverDown OutDowntoIdle ButtonEnter (IdletoOverUp|OutDowntoOverDown) ButtonExit (OverUptoIdle|OverDowntoOutDown) </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2253> 
<name>ifx_get_char</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Return the content of the char object</short-description>
<description>string ifx_get_char ( int $bid ) 
 Returns the content of the char object. </description>
<parameters>bid - The char object-id. </parameters>
<output>Returns the contents as a string, or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2254> 
<name>msession_lock</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)</versions>
<short-description>Lock a session</short-description>
<description>int msession_lock ( string $name ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2255> 
<name>date_create</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Псевдоним DateTime::__construct()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2256> 
<name>stream_get_contents</name>
<versions>(PHP 5)</versions>
<short-description>Читает оставшуюся часть потока в строку</short-description>
<description>string stream_get_contents ( resource $handle [, int $maxlength = -1 [, int $offset = -1 ]] ) 
 Похожа на функцию file_get_contents(), за исключением того, что stream_get_contents() работает с уже открытым ресурсом потока и возвращает оставшуюся часть содержимого в строку размером до maxlength байт и начиная с указанного смещения offset. </description>
<parameters>handle (resource) - Ресурс потока (например, полученный при помощи функции fopen()) 
maxlength (integer) - Максимальное количество байт для чтения. По умолчанию -1 (прочитать весь оставшийся буфер). 
offset (integer) - Перейти к указанному смещению перед чтением. Если это число отрицательное, то переход не произойдёт и чтение начнётся с текущей позиции. </parameters>
<output>Возвращает строку или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
if ($stream = fopen('http://www.example.com', 'r')) {
    // вывести всю страницу начиная со смещения 10
    echo stream_get_contents($stream, -1, 10);
    fclose($stream);
}
if ($stream = fopen('http://www.example.net', 'r')) {
    // вывести первые 5 байт
    echo stream_get_contents($stream, 5);
    fclose($stream);
}
?></example>
<example_result></example_result>
</object>

<object id=2257> 
<name>ftp_login</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выполняет вход на FTP сервер</short-description>
<description>bool ftp_login ( resource $ftp_stream , string $username , string $password ) 
 Выполняет вход на FTP сервер. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP сервером. 
username - Имя пользователя (USER). 
password - Пароль (PASS). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. Если войти на сервер не удалось, PHP выведет предупреждение. </output>
<errors></errors>
<example><?php
                     
$ftp_server = "ftp.example.com";
$ftp_user = "foo";
$ftp_pass = "bar";
// установить соединение или выйти
$conn_id = ftp_connect($ftp_server) or die("Не удалось установить соединение с $ftp_server"); 
// попытка входа
if (@ftp_login($conn_id, $ftp_user, $ftp_pass)) {
    echo "Произведен вход на $ftp_server под именем $ftp_user\n";
} else {
    echo "Не удалось войти под именем $ftp_user\n";
}
// close the connection
ftp_close($conn_id);  
?></example>
<example_result></example_result>
</object>

<object id=2258> 
<name>mcrypt_module_get_algo_key_size</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Returns the maximum supported keysize of the opened mode</short-description>
<description>int mcrypt_module_get_algo_key_size ( string $algorithm [, string $lib_dir ] ) 
 Gets the maximum supported keysize of the opened mode. </description>
<parameters>algorithm - The algorithm name. 
lib_dir - This optional parameter can contain the location where the mode module is on the system. </parameters>
<output>This function returns the maximum supported key size of the algorithm specified in bytes. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2259> 
<name>curl_multi_info_read</name>
<versions>(PHP 5)</versions>
<short-description>Возвращает информацию о текущих операциях</short-description>
<description>array curl_multi_info_read ( resource $mh [, int &$msgs_in_queue = NULL ] ) 
 Опрашивает набор дескрипторов о наличии сообщений или информации от индивидуальных передач. Сообщения могут включать такую информацию как код ошибки передачи или прост факт завершения передачи. 
 Повторяющиеся вызовы этой функции будут каждый раз возвращать новый результат, пока не будет возвращено FALSE в качестве сигнала окончания сообщений. Целое число, содержащееся в msgs_in_queue, указывает количество оставшихся сообщений после вызова данной функции. Внимание 
 Данные, на которые указывает возвращаемый ресурс, будут затерты вызовом curl_multi_remove_handle(). </description>
<parameters>mh - Мульти-дескриптор cURL, полученный из curl_multi_init().
msgs_in_queue - Количество оставшихся сообщений в очереди </parameters>
<output>В случае успеха, возвращает ассоциативный массив сообщений, или FALSE в случае неудачи. </output>
<errors></errors>
<example><?php
$urls = array(
   "http://www.cnn.com/",
   "http://www.bbc.co.uk/",
   "http://www.yahoo.com/"
);
$mh = curl_multi_init();
foreach ($urls as $i => $url) {
    $conn[$i] = curl_init($url);
    curl_setopt($conn[$i], CURLOPT_RETURNTRANSFER, 1);
    curl_multi_add_handle($mh, $conn[$i]);
}
do {
    $status = curl_multi_exec($mh, $active);
    $info = curl_multi_info_read($mh);
    if (false !== $info) {
        var_dump($info);
    }
} while ($status === CURLM_CALL_MULTI_PERFORM || $active);
foreach ($urls as $i => $url) {
    $res[$i] = curl_multi_getcontent($conn[$i]);
    curl_close($conn[$i]);
}
var_dump(curl_multi_info_read($mh));
?></example>
<example_result>
 
array(3) {
  ["msg"]=>
  int(1)
  ["result"]=>
  int(0)
  ["handle"]=>
  resource(5) of type (curl)
}
array(3) {
  ["msg"]=>
  int(1)
  ["result"]=>
  int(0)
  ["handle"]=>
  resource(7) of type (curl)
}
array(3) {
  ["msg"]=>
  int(1)
  ["result"]=>
  int(0)
  ["handle"]=>
  resource(6) of type (curl)
}
bool(false)
</example_result>
</object>

<object id=2260> 
<name>mssql_fetch_field</name>
<versions>(PHP 4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Get field information</short-description>
<description>object mssql_fetch_field ( resource $result [, int $field_offset = -1 ] ) 
 mssql_fetch_field() can be used in order to obtain information about fields in a certain query result. </description>
<parameters>result - The result resource that is being evaluated. This result comes from a call to mssql_query(). 
field_offset - The numerical field offset. If the field offset is not specified, the next field that was not yet retrieved by this function is retrieved. The field_offset starts at 0. </parameters>
<output>Returns an object containing field information. </output>
<errors></errors>
<example><?php
// Connect to MSSQL and select the database
mssql_connect('MANGO\SQLEXPRESS', 'sa', 'phpfi');
mssql_select_db('php');
// Send a select query to MSSQL
$query = mssql_query('SELECT * FROM [php].[dbo].[persons]');
// Construct table
echo '<h3>Table structure for \'persons\'</h3>';
echo '<table border="1">';
// Table header
echo '<thead>';
echo '<tr>';
echo '<td>Field name</td>';
echo '<td>Data type</td>';
echo '<td>Max length</td>';
echo '</tr>';
echo '</thead>';
// Dump all fields
echo '<tbody>';
for ($i = 0; $i < mssql_num_fields($query); ++$i) {
    // Fetch the field information
    $field = mssql_fetch_field($query, $i);
    // Print the row
    echo '<tr>';
    echo '<td>' . $field->name . '</td>';
    echo '<td>' . strtoupper($field->type) . '</td>';
    echo '<td>' . $field->max_length . '</td>';
    echo '</tr>';
}
echo '</tbody>';
echo '</table>';
// Free the query result
mssql_free_result($query);
?></example>
<example_result></example_result>
</object>

<object id=2261> 
<name>explode</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Разбивает строку с помощью разделителя</short-description>
<description>array explode ( string $delimiter , string $string [, int $limit ] ) 
 Возвращает массив строк, полученных разбиением строки string с использованием delimiter в качестве разделителя. </description>
<parameters>delimiter - Разделитель. 
string - Входная строка. 
limit - Если аргумент limit является положительным, возвращаемый массив будет содержать максимум limit элементов, при этом последний элемент будет содержать остаток строки string. </parameters>
<output>Возвращает массив (array) строк (string), созданный делением параметра string по границам, указанным параметром delimiter. </output>
<errors></errors>
<example><?php
// Пример 1
$pizza  = "кусок1 кусок2 кусок3 кусок4 кусок5 кусок6";
$pieces = explode(" ", $pizza);
echo $pieces[0]; // кусок1
echo $pieces[1]; // кусок2
// Пример 2
$data = "foo:*:1023:1000::/home/foo:/bin/sh";
list($user, $pass, $uid, $gid, $gecos, $home, $shell) = explode(":", $data);
echo $user; // foo
echo $pass; // *
?></example>
<example_result>
 
Array
(
    [0] => один
    [1] => два|три|четыре
)
Array
(
    [0] => один
    [1] => два
    [2] => три
)
</example_result>
</object>

<object id=2262> 
<name>hw_EditText</name>
<versions>(PHP 4)</versions>
<short-description>Retrieve text document</short-description>
<description>bool hw_edittext ( int $connection , int $hw_document ) 
 Uploads the text document to the server. The object record of the document may not be modified while the document is edited. 
 This function will only works for pure text documents. It will not open a special data connection and therefore blocks the control connection during the transfer. </description>
<parameters>connection - The connection identifier. 
hw_document - The document identifier. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2263> 
<name>mssql_fetch_assoc</name>
<versions>(PHP 4 >= 4.2.0, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Returns an associative array of the current row in the result</short-description>
<description>array mssql_fetch_assoc ( resource $result_id ) 
 Returns an associative array that corresponds to the fetched row and moves the internal data pointer ahead. mssql_fetch_assoc() is equivalent to calling mssql_fetch_array() with MSSQL_ASSOC for the optional second parameter. </description>
<parameters>result_id - The result resource that is being evaluated. This result comes from a call to mssql_query(). </parameters>
<output>Returns an associative array that corresponds to the fetched row, or FALSE if there are no more rows. </output>
<errors></errors>
<example><?php
// Send a select query to MSSQL
$query = mssql_query('SELECT [username], [name] FROM [php].[dbo].[userlist]');
// Check if there were any records
if (!mssql_num_rows($query)) {
    echo 'No records found';
}else
{    // Print a nice list of users in the format of:
    // * name (username)
    echo '<ul>';
    while ($row = mssql_fetch_assoc($query)) {
        echo '<li>' . $row['name'] . ' (' . $row['username'] . ')</li>';
    }
    echo '</ul>';
}
// Free the query result
mssql_free_result($query);
?></example>
<example_result></example_result>
</object>

<object id=2264> 
<name>PDF_end_pattern</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Finish pattern</short-description>
<description>bool PDF_end_pattern ( resource $p ) 
 Finishes the pattern definition. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2265> 
<name>pg_options</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получение параметров соединения с сервером баз данных</short-description>
<description>string pg_options ([ resource $connection ] ) 
 pg_options() возвращает строку, содержащую параметры соединения PostgreSQL connection. </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). </parameters>
<output>Строка, содержащая параметры соединения connection, либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
   $pgsql_conn = pg_connect("dbname=mark host=localhost");
   echo pg_options($pgsql_conn);
?></example>
<example_result></example_result>
</object>

<object id=2266> 
<name>imagegrabwindow</name>
<versions>(PHP 5 >= 5.2.2)</versions>
<short-description>Captures a window</short-description>
<description>resource imagegrabwindow ( int $window_handle [, int $client_area = 0 ] ) 
 Grabs a window or its client area using a windows handle (HWND property in COM instance) </description>
<parameters>window_handle - The HWND window ID. 
client_area - Include the client area of the application window. </parameters>
<output>Returns an image resource identifier on success, FALSE on failure. </output>
<errors>E_NOTICE is issued if window_handle is invalid window handle. E_WARNING is issued if the Windows API is too old. </errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=2267> 
<name>array_product</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Вычислить произведение значений массива</short-description>
<description>number array_product ( array $array ) 
 array_product() возвращает произведение значений массива. </description>
<parameters>array - Массив. </parameters>
<output>Возвращает произведение как тип integer или float. </output>
<errors></errors>
<example><?php
$a = array(2, 4, 6, 8);
echo "product(a) = " . array_product($a) . "\n";
echo "product(array()) = " . array_product(array()) . "\n";
?></example>
<example_result>
 
product(a) = 384
product(array()) = 1
</example_result>
</object>

<object id=2268> 
<name>aggregate_methods</name>
<versions>(PHP 4 >= 4.2.0)</versions>
<short-description>Dynamic class and object aggregation of methods </short-description>
<description>void aggregate_methods ( object $object , string $class_name ) 
 Aggregates all methods defined in a class to an existing object, except for the class constructor, or methods whose names start with an underscore character (_) which are considered private to the aggregated class. </description>
<parameters>object - 
class_name - </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2269> 
<name>sqlite_num_rows</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Возвращает количество записей в результате запроса</short-description>
<description>int sqlite_num_rows ( resource $result ) 
 Объектно-ориентированный стиль (метод): int SQLiteResult::numRows ( void )</description>
<parameters>result - Ресурс результата SQLite. Этот параметр не требуется при использовании объектно-ориентированного метода. </parameters>
<output>Возвращает количество рядов в виде целого числа. </output>
<errors></errors>
<example><?php
$db = sqlite_open('mysqlitedb');
$result = sqlite_query($db, "SELECT * FROM mytable WHERE name='John Doe'");
$rows = sqlite_num_rows($result);
echo "Количество рядов: $rows";
?></example>
<example_result></example_result>
</object>

<object id=2270> 
<name>posix_times</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get process times</short-description>
<description>array posix_times ( void ) 
 Gets information about the current CPU usage. </description>
<parameters></parameters>
<output>Returns a hash of strings with information about the current process CPU usage. The indices of the hash are: ticks - the number of clock ticks that have elapsed since reboot. utime - user time used by the current process. stime - system time used by the current process. cutime - user time used by current process and children. cstime - system time used by current process and children. </output>
<errors></errors>
<example><?php
$times = posix_times();
print_r($times);
?></example>
<example_result>
 
Array
(
    [ticks] => 25814410
    [utime] => 1
    [stime] => 1
    [cutime] => 0
    [cstime] => 0
)
</example_result>
</object>

<object id=2271> 
<name>pg_send_execute</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Запускает предварительно подготовленный SQL запрос и передает ему параметры; не ожидает возвращаемого результата </short-description>
<description>bool pg_send_execute ( resource $connection , string $stmtname , array $params ) 
 Запускает предварительно подготовленный SQL запрос и передает ему параметры; не ожидает возвращаемого результата. 
 Работает аналогично функции pg_send_query_params(), только вместо строки с запросом принимает имя предварительно подготовленного SQL запроса. Аргументы функции обрабатываются так же, как и в функции pg_execute(). Как и pg_execute() эта функция не будет работать на соединениях с серверами PostgreSQL версий ниже 7.4. </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). 
stmtname - Имя подготовленного к исполнению запроса. Если передана пустая строка "", будет выполнен безымянный запрос. Имя и содержимое запроса должны быть подготовлены функцией pg_prepare(), pg_send_prepare() либо с помощью SQL-команды PREPARE. 
params - Массив значений параметров запроса для замены псевдопеременных $1, $2 и т.д. в исходной строке запроса. Количество элементов массива должно точно совпадать с количеством псевдопеременных. </parameters>
<output>Возвращает TRUE в случае успешной передачи запроса, FALSE в случае ошибки. Для получения результата запроса используйте функцию pg_get_result(). </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Could not connect");
  // Подготовка запроса
  if (!pg_connection_busy($dbconn)) {
    pg_send_prepare($dbconn, "my_query", 'SELECT * FROM shops WHERE name = $1');
    $res1 = pg_get_result($dbconn);
  }
  // Запуск запроса на выполнение. Стоит отметить, что нет необходимости экранировать 
  // спецсимволы в строке "Joe's Widgets" 
  if (!pg_connection_busy($dbconn)) {
    pg_send_execute($dbconn, "my_query", array("Joe's Widgets"));
    $res2 = pg_get_result($dbconn);
  }
  
  // Запуск на выполнение того же запроса, но с другим параметром  
  if (!pg_connection_busy($dbconn)) {
    pg_send_execute($dbconn, "my_query", array("Clothes Clothes Clothes"));
    $res3 = pg_get_result($dbconn);
  }
  
?></example>
<example_result></example_result>
</object>

<object id=2272> 
<name>mcrypt_module_is_block_algorithm</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>This function checks whether the specified algorithm is a block algorithm</short-description>
<description>bool mcrypt_module_is_block_algorithm ( string $algorithm [, string $lib_dir ] ) 
 This function returns TRUE if the specified algorithm is a block algorithm, or FALSE if it is a stream one. </description>
<parameters>algorithm - The algorithm to check. 
lib_dir - The optional lib_dir parameter can contain the location where the algorithm module is on the system. </parameters>
<output>This function returns TRUE if the specified algorithm is a block algorithm, or FALSE if it is a stream one. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2273> 
<name>imagecolorset</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Set the color for the specified palette index</short-description>
<description>void imagecolorset ( resource $image , int $index , int $red , int $green , int $blue [, int $alpha = 0 ] ) 
 This sets the specified index in the palette to the specified color. This is useful for creating flood-fill-like effects in palleted images without the overhead of performing the actual flood-fill. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
index - An index in the palette. 
red - Значение красного компонента цвета.
green - Значение зеленого компонента цвета.
blue - Значение синего компонента цвета.
alpha - Value of alpha component. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
// Create a 300x100 image
$im = imagecreate(300, 100);
// Set the background to be red
imagecolorallocate($im, 255, 0, 0);
// Get the color index for the background
$bg = imagecolorat($im, 0, 0);
// Set the backgrund to be blue
imagecolorset($im, $bg, 0, 0, 255);
// Output the image to the browser
header('Content-Type: image/png');
imagepng($im);
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=2274> 
<name>parse_ini_string</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Разбирает строку конфигурации</short-description>
<description>array parse_ini_string ( string $ini [, bool $process_sections = false [, int $scanner_mode = INI_SCANNER_NORMAL ]] ) 
 parse_ini_string() возвращает настройки из строки ini в виде ассоциативного массива. 
 Структура INI строки такая же, как и в php.ini. </description>
<parameters>ini - Содержимое разбираемого INI файла. 
process_sections - Установив в параметр process_sections TRUE, можно получить многомерный массив, который включает названия секций и настроек. По умолчанию process_sections равен FALSE 
scanner_mode - Может принимать следующие значения: INI_SCANNER_NORMAL (по умолчанию) или INI_SCANNER_RAW. Если указано значение INI_SCANNER_RAW, то значения опций не будут обрабатываться. </parameters>
<output>В случае успеха, настройки возвращаются в виде ассоциативного массива (array). В случае ошибки, возвращается FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2275> 
<name>fbsql_fetch_lengths</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Get the length of each output in a result</short-description>
<description>array fbsql_fetch_lengths ( resource $result ) 
 Stores the lengths of each result column in the last row returned by fbsql_fetch_row(), fbsql_fetch_array() and fbsql_fetch_object() in an array. </description>
<parameters>result - Идентификатор результата запроса, полученный изfbsql_query() илиfbsql_db_query().</parameters>
<output>Returns an array, starting at offset 0, that corresponds to the lengths of each field in the last row fetched by fbsql_fetch_row(), or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2276> 
<name>ifx_get_blob</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Return the content of a blob object</short-description>
<description>string ifx_get_blob ( int $bid ) 
 Returns the content of the blob object. </description>
<parameters>bid - The BLOB object id. </parameters>
<output>The contents of the BLOB as a string, or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2277> 
<name>mysql_fetch_field</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает информацию о колонке из результата запроса в виде объекта</short-description>
<description>object mysql_fetch_field ( resource $result [, int $field_offset = 0 ] ) 
 Возвращает объект, содержащий информацию о колонке. Эту функцию можно использовать для получения информации о полях в переданном результате запроса. </description>
<parameters>result - Обрабатываемый результат запроса.Этот результат может быть получен с помощью функции mysql_query().
field_offset - Числовое смещение поля. Если смещение не указано, функция возвращает информацию о первой колонке, которая ещё не была обработана этой функцией. Нумерация field_offset начинается с 0. </parameters>
<output>Возвращает object, содержащий информацию о колонке. Объект содержит следующие свойства: </output>
<errors></errors>
<example><?php
$conn = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$conn) {
    die('Ошибка при соединении: ' . mysql_error());
}mysql_select_db('database');
$result = mysql_query('select * from table');
if (!$result) {
    die('Ошибка в запросе: ' . mysql_error());
}/* получаем данные о колонке */
$i = 0;
while ($i < mysql_num_fields($result)) {
    echo "Информация о колонке $i:<br />\n";
    $meta = mysql_fetch_field($result, $i);
    if (!$meta) {
        echo "Информация недоступна<br />\n";
    }
    echo "<pre>
blob:         $meta->blob
max_length:   $meta->max_length
multiple_key: $meta->multiple_key
name:         $meta->name
not_null:     $meta->not_null
numeric:      $meta->numeric
primary_key:  $meta->primary_key
table:        $meta->table
type:         $meta->type
unique_key:   $meta->unique_key
unsigned:     $meta->unsigned
zerofill:     $meta->zerofill
</pre>";
    $i++;
}mysql_free_result($result);
?></example>
<example_result></example_result>
</object>

<object id=2278> 
<name>pg_host</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает имя хоста, соответствующего подключению </short-description>
<description>string pg_host ([ resource $connection ] ) 
 pg_host() возвращает имя хоста, с которым установлено заданное PostgreSQL соединение connection. </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). </parameters>
<output>Строка, содержащая имя подключенного через connection хоста, либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$pgsql_conn = pg_connect("dbname=mark host=localhost");
if ($pgsql_conn) {
   print "Успешно подключились к : " . pg_host($pgsql_conn) . "<br/>\n";
} else {
   print pg_last_error($pgsql_conn);
   exit;
}?></example>
<example_result></example_result>
</object>

<object id=2279> 
<name>ovrimos_field_type</name>
<versions>(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)</versions>
<short-description>Returns the type of the output column</short-description>
<description>int ovrimos_field_type ( int $result_id , int $field_number ) 
 Returns the type of the output column </description>
<parameters>result_id - A result identifier, returned by ovrimos_execute() or ovrimos_exec(). 
field_number - A 1-based index. </parameters>
<output>Returns the field type as an integer, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2280> 
<name>hw_GetRemote</name>
<versions>(PHP 4)</versions>
<short-description>Gets a remote document</short-description>
<description>int hw_getremote ( int $connection , int $objectID ) 
 Gets a remote document. 
 Remote documents in Hyperwave notation are documents retrieved from an external source. Common remote documents are for example external web pages or queries in a database. 
 In order to be able to access external sources through remote documents Hyperwave introduces the HGI (Hyperwave Gateway Interface) which is similar to the CGI. Currently, only ftp, http-servers and some databases can be accessed by the HGI. 
 Calling hw_getremote() returns the document from the external source. If you want to use this function you should be very familiar with HGIs. You should also consider to use PHP instead of Hyperwave to access external sources. Adding database support by a Hyperwave gateway should be more difficult than doing it in PHP. </description>
<parameters>connection - The connection identifier. 
objectID - The object identifier. </parameters>
<output>Returns a remote document. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2281> 
<name>socket_clear_error</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Clears the error on the socket or the last error code</short-description>
<description>void socket_clear_error ([ resource $socket ] ) 
 This function clears the error code on the given socket or the global last socket error if no socket is specified. 
 This function allows explicitly resetting the error code value either of a socket or of the extension global last error code. This may be useful to detect within a part of the application if an error occurred or not. </description>
<parameters>socket - A valid socket resource created with socket_create(). </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2282> 
<name>ncurses_bkgd</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Set background property for terminal screen </short-description>
<description>int ncurses_bkgd ( int $attrchar ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>attrchar - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2283> 
<name>mb_ereg_search_regs</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает совпавшую с регулярным выражением часть строки </short-description>
<description>array mb_ereg_search_regs ([ string $pattern [, string $option = "ms" ]] ) 
 Возвращает совпавшую с регулярным выражением часть строки. </description>
<parameters>pattern - Шаблон, текст регулярного выражения. 
option - Настройка поиска. </parameters>
<output>Для этой функции будетиспользована внутренняя кодировка или кодировка, установленная функцией mb_regex_encoding().</output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2284> 
<name>idate</name>
<versions>(PHP 5)</versions>
<short-description>Преобразует локальное время/дату в целое число</short-description>
<description>int idate ( string $format [, int $timestamp = time() ] ) 
 Преобразует текущую дату и время в целое число в соответствии со строкой форматирования format. Если аргумент timestamp задан, расчет будет произведен для этой временной метки, если нет - будет использовано локальное время. Другими словами, timestamp - необязательный аргумент и по умолчанию равен значению time(). 
 В отличие от функции date(), idate() принимает только один символ в аргументе format. </description>
<parameters>format - Допустимые символы в строке аргумента format format символ Описание B Эталонное время/Время Интернета d День месяца h Час (12 часовой формат) H Час (24 часовой формат) i Минуты I (i в верхнем регистре) возвращает 1 если активировано DST, или 0 в противном случае L (l в верхнем регистре) возвращает 1 для високосного года, 0 в противном случае m Номер месяца s Секунды t Количество дней в текущем месяце U Время в секундах, от начала эпохи UNIX - 1 января 1970 00:00:00 UTC - то же, что time() w День недели (0 - Воскресенье) W ISO-8601 - Номер недели года, неделя начинается с понедельника y Год (1 или 2 цифры - см. примечание ниже) Y Год (4 цифры) z День года Z Временная зона - смещение в секундах 
timestamp - Необязательный параметр timestamp представляет собой integer метку времени, по умолчанию равную текущему локальному времени, если timestamp не указан. Другими словами, значение по умолчанию равно результату функции time(). </parameters>
<output>Возвращает целое число integer. </output>
<errors>Каждый вызов к функциям даты/времени при неправильных настройках временной зоны сгенерирует ошибку уровня E_NOTICE,и/или ошибку уровня E_STRICT или E_WARNING при использовании системныхнастроек или переменной окружения TZ. Смотрите также date_default_timezone_set()</errors>
<example><?php
$timestamp = strtotime('1st January 2004'); //1072915200
// это выведет год в 2-х знаковом представлении 
// поскольку первая цифра "0", будет выведено 
// только "4"
echo idate('y', $timestamp);
?></example>
<example_result></example_result>
</object>

<object id=2285> 
<name>convert_cyr_string</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Преобразует строку из одной кириллической кодировки в другую</short-description>
<description>string convert_cyr_string ( string $str , string $from , string $to ) 
 Преобразует строку из одной кириллической кодировки в другую. </description>
<parameters>str - Конвертируемая строка. 
from - Исходная кириллическая кодировка, один символ. 
to - Целевая кириллическая кодировка, один символ. </parameters>
<output>Возвращает преобразованную строку. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2286> 
<name>ncurses_insertln</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Insert a line, move rest of screen down </short-description>
<description>int ncurses_insertln ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2287> 
<name>yaz_es_result</name>
<versions>(PHP 4 >= 4.2.0, PECL yaz >= 0.9.0)</versions>
<short-description>Inspects Extended Services Result </short-description>
<description>array yaz_es_result ( resource $id ) 
 This function inspects the last returned Extended Service result from a server. An Extended Service is initiated by either yaz_item_order() or yaz_es(). </description>
<parameters>id - The connection resource returned by yaz_connect(). </parameters>
<output>Returns array with element targetReference for the reference for the extended service operation (generated and returned from the server). </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2288> 
<name>ncurses_inch</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Get character and attribute at current position </short-description>
<description>string ncurses_inch ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Returns the character, as a string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2289> 
<name>utf8_encode</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Кодирует строку ISO-8859-1 в кодировке UTF-8</short-description>
<description>string utf8_encode ( string $data ) 
 Эта функция кодирует строку data кодировкой UTF-8, и возвращает закодированный вариант. UTF-8 - стандартный механизм, используемый в Unicode для кодирования wide character значений в поток байтов. UTF-8 не оказывает влияния на незашифрованные ASCII символы, он самосинхронизирующийся (это значит, что программно можно вычислить, где в потоке байт начинаются символы) и может использоваться функциями сравнения строк для сортировки и подобных задач.PHP кодирует UTF-8 символы в 4 байта, как показано ниже: UTF-8 encoding байты биты представление 1 7 0bbbbbbb 2 11 110bbbbb 10bbbbbb 3 16 1110bbbb 10bbbbbb 10bbbbbb 4 21 11110bbb 10bbbbbb 10bbbbbb 10bbbbbb Каждая b представляет бит, который может быть использован для хранения данных символа. </description>
<parameters>data - ISO-8859-1 строка. </parameters>
<output>Возвращает UTF-8 перевод данных data. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2290> 
<name>ocidefinebyname</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_define_by_name()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2291> 
<name>ncurses_waddstr</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Outputs text at current postion in window</short-description>
<description>int ncurses_waddstr ( resource $window , string $str [, int $n ] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>window - 
str - 
n - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2292> 
<name>notes_search</name>
<versions>(PHP 4 >= 4.0.5)</versions>
<short-description>Find notes that match keywords in database_name</short-description>
<description>array notes_search ( string $database_name , string $keywords ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2293> 
<name>msql</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Alias of msql_db_query()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2294> 
<name>mysql_list_processes</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Возвращает список процессов MySQL</short-description>
<description>resource mysql_list_processes ([ resource $link_identifier ] ) 
 Возвращает список текущих процессов на сервере MySQL. </description>
<parameters>link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Дескриптор результата (resource) в случае успеха или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
$result = mysql_list_processes($link);
while ($row = mysql_fetch_assoc($result)){
    printf("%s %s %s %s %s\n", $row["Id"], $row["Host"], $row["db"],
        $row["Command"], $row["Time"]);
}mysql_free_result($result);
?></example>
<example_result>
 
1 localhost test Processlist 0
4 localhost mysql sleep 5
</example_result>
</object>

<object id=2295> 
<name>mcrypt_enc_get_block_size</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Returns the blocksize of the opened algorithm</short-description>
<description>int mcrypt_enc_get_block_size ( resource $td ) 
 Gets the blocksize of the opened algorithm. </description>
<parameters>td - The encryption descriptor. </parameters>
<output>Returns the block size of the specified algorithm in bytes. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2296> 
<name>ncurses_clear</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Clear screen </short-description>
<description>bool ncurses_clear ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2297> 
<name>m_transnew</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Start a new transaction</short-description>
<description>int m_transnew ( resource $conn ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().</parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2298> 
<name>mcrypt_enc_is_block_algorithm_mode</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Checks whether the encryption of the opened mode works on blocks</short-description>
<description>bool mcrypt_enc_is_block_algorithm_mode ( resource $td ) 
 Tells whether the algorithm of the opened mode works on blocks (e.g. FALSE for stream, and TRUE for cbc, cfb, ofb).. </description>
<parameters>td - The encryption descriptor. </parameters>
<output>Returns TRUE if the mode is for use with block algorithms, otherwise it returns FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2299> 
<name>fbsql_database</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Get or set the database name used with a connection</short-description>
<description>string fbsql_database ( resource $link_identifier [, string $database ] ) 
 Get or set the database name used with the connection. </description>
<parameters>link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().
database - The database name. If given, the default database of the connexion will be changed to database. </parameters>
<output>Returns the name of the database used with this connection. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2300> 
<name>ob_gzhandler</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>callback-функция, используемая для gzip-сжатия буфера вывода при вызове ob_start</short-description>
<description>string ob_gzhandler ( string $buffer , int $mode ) 
 Функиця ob_gzhandler() предназначена для использования в качестве callback-функции для ob_start(), чтобы облегчить отправку gz-кодированных данных web-браузерам, поддерживающим сжатие web-страниц. Прежде чем ob_gzhandler() отправит сжатые данные, она определяет, какой тип кодирования содержимого сможет принять браузер ("gzip", "deflate" или вообще никакой) и вернет его содержимое соответствующим образом. Поддерживаются все браузеры, отправляющие корректные заголовки о том, что они принимают сжатые web-страницы. Если браузер не поддерживает сжатие страниц функция вернет FALSE. </description>
<parameters>buffer - 
mode - </parameters>
<output></output>
<errors></errors>
<example><?php
ob_start("ob_gzhandler");
?>
<html>
<body>
<p>Это должно быть сжатой страницей.</p>
</body>
</html></example>
<example_result></example_result>
</object>

<object id=2301> 
<name>odbc_num_fields</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Number of columns in a result</short-description>
<description>int odbc_num_fields ( resource $result_id ) 
 Gets the number of fields (columns) in an ODBC result. </description>
<parameters>result_id - The result identifier returned by odbc_exec(). </parameters>
<output>Returns the number of fields, or -1 on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2302> 
<name>msql_fieldtable</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Alias of msql_field_table()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2303> 
<name>libxml_use_internal_errors</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Отключение ошибок libxml и передача полномочий по выборке и обработке информации об ошибках пользователю </short-description>
<description>bool libxml_use_internal_errors ([ bool $use_errors = false ] ) 
 libxml_use_internal_errors() позволяет отключить стандартные ошибки libxml и включить пользовательскую обработку ошибок. </description>
<parameters>use_errors - Включает (TRUE) пользовательскую обработку ошибок или отключает ее (FALSE). Отключение также очищает все текущие ошибки libxml. </parameters>
<output>Эта функция возвращает предыдущее значение параметра use_errors. </output>
<errors></errors>
<example>
 </example>
<example_result>
 
bool(false)
</example_result>
</object>

<object id=2304> 
<name>mssql_fetch_row</name>
<versions>(PHP 4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Get row as enumerated array</short-description>
<description>array mssql_fetch_row ( resource $result ) 
 mssql_fetch_row() fetches one row of data from the result associated with the specified result identifier. The row is returned as an array. Each result column is stored in an array offset, starting at offset 0. 
 Subsequent call to mssql_fetch_row() would return the next row in the result set, or FALSE if there are no more rows. </description>
<parameters>result - The result resource that is being evaluated. This result comes from a call to mssql_query(). </parameters>
<output>Returns an array that corresponds to the fetched row, or FALSE if there are no more rows. </output>
<errors></errors>
<example><?php
// Connect to MSSQL and select the database
$link = mssql_connect('MANGO\SQLEXPRESS', 'sa', 'phpfi');
mssql_select_db('php', $link);
// Query to execute
$query = mssql_query('SELECT [id], [quote] FROM [quotes] WHERE [id] = \'42\'', $link);
// Did the query fail?
if (!$query) {
    die('MSSQL error: ' . mssql_get_last_message());
}
// Fetch the row
$row = mssql_fetch_row($query);
// Print the 'quote'
echo 'Quote #' . $row[0] . ': "' . $row[1] . '"';
?></example>
<example_result>
 
Quote #42: "The answer to everything..."
</example_result>
</object>

<object id=2305> 
<name>imap_undelete</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Unmark the message which is marked deleted</short-description>
<description>bool imap_undelete ( resource $imap_stream , int $msg_number [, int $flags = 0 ] ) 
 Removes the deletion flag for a specified message, which is set by imap_delete() or imap_mail_move(). </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
msg_number - The message number 
flags - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2306> 
<name>PDF_get_value</name>
<versions>(PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0)</versions>
<short-description>Get numerical parameter</short-description>
<description>float PDF_get_value ( resource $p , string $key , float $modifier ) 
 Gets the value of some PDFlib parameter with numerical type. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2307> 
<name>filetype</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает тип файла</short-description>
<description>string filetype ( string $filename ) 
 Возвращает тип указанного файла. </description>
<parameters>filename - Путь к файлу. </parameters>
<output>Возвращает тип файла. Возможными значениями являются fifo, char, dir, block, link, file, socket и unknown. </output>
<errors>В случае неудачного завершения работы генерируется ошибка уровня E_WARNING.</errors>
<example><?php
echo filetype('/etc/passwd');  // file
echo filetype('/etc/');        // dir
?></example>
<example_result></example_result>
</object>

<object id=2308> 
<name>gmp_invert</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Инверсия остатка от деления</short-description>
<description>resource gmp_invert ( resource $a , resource $b ) 
 Вычисляет инверсию остатка от деления числа b на число a. </description>
<parameters>a - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.
b - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.</parameters>
<output>GMP число при успешном завершении либо FALSE если инверсия не существует. </output>
<errors></errors>
<example><?php
echo gmp_invert("5", "10"); // нет инверсии, не выводит ничего, результат FALSE
$invert = gmp_invert("5", "11");
echo gmp_strval($invert) . "\n";
?></example>
<example_result>
 
9
</example_result>
</object>

<object id=2309> 
<name>imagecreatefromxbm</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Создает новое изображение из файла или URL</short-description>
<description>resource imagecreatefromxbm ( string $filename ) 
 imagecreatefromxbm() returns an image identifier representing the image obtained from the given filename. Подсказка
 Для этой функции вы можете использовать URLв качестве имени файла, если была включена опция fopen wrappers. Смотрите болееподробную информацию об определении имени файла в описании функцииfopen(). Смотрите также список поддерживаемых оберток URL, их возможности, замечания по использованию и списокпредопределенных констант в Поддерживаемые протоколы и обработчики (wrappers).</description>
<parameters>filename - Path to the XBM image. </parameters>
<output>Возвращает ресурс изображения в случае успеха, или FALSE в случае ошибки.</output>
<errors></errors>
<example><?php
// Load the xbm file
$xbm = imagecreatefromxbm('./example.xbm');
// Convert it to a png file
imagepng($xbm, './example.png');
imagedestroy($xbm);
?></example>
<example_result></example_result>
</object>

<object id=2310> 
<name>apache_setenv</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Устанавливает переменную subprocess_env Apache</short-description>
<description>bool apache_setenv ( string $variable , string $value [, bool $walk_to_top = false ] ) 
 apache_setenv() устанавливает значение переменной окружения Apache, определенной как variable. 
 Замечание: 
 При установке перенной окружения Apache, соответствующая ей переменная $_SERVER не изменяется. </description>
<parameters>variable - Переменная окружения, которую требуется установить. 
value - Новое значение переменной variable. 
walk_to_top - Делать ли доступной переменную для всех уровней Apache. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
apache_setenv("EXAMPLE_VAR", "Какое-либо значение");
?></example>
<example_result></example_result>
</object>

<object id=2311> 
<name>date_timezone_set</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Псевдоним DateTime::setTimezone()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2312> 
<name>enchant_dict_suggest</name>
<versions>(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )</versions>
<short-description>Will return a list of values if any of those pre-conditions are not met</short-description>
<description>array enchant_dict_suggest ( resource $dict , string $word ) 
 </description>
<parameters>dict - Dictionary resource 
word - Word to use for the suggestions. </parameters>
<output>Will returns an array of suggestions if the word is bad spelled. </output>
<errors></errors>
<example><?php
$tag = 'en_US';
$r = enchant_broker_init();
if (enchant_broker_dict_exists($r,$tag)) {
    $d = enchant_broker_request_dict($r, $tag);
    $wordcorrect = enchant_dict_check($d, "soong");
    if (!$wordcorrect) {
        $suggs = enchant_dict_suggest($d, "soong");
        echo "Suggestions for 'soong':";
        print_r($suggs);
    }
    enchant_broker_free_dict($d);
}enchant_broker_free($r);
?></example>
<example_result></example_result>
</object>

<object id=2313> 
<name>m_setssl_files</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Set certificate key files and certificates if server requires client certificate verification</short-description>
<description>int m_setssl_files ( resource $conn , string $sslkeyfile , string $sslcertfile ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
sslkeyfile - 
sslcertfile - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2314> 
<name>pg_get_result</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Получение результата асинхронного запроса </short-description>
<description>resource pg_get_result ([ resource $connection ] ) 
 pg_get_result() получает ресурс результата асинхронного запроса, запущенного функциями pg_send_query(), pg_send_query_params() или pg_send_execute(). 
 pg_send_query() и другие функции, посылающие асинхронные запросы, может посылать сразу несколько запросов на сервер. Функция pg_get_result() получит результаты всех запросов по очереди. </description>
<parameters>connection - Ресурс соединения с базой данных PostgreSQL. </parameters>
<output>Ресурс результата запроса, либо FALSE, когда доступных результатов больше нет. </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Невозможно соединиться с сервером");
  if (!pg_connection_busy($dbconn)) {
      pg_send_query($dbconn, "select * from authors; select count(*) from authors;");
  }
  
  $res1 = pg_get_result($dbconn);
  echo "Первый вызов pg_get_result(): $res1\n";
  $rows1 = pg_num_rows($res1);
  echo "$res1 имеет $rows1 записей\n\n";
  
  $res2 = pg_get_result($dbconn);
  echo "Второй вызов pg_get_result(): $res2\n";
  $rows2 = pg_num_rows($res2);
  echo "$res2 имеет $rows2 записей\n";
?></example>
<example_result>
 
Первый вызов pg_get_result(): Resource id #3
Resource id #3 имеет 3 записей

Второй вызов pg_get_result(): Resource id #4
Resource id #4 имеет 1 записей
</example_result>
</object>

<object id=2315> 
<name>pg_last_error</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Получает сообщение о последней произошедшей ошибке на соединении с базой данных</short-description>
<description>string pg_last_error ([ resource $connection ] ) 
 pg_last_error() возвращает сообщение о последней ошибке на заданном соединении connection. 
 Сообщения об ошибках могут перезаписываться при внутренних вызовах PostgreSQL (libpq) функций. Если внутри модуля PostgreSQL произойдет несколько ошибок, сообщение может оказаться неинформативным. 
 Для обработки ошибок лучше использовать функции pg_result_error(), pg_result_error_field(), pg_result_status() и pg_connection_status(). 
 Замечание: 
 Прежнее название функции: pg_errormessage(). </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). </parameters>
<output>Строка, содержащая сообщение о последней ошибке, произошедшей на соединении connection, либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Невозможно соединиться с сервером");
  // Неудачный запрос
  $res = pg_query($dbconn, "select * from doesnotexist");
  
  echo pg_last_error($dbconn);
?></example>
<example_result></example_result>
</object>

<object id=2316> 
<name>session_cache_expire</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Return current cache expire</short-description>
<description>int session_cache_expire ([ string $new_cache_expire ] ) 
 session_cache_expire() returns the current setting of session.cache_expire. 
 The cache expire is reset to the default value of 180 stored in session.cache_expire at request startup time. Thus, you need to call session_cache_expire() for every request (and before session_start() is called). </description>
<parameters>new_cache_expire - If new_cache_expire is given, the current cache expire is replaced with new_cache_expire. </parameters>
<output>Returns the current setting of session.cache_expire. The value returned should be read in minutes, defaults to 180. </output>
<errors></errors>
<example><?php
/* set the cache limiter to 'private' */
session_cache_limiter('private');
$cache_limiter = session_cache_limiter();
/* set the cache expire to 30 minutes */
session_cache_expire(30);
$cache_expire = session_cache_expire();
/* start the session */
session_start();
echo "The cache limiter is now set to $cache_limiter<br />";
echo "The cached session pages expire after $cache_expire minutes";
?></example>
<example_result></example_result>
</object>

<object id=2317> 
<name>xslt_backend_name</name>
<versions>(PHP 4 >= 4.3.0)</versions>
<short-description>Возвращает имя расширения </short-description>
<description>string xslt_backend_name ( void ) 
 xslt_backend_name() получает имя расширения (backend). </description>
<parameters></parameters>
<output>Возвращает Sablotron. </output>
<errors></errors>
<example><?php
echo xslt_backend_name(); // Sablotron
?></example>
<example_result></example_result>
</object>

<object id=2318> 
<name>imagecopy</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Copy part of an image</short-description>
<description>bool imagecopy ( resource $dst_im , resource $src_im , int $dst_x , int $dst_y , int $src_x , int $src_y , int $src_w , int $src_h ) 
 Copy a part of src_im onto dst_im starting at the x,y coordinates src_x, src_y with a width of src_w and a height of src_h. The portion defined will be copied onto the x,y coordinates, dst_x and dst_y. </description>
<parameters>dst_im - Ресурс целевого изображения.
src_im - Ресурс исходного изображения.
dst_x - x-coordinate of destination point. 
dst_y - y-coordinate of destination point. 
src_x - x-coordinate of source point. 
src_y - y-coordinate of source point. 
src_w - Ширина исходного изображения.
src_h - Высота исходного изображения.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Create image instances
$src = imagecreatefromgif('php.gif');
$dest = imagecreatetruecolor(80, 40);
// Copy
imagecopy($dest, $src, 0, 0, 20, 13, 80, 40);
// Output and free from memory
header('Content-Type: image/gif');
imagegif($dest);
imagedestroy($dest);
imagedestroy($src);
?></example>
<example_result></example_result>
</object>

<object id=2319> 
<name>udm_add_search_limit</name>
<versions>(PHP 4 >= 4.0.5, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)</versions>
<short-description>Add various search limits</short-description>
<description>bool udm_add_search_limit ( resource $agent , int $var , string $val ) 
 udm_add_search_limit() adds search restrictions. </description>
<parameters>agent - A link to Agent, received after call to udm_alloc_agent(). 
var - Defines the parameter, indicating limits. Possible var values: UDM_LIMIT_URL - defines document URL limitations to limit the search through subsection of the database. It supports SQL % and _ LIKE wildcards, where % matches any number of characters, even zero characters, and _ matches exactly one character. E.g. http://www.example.___/catalog may stand for http://www.example.com/catalog and http://www.example.net/catalog. UDM_LIMIT_TAG - defines site TAG limitations. In indexer-conf you can assign specific TAGs to various sites and parts of a site. Tags in mnoGoSearch 3.1.x are lines, that may contain metasymbols % and _. Metasymbols allow searching among groups of tags. E.g. there are links with tags ABCD and ABCE, and search restriction is by ABC_ - the search will be made among both of the tags. UDM_LIMIT_LANG - defines document language limitations. UDM_LIMIT_CAT - defines document category limitations. Categories are similar to tag feature, but nested. So you can have one category inside another and so on. You have to use two characters for each level. Use a hex number going from 0-F or a 36 base number going from 0-Z. Therefore a top-level category like &#039;Auto&#039; would be 01. If it has a subcategory like &#039;Ford&#039;, then it would be 01 (the parent category) and then &#039;Ford&#039; which we will give 01. Put those together and you get 0101. If &#039;Auto&#039; had another subcategory named &#039;VW&#039;, then it&#039;s id would be 01 because it belongs to the &#039;Ford&#039; category and then 02 because it&#039;s the next category. So it&#039;s id would be 0102. If VW had a sub category called &#039;Engine&#039; then it&#039;s id would start at 01 again and it would get the &#039;VW&#039; id 02 and &#039;Auto&#039; id of 01, making it 010201. If you want to search for sites under that category then you pass it cat=010201 in the URL. 
 UDM_LIMIT_DATE - defines limitation by date the document was modified. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2320> 
<name>socket_accept</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Accepts a connection on a socket</short-description>
<description>resource socket_accept ( resource $socket ) 
 After the socket socket has been created using socket_create(), bound to a name with socket_bind(), and told to listen for connections with socket_listen(), this function will accept incoming connections on that socket. Once a successful connection is made, a new socket resource is returned, which may be used for communication. If there are multiple connections queued on the socket, the first will be used. If there are no pending connections, socket_accept() will block until a connection becomes present. If socket has been made non-blocking using socket_set_blocking() or socket_set_nonblock(), FALSE will be returned. 
 The socket resource returned by socket_accept() may not be used to accept new connections. The original listening socket socket, however, remains open and may be reused. </description>
<parameters>socket - A valid socket resource created with socket_create(). </parameters>
<output>Returns a new socket resource on success, or FALSE on error. The actual error code can be retrieved by calling socket_last_error(). This error code may be passed to socket_strerror() to get a textual explanation of the error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2321> 
<name>imap_open</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Open an IMAP stream to a mailbox</short-description>
<description>resource imap_open ( string $mailbox , string $username , string $password [, int $options = NIL [, int $n_retries = 0 [, array $params = NULL ]]] ) 
 Opens an IMAP stream to a mailbox. 
 This function can also be used to open streams to POP3 and NNTP servers, but some functions and features are only available on IMAP servers. </description>
<parameters>mailbox - A mailbox name consists of a server and a mailbox path on this server. The special name INBOX stands for the current users personal mailbox. Mailbox names that contain international characters besides those in the printable ASCII space have to be encoded width imap_utf7_encode(). 
username - The user name 
password - The password associated with the username 
options - The options are a bit mask with one or more of the following: OP_READONLY - Open mailbox read-only OP_ANONYMOUS - Don&#039;t use or update a .newsrc for news (NNTP only) OP_HALFOPEN - For IMAP and NNTP names, open a connection but don&#039;t open a mailbox. CL_EXPUNGE - Expunge mailbox automatically upon mailbox close (see also imap_delete() and imap_expunge()) OP_DEBUG - Debug protocol negotiations OP_SHORTCACHE - Short (elt-only) caching OP_SILENT - Don&#039;t pass up events (internal use) OP_PROTOTYPE - Return driver prototype OP_SECURE - Don&#039;t do non-secure authentication 
n_retries - Number of maximum connect attempts 
params - Connection parameters, the following (string) keys maybe used to set one or more connection parameters: DISABLE_AUTHENTICATOR - Disable authentication properties </parameters>
<output>Returns an IMAP stream on success or FALSE on error. </output>
<errors></errors>
<example><?php
// To connect to an IMAP server running on port 143 on the local machine,
// do the following:
$mbox = imap_open("{localhost:143}INBOX", "user_id", "password");
// To connect to a POP3 server on port 110 on the local server, use:
$mbox = imap_open ("{localhost:110/pop3}INBOX", "user_id", "password");
// To connect to an SSL IMAP or POP3 server, add /ssl after the protocol
// specification:
$mbox = imap_open ("{localhost:993/imap/ssl}INBOX", "user_id", "password");
// To connect to an SSL IMAP or POP3 server with a self-signed certificate,
// add /ssl/novalidate-cert after the protocol specification:
$mbox = imap_open ("{localhost:995/pop3/ssl/novalidate-cert}", "user_id", "password");
// To connect to an NNTP server on port 119 on the local server, use:
$nntp = imap_open ("{localhost:119/nntp}comp.test", "", "");
// To connect to a remote server replace "localhost" with the name or the
// IP address of the server you want to connect to.
?></example>
<example_result></example_result>
</object>

<object id=2322> 
<name>realpath_cache_get</name>
<versions>(PHP 5 >= 5.3.2)</versions>
<short-description>Получает записи из кэша реального пути</short-description>
<description>array realpath_cache_get ( void ) 
 Получает содержимое кэша реального пути. </description>
<parameters></parameters>
<output>Возвращает массив записей из кэша реального пути. Ключи являются записями реального пути, а значения являются массивами данных, содержащих вычисленный путь, время жизни кэша и других данных, хранящихся в кэше. </output>
<errors></errors>
<example><?php
var_dump(realpath_cache_get());
?></example>
<example_result>
 
array(2) {
  ["/test"] => array(4) {
    ["key"] => int(123456789)
    ["is_dir"] => bool(true)
    ["realpath"] => string(5) "/test"
    ["expires"] => int(1260318939)
  }
  ["/test/test.php"] => array(4) {
    ["key"] => int(987654321)
    ["is_dir"] => bool(false)
    ["realpath"] => string(12) "/root/test.php"
    ["expires"] => int(1260318939)
  }
}
</example_result>
</object>

<object id=2323> 
<name>ncurses_mvaddch</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Move current position and add character </short-description>
<description>int ncurses_mvaddch ( int $y , int $x , int $c ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>y - 
x - 
c - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2324> 
<name>imap_base64</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Decode BASE64 encoded text</short-description>
<description>string imap_base64 ( string $text ) 
 Decodes the given BASE-64 encoded text. </description>
<parameters>text - The encoded text </parameters>
<output>Returns the decoded message as a string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2325> 
<name>fbsql_warnings</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Enable or disable FrontBase warnings</short-description>
<description>bool fbsql_warnings ([ bool $OnOff ] ) 
 Enables or disables FrontBase warnings. </description>
<parameters>OnOff - Whether to enable warnings or no. </parameters>
<output>Returns TRUE if warnings is turned on, FALSE otherwise. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2326> 
<name>zip_open</name>
<versions>(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)</versions>
<short-description>Открывает ZIP-архив</short-description>
<description>mixed zip_open ( string $filename ) 
 Открывает ZIP-архив для чтения. </description>
<parameters>filename - Имя файла ZIP-архива для открытия. </parameters>
<output>Возвращает ссылку на ресурс для последующего использования с функциями zip_read() и zip_close() либо возращает номер ошибки, если filename не существует или в случае другой ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2327> 
<name>pg_result_error_field</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Возвращает конкретное поле из отчета об ошибках </short-description>
<description>string pg_result_error_field ( resource $result , int $fieldcode ) 
 pg_result_error_field() возвращает одно из полей отчета об ошибках, связанного с ресурсом result. Функция поддерживается серверами PostgreSQL версий 7.4 и выше. Нужное поле задается аргументом fieldcode. 
 Функции pg_query() и pg_query_params() в случае ошибок возвращают FALSE вместо ресурса. Чтобы иметь возможность обрабатывать ошибки, пользуйтесь функциями pg_send_query() и pg_get_result(). 
 Для получения дополнительной информации о ходе выполнения отказавшей функции pg_query() используйте функции pg_set_error_verbosity() и pg_last_error() и обрабатывайте результат их выполнения. </description>
<parameters>result - Ресурс результата предыдущего запроса PostgreSQL. 
fieldcode - Возможные значения аргумента fieldcode: PGSQL_DIAG_SEVERITY, PGSQL_DIAG_SQLSTATE, PGSQL_DIAG_MESSAGE_PRIMARY, PGSQL_DIAG_MESSAGE_DETAIL, PGSQL_DIAG_MESSAGE_HINT, PGSQL_DIAG_STATEMENT_POSITION, PGSQL_DIAG_INTERNAL_POSITION (для версий PostgreSQL 8.0 и выше), PGSQL_DIAG_INTERNAL_QUERY (для версий PostgreSQL 8.0 и выше), PGSQL_DIAG_CONTEXT, PGSQL_DIAG_SOURCE_FILE, PGSQL_DIAG_SOURCE_LINE, PGSQL_DIAG_SOURCE_FUNCTION. </parameters>
<output>Сообщение об ошибке из заданного поля в виде строки (string); NULL, если заданное поле не существует; FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Could not connect");
  if (!pg_connection_busy($dbconn)) {
      pg_send_query($dbconn, "select * from doesnotexist;");
  }
  
  $res1 = pg_get_result($dbconn);
  echo pg_result_error_field($res1, PGSQL_DIAG_SQLSTATE);
?></example>
<example_result></example_result>
</object>

<object id=2328> 
<name>sybase_fetch_row</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get a result row as an enumerated array</short-description>
<description>array sybase_fetch_row ( resource $result ) 
 sybase_fetch_row() fetches one row of data from the result associated with the specified result identifier. 
 Subsequent call to sybase_fetch_row() would return the next row in the result set, or FALSE if there are no more rows. </description>
<parameters>result - </parameters>
<output>Returns an array that corresponds to the fetched row, or FALSE if there are no more rows. Each result column is stored in an array offset, starting at offset 0. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2329> 
<name>PDF_place_pdi_page</name>
<versions>(PHP 4 >= 4.0.6, PECL pdflib >= 1.0.0)</versions>
<short-description>Place PDF page [deprecated]</short-description>
<description>bool PDF_place_pdi_page ( resource $pdfdoc , int $page , float $x , float $y , float $sx , float $sy ) 
 Places a PDF page and scales it. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. 
 This function is deprecated since PDFlib version 5, use PDF_fit_pdi_page() instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2330> 
<name>mssql_bind</name>
<versions>(PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Adds a parameter to a stored procedure or a remote stored procedure</short-description>
<description>bool mssql_bind ( resource $stmt , string $param_name , mixed &$var , int $type [, bool $is_output = false [, bool $is_null = false [, int $maxlen = -1 ]]] ) 
 Binds a parameter to a stored procedure or a remote stored procedure. </description>
<parameters>stmt - Statement resource, obtained with mssql_init(). 
param_name - The parameter name, as a string. 
var - The PHP variable you&#039;ll bind the MSSQL parameter to. It is passed by reference, to retrieve OUTPUT and RETVAL values after the procedure execution. 
type - One of: SQLTEXT, SQLVARCHAR, SQLCHAR, SQLINT1, SQLINT2, SQLINT4, SQLBIT, SQLFLT4, SQLFLT8, SQLFLTN. 
is_output - Whether the value is an OUTPUT parameter or not. If it&#039;s an OUTPUT parameter and you don&#039;t mention it, it will be treated as a normal input parameter and no error will be thrown. 
is_null - Whether the parameter is NULL or not. Passing the NULL value as var will not do the job. 
maxlen - Used with char/varchar values. You have to indicate the length of the data so if the parameter is a varchar(50), the type must be SQLVARCHAR and this value 50. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Connect to MSSQL and select the database
mssql_connect('KALLESPC\SQLEXPRESS', 'sa', 'phpfi');
mssql_select_db('php');
// Create a new stored prodecure
$stmt = mssql_init('NewUserRecord');
// Bind the field names
mssql_bind($stmt, '@username',  'Kalle',  SQLVARCHAR,  false,  false,  60);
mssql_bind($stmt, '@name',      'Kalle',  SQLVARCHAR,  false,  false,  60);
mssql_bind($stmt, '@age',       19,       SQLINT1,     false,  false,   3);
// Execute
mssql_execute($stmt);
// Free statement
mssql_free_statement($stmt);
?></example>
<example_result></example_result>
</object>

<object id=2331> 
<name>pg_connection_busy</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Проверяет, занято ли соединение в данный момент. </short-description>
<description>bool pg_connection_busy ( resource $connection ) 
 pg_connection_busy() определяет, занято соединение в данный момент или нет. Соединение занято, когда предыдущий запрос еще выполняется. Функция pg_get_result() также блокирует соединение на время своего выполнения. </description>
<parameters>connection - Ресурс соединения с базой данных PostgreSQL. </parameters>
<output>Возвращает TRUE, когда соединение занято, иначе FALSE. </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Could not connect");
  $bs = pg_connection_busy($dbconn);
  if ($bs) {
      echo 'connection is busy';
  } else {
     echo 'connection is not busy';
  }
?></example>
<example_result></example_result>
</object>

<object id=2332> 
<name>mcrypt_get_block_size</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the block size of the specified cipher</short-description>
<description>int mcrypt_get_block_size ( int $cipher ) int mcrypt_get_block_size ( string $cipher , string $module )</description>
<parameters>cipher - One of the MCRYPT_ciphername constants or the name of the algorithm as string. 
module - The module. </parameters>
<output>Gets the block size, as an integer. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=2333> 
<name>msql_drop_db</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Drop (delete) mSQL database</short-description>
<description>bool msql_drop_db ( string $database_name [, resource $link_identifier ] ) 
 msql_drop_db() attempts to drop (remove) a database from the mSQL server. </description>
<parameters>database_name - The name of the database. 
link_identifier - Соединение mSQL.Если не указан, используется последнее соединение, открытое msql_connect().Если такое соединение не было найдено, функция попытается установить новое, как если бы была вызвана функцияmsql_connect(), и использовать его.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2334> 
<name>array_shift</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Извлекает первый элемент массива</short-description>
<description>mixed array_shift ( array &$array ) 
 array_shift() извлекает первое значение массива array и возвращает его, сокращая размер array на один элемент. Все числовые ключи будут изменены таким образом, что нумерация массива начнётся с нуля, в то время как строковые ключи останутся прежними. 
 Замечание: Эта функция при вызовесбрасывает указатель массива, переданного параметром. </description>
<parameters>array - Входной массив. </parameters>
<output>Возвращает извлекаемое значение, или NULL, если array пуст или не является массивом. </output>
<errors></errors>
<example><?php
$stack = array("orange", "banana", "apple", "raspberry");
$fruit = array_shift($stack);
print_r($stack);
?></example>
<example_result>
 
Array
(
    [0] => banana
    [1] => apple
    [2] => raspberry
)
</example_result>
</object>

<object id=2335> 
<name>iconv</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Преобразование строки в требуемую кодировку</short-description>
<description>string iconv ( string $in_charset , string $out_charset , string $str ) 
 Преобразует набор символов строки str из кодировки in_charset в out_charset. </description>
<parameters>in_charset - Кодировка входной строки. 
out_charset - Требуемая на выходе кодировка. 
str - Строка, которую необходимо преобразовать. </parameters>
<output>Возвращает преобразованную строку или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$text = "This is the Euro symbol '€'.";
echo 'Original : ', $text, PHP_EOL;
echo 'TRANSLIT : ', iconv("UTF-8", "ISO-8859-1//TRANSLIT", $text), PHP_EOL;
echo 'IGNORE   : ', iconv("UTF-8", "ISO-8859-1//IGNORE", $text), PHP_EOL;
echo 'Plain    : ', iconv("UTF-8", "ISO-8859-1", $text), PHP_EOL;
?></example>
<example_result>
 
Original : This is the Euro symbol &#039;€&#039;.
TRANSLIT : This is the Euro symbol &#039;EUR&#039;.
IGNORE   : This is the Euro symbol &#039;&#039;.
Plain    :
Notice: iconv(): Detected an illegal character in input string in .\iconv-example.php on line 7
This is the Euro symbol &#039;
</example_result>
</object>

<object id=2336> 
<name>hw_objrec2array</name>
<versions>(PHP 4)</versions>
<short-description>Convert attributes from object record to object array</short-description>
<description>array hw_objrec2array ( string $object_record [, array $format ] ) 
 Converts an object_record into an object array. </description>
<parameters>object_record - The object record. 
format - An associative array with the attribute name as its key and the value being one of HW_ATTR_LANG or HW_ATTR_NONE. </parameters>
<output>Returns an array. The keys of the resulting array are the attributes names. Multi-value attributes like &#039;Title&#039; in different languages form its own array. The keys of this array are the left part to the colon of the attribute value. This left part must be two characters long. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2337> 
<name>ldap_modify</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Изменить LDAP запись</short-description>
<description>bool ldap_modify ( resource $link_identifier , string $dn , array $entry ) 
 Изменяет существующие записи в каталоге LDAP. Структура записей такая же, как и в ldap_add(). </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
dn - Отличительное имя объекта LDAP. 
entry - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2338> 
<name>stream_select</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Запускает эквивалент системного вызова select() на заданных массивах потоков с таймаутом, указанным параметрами tv_sec и tv_usec </short-description>
<description>int stream_select ( array &$read , array &$write , array &$except , int $tv_sec [, int $tv_usec = 0 ] ) 
 Функция stream_select() получает массивы потоков и ждёт изменения их статуса. Её работа эквивалентна работе функции socket_select(), за исключением того, что она работает с потоками. </description>
<parameters>read - Потоки, перечисленные в массиве read будут отслеживаться на предмет появления символов, доступных для чтения (точнее отслеживается, что чтение не будет блокироваться - в частности, потоковый ресурс также готов для чтения в конце файла, но в этом случае функция fread() будет возвращать строку нулевой длины). 
write - Потоки, перечисленные в массиве write, будут отслеживаться на предмет того, что запись в них не будет блокироваться. 
except - Потоки, перечисленные в массиве except, будут отслеживаться на предмет поступления высокоприоритетных исключительных (внеполосных или "out-of-band") данных. 
tv_sec - Параметры tv_sec и tv_usec вместе формируют параметр timeout, tv_sec указывает число секунд, а tv_usec - число микросекунд. Параметр timeout - это верхняя граница времени, которое функция stream_select() будет ожидать до возвращения. Если параметры tv_sec и tv_usec оба установлены в 0, то функция stream_select() не будет ожидать данных - вместо этого она вернётся немедленно, указывая текущий статус потоков. </parameters>
<output>В случае успеха функция stream_select() возвращает количество потоковых ресурсов, содержащееся в изменённых массивах, которое может равно нулю, если истёк тайм-аут до того, как произошло что-то интересное. В случае ошибки возвращается FALSE и возникает предупреждение (это может случится, если системный вызов прерывается входящим сигналом). </output>
<errors></errors>
<example>
 $stream1 или $stream2. Так как значение тайм-аута равно 0, функция возвратится немедленно: </example>
<example_result></example_result>
</object>

<object id=2339> 
<name>ocicommit</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_commit()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2340> 
<name>preg_replace_callback</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Выполняет поиск по регулярному выражению и замену с использованием callback-функции</short-description>
<description>mixed preg_replace_callback ( mixed $pattern , callback $callback , mixed $subject [, int $limit = -1 [, int &$count ]] ) 
 Поведение этой функции во многом напоминает preg_replace(), за исключением того, что вместо параметра replacement необходимо указывать callback-функцию. </description>
<parameters>pattern - Искомый шаблон. Может быть как строкой, так и массивом строк. 
callback - Вызываемая callback-функция, которой будет передан массив совпавших элементов из строки subject. Callback-функция должна вернуть строку с заменой. </parameters>
<output>preg_replace_callback() возвращает массив, если параметр subject является массивом, иначе возвращается строка. В случае ошибок возвращается NULL </output>
<errors></errors>
<example><?php
// Этот текст был использован в 2002 году
// мы хотим обновить даты к 2003 году
$text = "День дураков: 01/04/2002\n";
$text.= "Последнее Рождество было: 24/12/2001\n";
// callback-функция
function next_year($matches)
{  // как обычно: $matches[0] -  полное вхождение шаблона
  // $matches[1] - вхождение первой подмаски,
  // заключенной в круглые скобки, и так далее...
  return $matches[1].($matches[2]+1);
}echo preg_replace_callback(
            "|(\d{2}/\d{2}/)(\d{4})|",
            "next_year",
            $text);
?></example>
<example_result>
 
День дураков: 01/04/2003
Последнее Рождество было: 24/12/2002
</example_result>
</object>

<object id=2341> 
<name>w32api_set_call_method</name>
<versions>(PHP 4 >= 4.2.0)</versions>
<short-description>Sets the calling method used</short-description>
<description>void w32api_set_call_method ( int $method ) 
 This function sets the method call type. </description>
<parameters>method - Can be one of DC_CALL_CDECL or DC_CALL_STD (the extension default). </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2342> 
<name>sql_regcase</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Создает регулярное выражение для регистронезависимого сравнения</short-description>
<description>string sql_regcase ( string $string ) 
 Создает регулярное выражение для регистронезависимого сравнения. Внимание
 С версии PHP 5.3.0 эта функция считаетсяУСТАРЕВШЕЙ. Крайне не рекомендуется полагаться на эту возможность.</description>
<parameters>string - Входная строка. </parameters>
<output>Создает допустимое регулярное выражение, которое будет совпадать с string, игнорируя регистр символов. Это выражение является string, в которой каждый буквенный символ заменен на символьный класс (выражение в квадратных скобках); каждый такой символьный класс содержит символы в нижнем и верхнем регистре. Другие символы остаются без изменений. </output>
<errors></errors>
<example><?php
echo sql_regcase("Foo - bar.");
?></example>
<example_result>
 
[Ff][Oo][Oo] - [Bb][Aa][Rr].
</example_result>
</object>

<object id=2343> 
<name>swf_getbitmapinfo</name>
<versions>(PHP 4)</versions>
<short-description>Get information about a bitmap</short-description>
<description>array swf_getbitmapinfo ( int $bitmapid ) 
 Returns information about a bitmap. </description>
<parameters>bitmapid - The bitmap id. </parameters>
<output>Returns an array with the following elements: "size" - The size in bytes of the bitmap. "width" - The width in pixels of the bitmap. "height" - The height in pixels of the bitmap. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2344> 
<name>stream_socket_client</name>
<versions>(PHP 5)</versions>
<short-description>Открывает соединение с интернет-сокетом или с доменным сокетом Unix</short-description>
<description>resource stream_socket_client ( string $remote_socket [, int &$errno [, string &$errstr [, float $timeout = ini_get("default_socket_timeout") [, int $flags = STREAM_CLIENT_CONNECT [, resource $context ]]]]] ) 
 Начинает потоковое или датаграммное соединение с удалённым сокетом, указанным параметром remote_socket. Тип создаваемого сокета определяется по транспорту, указанному с использованием стандартного форматирования URL: transport://target. Для интернет-сокетов, (AF_INET) таких, как TCP и UDP, часть target параметра remote_socket должна состоять из имени хоста или IP-адреса, за которым следует двоеточие и номер порта. Для доменных сокетов Unix, часть target должна указывать на файл сокета в файловой системе. 
 Замечание: 
 По умолчанию поток будет откыт в блокирующем режиме. Вы можете переключить его в неблокирующий режим, используя функцию stream_set_blocking(). </description>
<parameters>remote_socket - Адрес удалённого сокета для соединения. 
errno - Будет присвоен номер системной ошибки, если соединение не удалось установить. 
errstr - Будет присвоено сообщение о системной ошибке, если соединение не удалось установить. 
timeout - Число секунд, в течение которых должен произойти тайм-аут системного вызова connect(). 
 Замечание: Этот параметр применяется только если не происходит попытка асинхронного соединения. 
flags - Поле битовой маски, которое может принимать значение любой комбинации флагов соединения. В настоящее время набор флагов соединения ограничен следующими значениями STREAM_CLIENT_CONNECT (по умолчанию), STREAM_CLIENT_ASYNC_CONNECT и STREAM_CLIENT_PERSISTENT. 
context - Действующий ресурс контекста, созданный при помощи функции stream_context_create(). </parameters>
<output>В случае успеха возвращается ресурс потока, который может быть использован с другими файловыми функциями (такими, как fgets(), fgetss(), fwrite(), fclose(), и feof()), в случае неудачи возвращается FALSE. </output>
<errors>В случае неудачного вызова функции аргументы errno и errstr будут заполнены системной ошибкой, которая произошла при системном вызове connect(). Если значение, возвращённое в аргументе errno равно 0 и функция возвратила значение FALSE, это означает, что ошибка произошла до вызова connect(). Это произошло скорее всего из-за проблемы инициализации сокета. Примите во внимание, что аргументы errno и errstr всегда будут передаваться по ссылке. </errors>
<example><?php
$fp = stream_socket_client("tcp://www.example.com:80", $errno, $errstr, 30);
if (!$fp) {
    echo "$errstr ($errno)<br />\n";
} else {
    fwrite($fp, "GET / HTTP/1.0\r\nHost: www.example.com\r\nAccept: */*\r\n\r\n");
    while (!feof($fp)) {
        echo fgets($fp, 1024);
    }
    fclose($fp);
}?></example>
<example_result></example_result>
</object>

<object id=2345> 
<name>sys_get_temp_dir</name>
<versions>(PHP 5 >= 5.2.1)</versions>
<short-description>Returns directory path used for temporary files</short-description>
<description>string sys_get_temp_dir ( void ) 
 Returns the path of the directory PHP stores temporary files in by default. </description>
<parameters></parameters>
<output>Returns the path of the temporary directory. </output>
<errors></errors>
<example><?php
// Create a temporary file in the temporary 
// files directory using sys_get_temp_dir()
$temp_file = tempnam(sys_get_temp_dir(), 'Tux');
echo $temp_file;
?></example>
<example_result>
 
C:\Windows\Temp\TuxA318.tmp
</example_result>
</object>

<object id=2346> 
<name>mssql_rows_affected</name>
<versions>(PHP 4 >= 4.0.4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Returns the number of records affected by the query</short-description>
<description>int mssql_rows_affected ( resource $link_identifier ) 
 Returns the number of records affected by the last write query. </description>
<parameters>link_identifier - A MS SQL link identifier, returned by mssql_connect() or mssql_pconnect(). </parameters>
<output>Returns the number of records affected by last operation. </output>
<errors></errors>
<example><?php
// Delete all rows in a table
mssql_query('TRUNCATE TABLE [php].[dbo].[persons]');
echo 'Deleted ' . mssql_rows_affected($link) . ' row(s)';
?></example>
<example_result></example_result>
</object>

<object id=2347> 
<name>hw_PipeDocument</name>
<versions>(PHP 4)</versions>
<short-description>Retrieve any document</short-description>
<description>int hw_pipedocument ( int $connection , int $objectID [, array $url_prefixes ] ) 
 Gets the Hyperwave document with the given object ID. If the document has anchors which can be inserted, they will have been inserted already. 
 The document will be transferred via a special data connection which does not block the control connection. </description>
<parameters>connection - The connection identifier. 
objectID - The object identifier. 
url_prefixes - </parameters>
<output>Returns the Hyperwave document. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2348> 
<name>ldap_compare</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Сравнить значение атрибута, найденного в записи определённой DN</short-description>
<description>mixed ldap_compare ( resource $link_identifier , string $dn , string $attribute , string $value ) 
 Сравнивает значение (value) атрибута (attribute) со значением того же атрибута в записи LDAP директории. </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
dn - Отличительное имя LDAP объекта. 
attribute - Имя атрибута. 
value - Сравниваемое значение. </parameters>
<output>Возвращает TRUE если value совпадают в противном случае FALSE. Возвращает -1 в случае ошибки. </output>
<errors></errors>
<example><?php
$ds=ldap_connect("localhost");  // Предположим, что LDAP сервер находится по этому адресу
if ($ds) {
    // bind
    if (ldap_bind($ds)) {
        // подготовка данных
        $dn = "cn=Matti Meikku, ou=My Unit, o=My Company, c=FI";
        $value = "secretpassword";
        $attr = "password";
        // сравнение данных
        $r=ldap_compare($ds, $dn, $attr, $value);
        if ($r === -1) {
            echo "Ошибка: " . ldap_error($ds);
        } elseif ($r === true) {
            echo "Пароль верный.";
        } elseif ($r === false) {
            echo "Неправильное предположение! Пароль не верен.";
        }
    } else {
        echo "Невозможно привязаться к серверу LDAP.";
    }
    ldap_close($ds);
} else {
    echo "Невозможно соединиться с сервером LDAP.";
}?></example>
<example_result></example_result>
</object>

<object id=2349> 
<name>xmlrpc_encode_request</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Генерирует XML для метода запроса</short-description>
<description>string xmlrpc_encode_request ( string $method , mixed $params [, array $output_options ] ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>method - Имя метода для вызова. 
params - Параметры метода, совместимые с сигнатурой вызова. 
output_options - Массив, уточняющий параметры вывода, может содержать (значения по умолчанию выделены): 
 output_type: php, xml</parameters>
<output>Возвращает строку, содержащую XML-представление запроса. </output>
<errors></errors>
<example><?php
$request = xmlrpc_encode_request("method", array(1, 2, 3));
$context = stream_context_create(array('http' => array(
    'method' => "POST",
    'header' => "Content-Type: text/xml",
    'content' => $request
)));
$file = file_get_contents("http://www.example.com/xmlrpc", false, $context);
$response = xmlrpc_decode($file);
if ($response && xmlrpc_is_fault($response)) {
    trigger_error("xmlrpc: $response[faultString] ($response[faultCode])");
} else {
    print_r($response);
}?></example>
<example_result></example_result>
</object>

<object id=2350> 
<name>deg2rad</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Преобразует значение из градусов в радианы </short-description>
<description>float deg2rad ( float $number ) 
 Функция преобразует number из градусов в радианы. </description>
<parameters>number - Угловая величина в градусах </parameters>
<output>Эквивалент number в радианах </output>
<errors></errors>
<example><?php
echo deg2rad(45); // 0.785398163397
var_dump(deg2rad(45) === M_PI_4); // bool(true)
?></example>
<example_result></example_result>
</object>

<object id=2351> 
<name>ncurses_has_colors</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Checks if terminal has color capabilities</short-description>
<description>bool ncurses_has_colors ( void ) 
 Checks whether the terminal has color capabilities. This function can be used to write terminal-independent programs. ncurses must be initialized using ncurses_init() before calling this function. </description>
<parameters></parameters>
<output>Return TRUE if the terminal has color capabilities, FALSE otherwise. </output>
<errors></errors>
<example><?php
ncurses_init();
// If the terminal supports colors, initialize and set active color
if (ncurses_has_colors()) {
    ncurses_start_color();
    ncurses_init_pair(1, NCURSES_COLOR_YELLOW, NCURSES_COLOR_BLUE);
    ncurses_color_set(1);
}
// Write a string at specified location
ncurses_mvaddstr(10, 10, "Hello world! Yellow on blue text!");
// Flush output to screen
ncurses_refresh();
ncurses_end();
?></example>
<example_result></example_result>
</object>

<object id=2352> 
<name>sybase_data_seek</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Moves internal row pointer</short-description>
<description>bool sybase_data_seek ( resource $result_identifier , int $row_number ) 
 sybase_data_seek() moves the internal row pointer of the Sybase result associated with the specified result identifier to pointer to the specified row number. The next call to sybase_fetch_row() would return that row. </description>
<parameters>result_identifier - 
row_number - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2353> 
<name>stream_set_read_buffer</name>
<versions>(PHP 5 >= 5.3.3)</versions>
<short-description>Устанавливает буферизацию чтения файла на указанном потоке</short-description>
<description>int stream_set_read_buffer ( resource $stream , int $buffer ) 
 Устанавливает буфер чтения. Это эквивалент функции stream_set_write_buffer(), но для операций чтения. </description>
<parameters>stream - Файловый указатель. 
buffer - Число байт для буферизации. Если аргумент buffer равен 0, то операции чтения не буферизуются. Это гарантирует, что все операции чтения при помощи функции fread() были завершены до того, как остальным процессам будет позволено писать в поток вывода. </parameters>
<output>Возвращает 0 в случае удачи, или EOF, если запрос не может быть выполнен. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2354> 
<name>variant_cast</name>
<versions>(PHP 5)</versions>
<short-description>Convert a variant into a new variant object of another type</short-description>
<description>variant variant_cast ( variant $variant , int $type ) 
 This function makes a copy of variant and then performs a variant cast operation to force the copy to have the type given by type. 
 This function wraps VariantChangeType() in the COM library; consult MSDN for more information. </description>
<parameters>variant - The variant. 
type - type should be one of the VT_XXX constants. </parameters>
<output>Returns a VT_DATE variant. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2355> 
<name>timezone_abbreviations_list</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Псевдоним DateTimeZone::listAbbreviations()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2356> 
<name>sys_getloadavg</name>
<versions>(PHP 5 >= 5.1.3)</versions>
<short-description>Поулчает среднюю загрузку системы</short-description>
<description>array sys_getloadavg ( void ) 
 Возвращает информацию о средней загрузке системы (число процессов в очереди системных процессов) через 1, 5 и 15 минут соответственно. </description>
<parameters></parameters>
<output>Возвращает массив (array), содержащий информацию за последние 1, 5 и 15 минут. </output>
<errors></errors>
<example><?php
$load = sys_getloadavg();
if ($load[0] > 80) {
    header('HTTP/1.1 503 Too busy, try again later');
    die('Server too busy. Please try again later.');
}?></example>
<example_result></example_result>
</object>

<object id=2357> 
<name>PDF_begin_pattern</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Start pattern definition</short-description>
<description>int PDF_begin_pattern ( resource $pdfdoc , float $width , float $height , float $xstep , float $ystep , int $painttype ) 
 Starts a new pattern definition. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2358> 
<name>snmp_get_quick_print</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Fetches the current value of the UCD library&#039;s quick_print setting </short-description>
<description>bool snmp_get_quick_print ( void ) 
 Returns the current value stored in the UCD Library for quick_print. quick_print is off by default. </description>
<parameters></parameters>
<output>Returns TRUE if quick_print is on, FALSE otherwise. </output>
<errors></errors>
<example><?php
$quickprint = snmp_get_quick_print();
?></example>
<example_result></example_result>
</object>

<object id=2359> 
<name>getprotobyname</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает номер протокола по имени</short-description>
<description>int getprotobyname ( string $name ) 
 Функция getprotobyname() возвращает номер протокола по имени, указанном в параметре name как в /etc/protocols. </description>
<parameters>name - Имя протокола. </parameters>
<output>Возвращает номер протокола или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$protocol = 'tcp';
$get_prot = getprotobyname($protocol);
if ($get_prot === FALSE) {
    echo 'Протокол не найден';
} else {
    echo 'Протокол #' . $get_prot;
}?></example>
<example_result></example_result>
</object>

<object id=2360> 
<name>filepro_fieldname</name>
<versions>(PHP 4, PHP 5 <= 5.1.6)</versions>
<short-description>Gets the name of a field</short-description>
<description>string filepro_fieldname ( int $field_number ) 
 Returns the name of the field corresponding to field_number. </description>
<parameters>field_number - The field number. </parameters>
<output>Returns the name of the field as a string, or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2361> 
<name>sqlite_popen</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Открывает постоянное подключение к базе данных SQLite или создает ее, если она не существует </short-description>
<description>resource sqlite_popen ( string $filename [, int $mode = 0666 [, string &$error_message ]] ) 
 Эта функция идентична sqlite_open(), за исключением того, что она использует механизм постоянных соединений PHP. Описание аргументов находится в описании функции sqlite_open(). 
 sqlite_popen() пытается найти уже открытый дескриптор постоянного подключения к файлу filename. Если такой дескриптор уже есть, функция возвращает его, иначе он открывается заново. 
 Выгода от использования постоянного подключения заключается в том, что не тратится время на открытие файла и чтение структуры данных при каждом запросе. Это справедливо только в случае использования PHP в качестве SAPI веб-сервера (любой SAPI, кроме CGI и CLI). 
 Замечание: При использовании постоянных подключений необходимо следить за тем, чтобы файл базы данных не перезаписывался внешними процессами (например, программой, запущенной с помощью crontab), которые пересоздают файл с базой данных (например, с помощью удаления и создания заново или при замене старой версии обновленной версией из другого файла), так как это вызовет непредсказуемые последствия при удалении старой версии базы данных. Для избежания этой ситуации, убедитесь что ваши фоновые процессы открывают нужный файл с базой данных и выполняют обновления с помощью транзакций. </description>
<parameters>filename - Имя файла базы данных SQLite. Если файл не существует, SQLite попытается создать его. PHP должен владеть правами записи на файл в случае вставки данных, изменения схемы базы данных или создания файла с базой данных, если он не существует. 
mode - Режим прав доступа на файл. Предназначется для открытия базы данных в режиме только для чтения, однако в настоящее время этот аргумент не используется библиотекой sqlite. Значением по умолчанию (и рекомендуемым к использованию) является восьмеричное 0666. 
error_message - Передается по ссылке и устанавливается в читабельное сообщение об ошибке, объясняющее почему не удалось открыть базу данных, в случае возникновения таковой ошибки. </parameters>
<output>Возвращает ресурс (дескриптор базы данных) в случае успеха, или FALSE в случае ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2362> 
<name>dbase_delete_record</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Удаление записей из базы данных</short-description>
<description>bool dbase_delete_record ( int $dbase_identifier , int $record_number ) 
 Помечает указанные записи для удаления из базы данных. 
 Замечание: 
 Для окончательного удаления записей из базы данных, необходимо вызвать dbase_pack(). </description>
<parameters>dbase_identifier - Идентификатор базы данных, возвращаемый функцией dbase_open() или dbase_create(). 
record_number - Целое число, в промежутке от 1 до количества записей в базе дынных (количество записей возвращает функция dbase_numrecords()). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2363> 
<name>error_log</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Отправляет сообщение об ошибке</short-description>
<description>bool error_log ( string $message [, int $message_type = 0 [, string $destination [, string $extra_headers ]]] ) 
 Отправляет сообщение об ошибке в лог web-сервера или в пользовательский файл. </description>
<parameters>message - Сообщение об ошибке которое должно быть логировано. 
message_type - Определяет куда отправлять ошибку. Возможны следующие значения: 
destination - Назначение. Устанавливается в зависимости от параметра message_type. 
extra_headers - Дополнительные заголовки. Используется, когда значение параметра message_type - 1. Данный тип сообщения использует ту же внутреннюю функцию, что и mail(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Отправляет уведомление посредством серверного лога, если мы не можем 
// подключиться к базе данных.
if (!Ora_Logon($username, $password)) {
    error_log("Oracle database not available!", 0);
}
// Уведомить администратора электронной почтой,  если невозможно выделить ресурсы для FOO
if (!($foo = allocate_new_foo())) {
    error_log("Big trouble, we're all out of FOOs!", 1,
               "operator@example.com");
}
// другой способ вызвать error_log():
error_log("You messed up!", 3, "/var/tmp/my-errors.log");
?></example>
<example_result></example_result>
</object>

<object id=2364> 
<name>is_null</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Проверяет, является ли значение переменной равным NULL </short-description>
<description>bool is_null ( mixed $var ) 
 Проверяет, является ли значение данной переменной равным NULL. </description>
<parameters>var - Проверяемая переменная. </parameters>
<output>Возвращает TRUE, если значение var равно null, или FALSE в противном случае. </output>
<errors></errors>
<example><?php
error_reporting(E_ALL);
$foo = NULL;
var_dump(is_null($inexistent), is_null($foo));
?></example>
<example_result>
 
Notice: Undefined variable: inexistent in ...
bool(true)
bool(true)
</example_result>
</object>

<object id=2365> 
<name>preg_filter</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Производит поиск и замену по регулярному выражению</short-description>
<description>mixed preg_filter ( mixed $pattern , mixed $replacement , mixed $subject [, int $limit = -1 [, int &$count ]] ) 
 Функция preg_filter() идентична функции preg_replace() за исключением того, что возвращает только те значения (возможно, преобразованные), в которых найдено совпадение. Подробнее о работе функции читайте в документации к preg_replace(). </description>
<parameters></parameters>
<output>Возвращает array, если аргумент subject имеет тип array, или string в противном случае. </output>
<errors></errors>
<example><?php
$subject = array('1', 'а', '2', 'б', '3', 'А', 'Б', '4'); 
$pattern = array('/\d/', '/[а-я]/', '/[1а]/'); 
$replace = array('А:$0', 'Б:$0', 'В:$0'); 
echo "preg_filter возвращает\n";
print_r(preg_filter($pattern, $replace, $subject)); 
echo "preg_replace возвращает\n";
print_r(preg_replace($pattern, $replace, $subject)); 
?></example>
<example_result>
 
preg_filter возвращает
Array
(
    [0] => А:В:1
    [1] => Б:В:а
    [2] => А:2
    [3] => Б:б
    [4] => А:3
    [7] => А:4
)
preg_replace возвращает
Array
(
    [0] => А:В:1
    [1] => Б:В:а
    [2] => А:2
    [3] => Б:б
    [4] => А:3
    [5] => А
    [6] => Б
    [7] => А:4
)
</example_result>
</object>

<object id=2366> 
<name>m_connectionerror</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Get a textual representation of why a connection failed</short-description>
<description>string m_connectionerror ( resource $conn ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().</parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2367> 
<name>variant_abs</name>
<versions>(PHP 5)</versions>
<short-description>Returns the absolute value of a variant</short-description>
<description>mixed variant_abs ( mixed $val ) 
 Returns the absolute value of a variant. </description>
<parameters>val - The variant. </parameters>
<output>Returns the absolute value of val. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2368> 
<name>enchant_broker_list_dicts</name>
<versions>(PHP 5 >= 5.3.0, PECL enchant >= 1.0.1)</versions>
<short-description>Returns a list of available dictionaries</short-description>
<description>mixed enchant_broker_list_dicts ( resource $broker ) 
 Returns a list of available dictionaries with their details. </description>
<parameters>broker - Broker resource </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$r = enchant_broker_init();
$dicts = enchant_broker_list_dicts($r);
print_r($dicts);
?></example>
<example_result>
 
Array
(
    [0] => Array
        (
            [lang_tag] => de
            [provider_name] => aspell
            [provider_desc] => Aspell Provider
            [provider_file] => /usr/lib/enchant/libenchant_aspell.so
        )

    [1] => Array
        (
            [lang_tag] => de_DE
            [provider_name] => aspell
            [provider_desc] => Aspell Provider
            [provider_file] => /usr/lib/enchant/libenchant_aspell.so
        )

    [3] => Array
        (
            [lang_tag] => en
            [provider_name] => aspell
            [provider_desc] => Aspell Provider
            [provider_file] => /usr/lib/enchant/libenchant_aspell.so
        )

    [4] => Array
        (
            [lang_tag] => en_GB
            [provider_name] => aspell
            [provider_desc] => Aspell Provider
            [provider_file] => /usr/lib/enchant/libenchant_aspell.so
        )

    [5] => Array
        (
            [lang_tag] => en_US
            [provider_name] => aspell
            [provider_desc] => Aspell Provider
            [provider_file] => /usr/lib/enchant/libenchant_aspell.so
        )

    [6] => Array
        (
            [lang_tag] => hi_IN
            [provider_name] => myspell
            [provider_desc] => Myspell Provider
            [provider_file] => /usr/lib/enchant/libenchant_myspell.so
        )

)
</example_result>
</object>

<object id=2369> 
<name>ldap_mod_del</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Удалить значения атрибута из текущих атрибутов</short-description>
<description>bool ldap_mod_del ( resource $link_identifier , string $dn , array $entry ) 
 Удаляет один или более атрибутов из указанного dn. Эта функция выполняет модификацию на уровне атрибута, а не на уровене объектов. На уровне объектов удаление осуществляются функцией ldap_delete(). </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
dn - Отличительное имя LDAP объекта. 
entry - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2370> 
<name>pg_fetch_assoc</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Выбирает строку результата запроса и помещает данные в ассоциативный массив</short-description>
<description>array pg_fetch_assoc ( resource $result [, int $row ] ) 
 pg_fetch_assoc() возвращает ассоциативный массив содержащий записи из строки результата запроса. 
 Результат выполнения pg_fetch_assoc() тот же, что и у pg_fetch_array() с параметром PGSQL_ASSOC. Функция возвращает только ассоциативный массив. Если нужен численно индексированный массив, используйте функцию pg_fetch_row(). 
 Замечание: Эта функция устанавливает NULL-поляв значение NULL PHP. 
 pg_fetch_assoc() не намного медленней и значительно проще в использовании, чем pg_fetch_row(). </description>
<parameters>result - Ресурс результата запроса PostgreSQL, возвращаемый функциями pg_query(), pg_query_params() или pg_execute() (в числе прочих). 
row - Номер выбираемой из результата запроса строки. Нумерация начинается с нуля. Если аргумент опущен или равен NULL, берется следующая по очереди строка. </parameters>
<output>Ассоциативный массив, индексированный именами полей выборки. Значения массива представляются в виде текстовых строк. Значения NULL базы данных преобразуются в PHP NULL. </output>
<errors></errors>
<example><?php 
$conn = pg_connect("dbname=publisher");
if (!$conn) {
  echo "Произошла ошибка.\n";
  exit;
}
$result = pg_query($conn, "SELECT id, author, email FROM authors");
if (!$result) {
  echo "Произошла ошибка.\n";
  exit;
}
while ($row = pg_fetch_assoc($result)) {
  echo $row['id'];
  echo $row['author'];
  echo $row['email'];
}?></example>
<example_result></example_result>
</object>

<object id=2371> 
<name>dio_seek</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)</versions>
<short-description>Seeks to pos on fd from whence</short-description>
<description>int dio_seek ( resource $fd , int $pos [, int $whence = SEEK_SET ] ) 
 The function dio_seek() is used to change the file position of the given file descriptor. </description>
<parameters>fd - The file descriptor returned by dio_open(). 
pos - The new position. 
whence - Specifies how the position pos should be interpreted: 
 SEEK_SET (default) - specifies that pos is specified from the beginning of the file. </parameters>
<output></output>
<errors></errors>
<example><?php
$fd = dio_open('/dev/ttyS0', O_RDWR);
dio_seek($fd, 10, SEEK_SET);
// position is now at 10 characters from the start of the file
dio_seek($fd, -2, SEEK_CUR);
// position is now at 8 characters from the start of the file
dio_seek($fd, -5, SEEK_END);
// position is now at 5 characters from the end of the file
dio_seek($fd, 10, SEEK_END);
// position is now at 10 characters past the end of the file. 
// The 10 characters between the end of the file and the current
// position are filled with zeros.
dio_close($fd);
?></example>
<example_result></example_result>
</object>

<object id=2372> 
<name>openssl_csr_sign</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Sign a CSR with another certificate (or itself) and generate a certificate</short-description>
<description>resource openssl_csr_sign ( mixed $csr , mixed $cacert , mixed $priv_key , int $days [, array $configargs [, int $serial = 0 ]] ) 
 openssl_csr_sign() generates an x509 certificate resource from the given CSR. 
 Замечание: Для корректной работы этой функции должен существовать правильный openssl.cnf. Для более подробной информации смотрите замечания под разделом установки. </description>
<parameters>csr - A CSR previously generated by openssl_csr_new(). It can also be the path to a PEM encoded CSR when specified as file://path/to/csr or an exported string generated by openssl_csr_export(). 
cacert - The generated certificate will be signed by cacert. If cacert is NULL, the generated certificate will be a self-signed certificate. 
priv_key - priv_key is the private key that corresponds to cacert. 
days - days specifies the length of time for which the generated certificate will be valid, in days. 
configargs - You can finetune the CSR signing by configargs. See openssl_csr_new() for more information about configargs. 
serial - An optional the serial number of issued certificate. If not specified it will default to 0. </parameters>
<output>Returns an x509 certificate resource on success, FALSE on failure. </output>
<errors></errors>
<example><?php
// Let's assume that this script is set to receive a CSR that has
// been pasted into a textarea from another page
$csrdata = $_POST["CSR"];
// We will sign the request using our own "certificate authority"
// certificate.  You can use any certificate to sign another, but
// the process is worthless unless the signing certificate is trusted
// by the software/users that will deal with the newly signed certificate
// We need our CA cert and its private key
$cacert = "file://path/to/ca.crt";
$privkey = array("file://path/to/ca.key", "your_ca_key_passphrase");
$usercert = openssl_csr_sign($csrdata, $cacert, $privkey, 365);
// Now display the generated certificate so that the user can
// copy and paste it into their local configuration (such as a file
// to hold the certificate for their SSL server)
openssl_x509_export($usercert, $certout);
echo $certout;
// Show any errors that occurred here
while (($e = openssl_error_string()) !== false) {
    echo $e . "\n";
}?></example>
<example_result></example_result>
</object>

<object id=2373> 
<name>xmlrpc_server_register_method</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Регистрирует функцию PHP к методу ресурса, соответствующему method_name</short-description>
<description>bool xmlrpc_server_register_method ( resource $server , string $method_name , string $function ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2374> 
<name>array</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Создает массив</short-description>
<description>array array ([ mixed $... ] ) 
 Создает массив. Подробнее о массивах читайте в разделе "Массивы". </description>
<parameters>... - Синтаксис "индекс => значения", разделённые запятыми, определяет индексы и их значения. Индекс может быть строкой или целым числом. Если индекс опущен, будет автоматически сгенерирован числовой индекс, начиная с 0. Если индекс - число, следующим сгенерированным индексом будет число, равное максимальному числовому индексу + 1. Обратите внимание, что если определены два одинаковых индекса, последующий перезапишет предыдущий. </parameters>
<output>Возвращает массив параметров. Параметрам может быть назначен индекс с помощью оператора =>. Подробнее о массивах читайте в разделе "Массивы". </output>
<errors></errors>
<example><?php
$fruits = array (
    "fruits"  => array("a" => "orange", "b" => "banana", "c" => "apple"),
    "numbers" => array(1, 2, 3, 4, 5, 6),
    "holes"   => array("first", 5 => "second", "third")
);?></example>
<example_result>
 
Array
(
    [0] => 1
    [1] => 1
    [2] => 1
    [3] => 13
    [4] => 1
    [8] => 1
    [9] => 19
)
</example_result>
</object>

<object id=2375> 
<name>mssql_guid_string</name>
<versions>(PHP 4 >= 4.0.7, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Converts a 16 byte binary GUID to a string</short-description>
<description>string mssql_guid_string ( string $binary [, bool $short_format = false ] ) 
 Converts a 16 byte binary GUID to a string. </description>
<parameters>binary - A 16 byte binary GUID. 
short_format - Whenever to use short format. </parameters>
<output>Returns the converted string on success. </output>
<errors></errors>
<example><?php
$binary = '19555081977808608437941339997619274330352755554827939936';
var_dump(mssql_guid_string($binary));
var_dump(mssql_guid_string($binary, true));
?></example>
<example_result>
 
string(36) "35353931-3035-3138-3937-373830383630"
string(32) "31393535353038313937373830383630"
</example_result>
</object>

<object id=2376> 
<name>ociplogon</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_pconnect()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2377> 
<name>spl_autoload_functions</name>
<versions>(PHP 5 >= 5.1.2)</versions>
<short-description>Return all registered __autoload() functions</short-description>
<description>array spl_autoload_functions ( void ) 
 Get all registered __autoload() functions. </description>
<parameters></parameters>
<output>An array of all registered __autoload functions. If the autoload stack is not activated then the return value is FALSE. If no function is registered the return value will be an empty array. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2378> 
<name>PDF_open_gif</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Открывает GIF-изображение [устаревшее]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2379> 
<name>stream_socket_pair</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Создаёт пару связанных неразличимых потоковых сокетов </short-description>
<description>array stream_socket_pair ( int $domain , int $type , int $protocol ) 
 stream_socket_pair() создаёт пару связанных неразличимых потоковых сокетов. Эта функция обычно используется в IPC (межпроцессном взаимодействии). </description>
<parameters>domain - Используемое семейство протоколов: STREAM_PF_INET, STREAM_PF_INET6 или STREAM_PF_UNIX 
type - Используемый тип взаимодействия: STREAM_SOCK_DGRAM, STREAM_SOCK_RAW, STREAM_SOCK_RDM, STREAM_SOCK_SEQPACKET or STREAM_SOCK_STREAM 
protocol - Используемый протокол: STREAM_IPPROTO_ICMP, STREAM_IPPROTO_IP, STREAM_IPPROTO_RAW, STREAM_IPPROTO_TCP or STREAM_IPPROTO_UDP </parameters>
<output>Возвращает массив array с двумя потоковыми ресурсами в случае успеха, или FALSE в случае неудачи. </output>
<errors></errors>
<example>
 stream_socket_pair() в межпроцессном взаимодействии. </example>
<example_result>
 
дочерний PID: 1378
сообщение от дочернего процесса
</example_result>
</object>

<object id=2380> 
<name>PDF_set_border_color</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set border color of annotations [deprecated]</short-description>
<description>bool PDF_set_border_color ( resource $p , float $red , float $green , float $blue ) 
 Sets the border color for all kinds of annotations. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. 
 This function is deprecated since PDFlib version 6, use the option annotcolor in PDF_create_annotation() instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2381> 
<name>XMLWriter::endDocument</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Завершить текущий документ</short-description>
<description>bool XMLWriter::endDocument ( void ) 
 Процедурный стиль bool xmlwriter_end_document ( resource $xmlwriter )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2382> 
<name>fbsql_drop_db</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Drop (delete) a FrontBase database</short-description>
<description>bool fbsql_drop_db ( string $database_name [, resource $link_identifier ] ) 
 fbsql_drop_db() attempts to drop (remove) an entire database from the server associated with the specified link identifier. </description>
<parameters>database_name - The database name, as a string. 
link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2383> 
<name>oci_free_statement</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Освобождает ресурсы, занимаемые курсором или SQL-выражением</short-description>
<description>bool oci_free_statement ( resource $statement ) 
 Освобождает все ресурсы, занимаемые курсором или SQL-выражением, которое было возвращено функцией oci_parse() или получено от сервера Oracle. </description>
<parameters>statement - Допустимый идентификатор OCI-выражения. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2384> 
<name>filemtime</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает время последнего изменения файла</short-description>
<description>int filemtime ( string $filename ) 
 Данная функция возвращает время последней записи блоков файла, иначе говоря, изменения содержания файла. </description>
<parameters>filename - Путь к файлу. </parameters>
<output>Возвращает время последнего изменения указанного файла, или FALSE в случае возникновения ошибки. Время возвращается в формате временной метки Unix, который подходит для передачи в качестве аргумента функции date(). </output>
<errors>В случае неудачного завершения работы генерируется ошибка уровня E_WARNING.</errors>
<example><?php
// Пример вывода: В последний раз файл somefile.txt был изменен: December 29 2002 22:16:23.
$filename = 'somefile.txt';
if (file_exists($filename)) {
    echo "В последний раз файл $filename был изменен: " . date ("F d Y H:i:s.", filemtime($filename));
}?></example>
<example_result></example_result>
</object>

<object id=2385> 
<name>yaz_hits</name>
<versions>(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)</versions>
<short-description>Returns number of hits for last search</short-description>
<description>int yaz_hits ( resource $id [, array &$searchresult ] ) 
 yaz_hits() returns the number of hits for the last search. </description>
<parameters>id - The connection resource returned by yaz_connect(). 
searchresult - Result array for detailed search result information. </parameters>
<output>Returns the number of hits for the last search or 0 if no search was performed. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2386> 
<name>swf_popmatrix</name>
<versions>(PHP 4)</versions>
<short-description>Restore a previous transformation matrix</short-description>
<description>void swf_popmatrix ( void ) 
 Restores a previous transformation matrix. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2387> 
<name>tidy_warning_count</name>
<versions>(PHP 5, PECL tidy >= 0.5.2)</versions>
<short-description>Возвращает число Tidy-предупреждений, встреченных в указанном документе</short-description>
<description>int tidy_warning_count ( tidy $object ) 
 Возвращает число Tidy-предупреждений, встреченных в указанном документе. </description>
<parameters>object - Объект Tidy. </parameters>
<output>Возвращает число предупреждений. </output>
<errors></errors>
<example><?php
$html = '<p>тест</i>
<bogustag>фикция</bogustag>';
$tidy = tidy_parse_string($html);
echo tidy_error_count($tidy) . "\n"; //1
echo tidy_warning_count($tidy) . "\n"; //5
?></example>
<example_result></example_result>
</object>

<object id=2388> 
<name>die</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Эквивалент функции exit()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2389> 
<name>posix_mkfifo</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Create a fifo special file (a named pipe)</short-description>
<description>bool posix_mkfifo ( string $pathname , int $mode ) 
 posix_mkfifo() creates a special FIFO file which exists in the file system and acts as a bidirectional communication endpoint for processes. </description>
<parameters>pathname - Path to the FIFO file. 
mode - The second parameter mode has to be given in octal notation (e.g. 0644). The permission of the newly created FIFO also depends on the setting of the current umask(). The permissions of the created file are (mode & ~umask). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2390> 
<name>openssl_get_publickey</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Псевдоним openssl_pkey_get_public()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2391> 
<name>sqlite_current</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Возвращает текущую запись из результирующего набора в виде массива</short-description>
<description>array sqlite_current ( resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]] ) 
 Объектно-ориентированный стиль (метод): array SQLiteResult::current ([ int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]] )</description>
<parameters>result - Ресурс результата SQLite. Этот параметр не требуется при использовании объектно-ориентированного метода. 
result_type - Необязательный параметрresult_type принимает константу, определяющую, как будетиндексирован возвращаемый массив.При использовании SQLITE_ASSOC будет возвращенассоциативный массив, а при использовании SQLITE_NUM- числовой. SQLITE_BOTH вернет массив как сассоциативными, так и с числовыми индексами.Значением по умолчанию для этой функции являетсяSQLITE_BOTH.
decode_binary - Когда параметрdecode_binary установлен в TRUE (по умолчанию),PHP будет декодировать бинарный код, примененный к данным, как если бы они были закодированы функциейsqlite_escape_string(). Обычно вам следует оставлятьэто значение по умолчанию, если только вы не работаете с базой данныхsqlite, которая была создана в ином приложении.</parameters>
<output>Возвращает текущую запись из результирующего набора в виде массива. Если текущая позиция в результате запроса находится за последней записью, эта функция возвращает FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2392> 
<name>create_function</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Создаёт анонимную (лямбда) функцию</short-description>
<description>string create_function ( string $args , string $code ) 
 Создаёт анонимную функцию из переданных параметров и возвращает её уникальное имя. </description>
<parameters>args - Аргументы функции. 
code - Код функции. </parameters>
<output>Возвращает уникальное имя функции в виде строки, или FALSE в случае ошибки. </output>
<errors></errors>
<example>
 </example>
<example_result>
 
Используем первый массив анонимных функций
параметры: 2.3445, M_PI
тригонометрия: -1.6291725057799
гипотенуза: 3.9199852871011
b*a^2 = 4.8103313314525
min(b^2+a, a^2,b) = 8.6382729035898
ln(a)/b = 0.27122299212594

Использование второго массива анонимных функций
** "Варабей под кровлю, а сова на ловлю" и "Варкалось. Хливкие шорьки пырялись по наве"
** для меня одинаковы! (смотря по первым 3 символам)
CRC: -1622439884, -458910041
similar(a,b) = 25(35.460992907801%)
</example_result>
</object>

<object id=2393> 
<name>hebrevc</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Преобразует текст на иврите из логической кодировки в визуальную с преобразованием перевода строки</short-description>
<description>string hebrevc ( string $hebrew_text [, int $max_chars_per_line = 0 ] ) 
 Эта функция похожа на hebrev() с тем отличием, что что она преобразует символы перевода строки (\n) в "<br>\n". 
 Эта функция пытается избежать разрывов слов. </description>
<parameters>hebrew_text - Входная строка на иврите. 
max_chars_per_line - Этот необязательный параметр указывает максимально возвращаемое число символов на строку. </parameters>
<output>Возвращает строку в визуальной кодировке. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2394> 
<name>mb_ereg_search_pos</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает позицию и длину совпавшего с регулярным выражением участка многобайтной строки </short-description>
<description>array mb_ereg_search_pos ([ string $pattern [, string $option = "ms" ]] ) 
 Возвращает позицию и длину совпавшего с регулярным выражением участка заранее определенной многобайтной строки. 
 Строка для поиска задается функцией mb_ereg_search_init(). Если она не задавалась, будет использована строка, заданная ранее. </description>
<parameters>pattern - Шаблон, текст регулярного выражения. 
option - Настройка поиска. </parameters>
<output>Для этой функции будетиспользована внутренняя кодировка или кодировка, установленная функцией mb_regex_encoding().</output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2395> 
<name>array_fill_keys</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Создает массив и заполняет его значениями, с определенными ключами</short-description>
<description>array array_fill_keys ( array $keys , mixed $value ) 
 Создает и заполняет массив значением параметра value, используя значения массива keys в качестве ключей. </description>
<parameters>keys - Массив значений, которые будут использованы в качестве ключей. Некорректные ключи массива будут преобразованы в string. 
value - Заполняемое значение </parameters>
<output>Возвращает заполненный массив </output>
<errors></errors>
<example><?php
$keys = array('foo', 5, 10, 'bar');
$a = array_fill_keys($keys, 'banana');
print_r($a);
?></example>
<example_result>
 
Array
(
    [foo] => banana
    [5] => banana
    [10] => banana
    [bar] => banana
)
</example_result>
</object>

<object id=2396> 
<name>ctype_alpha</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Проверяет на наличие буквенных символов</short-description>
<description>bool ctype_alpha ( string $text ) 
 Проверяет, все ли символы в переданной строке text являются буквенными. В стандартной локали C буквами являются только [A-Za-z] и ctype_alpha() эквивалентна (ctype_upper($text) || ctype_lower($text)), если $text состоит всего из одного символа, но в других языках есть буквы, которые не считаются ни верхним, ни нижним регистром. </description>
<parameters>text - Проверяемая строка. </parameters>
<output>Возвращает TRUE, если каждый символ в строке text является буквой из текущей локали, FALSE в противном случае. </output>
<errors></errors>
<example><?php
$strings = array('KjgWZC', 'arf12');
foreach ($strings as $testcase) {
    if (ctype_alpha($testcase)) {
        echo "Строка $testcase состоит только из букв.\n";
    } else {
        echo "Строка $testcase состоит не только из букв.\n";
    }
}?></example>
<example_result>
 
Строка KjgWZC состоит только из букв.
Строка arf12 состоит не только из букв.
</example_result>
</object>

<object id=2397> 
<name>bzerrno</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Возвращает код ошибки работы с bzip2</short-description>
<description>int bzerrno ( resource $bz ) 
 Возвращает код любой bzip2 ошибки, произошедшей с переданным указателем на файл. </description>
<parameters>bz - Указатель на файл. Должен быть корректным и указывать на файл, успешный открытый bzopen(). </parameters>
<output>Возвращает код ошибки в виде integer. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2398> 
<name>session_encode</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Encodes the current session data as a string</short-description>
<description>string session_encode ( void ) 
 session_encode() returns a string with the contents of the current session encoded within. </description>
<parameters></parameters>
<output>Returns the contents of the current session encoded. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2399> 
<name>imap_last_error</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the last IMAP error that occurred during this page request</short-description>
<description>string imap_last_error ( void ) 
 Gets the full text of the last IMAP error message that occurred on the current page. The error stack is untouched; calling imap_last_error() subsequently, with no intervening errors, will return the same error. </description>
<parameters></parameters>
<output>Returns the full text of the last IMAP error message that occurred on the current page. Returns FALSE if no error messages are available. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2400> 
<name>gmp_or</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Побитовое ИЛИ</short-description>
<description>resource gmp_or ( resource $a , resource $b ) 
 Вычисляет побитовое ИЛИ двух GMP чисел. </description>
<parameters>a - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.
b - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.</parameters>
<output>Число GMP. </output>
<errors></errors>
<example><?php
$or1 = gmp_or("0xfffffff2", "4");
echo gmp_strval($or1, 16) . "\n";
$or2 = gmp_or("0xfffffff2", "2");
echo gmp_strval($or2, 16) . "\n";
?></example>
<example_result>
 
fffffff6
fffffff2
</example_result>
</object>

<object id=2401> 
<name>XMLWriter::outputMemory</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Возвратить текущий буфер</short-description>
<description>string XMLWriter::outputMemory ([ bool $flush = true ] ) 
 Процедурный стиль string xmlwriter_output_memory ( resource $xmlwriter [, bool $flush = true ] )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
flush - Освободить буфер или нет. По умолчанию TRUE. </parameters>
<output>Возвращает текущий буфер в виде строки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2402> 
<name>hash_init</name>
<versions>(PHP 5 >= 5.1.2, PECL hash >= 1.1)</versions>
<short-description>Инициализация инкриментального контекста хеширования</short-description>
<description>resource hash_init ( string $algo [, int $options = 0 [, string $key = NULL ]] ) </description>
<parameters>algo - Имя выбранного алгоритма хеширования (например, "md5", "sha256", "haval160,4" и т.д.) 
options - Необязательные настройки для генерации хеша, в настоящее время поддерживается только один вариант: HASH_HMAC. При этом параметр key должен быть указан. 
key - Если HASH_HMAC указан в параметре options, то в этом параметре нужно предоставить общий секретный ключ, который будет использоваться с методом хеширования HMAC. </parameters>
<output>Возвращает ресурс хеширования для использования в функциях hash_update(), hash_update_stream(), hash_update_file() и hash_final(). </output>
<errors></errors>
<example><?php
$ctx = hash_init('md5');
hash_update($ctx, 'Наглый коричневый лисёнок ');
hash_update($ctx, 'прыгает вокруг ленивой собаки.');
echo hash_final($ctx);
?></example>
<example_result>
 
bff8b4bc8b5c1c1d5b3211dfb21d1e76
</example_result>
</object>

<object id=2403> 
<name>ldap_read</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Читает запись</short-description>
<description>resource ldap_read ( resource $link_identifier , string $base_dn , string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref ]]]]] ) 
 Выполняет поиск для указанного filter в директории в рамках LDAP_SCOPE_BASE. Эквивалентно чтению записи из директории. </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
base_dn - Базовое DN для каталога. 
filter - Пустой фильтр не допустим. Если необходимо получить абсолютно всю информацию для этой записи, используйте фильтр objectClass=*. Если известно какие типы записи используются на сервере каталогов, то можно использовать соответствующий фильтр, такой как objectClass=inetOrgPerson. 
attributes - Массив необходимых атрибутов, например, array("mail", "sn", "cn"). Обратите внимание, что "dn" всегда возвращается, независимо от того, какие типы атрибутов требуются. 
attrsonly - Должен быть равен 1, только если требуются типы атрибута. Если равен 0, то, по умолчанию, выбираются и типы атрибутов и значения. 
sizelimit - Позволяет ограничить количество выбранных записей. Установка этого параметра равным 0 означает, что ограничение отсутствует. 
timelimit - Устанавливает число секунд, ограничивающее процесс поиска. Установка этого параметра равным 0 означает, что ограничение отсутствует. 
deref - Определяет то, как псевдонимы должны быть обработаны во время поиска. Может быть одним из следующих: LDAP_DEREF_NEVER - (по умолчанию) псевдонимы никогда не разыменовываются. LDAP_DEREF_SEARCHING - псевдонимы должны быть разыменованы во время поиска, но не при определении местоположения базового объекта поиска. LDAP_DEREF_FINDING - псевдонимы должны быть разыменованы при определении местоположения базового объекта, но не во время поиска. LDAP_DEREF_ALWAYS - псевдонимы должны всегда разыменовываться. </parameters>
<output>Возвращает идентификатор результата поиска или FALSE в случае ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2404> 
<name>mcrypt_enc_self_test</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Runs a self test on the opened module</short-description>
<description>int mcrypt_enc_self_test ( resource $td ) 
 This function runs the self test on the algorithm specified by the descriptor td. </description>
<parameters>td - The encryption descriptor. </parameters>
<output>If the self test succeeds it returns FALSE. In case of an error, it returns TRUE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2405> 
<name>stream_socket_enable_crypto</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Включает или отключает шифрование на уже подсоединённом сокете</short-description>
<description>mixed stream_socket_enable_crypto ( resource $stream , bool $enable [, int $crypto_type [, resource $session_stream ]] ) 
 Включает или отключает шифрование на потоке. 
 После настройки шифрования, криптография может быть включена или выключена динамически при помощи передачи значения TRUE или FALSE параметру enable. </description>
<parameters>stream - Потоковый ресурс. 
enable - Включить/отключить криптографию на потоке. 
crypto_type - Включить шифрование на потоке. Допустимые методы STREAM_CRYPTO_METHOD_SSLv2_CLIENT STREAM_CRYPTO_METHOD_SSLv3_CLIENT STREAM_CRYPTO_METHOD_SSLv23_CLIENT STREAM_CRYPTO_METHOD_TLS_CLIENT STREAM_CRYPTO_METHOD_SSLv2_SERVER STREAM_CRYPTO_METHOD_SSLv3_SERVER STREAM_CRYPTO_METHOD_SSLv23_SERVER STREAM_CRYPTO_METHOD_TLS_SERVER 
session_stream - Использовать в потоке настройки из session_stream. </parameters>
<output>Возвращает TRUE в случае успеха, FALSE, если не удалось установить шифрование или 0, если недостаточно данных и вы должны попытаться ещё раз (только для неблокирующих сокетов). </output>
<errors></errors>
<example><?php
$fp = stream_socket_client("tcp://myproto.example.com:31337", $errno, $errstr, 30);
if (!$fp) {
    die("Не могу соединиться: $errstr ($errno)");
}
/* Включить шифрование для этапа входа в систему */
stream_socket_enable_crypto($fp, true, STREAM_CRYPTO_METHOD_SSLv23_CLIENT);
fwrite($fp, "USER бог\r\n");
fwrite($fp, "PASS секрет\r\n");
/* Отключить шифрование для всего остального */
stream_socket_enable_crypto($fp, false);
while ($motd = fgets($fp)) {
    echo $motd;
}
fclose($fp);
?></example>
<example_result>
 
</example_result>
</object>

<object id=2406> 
<name>stream_bucket_append</name>
<versions>(PHP 5)</versions>
<short-description>Append bucket to brigade </short-description>
<description>void stream_bucket_append ( resource $brigade , resource $bucket ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2407> 
<name>ocisavelob</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним OCI-Lob::save()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2408> 
<name>mysqli_execute</name>
<versions>(PHP 5)</versions>
<short-description>Синоним для mysqli_stmt_execute()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2409> 
<name>fbsql_stop_db</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Stop a database on local or remote server</short-description>
<description>bool fbsql_stop_db ( string $database_name [, resource $link_identifier ] ) 
 Stops a database on local or remote server. </description>
<parameters>database_name - The database name. 
link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2410> 
<name>ocicolumnisnull</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_field_is_null()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2411> 
<name>msession_unlock</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)</versions>
<short-description>Unlock a session</short-description>
<description>int msession_unlock ( string $session , int $key ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2412> 
<name>ocifreecursor</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_free_statement()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2413> 
<name>PDF_arcn</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Рисует дугу окружности по часовой стрелке</short-description>
<description>bool PDF_arcn ( resource $p , float $x , float $y , float $r , float $alpha , float $beta ) 
 За исключением направления рисования, эта функция ведет себя так же, как PDF_arc(). </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2414> 
<name>ncurses_wmouse_trafo</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Transforms window/stdscr coordinates</short-description>
<description>bool ncurses_wmouse_trafo ( resource $window , int &$y , int &$x , bool $toscreen ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>window - 
x - 
y - 
toscreen - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2415> 
<name>pg_convert</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Преобразует значения ассоциативного массива в приемлемые для использования в SQL запросах </short-description>
<description>array pg_convert ( resource $connection , string $table_name , array $assoc_array [, int $options = 0 ] ) 
 pg_convert() проверяет и преобразовывает значения из assoc_array в приемлемые для SQL сервера. Необходимо, чтобы существовала таблица table_name, а количество колонок в ней должно быть не меньше, чем значений в массиве assoc_array. Имена колонок в таблице table_name должны совпадать с ключами массива assoc_array, типы данных значений массива также должны совпадать с типами данных соответствующих колонок. В случае удачной конвертации функция возвращает массив преобразованных значений, иначе возвращает FALSE. 
 Замечание: 
 Если таблица table_name содержит поля типа boolean, не используйте константу TRUE в качестве значения массива table_name для этих полей. Она будет преобразована в строку &#039;TRUE&#039;, которая является недопустимым значением для boolean полей в PostgreSQL. Используйте значения t, true, 1, y, yes. Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>connection - Ресурс соединения с базой данных PostgreSQL. 
table_name - Имя таблицы базы данных. 
assoc_array - Данные для преобразования. 
options - Одна из констант PGSQL_CONV_IGNORE_DEFAULT, PGSQL_CONV_FORCE_NULL или PGSQL_CONV_IGNORE_NOT_NULL, либо их комбинация. </parameters>
<output>Массив (array), содержащий преобразованные данные, либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php 
  $dbconn = pg_connect('dbname=foo');
  
  $tmp = array(
      'author' => 'Joe Thackery',
      'year' => 2005,
      'title' => 'My Life, by Joe Thackery'
  );
  
  $vals = pg_convert($dbconn, 'authors', $tmp);
?></example>
<example_result></example_result>
</object>

<object id=2416> 
<name>ncurses_mvinch</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Move position and get attributed character at new position </short-description>
<description>int ncurses_mvinch ( int $y , int $x ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>y - 
x - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2417> 
<name>fbsql_fetch_array</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Fetch a result row as an associative array, a numeric array, or both</short-description>
<description>array fbsql_fetch_array ( resource $result [, int $result_type ] ) 
 fbsql_fetch_array() is a combination of fbsql_fetch_row() and fbsql_fetch_assoc(). 
 An important thing to note is that using fbsql_fetch_array() is NOT significantly slower than using fbsql_fetch_row(), while it provides a significant added value. </description>
<parameters>result - Идентификатор результата запроса, полученный изfbsql_query() илиfbsql_db_query().
result_type - A constant and can take the following values: FBSQL_ASSOC, FBSQL_NUM, or FBSQL_BOTH. </parameters>
<output>Returns an array that corresponds to the fetched row, or FALSE if there are no more rows. </output>
<errors></errors>
<example><?php
fbsql_connect($host, $user, $password);
$result = fbsql_db_query("database", "select user_id, fullname from table");
while ($row = fbsql_fetch_array($result)) {
    echo "user_id: " . $row["user_id"] . "<br />\n";
    echo "user_id: " . $row[0] . "<br />\n";
    echo "fullname: " . $row["fullname"] . "<br />\n";
    echo "fullname: " . $row[1] . "<br />\n";
}fbsql_free_result($result);
?></example>
<example_result></example_result>
</object>

<object id=2418> 
<name>exif_tagname</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Get the header name for an index</short-description>
<description>string exif_tagname ( int $index ) </description>
<parameters>index - The Tag ID for which a Tag Name will be looked up. </parameters>
<output>Returns the header name, or FALSE if index is not a defined EXIF tag id. </output>
<errors></errors>
<example><?php
echo "256: ".exif_tagname(256).PHP_EOL;
echo "257: ".exif_tagname(257).PHP_EOL;
?></example>
<example_result>
 
256: ImageWidth
257: ImageLength
</example_result>
</object>

<object id=2419> 
<name>imagesetthickness</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Set the thickness for line drawing</short-description>
<description>bool imagesetthickness ( resource $image , int $thickness ) 
 imagesetthickness() sets the thickness of the lines drawn when drawing rectangles, polygons, ellipses etc. etc. to thickness pixels. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
thickness - Thickness, in pixels. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Create a 200x100 image
$im = imagecreatetruecolor(200, 100);
$white = imagecolorallocate($im, 0xFF, 0xFF, 0xFF);
$black = imagecolorallocate($im, 0x00, 0x00, 0x00);
// Set the background to be white
imagefilledrectangle($im, 0, 0, 299, 99, $white);
// Set the line thickness to 5
imagesetthickness($im, 5);
// Draw the rectangle
imagerectangle($im, 14, 14, 185, 85, $black);
// Output image to the browser
header('Content-Type: image/png');
imagepng($im);
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=2420> 
<name>sqlite_num_fields</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Возвращает количество полей в результате запроса</short-description>
<description>int sqlite_num_fields ( resource $result ) 
 Объектно-ориентированный стиль (метод): int SQLiteResult::numFields ( void )</description>
<parameters>result - Ресурс результата SQLite. Этот параметр не требуется при использовании объектно-ориентированного метода. </parameters>
<output>Возвращает количество полей в виде целого числа. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2421> 
<name>fbsql_pconnect</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Open a persistent connection to a FrontBase Server</short-description>
<description>resource fbsql_pconnect ([ string $hostname = ini_get("fbsql.default_host") [, string $username = ini_get("fbsql.default_user") [, string $password = ini_get("fbsql.default_password") ]]] ) 
 Establishes a persistent connection to a FrontBase server. 
 To set the server port number, use fbsql_select_db(). 
 fbsql_pconnect() acts very much like fbsql_connect() with two major differences: 
 First, when connecting, the function would first try to find a (persistent) link that&#039;s already open with the same host, username and password. If one is found, an identifier for it will be returned instead of opening a new connection. 
 Second, the connection to the SQL server will not be closed when the execution of the script ends. Instead, the link will remain open for future use. 
 This type of links is therefore called &#039;persistent&#039;. </description>
<parameters>hostname - The server host name. 
username - The user name for the connection. 
password - The password for the connection. </parameters>
<output>Returns a positive FrontBase persistent link identifier on success, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2422> 
<name>fam_open</name>
<versions>(PHP 5 <= 5.0.5)</versions>
<short-description>Open connection to FAM daemon</short-description>
<description>resource fam_open ([ string $appname ] ) 
 Opens a connection to the FAM service daemon. </description>
<parameters>appname - A string identifying the application for logging reasons </parameters>
<output>Returns a resource representing a connection to the FAM service on success or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2423> 
<name>mysql_pconnect</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Устанавливает постоянное соединение с сервером MySQL</short-description>
<description>resource mysql_pconnect ([ string $server = ini_get("mysql.default_host") [, string $username = ini_get("mysql.default_user") [, string $password = ini_get("mysql.default_password") [, int $client_flags ]]]] ) 
 Устанавливает постоянное соединение с сервером MySQL. 
 mysql_pconnect() работает аналогично mysql_connect() с двумя важными отличиями. 
 Во-первых, при соединении функция пытается найти уже открытый (постоянный) указатель на тот же сервер с тем же пользователем и паролем. Если он найден, возвращён функцией будет именно он, вместо открытия нового соединения. 
 Во-вторых, соединение с SQL-сервером не будет закрыто, когда работа скрипта закончится. Вместо этого, оно останется рабочим для будущего использования (mysql_close() также не закрывает постоянные соединения, открытые mysql_pconnect()). 
 Соединения такого типа называют &#039;постоянными&#039;. </description>
<parameters>server - Сервер MySQL. Может также включать номер порта, например, "hostname:port" или путь к локальному сокету, например, ":/path/to/socket" для локального хоста. 
username - Имя пользователя. По умолчанию используется имя пользователя, владеющего серверным процессом. 
password - Пароль. По умолчанию используется пустая строка. 
client_flags - Параметр client_flags может быть комбинацией следующих констант: 128 (включает обработку LOAD DATA LOCAL), MYSQL_CLIENT_SSL, MYSQL_CLIENT_COMPRESS, MYSQL_CLIENT_IGNORE_SPACE и MYSQL_CLIENT_INTERACTIVE. </parameters>
<output>Возвращает дескриптор постоянного соединения MySQL в случае успеха, и FALSE в случае ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2424> 
<name>ibase_blob_info</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Return blob length and other useful info</short-description>
<description>array ibase_blob_info ( resource $link_identifier , string $blob_id ) array ibase_blob_info ( string $blob_id )</description>
<parameters>link_identifier - An InterBase link identifier. If omitted, the last opened link is assumed. 
blob_id - A BLOB id. </parameters>
<output>Returns an array containing information about a BLOB. The information returned consists of the length of the BLOB, the number of segments it contains, the size of the largest segment, and whether it is a stream BLOB or a segmented BLOB. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2425> 
<name>ip2long</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Конвертирует строку, содержащую (IPv4) Интернет адрес с точками в допустимый адрес</short-description>
<description>int ip2long ( string $ip_address ) 
 Функция ip2long() преобразует IPv4 адрес Интернет сети из стандартного формата (строка с точками). 
 Функция ip2long() также будет работать с неполными IP адресами. См. &raquo; http://publibn.boulder.ibm.com/doc_link/en_US/a_doc_lib/libs/commtrf2/inet_addr.htm для более подобной информации. </description>
<parameters>ip_address - Адрес в станартном формате. </parameters>
<output>Возвращает Ipv4 адрес или FALSE, если ip_addres содержит ошибку. </output>
<errors></errors>
<example><?php
$ip = gethostbyname('www.example.com');
$out = "Следующие URL эквивалентны:<br />\n";
$out .= 'http://www.example.com/, http://' . $ip . '/, and http://' . sprintf("%u", ip2long($ip)) . "/<br />\n";
echo $out;
?></example>
<example_result></example_result>
</object>

<object id=2426> 
<name>mb_ereg_match</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Совпадение с регулярным выражением для многобайтовой строки</short-description>
<description>bool mb_ereg_match ( string $pattern , string $string [, string $option = "msr" ] ) 
 Совпадение с регулярным выражением для многобайтовой строки </description>
<parameters>pattern - Шаблон регулярного выражения. 
string - Оцениваемая строка string. 
option - </parameters>
<output>Для этой функции будетиспользована внутренняя кодировка или кодировка, установленная функцией mb_regex_encoding().</output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2427> 
<name>zip_entry_filesize</name>
<versions>(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)</versions>
<short-description>Возвращает реальный размер файла для дескриптора директории</short-description>
<description>int zip_entry_filesize ( resource $zip_entry ) 
 Возвращает реальный размер заданного дескриптора директории. </description>
<parameters>zip_entry - Дескриптор директории, возвращаемый функцией zip_read(). </parameters>
<output>Реальный размер дескриптора директории. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2428> 
<name>socket_set_block</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Sets blocking mode on a socket resource</short-description>
<description>bool socket_set_block ( resource $socket ) 
 The socket_set_block() function removes the O_NONBLOCK flag on the socket specified by the socket parameter. 
 When an operation (e.g. receive, send, connect, accept, ...) is performed on a blocking socket, the script will pause its execution until it receives a signal or it can perform the operation. </description>
<parameters>socket - A valid socket resource created with socket_create() or socket_accept(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$socket = socket_create_listen(1223);
socket_set_block($socket);
socket_accept($socket);
?></example>
<example_result></example_result>
</object>

<object id=2429> 
<name>XMLWriter::openURI</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Создать новый объект XMLWriter, используя исходный URI для вывода</short-description>
<description>bool XMLWriter::openURI ( string $uri ) 
 Процедурный стиль resource xmlwriter_open_uri ( string $uri )</description>
<parameters>uri - URI ресурса для вывода. </parameters>
<output>Объектно-ориентированный стиль: Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2430> 
<name>yaz_ccl_conf</name>
<versions>(PHP 4 >= 4.0.5, PECL yaz >= 0.9.0)</versions>
<short-description>Кофигурирует CCL-парсер</short-description>
<description>void yaz_ccl_conf ( resource $id , array $config ) 
 Эта функция конфигурирует CCL-парсер запросов для сервера с определениями точек доступа (CCL-квалификаторов) и их отображения в RPN. 
 Для отображения специфичечкого CCL-запроса к RPN вызовите затем функцию yaz_ccl_parse(). </description>
<parameters>id - Идентификатор ресурса, возвращаемый функцией yaz_connect(). 
config - Массив настроек. Каждый ключ массива - это имя CCL-поля и соответствующее значение, содержащее строку, которая определяет отображение в RPN. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
$fields = array(
  "ti" => "1=4",
  "au"   => "1=1",
  "isbn" => "1=7"
);
yaz_ccl_conf($id, $fields);
?></example>
<example_result></example_result>
</object>

<object id=2431> 
<name>mssql_select_db</name>
<versions>(PHP 4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Select MS SQL database</short-description>
<description>bool mssql_select_db ( string $database_name [, resource $link_identifier ] ) 
 mssql_select_db() sets the current active database on the server that&#039;s associated with the specified link identifier. 
 Every subsequent call to mssql_query() will be made on the active database. </description>
<parameters>database_name - The database name. 
link_identifier - A MS SQL link identifier, returned by mssql_connect() or mssql_pconnect(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Create a link to MSSQL
$link = mssql_connect('KALLESPC\SQLEXPRESS', 'sa', 'phpfi');
// Select the database 'php'
mssql_select_db('php', $link);
?></example>
<example_result></example_result>
</object>

<object id=2432> 
<name>msql_db_query</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Send mSQL query</short-description>
<description>resource msql_db_query ( string $database , string $query [, resource $link_identifier ] ) 
 msql_db_query() selects a database and executes a query on it. </description>
<parameters>database - The name of the mSQL database. 
query - The SQL query. 
link_identifier - Соединение mSQL.Если не указан, используется последнее соединение, открытое msql_connect().Если такое соединение не было найдено, функция попытается установить новое, как если бы была вызвана функцияmsql_connect(), и использовать его.</parameters>
<output>Returns a positive mSQL query identifier to the query result, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2433> 
<name>ifx_blobinfile_mode</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Set the default blob mode for all select queries</short-description>
<description>bool ifx_blobinfile_mode ( int $mode ) 
 Set the default blob mode for all select queries. </description>
<parameters>mode - Mode "0" means save Byte-Blobs in memory, and mode "1" means save Byte-Blobs in a file. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2434> 
<name>ibase_blob_open</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Open blob for retrieving data parts</short-description>
<description>resource ibase_blob_open ( resource $link_identifier , string $blob_id ) resource ibase_blob_open ( string $blob_id )</description>
<parameters>link_identifier - An InterBase link identifier. If omitted, the last opened link is assumed. 
blob_id - A BLOB id. </parameters>
<output>Returns a BLOB handle for later use with ibase_blob_get() или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2435> 
<name>socket_send</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Sends data to a connected socket</short-description>
<description>int socket_send ( resource $socket , string $buf , int $len , int $flags ) 
 The function socket_send() sends len bytes to the socket socket from buf. </description>
<parameters>socket - A valid socket resource created with socket_create() or socket_accept(). 
buf - A buffer containing the data that will be sent to the remote host. 
len - The number of bytes that will be sent to the remote host from buf. 
flags - The value of flags can be any combination of the following flags, joined with the binary OR (|) operator. Possible values for flags MSG_OOB Send OOB (out-of-band) data. MSG_EOR Indicate a record mark. The sent data completes the record. MSG_EOF Close the sender side of the socket and include an appropriate notification of this at the end of the sent data. The sent data completes the transaction. MSG_DONTROUTE Bypass routing, use direct interface. </parameters>
<output>socket_send() returns the number of bytes sent, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2436> 
<name>copy</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Копирует файл</short-description>
<description>bool copy ( string $source , string $dest [, resource $context ] ) 
 Копирует файл source в файл с именем dest. 
 Если вы хотите переместить файл, используйте функцию rename(). </description>
<parameters>source - Путь к исходному файлу. 
dest - Путь к целевому файлу. Если dest является URL, то операция копирования может завершиться ошибкой, если обертка URL не поддерживает перезаписывание существующих файлов. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$file = 'example.txt';
$newfile = 'example.txt.bak';
if (!copy($file, $newfile)) {
    echo "не удалось скопировать $file...\n";
}?></example>
<example_result></example_result>
</object>

<object id=2437> 
<name>session_name</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get and/or set the current session name</short-description>
<description>string session_name ([ string $name ] ) 
 session_name() returns the name of the current session. If name is given, session_name() will update the session name and return the old session name. 
 The session name is reset to the default value stored in session.name at request startup time. Thus, you need to call session_name() for every request (and before session_start() or session_register() are called). </description>
<parameters>name - The session name references the name of the session, which is used in cookies and URLs (e.g. PHPSESSID). It should contain only alphanumeric characters; it should be short and descriptive (i.e. for users with enabled cookie warnings). If name is specified, the name of the current session is changed to its value. </parameters>
<output>Returns the name of the current session. </output>
<errors></errors>
<example><?php
/* set the session name to WebsiteID */
$previous_name = session_name("WebsiteID");
echo "The previous session name was $previous_name<br />";
?></example>
<example_result></example_result>
</object>

<object id=2438> 
<name>array_slice</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выбирает срез массива</short-description>
<description>array array_slice ( array $array , int $offset [, int $length [, bool $preserve_keys = false ]] ) 
 array_slice() возвращает последовательность элементов массива array, определённую параметрами offset и length. 
 Замечание: Эта функция при вызовесбрасывает указатель массива, переданного параметром. </description>
<parameters>array - Входной массив. 
offset - Если параметр offset неотрицателен, последовательность начнётся на указанном расстоянии от начала array. Если offset отрицателен, последовательность начнётся на расстоянии указанном расстоянии от конца array. 
length - Если в эту функцию передан положительный параметр length, последовательность будет включать количество элементов меньшее или равное length, length, length. Если количество элементов массива меньше чем параметр length, то только доступные элементы массива будут присутствовать. Если в эту функцию передан отрицательный параметр length, последовательность остановится на указанном расстоянии от конца массива. Если он опущен, последовательность будет содержать все элементы с offset до конца массива array. 
preserve_keys - Обратите внимание, что по умолчанию array_slice() сбрасывает ключи массива. Вы можете переопределить это поведение, установив параметр preserve_keys в TRUE. </parameters>
<output>Возвращает срез. </output>
<errors></errors>
<example><?php
$input = array("a", "b", "c", "d", "e");
$output = array_slice($input, 2);      // возвращает "c", "d", и "e"
$output = array_slice($input, -2, 1);  // возвращает "d"
$output = array_slice($input, 0, 3);   // возвращает "a", "b", и "c"
// заметьте разницу в индексах массивов
print_r(array_slice($input, 2, -1));
print_r(array_slice($input, 2, -1, true));
?></example>
<example_result>
 
Array
(
    [0] => c
    [1] => d
)
Array
(
    [2] => c
    [3] => d
)
</example_result>
</object>

<object id=2439> 
<name>posix_setpgid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Set process group id for job control</short-description>
<description>bool posix_setpgid ( int $pid , int $pgid ) 
 Let the process pid join the process group pgid. </description>
<parameters>pid - The process id. 
pgid - The process group id. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2440> 
<name>token_name</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает символьное имя для переданной PHP-лексемы</short-description>
<description>string token_name ( int $token ) 
 Функция token_name() возвращает символьное имя для значения PHP-лексемы token. </description>
<parameters>token - Значение лексемы. </parameters>
<output>Символьное значение для переданной лексемы token. </output>
<errors></errors>
<example><?php
// 260 - значение для лексемы T_EVAL
echo token_name(260);        // -> "T_EVAL"
// Константа лексемы сопоставима с его собственным именем
echo token_name(T_FUNCTION); // -> "T_FUNCTION"
?></example>
<example_result></example_result>
</object>

<object id=2441> 
<name>session_destroy</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Destroys all data registered to a session</short-description>
<description>bool session_destroy ( void ) 
 session_destroy() destroys all of the data associated with the current session. It does not unset any of the global variables associated with the session, or unset the session cookie. To use the session variables again, session_start() has to be called. 
 In order to kill the session altogether, like to log the user out, the session id must also be unset. If a cookie is used to propagate the session id (default behavior), then the session cookie must be deleted. setcookie() may be used for that. </description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Initialize the session.
// If you are using session_name("something"), don't forget it now!
session_start();
// Unset all of the session variables.
$_SESSION = array();
// If it's desired to kill the session, also delete the session cookie.
// Note: This will destroy the session, and not just the session data!
if (ini_get("session.use_cookies")) {
    $params = session_get_cookie_params();
    setcookie(session_name(), '', time() - 42000,
        $params["path"], $params["domain"],
        $params["secure"], $params["httponly"]
    );
}
// Finally, destroy the session.
session_destroy();
?></example>
<example_result></example_result>
</object>

<object id=2442> 
<name>http_build_query</name>
<versions>(PHP 5)</versions>
<short-description>Генерирует URL-кодированную строку запроса</short-description>
<description>string http_build_query ( mixed $query_data [, string $numeric_prefix [, string $arg_separator [, int $enc_type = PHP_QUERY_RFC1738 ]]] ) 
 Генерирует URL-кодированную строку запроса из предоставленного ассоциативного (или индексного) массива. </description>
<parameters>query_data - Может быть массивом или объектом, содержащим свойства. 
numeric_prefix - Если числовые индексы используются в базовом массиве и этот параметр указан, то будет добавлен числовой индекс только для элементов в базом массиве. 
arg_separator - arg_separator.output Используется в качестве разделителя аргументов, если этот параметр указан. 
enc_type - По умолчанию, PHP_QUERY_RFC1738. </parameters>
<output>Возвращает URL-кодированную строку. </output>
<errors></errors>
<example><?php
$data = array('foo'=>'bar',
              'baz'=>'boom',
              'cow'=>'milk',
              'php'=>'hypertext processor');
echo http_build_query($data) . "\n";
echo http_build_query($data, '', '&');
?></example>
<example_result>
 
foo=bar&baz=boom&cow=milk&php=hypertext+processor
foo=bar&baz=boom&cow=milk&php=hypertext+processor
</example_result>
</object>

<object id=2443> 
<name>dbplus_xunlockrel</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Free exclusive lock on relation</short-description>
<description>int dbplus_xunlockrel ( resource $relation ) 
 Releases an exclusive lock previously obtained by dbplus_xlockrel(). </description>
<parameters>relation - A relation opened by dbplus_open(). </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2444> 
<name>token_get_all</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Разбивает переданный исходный код на PHP-лексемы</short-description>
<description>array token_get_all ( string $source ) 
 Функция token_get_all() разбирает переданную строку source в языковые лексемы PHP используя лексический сканер Zend Engine. 
 Список лексем смотрите в Список меток (tokens) парсера, или используйте token_name() для перевода значения лексемы в строковое представление. </description>
<parameters>source - Исходный код PHP для разбора. </parameters>
<output>Массив идентификаторов лексем. Каждый индивидуальный идентификатор лексемы это или одиночный символ (например, ;, ., >, !, другие...), или трехэлементный массив, содержащий индекс лексемы в нулевом элементе, строку с оригинальным содежимым лексемы в первом элементе и номером строки во втором элементе. </output>
<errors></errors>
<example><?php
$tokens = token_get_all('<?php echo; ?>'); /* => array(
                                                  array(T_OPEN_TAG, '<?php'), 
                                                  array(T_ECHO, 'echo'),
                                                  ';',
                                                  array(T_CLOSE_TAG, '?>') ); */
/* Обратите внимание, в приведенном примере строка разбирается как T_INLINE_HTML
   вместо ожидаемого T_COMMENT (T_ML_COMMENT в PHP <5).
   Это происходит потому, что не используется открывающего/закрывающего тегов в "коде".
   Это будет эквиалентно помещению комментариев вне тегов <?php ?> в нормальном файле. */
$tokens = token_get_all('/* comment */'); // => array(array(T_INLINE_HTML, '/* comment */'));
?></example>
<example_result></example_result>
</object>

<object id=2445> 
<name>hw_GetAnchorsObj</name>
<versions>(PHP 4)</versions>
<short-description>Object records of anchors of document</short-description>
<description>array hw_getanchorsobj ( int $connection , int $objectID ) 
 Returns records with anchors of the document with object ID objectID. </description>
<parameters>connection - The connection identifier. 
objectID - The object identifier. </parameters>
<output>Returns an array of object records. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2446> 
<name>ibase_prepare</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Prepare a query for later binding of parameter placeholders and execution</short-description>
<description>resource ibase_prepare ( string $query ) resource ibase_prepare ( resource $link_identifier , string $query )</description>
<parameters>query - An InterBase query. </parameters>
<output>Returns a prepared query handle, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2447> 
<name>mhash_get_block_size</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the block size of the specified hash</short-description>
<description>int mhash_get_block_size ( int $hash ) 
 Gets the size of a block of the specified hash. </description>
<parameters>hash - The hash ID. One of the MHASH_hashname constants. </parameters>
<output>Returns the size in bytes or FALSE, if the hash does not exist. </output>
<errors></errors>
<example><?php
echo mhash_get_block_size(MHASH_MD5); // 16
?></example>
<example_result></example_result>
</object>

<object id=2448> 
<name>PDF_set_info_keywords</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Fill the keywords document info field [deprecated]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2449> 
<name>posix_errno</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Псевдоним posix_get_last_error()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2450> 
<name>mysql_ping</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Проверяет соединение с сервером и пересоединяется при необходимости</short-description>
<description>bool mysql_ping ([ resource $link_identifier ] ) 
 Проверяет работает ли соединение с сервером. Если оно утеряно, автоматически предпринимается попытка пересоединения. Эта функция может быть использована в скриптах, работающих на протяжении долгого времени. 
 Замечание: 
 Начиная с версии MySQL 5.0.13, возможность автовосстановления соединения была отключена. </description>
<parameters>link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Возвращает TRUE, если соединение в рабочем состоянии и FALSE в противном случае. </output>
<errors></errors>
<example><?php
set_time_limit(0);
$conn = mysql_connect('localhost', 'mysqluser', 'mypass');
$db   = mysql_select_db('mydb');
/* Подразумевается что этот запрос будет выполняться достаточно долго */
$result = mysql_query($sql);
if (!$result) {
    echo 'Запрос #1 не удался, выходим.';
    exit;
}
/* Проверяем что соединение еще работает, если нет, соединяемся заново */
if (!mysql_ping($conn)) {
    echo 'Соединение потеряно, выходим после запроса #1';
    exit;
}mysql_free_result($result);
/* Соединение еще работает, выполняем еще один запрос */
$result2 = mysql_query($sql2);
?></example>
<example_result></example_result>
</object>

<object id=2451> 
<name>rtrim</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Удаляет пробелы (или другие символы) из конца строки</short-description>
<description>string rtrim ( string $str [, string $charlist ] ) 
 Эта функция возвращает строку str с удаленными из конца строки пробелами. 
 Если второй параметр не передан, rtrim() удаляет следующие символы: " " (ASCII 32 (0x20)), обычный пробел. "\t" (ASCII 9 (0x09)), символ табуляции. "\n" (ASCII 10 (0x0A)), символ перевода строки. "\r" (ASCII 13 (0x0D)), символ возврата каретки. "\0" (ASCII 0 (0x00)), NUL-байт. "\x0B" (ASCII 11 (0x0B)), вертикальная табуляция. </description>
<parameters>str - Входная строка. 
charlist - С помощью параметра charlist можно также указать удаляемые символы. Просто перечислите все символы, которые вы хотите удалить. Можно указать конструкцию .. для обозначения диапазона символов. </parameters>
<output>Возвращает модифицированную строку. </output>
<errors></errors>
<example><?php
$text = "\t\tThese are a few words :) ...  ";
$binary = "\x09Example string\x0A";
$hello  = "Hello World";
var_dump($text, $binary, $hello);
print "\n";
$trimmed = rtrim($text);
var_dump($trimmed);
$trimmed = rtrim($text, " \t.");
var_dump($trimmed);
$trimmed = rtrim($hello, "Hdle");
var_dump($trimmed);
// удаляем управляющие ASCII-символы с конца $binary
// (от 0 до 31 включительно)
$clean = rtrim($binary, "\x00..\x1F");
var_dump($clean);
?></example>
<example_result>
 
string(32) "        These are a few words :) ...  "
string(16) "    Example string
"
string(11) "Hello World"

string(30) "        These are a few words :) ..."
string(26) "        These are a few words :)"
string(9) "Hello Wor"
string(15) "    Example string"
</example_result>
</object>

<object id=2452> 
<name>curl_setopt</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Устанавливает параметр для сеанса CURL</short-description>
<description>bool curl_setopt ( resource $ch , int $option , mixed $value ) 
 Устанавливает параметр для указанного сеанса cURL. </description>
<parameters>ch - Дескриптор cURL, полученный из curl_init().
option - Устанавливаемый параметр CURLOPT_XXX. 
value - Значение параметра option. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// создание нового ресурса cURL
$ch = curl_init();
// установка URL и других необходимых параметров
curl_setopt($ch, CURLOPT_URL, "http://www.example.com/");
curl_setopt($ch, CURLOPT_HEADER, false);
// загрузка страницы и выдача её браузеру
curl_exec($ch);
// завершение сеанса и освобождение ресурсов
curl_close($ch);
?></example>
<example_result>
 
Array
(
    [name] => Foo
)
Array
(
    [file] => Array
        (
            [name] => test.png
            [type] => image/png
            [tmp_name] => /tmp/phpcpjNeQ
            [error] => 0
            [size] => 279
        )

)

</example_result>
</object>

<object id=2453> 
<name>fgetss</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Прочитать строку из файла и отбросить HTML-теги</short-description>
<description>string fgetss ( resource $handle [, int $length [, string $allowable_tags ]] ) 
 Данная функция идентична функции fgets() с той только разницей, что fgetss() осуществляет отбрасывание любых HTML и PHP-тегов из прочитанной строки. </description>
<parameters>handle - Указатель на файл должен быть корректным и указыватьна файл, успешно открытый функциями fopen() илиfsockopen() (и все еще не закрытым функцией fclose()).
length - Длина получаемых данных. 
allowable_tags - Можно использовать третий небязательный параметр для указания тегов, которые не нужно вырезать. </parameters>
<output>Возвращает строку из length - 1 байт, прочтенных из файла, на который указывает дескриптор handle, с вырезанными HTML и PHP тегами. </output>
<errors></errors>
<example><?php
$str = <<<EOD
<html><body>
 <p>Welcome! Today is the <?php echo(date('jS')); ?> of <?= date('F'); ?>.</p>
</body></html>
Text outside of the HTML block.
EOD;
file_put_contents('sample.php', $str);
$handle = @fopen("sample.php", "r");
if ($handle) {
    while (!feof($handle)) {
        $buffer = fgetss($handle, 4096);
        echo $buffer;
    }
    fclose($handle);
}?></example>
<example_result>
 
 Welcome! Today is the  of .

Text outside of the HTML block.
</example_result>
</object>

<object id=2454> 
<name>fdf_set_opt</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Sets an option of a field</short-description>
<description>bool fdf_set_opt ( resource $fdf_document , string $fieldname , int $element , string $str1 , string $str2 ) 
 Sets options of the given field. </description>
<parameters>fdf_document - The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string(). 
fieldname - Name of the FDF field, as a string. 
element - 
str1 - 
str2 - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2455> 
<name>ovrimos_field_name</name>
<versions>(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)</versions>
<short-description>Returns the output column name</short-description>
<description>string ovrimos_field_name ( int $result_id , int $field_number ) 
 Returns the output column name at the index specified. </description>
<parameters>result_id - A result identifier, returned by ovrimos_execute() or ovrimos_exec(). 
field_number - The field number. Starts at 1. </parameters>
<output>Returns the field name as a string, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2456> 
<name>imap_num_recent</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the number of recent messages in current mailbox</short-description>
<description>int imap_num_recent ( resource $imap_stream ) 
 Gets the number of recent messages in the current mailbox. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().</parameters>
<output>Returns the number of recent messages in the current mailbox, as an integer. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2457> 
<name>stream_socket_server</name>
<versions>(PHP 5)</versions>
<short-description>Создаёт интернет-сокет или доменный сокет Unix</short-description>
<description>resource stream_socket_server ( string $local_socket [, int &$errno [, string &$errstr [, int $flags = STREAM_SERVER_BIND | STREAM_SERVER_LISTEN [, resource $context ]]]] ) 
 Создаёт потоковый или датаграммный сокет на указанном local_socket. 
 Эта функция только создаёт сокет. Чтобы начать принимать соединения используйте stream_socket_accept(). </description>
<parameters>local_socket - Тип создаваемого сокета определяется по транспорту, указанному с использованием стандартного форматирования URL: transport://target. 
errno - Если необязательные аргументы errno и errstr присутствуют, то они будут установлены для указания действительного уровня системной ошибки, которая происходит при системных вызовах socket(), bind() и listen(). Если значение, возвращаемое в errno, равно 0 и функция возвратила FALSE, это означает, что ошибка произошла до вызова bind(). Скорее всего это произошло из-за проблемы инициализации сокета. Примите во внимание, что аргументы errno и errstr должны всегда передаваться по ссылке. 
errstr - Смотрите описание параметра errno. 
flags - Битовая маска, которая может быть установлена в любую комбинацию флагов для создания сокета. 
context - </parameters>
<output>Возвращает созданный поток, или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$socket = stream_socket_server("tcp://0.0.0.0:8000", $errno, $errstr);
if (!$socket) {
  echo "$errstr ($errno)<br />\n";
} else {
  while ($conn = stream_socket_accept($socket)) {
    fwrite($conn, 'Локальное время ' . date('n/j/Y g:i a') . "\n");
    fclose($conn);
  }
  fclose($socket);
}?></example>
<example_result></example_result>
</object>

<object id=2458> 
<name>imagealphablending</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Set the blending mode for an image</short-description>
<description>bool imagealphablending ( resource $image , bool $blendmode ) 
 imagealphablending() allows for two different modes of drawing on truecolor images. In blending mode, the alpha channel component of the color supplied to all drawing function, such as imagesetpixel() determines how much of the underlying color should be allowed to shine through. As a result, gd automatically blends the existing color at that point with the drawing color, and stores the result in the image. The resulting pixel is opaque. In non-blending mode, the drawing color is copied literally with its alpha channel information, replacing the destination pixel. Blending mode is not available when drawing on palette images. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
blendmode - Whether to enable the blending mode or not. On true color images the default value is TRUE otherwise the default value is FALSE </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Create image
$im = imagecreatetruecolor(100, 100);
// Set alphablending to on
imagealphablending($im, true);
// Draw a square
imagefilledrectangle($im, 30, 30, 70, 70, imagecolorallocate($im, 255, 0, 0));
// Output
header('Content-type: image/png');
imagepng($im);
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=2459> 
<name>bcpowmod</name>
<versions>(PHP 5)</versions>
<short-description>Возводит одно число в степень другого и возвращает остаток от деления результата на третье число </short-description>
<description>string bcpowmod ( string $left_operand , string $right_operand , string $modulus [, int $scale ] ) 
 Используйте метод быстрого возведения числа left_operand в степень right_operand и получения остатка от деления на modulus. </description>
<parameters>left_operand - Левый операнд (основание степени) в виде строки. 
right_operand - Правый операнд (показатель степени) в виде строки. 
modulus - Модуль (на него делится результат) в виде строки. 
scale - Этот необязательный параметр используется для установки количества знаков после десятичного разделителя в результате.Вы также можете установить этот параметр глобально для всех функций с помощью bcscale().</parameters>
<output>Возвращает результат в виде строки или NULL, если modulus равен 0. </output>
<errors></errors>
<example><?php
$a = bcpowmod($x, $y, $mod);
$b = bcmod(bcpow($x, $y), $mod);
// $a == $b.
?></example>
<example_result></example_result>
</object>

<object id=2460> 
<name>bcmod</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает остаток от деления чисел с произвольной точностью </short-description>
<description>string bcmod ( string $left_operand , string $modulus ) 
 Получает остаток от деления left_operand на modulus. </description>
<parameters>left_operand - Левый операнд в виде строки. 
modulus - Правый операнд (модуль) в виде строки. </parameters>
<output>Возвращает остаток от деления в виде строки или NULL, если modulus равен 0. </output>
<errors></errors>
<example><?php
echo bcmod('4', '2'); // 0
echo bcmod('2', '4'); // 2
?></example>
<example_result></example_result>
</object>

<object id=2461> 
<name>base_convert</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Преобразование числа между произвольными системами счисления</short-description>
<description>string base_convert ( string $number , int $frombase , int $tobase ) 
 Возвращает строку, содержащую число number представленное в системе счисления tobase. Система счисления, в которой дано число number указана в frombase. Значения frombase и tobase должны быть между 2 и 36 (включительно). Цифры в числах, представленных в системе счисления выше десятичной, будут представлены буквами a-z, гда a обозначает 10, b обозначает 11 и z - 35. Внимание 
 base_convert() может потерять точность представления больших чисел из-за свойств связанных с внутренним представлением типов "double" или "float". См. также раздел руководства Числа с плавающей точкой для более конкретной информации и ограничений. </description>
<parameters>number - Число для преобразования 
frombase - Основание системы счисления числа number 
tobase - Основание системы счисления для преобразования числа number </parameters>
<output>number преобразованное в систему счисления tobase </output>
<errors></errors>
<example><?php
$hexadecimal = 'A37334';
echo base_convert($hexadecimal, 16, 2);
?></example>
<example_result>
 
101000110111001100110100
</example_result>
</object>

<object id=2462> 
<name>metaphone</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает ключ metaphone для строки</short-description>
<description>string metaphone ( string $str [, int $phonemes = 0 ] ) 
 Возвращает ключ metaphone для строки str. 
 Подобно функции soundex(), metaphone возвращает одинаковое значение для слов, имеющих сходное произношение. Эта функция более точна, чем soundex(), так как учитывает основные правила произношения английского языка. Длина возвращаемой строки не фиксирована. 
 Функция metaphone была написана Lawrence Philips <lphilips at verity dot com> и описана в книге ["Practical Algorithms for Programmers", Binstock & Rex, Addison Wesley, 1995]. </description>
<parameters>str - Входная строка. 
phonemes - Этот параметр выставляет ограничение в phonemes символов на длину возвращаемого ключа metaphone. Значение по умолчанию 0 означает отсутствие ограничений. </parameters>
<output>Возвращает ключ metaphone в виде строки, или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
var_dump(metaphone('programming'));
var_dump(metaphone('programmer'));
?></example>
<example_result>
 
string(7) "PRKRMNK"
string(6) "PRKRMR"
</example_result>
</object>

<object id=2463> 
<name>zip_close</name>
<versions>(PHP 4 >= 4.1.0, PHP 5 >= 5.2.0, PECL zip >= 1.0.0)</versions>
<short-description>Закрывает дескриптор ZIP-архива</short-description>
<description>void zip_close ( resource $zip ) 
 Закрывает дескриптор ZIP-архива. </description>
<parameters>zip - ZIP-файл должен быть открыт с помощью функции zip_open(). </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2464> 
<name>array_replace_recursive</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Рекурсивно заменяет элементы первого массива элементами переданных массивов</short-description>
<description>array array_replace_recursive ( array &$array , array &$array1 [, array &$... ] ) 
 array_replace_recursive() заменяет значения первого массива array на соответствующие по ключам значения из всех следующих массивов. Если ключ из первого массива есть во втором, его значение будет заменено на значение из второго массива. Если ключ есть во втором массиве, но отсутствует в первом, он будет создан в первом массиве. Если ключ есть только в первом массиве, то он остается как есть. Если передано несколько массивов, они будут обработаны по порядку, последующие перезаписывают предыдущие значения. 
 array_replace_recursive() - рекурсивная функция: она будет рекурсивно углубляться в массивы и применять к всем внутренним значениям один и тот же процесс. 
 Если значение, переданное в array является скалярным, оно будет заменено значением в array1, которое может быть как скалярным так и массивом. Если оба значения, переданные в array и array1 - массивы, array_replace_recursive() будет заменять их значения рекурсивно. </description>
<parameters>array - Массив, элементы которого будут заменены. 
array1 - Массив, из которого будут взяты элементы для замены. 
... - Дополнительные массивы, из которых будут браться элементы для замены. </parameters>
<output>Возвращает array, или NULL, если произошла ошибка. </output>
<errors></errors>
<example><?php
$base = array('citrus' => array( "orange") , 'berries' => array("blackberry", "raspberry"), );
$replacements = array('citrus' => array('pineapple'), 'berries' => array('blueberry'));
$basket = array_replace_recursive($base, $replacements);
print_r($basket);
$basket = array_replace($base, $replacements);
print_r($basket);
?></example>
<example_result>
 
Array
(
    [citrus] => Array
        (
            [0] => pineapple
        )

    [berries] => Array
        (
            [0] => blueberry
            [1] => raspberry
        )

)
Array
(
    [citrus] => Array
        (
            [0] => pineapple
        )

    [berries] => Array
        (
            [0] => blueberry
        )

)

</example_result>
</object>

<object id=2465> 
<name>msession_connect</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.1.2)</versions>
<short-description>Connect to msession server</short-description>
<description>bool msession_connect ( string $host , string $port ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2466> 
<name>imagecreatefromstring</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Create a new image from the image stream in the string</short-description>
<description>resource imagecreatefromstring ( string $data ) 
 imagecreatefromstring() returns an image identifier representing the image obtained from the given data. These types will be automatically detected if your build of PHP supports them: JPEG, PNG, GIF, WBMP, and GD2. </description>
<parameters>image - A string containing the image data. </parameters>
<output>An image resource will be returned on success. FALSE is returned if the image type is unsupported, the data is not in a recognised format, or the image is corrupt and cannot be loaded. </output>
<errors></errors>
<example><?php
$data = 'iVBORw0KGgoAAAANSUhEUgAAABwAAAASCAMAAAB/2U7WAAAABl'
       . 'BMVEUAAAD///+l2Z/dAAAASUlEQVR4XqWQUQoAIAxC2/0vXZDr'
       . 'EX4IJTRkb7lobNUStXsB0jIXIAMSsQnWlsV+wULF4Avk9fLq2r'
       . '8a5HSE35Q3eO2XP1A1wQkZSgETvDtKdQAAAABJRU5ErkJggg==';
$data = base64_decode($data);
$im = imagecreatefromstring($data);
if ($im !== false) {
    header('Content-Type: image/png');
    imagepng($im);
    imagedestroy($im);
}else {
    echo 'An error occurred.';
}?></example>
<example_result></example_result>
</object>

<object id=2467> 
<name>rsort</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сортирует массив в обратном порядке</short-description>
<description>bool rsort ( array &$array [, int $sort_flags = SORT_REGULAR ] ) 
 Эта функция сортирует массив в обратном порядке (от большего к меньшему). </description>
<parameters>array - Входной массив. 
sort_flags - Вы можете изменить поведение сортировки, используя дополнительный параметр sort_flags, подробнее смотрите функцию sort(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$fruits = array("lemon", "orange", "banana", "apple");
rsort($fruits);
foreach ($fruits as $key => $val) {
    echo "$key = $val\n";
}?></example>
<example_result>
 
0 = orange
1 = lemon
2 = banana
3 = apple
</example_result>
</object>

<object id=2468> 
<name>symlink</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Создаёт символическую ссылку</short-description>
<description>bool symlink ( string $target , string $link ) 
 symlink() создаёт символическую ссылку на существующий файл target с именем link. </description>
<parameters>target - Цель ссылки. 
link - Имя ссылки. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$target = 'uploads.php';
$link = 'uploads';
symlink($target, $link);
echo readlink($link);
?></example>
<example_result></example_result>
</object>

<object id=2469> 
<name>PDF_place_image</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Place image on the page [deprecated]</short-description>
<description>bool PDF_place_image ( resource $pdfdoc , int $image , float $x , float $y , float $scale ) 
 Places an image and scales it. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. 
 This function is deprecated since PDFlib version 5, use PDF_fit_image() instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2470> 
<name>fputcsv</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Форматирует строку в виде CSV и записывает её в файловый указатель</short-description>
<description>int fputcsv ( resource $handle , array $fields [, string $delimiter = &#039;,&#039; [, string $enclosure = &#039;"&#039; ]] ) 
 fputcsv() форматирует строку (переданную в виде массива fields) в виде CSV и записывает её (заканчивая переводом строки) в указанный файл handle. </description>
<parameters>handle - Указатель на файл должен быть корректным и указыватьна файл, успешно открытый функциями fopen() илиfsockopen() (и все еще не закрытым функцией fclose()).
fields - Массив значений. 
delimiter - Дополнительный параметр delimiter устанавливает разделитель полей (только один символ). 
enclosure - Дополнительный параметр enclosure устанавливает ограничитель полей (только один символ). </parameters>
<output>Возвращает длину записанной строки или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$list = array (
    array('aaa', 'bbb', 'ccc', 'dddd'),
    array('123', '456', '789'),
    array('"aaa"', '"bbb"')
);
$fp = fopen('file.csv', 'w');
foreach ($list as $fields) {
    fputcsv($fp, $fields);
}
fclose($fp);
?></example>
<example_result>
 
aaa,bbb,ccc,dddd
123,456,789
"""aaa""","""bbb"""

</example_result>
</object>

<object id=2471> 
<name>mysql_tablename</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает имя таблицы, содержащей указанное поле</short-description>
<description>string mysql_tablename ( resource $result , int $i ) 
 Возвращает имя таблицы из result. 
 Данная функция устарела. Вместо нее рекомендуется использование mysql_query() с SQL-запросом SHOW TABLES [FROM db_name] [LIKE &#039;pattern&#039;]. </description>
<parameters>result - Дескриптор результата типа resource, полученный из вызова mysql_list_tables(). 
i - Целочисленный индекс (номер ряда/таблицы) </parameters>
<output>Имя таблицы в случае успеха или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
mysql_connect("localhost", "mysql_user", "mysql_password");
$result = mysql_list_tables("mydb");
$num_rows = mysql_num_rows($result);
for ($i = 0; $i < $num_rows; $i++) {
    echo "Table: ", mysql_tablename($result, $i), "\n";
}
mysql_free_result($result);
?></example>
<example_result></example_result>
</object>

<object id=2472> 
<name>shm_remove</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Removes shared memory from Unix systems</short-description>
<description>bool shm_remove ( resource $shm_identifier ) 
 shm_remove() removes the shared memory shm_identifier. All data will be destroyed. </description>
<parameters>shm_identifier - The shared memory identifier as returned by shm_attach() </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2473> 
<name>imap_mail_compose</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Create a MIME message based on given envelope and body sections</short-description>
<description>string imap_mail_compose ( array $envelope , array $body ) 
 Create a MIME message based on the given envelope and body sections. </description>
<parameters>envelope - An associative array of headers fields. Valid keys are: "remail", "return_path", "date", "from", "reply_to", "in_reply_to", "subject", "to", "cc", "bcc", "message_id" and "custom_headers" (which contains associative array of other headers). 
body - An indexed array of bodies </parameters>
<output>Returns the MIME message. </output>
<errors></errors>
<example><?php
$envelope["from"]= "joe@example.com";
$envelope["to"]  = "foo@example.com";
$envelope["cc"]  = "bar@example.com";
$part1["type"] = TYPEMULTIPART;
$part1["subtype"] = "mixed";
$filename = "/tmp/imap.c.gz";
$fp = fopen($filename, "r");
$contents = fread($fp, filesize($filename));
fclose($fp);
$part2["type"] = TYPEAPPLICATION;
$part2["encoding"] = ENCBINARY;
$part2["subtype"] = "octet-stream";
$part2["description"] = basename($filename);
$part2["contents.data"] = $contents;
$part3["type"] = TYPETEXT;
$part3["subtype"] = "plain";
$part3["description"] = "description3";
$part3["contents.data"] = "contents.data3\n\n\n\t";
$body[1] = $part1;
$body[2] = $part2;
$body[3] = $part3;
echo nl2br(imap_mail_compose($envelope, $body));
?></example>
<example_result></example_result>
</object>

<object id=2474> 
<name>image2wbmp</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Выводит изображение в браузер или пишет в файл</short-description>
<description>bool image2wbmp ( resource $image [, string $filename [, int $threshold ]] ) 
 image2wbmp() outputs or save a WBMP version of the given image. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
filename - Path to the saved file. If not given, the raw image stream will be outputted directly. 
threshold - Threshold value, between 0 and 255 (inclusive). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$file = 'php.png';
$image = imagecreatefrompng($file);
header('Content-Type: ' . image_type_to_mime_type(IMAGETYPE_WBMP));
image2wbmp($image); // output the stream directly
imagedestroy($image);
?></example>
<example_result></example_result>
</object>

<object id=2475> 
<name>file</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Читает содержимое файла и помещает его в массив</short-description>
<description>array file ( string $filename [, int $flags = 0 [, resource $context ]] ) 
 Читает содержимое файла и помещает его в массив. 
 Замечание: 
 Можно также использовать функцию file_get_contents() для получения файла в виде строки. </description>
<parameters>filename - Путь к файлу. </parameters>
<output>Возвращает файл в виде массива. Каждый элемент массива соответствует строке файла, с символами новой строки включительно. В случае ошибки file() возвращает FALSE. </output>
<errors></errors>
<example><?php
// Получает содержимое файла в виде массива. В данном примере мы используем
// обращение по протоколу HTTP для получения HTML-кода с удаленного сервера.
$lines = file('http://www.example.com/');
// Осуществим проход массива и выведем содержимое в виде HTML-кода вместе с номерами строк.
foreach ($lines as $line_num => $line) {
    echo "Строка #<b>{$line_num}</b> : " . htmlspecialchars($line) . "<br />\n";
}
// Второй пример. Получим содержание web-страницы в виде одной строки.
// См.также описание функции file_get_contents().
$html = implode('', file('http://www.example.com/'));
// Используем необязательный параметр flags (начиная с PHP 5)
$trimmed = file('somefile.txt', FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
?></example>
<example_result></example_result>
</object>

<object id=2476> 
<name>swf_showframe</name>
<versions>(PHP 4)</versions>
<short-description>Display the current frame</short-description>
<description>void swf_showframe ( void ) 
 Outputs the current frame. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2477> 
<name>PDF_set_duration</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set duration between pages [deprecated]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2478> 
<name>hw_GetObjectByQuery</name>
<versions>(PHP 4)</versions>
<short-description>Search object</short-description>
<description>array hw_getobjectbyquery ( int $connection , string $query , int $max_hits ) 
 Searches for objects on the whole server and returns an array of object ids. </description>
<parameters>connection - The connection identifier. 
query - The query will only work with indexed attributes. 
max_hits - The maximum number of matches is limited to max_hits. If max_hits is set to -1 the maximum number of matches is unlimited. </parameters>
<output>Returns an array of object ids. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2479> 
<name>curl_multi_select</name>
<versions>(PHP 5)</versions>
<short-description>Ждет активности на любом curl_multi соединении</short-description>
<description>int curl_multi_select ( resource $mh [, float $timeout = 1.0 ] ) 
 Блокирует выполнение скрипта, пока какое-либо из curl_multi соединений не станет активным. </description>
<parameters>mh - Мульти-дескриптор cURL, полученный из curl_multi_init().
timeout - Время, в секундах, для ожидания ответа. </parameters>
<output>В случае успеха, возвращает количество дескрипторов, содержащихся в наборах дескрипторов. В случае неудачи эта функция вернет -1 при ошибке выборки или таймаута (из нижележащего системного вызова выборки). </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2480> 
<name>vfprintf</name>
<versions>(PHP 5)</versions>
<short-description>Записывает отформатированную строку в поток</short-description>
<description>int vfprintf ( resource $handle , string $format , array $args ) 
 Записывает строку, отформатированную в соответствии с параметром format в поток handle. 
 Данная функция похожа на fprintf(), но принимает не переменное число аргументов, а массив. </description>
<parameters>handle - 
format - Описание параметра format смотрите в документации к функции sprintf(). 
args - </parameters>
<output>Возвращает длину выведенной строки. </output>
<errors></errors>
<example><?php
if (!($fp = fopen('date.txt', 'w')))
    return;
vfprintf($fp, "%04d-%02d-%02d", array($year, $month, $day));
// запишет дату в формате ISO в date.txt
?></example>
<example_result></example_result>
</object>

<object id=2481> 
<name>mb_strpos</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Find position of first occurrence of string in a string</short-description>
<description>int mb_strpos ( string $haystack , string $needle [, int $offset = 0 [, string $encoding ]] ) 
 Finds position of the first occurrence of a string in a string. 
 Performs a multi-byte safe strpos() operation based on number of characters. The first character&#039;s position is 0, the second character position is 1, and so on. </description>
<parameters>haystack - The string being checked. 
needle - The string to find in haystack. In contrast with strpos(), numeric values are not applied as the ordinal value of a character. 
offset - The search offset. If it is not specified, 0 is used. 
encoding - Параметр encodingпредставляет собой символьную кодировку. Если он опущен, вместо него будет использовано значение внутренней кодировки.</parameters>
<output>Returns the numeric position of the first occurrence of needle in the haystack string. If needle is not found, it returns FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2482> 
<name>msql_list_tables</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>List tables in an mSQL database</short-description>
<description>resource msql_list_tables ( string $database [, resource $link_identifier ] ) 
 msql_list_tables() lists the tables on the specified database. </description>
<parameters>database - The name of the database. 
link_identifier - Соединение mSQL.Если не указан, используется последнее соединение, открытое msql_connect().Если такое соединение не было найдено, функция попытается установить новое, как если бы была вызвана функцияmsql_connect(), и использовать его.</parameters>
<output>Returns a result set which may be traversed with any function that fetches result sets, such as msql_fetch_array(). On failure, this function will return FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2483> 
<name>xml_set_default_handler</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Установка обработчика по умолчанию </short-description>
<description>bool xml_set_default_handler ( resource $parser , callback $handler ) 
 Задает обработчик по умолчанию для XML анализатора parser. </description>
<parameters>parser - Ссылка на XML анализатор. 
handler - handler - строка содержащая имя функции, которая должна быть определена на момент вызова функции xml_parse() из анализатора parser. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2484> 
<name>ncurses_slk_attr</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Returns current soft label key attribute</short-description>
<description>int ncurses_slk_attr ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>The attribute, as an integer. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2485> 
<name>curl_getinfo</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Возвращает информацию об определенной операции</short-description>
<description>mixed curl_getinfo ( resource $ch [, int $opt = 0 ] ) 
 Возвращает информацию о последней операции. </description>
<parameters>ch - Дескриптор cURL, полученный из curl_init().
opt - Может принимать значение одной из следующих констант: CURLINFO_EFFECTIVE_URL - Последний использованный URL CURLINFO_HTTP_CODE - Последний полученный HTTP код CURLINFO_FILETIME - Удаленная (серверная) дата загруженного документа, если она неизвестна, возвращается -1. CURLINFO_TOTAL_TIME - Полное время выполнения последней операции в секундах. CURLINFO_NAMELOOKUP_TIME - Время разрешения имени сервера в секундах. CURLINFO_CONNECT_TIME - Время, затраченное на установку соединения, в секундах CURLINFO_PRETRANSFER_TIME - Время, прошедшее от начала операции до готовности к фактической передаче данных, в секундах CURLINFO_STARTTRANSFER_TIME - Время, прошедшее от начала операции до момента передачи первого байта данных, в секундах CURLINFO_REDIRECT_TIME - Общее время, затраченное на перенаправления, в секундах CURLINFO_SIZE_UPLOAD - Общее количество байт при закачке CURLINFO_SIZE_DOWNLOAD - Общее количество байт при загрузке CURLINFO_SPEED_DOWNLOAD - Средняя скорость загрузки CURLINFO_SPEED_UPLOAD - Средняя скорость закачки CURLINFO_HEADER_SIZE - Суммарный размер всех полученных заголовков CURLINFO_HEADER_OUT - Посылаемая строка запроса. Для работы этого параметра, добавьте опцию CURLINFO_HEADER_OUT к дескриптору с помощью вызова curl_setopt() CURLINFO_REQUEST_SIZE - Суммарный размер всех отправленных запросов, в настоящее время используется только для HTTP запросов CURLINFO_SSL_VERIFYRESULT - Результат проверки SSL сертификата, запрошенной с помощью установки параметра CURLOPT_SSL_VERIFYPEER CURLINFO_CONTENT_LENGTH_DOWNLOAD - размер скачанных данных, прочитанный из заголовка Content-Length: CURLINFO_CONTENT_LENGTH_UPLOAD - Размер закачиваемых данных CURLINFO_CONTENT_TYPE - Содержимое полученного заголовка Content-Type:, или NULL, если сервер не послал правильный заголовок Content-Type: </parameters>
<output>Если параметр opt указан, то возвращается его значение в виде строки. Иначе, возвращается ассоциативный массив со следующими индексами (которые соответствуют значениям аргумента opt), или FALSE в случае ошибки: "url" "content_type" "http_code" "header_size" "request_size" "filetime" "ssl_verify_result" "redirect_count" "total_time" "namelookup_time" "connect_time" "pretransfer_time" "size_upload" "size_download" "speed_download" "speed_upload" "download_content_length" "upload_content_length" "starttransfer_time" "redirect_time" "certinfo" "request_header" (Это возвращается только при установленной опции CURLINFO_HEADER_OUT с помощью вызова curl_setopt() до выполнения запроса) </output>
<errors></errors>
<example><?php
// Создаем дескриптор cURL
$ch = curl_init('http://www.yahoo.com/');
// Запускаем
curl_exec($ch);
// Проверяем наличие ошибок
if(!curl_errno($ch))
{ $info = curl_getinfo($ch);
 echo 'Прошло ' . $info['total_time'] . ' секунд во время запроса к ' . $info['url'];
}
// Close handle
curl_close($ch);
?></example>
<example_result></example_result>
</object>

<object id=2486> 
<name>ftp_raw</name>
<versions>(PHP 5)</versions>
<short-description>Отправляет произвольную команду FTP-серверу</short-description>
<description>array ftp_raw ( resource $ftp_stream , string $command ) 
 Отправляет произвольную команду command FTP-серверу. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером. 
command - Команда. </parameters>
<output>Возвращает ответ сервера в виде массива строк. Функция ftp_raw() не интерпретирует ответ сервера и не определяет, успешно ли выполнена команда. </output>
<errors></errors>
<example><?php
$fp = ftp_connect("ftp.example.com");
/* То же самое, что: 
   ftp_login($fp, "joeblow", "secret"); */
ftp_raw($fp, "USER joeblow");
ftp_raw($fp, "PASS secret");
?></example>
<example_result></example_result>
</object>

<object id=2487> 
<name>session_is_registered</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Find out whether a global variable is registered in a session</short-description>
<description>bool session_is_registered ( string $name ) 
 Finds out whether a global variable is registered in a session. Внимание
 С версии PHP 5.3.0 эта функция считаетсяУСТАРЕВШЕЙ. Крайне не рекомендуется полагаться на эту возможность.</description>
<parameters>name - The variable name. </parameters>
<output>session_is_registered() returns TRUE if there is a global variable with the name name registered in the current session, FALSE otherwise. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2488> 
<name>m_transsend</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Finalize and send the transaction</short-description>
<description>int m_transsend ( resource $conn , int $identifier ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
identifier - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2489> 
<name>xml_get_current_column_number</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает от XML парсера номер текущего столбца </short-description>
<description>int xml_get_current_column_number ( resource $parser ) 
 Получает текущий номер столбца заданного XML парсера. </description>
<parameters>parser - Ссылка на парсер XML для получения номера столбца. </parameters>
<output>Эта функция возвращает FALSE, если ссылка параметра parser не ведет к действующему парсеру, или же возвращает номер столбца на текущей строке (определенной с помощью xml_get_current_line_number()) согласно текущему положению указателя парсера. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2490> 
<name>pspell_save_wordlist</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Сохраняет персональный список слов в файле</short-description>
<description>bool pspell_save_wordlist ( int $dictionary_link ) 
 pspell_save_wordlist() сохраняет персональный список слов текущей сессии. Расположение файлов для сохранения указывается с помощью pspell_config_personal() и (необязательно) pspell_config_repl(). </description>
<parameters>dictionary_link - Ссылка на словарь, открытый с помощью pspell_new_personal(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$pspell_config = pspell_config_create("en");
pspell_config_personal($pspell_config, "/tmp/dicts/newdict");
$pspell_link = pspell_new_config($pspell_config);
pspell_add_to_personal($pspell_link, "Vlad");
pspell_save_wordlist($pspell_link);
?></example>
<example_result></example_result>
</object>

<object id=2491> 
<name>ncurses_mvcur</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Move cursor immediately </short-description>
<description>int ncurses_mvcur ( int $old_y , int $old_x , int $new_y , int $new_x ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>old_y - 
old_x - 
new_y - 
new_x - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2492> 
<name>stream_context_get_options</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Получает настройки для потока/обёртки/контекста</short-description>
<description>array stream_context_get_options ( resource $stream_or_context ) 
 Возвращает массив настроек на указанном потоке или контексте. </description>
<parameters>stream_or_context - Поток stream или контекст context, у которого будут получены настройки </parameters>
<output>Возвращает ассоциативный массив с настройками. </output>
<errors></errors>
<example><?php
$params = array("method" => "POST");
stream_context_get_default(array("http" => $params));
var_dump(stream_context_get_options(stream_context_get_default()));
?></example>
<example_result>
 
array(1) {
  ["http"]=>
  array(1) {
    ["method"]=>
    string(4) "POST"
  }
}
</example_result>
</object>

<object id=2493> 
<name>sqlite_create_aggregate</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Регистрирует агрегирующую функцию для использования в SQL-запросах</short-description>
<description>void sqlite_create_aggregate ( resource $dbhandle , string $function_name , callback $step_func , callback $finalize_func [, int $num_args = -1 ] ) 
 Объектно-ориентированный стиль (метод): void SQLiteDatabase::createAggregate ( string $function_name , callback $step_func , callback $finalize_func [, int $num_args = -1 ] )</description>
<parameters>dbhandle - Ресурс базы данных SQLite, полученный из функции sqlite_open() в случае использования процедурного подхода. Этот параметр не требуется при использовании объектно-ориентированного подхода. 
function_name - Имя функции, используемой в SQL-запросах. 
step_func - Callback-функция, вызываемая для каждого ряда результирующего набора. Функция принимает параметры &$context, $value, .... 
finalize_func - Callback-функция для агрегации собранных данных из каждого ряда. Функция принимает параметр &$context и должна вернуть итоговый результат агрегации. 
num_args - Подсказка парсеру SQLite, если callback-функция принимает известное количество параметров. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
$data = array(
   'one',
   'two',
   'three',
   'four',
   'five',
   'six',
   'seven',
   'eight',
   'nine',
   'ten',
   );
$dbhandle = sqlite_open(':memory:');
sqlite_query($dbhandle, "CREATE TABLE strings(a)");
foreach ($data as $str) {
    $str = sqlite_escape_string($str);
    sqlite_query($dbhandle, "INSERT INTO strings VALUES ('$str')");
}
function max_len_step(&$context, $string) 
{    if (strlen($string) > $context) {
        $context = strlen($string);
    }
}
function max_len_finalize(&$context) 
{    return $context;
}
sqlite_create_aggregate($dbhandle, 'max_len', 'max_len_step', 'max_len_finalize');
var_dump(sqlite_array_query($dbhandle, 'SELECT max_len(a) from strings'));
?></example>
<example_result></example_result>
</object>

<object id=2494> 
<name>PDF_add_outline</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Add bookmark for current page [deprecated]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2495> 
<name>dbplus_freelock</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Release write lock on tuple</short-description>
<description>int dbplus_freelock ( resource $relation , string $tuple ) 
 Releases a write lock on the given tuple previously obtained by dbplus_getlock(). </description>
<parameters>relation - A relation opened by dbplus_open(). 
tuple - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2496> 
<name></name>
<versions>(PHP 4, PHP5)</versions>
<short-description></short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2497> 
<name>ncurses_wstandout</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Enter standout mode for a window</short-description>
<description>int ncurses_wstandout ( resource $window ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>window - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2498> 
<name>glob</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Находит файловые пути, совпадающие с шаблоном</short-description>
<description>array glob ( string $pattern [, int $flags = 0 ] ) 
 Функция glob() ищет все пути, совпадающие с шаблоном pattern согласно правилам, используемым в функции glob() библиотеки libc, которые похожи на правила, используемые большинством распространённых оболочек. </description>
<parameters>pattern - Шаблон. Не происходит раскрытие тильды и подстановка параметров. 
flags - Допустимые флаги: GLOB_MARK - Добавляет слэш к каждой возвращаемой директории. GLOB_NOSORT - Возвращает файлы в том виде, в котором они содержатся в директории (без сортировки) GLOB_NOCHECK - Возвращает шаблон поиска, если с его помощью не был найден ни один файл. GLOB_NOESCAPE - Обратные слэши не экранируют метасимволы. GLOB_BRACE - Раскрывает {a,b,c} для совпадения с &#039;a&#039;, &#039;b&#039; или &#039;c&#039;. GLOB_ONLYDIR - Возвращает только директории, совпадающие с шаблоном. GLOB_ERR - Останавливается при ошибках чтения (например, директории без права чтения), по умолчанию ошибки игнорируются. </parameters>
<output>Возвращает массив, который содержит совпадающие файлы/директории, пустой массив в случае отсутствия совпадения или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
foreach (glob("*.txt") as $filename) {
    echo "$filename размер " . filesize($filename) . "\n";
}?></example>
<example_result>
 
funclist.txt размер 44686
funcsummary.txt размер 267625
quickref.txt размер 137820
</example_result>
</object>

<object id=2499> 
<name>ibase_maintain_db</name>
<versions>(PHP 5)</versions>
<short-description>Execute a maintenance command on the database server</short-description>
<description>bool ibase_maintain_db ( resource $service_handle , string $db , int $action [, int $argument = 0 ] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2500> 
<name>swf_shapefilloff</name>
<versions>(PHP 4)</versions>
<short-description>Turns off filling</short-description>
<description>void swf_shapefilloff ( void ) 
 Turns off filling for the current shape. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2501> 
<name>msg_get_queue</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Create or attach to a message queue</short-description>
<description>resource msg_get_queue ( int $key [, int $perms = 0666 ] ) 
 msg_get_queue() returns an id that can be used to access the System V message queue with the given key. The first call creates the message queue with the optional perms. A second call to msg_get_queue() for the same key will return a different message queue identifier, but both identifiers access the same underlying message queue. </description>
<parameters>key - Message queue numeric ID 
perms - Queue permissions. Default to 0666. If the message queue already exists, the perms will be ignored. </parameters>
<output>Returns a resource handle that can be used to access the System V message queue. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2502> 
<name>sqlite_fetch_column_types</name>
<versions>(PHP 5)</versions>
<short-description>Возвращает массив, содержащий информацию о типах полей в таблице </short-description>
<description>array sqlite_fetch_column_types ( string $table_name , resource $dbhandle [, int $result_type = SQLITE_ASSOC ] ) 
 Объектно-ориентированный стиль (метод): array SQLiteDatabase::fetchColumnTypes ( string $table_name [, int $result_type = SQLITE_ASSOC ] )</description>
<parameters>table_name - Название опрашиваемой таблицы. 
dbhandle - Ресурс базы данных SQLite, полученный из функции sqlite_open() при использовании процедурного подхода. Этот параметр не требуется при использовании объектно-ориентированного подхода. 
result_type - Необязательный параметр result_type принимает константу в качестве значения и определяет способ индексации возвращаемого массива. Использование константы SQLITE_ASSOC вернет только ассоциативные индексы (именованные поля), тогда как использование SQLITE_NUM вернет только числовые индексы (порядковые номера полей). По умолчанию используется SQLITE_ASSOC. </parameters>
<output>Возвращает массив с типами полей, или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$db = sqlite_open('mysqlitedb');
sqlite_query($db, 'CREATE TABLE foo (bar varchar(10), arf text)');
$cols = sqlite_fetch_column_types('foo', $db, SQLITE_ASSOC);
foreach ($cols as $column => $type) {
    echo "Поле: $column  Тип: $type\n";
}?></example>
<example_result>
 
Поле: bar  Тип: VARCHAR
Поле: arf  Тип: TEXT
</example_result>
</object>

<object id=2503> 
<name>m_setdropfile</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Set the connection method to Drop-File</short-description>
<description>int m_setdropfile ( resource $conn , string $directory ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
directory - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2504> 
<name>date_interval_format</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Псевдоним DateInterval::format()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2505> 
<name>ovrimos_free_result</name>
<versions>(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)</versions>
<short-description>Frees the specified result_id</short-description>
<description>bool ovrimos_free_result ( int $result_id ) 
 Frees the specified result identifier. </description>
<parameters>result_id - A result identifier, returned by ovrimos_execute() or ovrimos_exec(). </parameters>
<output>Returns TRUE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2506> 
<name>array_push</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Добавляет один или несколько элеметов в конец массива</short-description>
<description>int array_push ( array &$array , mixed $var [, mixed $... ] ) 
 array_push() использует array как стэк, и добавляет переданные значения в конец массива array. Длина array увеличивается на количество переданных значений. Имеет тот же эффект, что и выражение: <?php
$array[] = $var;
?></description>
<parameters>array - Входной массив. 
var - Записываемое значение. </parameters>
<output>Возвращает новое количество элементов в массиве. </output>
<errors></errors>
<example><?php
$stack = array("orange", "banana");
array_push($stack, "apple", "raspberry");
print_r($stack);
?></example>
<example_result>
 
Array
(
    [0] => orange
    [1] => banana
    [2] => apple
    [3] => raspberry
)
</example_result>
</object>

<object id=2507> 
<name>socket_set_nonblock</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Sets nonblocking mode for file descriptor fd </short-description>
<description>bool socket_set_nonblock ( resource $socket ) 
 The socket_set_nonblock() function sets the O_NONBLOCK flag on the socket specified by the socket parameter. 
 When an operation (e.g. receive, send, connect, accept, ...) is performed on a non-blocking socket, the script will not pause its execution until it receives a signal or it can perform the operation. Rather, if the operation would result in a block, the called function will fail. </description>
<parameters>socket - A valid socket resource created with socket_create() or socket_accept(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$socket = socket_create_listen(1223);
socket_set_nonblock($socket);
socket_accept($socket);
?></example>
<example_result></example_result>
</object>

<object id=2508> 
<name>udm_cat_path</name>
<versions>(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL mnogosearch >= 1.0.0)</versions>
<short-description>Get the path to the current category</short-description>
<description>array udm_cat_path ( resource $agent , string $category ) 
 Returns an array describing the path in the categories tree from the tree root to the current one, specified by category. </description>
<parameters>agent - A link to Agent, received after call to udm_alloc_agent(). 
category - </parameters>
<output>The returned array consists of pairs. Elements with even index numbers contain the category paths, odd elements contain the corresponding category names. </output>
<errors></errors>
<example><?php
  $cat_path_arr = udm_cat_path($udm_agent, $cat);
  $cat_path = '';
  for ($i=0; $i<count($cat_path_arr); $i+=2) {
    $path = $cat_path_arr[$i];
    $name = $cat_path_arr[$i+1];
    $cat_path .= " > <a href=\"$_SERVER[PHP_SELF]?cat=$path\">$name</a> ";
  }
?></example>
<example_result>
 
 $array[0] will contain &#039;&#039;
 $array[1] will contain &#039;Root&#039;
 $array[2] will contain &#039;02&#039;
 $array[3] will contain &#039;Sport&#039;
 $array[4] will contain &#039;0203&#039;
 $array[5] will contain &#039;Auto&#039;
 $array[4] will contain &#039;02031D&#039;
 $array[5] will contain &#039;Ferrari&#039;
</example_result>
</object>

<object id=2509> 
<name>m_initengine</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Ready the client for IP/SSL Communication</short-description>
<description>int m_initengine ( string $location ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>location - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2510> 
<name>umask</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Изменяет текущую umask</short-description>
<description>int umask ([ int $mask ] ) 
 umask() устанавливает PHP umask в значение mask & 0777 и возвращает старую umask. Если PHP используется в качестве серверного модуля, umask будет восстанавливаться после окончания каждого запроса. </description>
<parameters>mask - Новая umask. </parameters>
<output>Вызов umask() без аргументов вернёт текущую umask, иначе будет возвращена старая umask. </output>
<errors></errors>
<example><?php
$old = umask(0);
chmod("/path/some_dir/some_file.txt", 0755);
umask($old);
// Checking
if ($old != umask()) {
    die('При восстановлении umask произошла ошибка');
}?></example>
<example_result></example_result>
</object>

<object id=2511> 
<name>dbplus_restorepos</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Restore position</short-description>
<description>int dbplus_restorepos ( resource $relation , array $tuple ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>relation - A relation opened by dbplus_open(). 
tuple - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2512> 
<name>magic_quotes_runtime</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним set_magic_quotes_runtime()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2513> 
<name>sqlite_exec</name>
<versions>(PHP 5, PECL sqlite >= 1.0.3)</versions>
<short-description>Выполняет запрос, не возвращающий записей</short-description>
<description>bool sqlite_exec ( resource $dbhandle , string $query [, string &$error_msg ] ) bool sqlite_exec ( string $query , resource $dbhandle )</description>
<parameters>dbhandle - Ресурс базы данных SQLite, полученный из функции sqlite_open() в случае использования процедурного подхода. Этот параметр не требуется при использовании объектно-ориентированного подхода. 
query - Выполняемый запрос. 
error_msg - Данная переменная будет заполнена текстом ошибки, если таковая произойдет. Это особенно важно, потому что синтаксические ошибки SQL не могут быть получены из функции sqlite_last_error(). </parameters>
<output>Это функция возвращает булевый результат: TRUE в случае успеха и FALSE в случае ошибки. Если вам необходимо запустить запрос, возвращающий результат, используйте функцию sqlite_query(). </output>
<errors></errors>
<example><?php
$dbhandle = sqlite_open('mysqlitedb');
$query = sqlite_exec($dbhandle, "UPDATE users SET email='jDoe@example.com' WHERE username='jDoe'", $error);
if (!$query) {
    exit("Ошибка в запросе: '$error'");
} else {
    echo 'Количество затронутых рядов: ', sqlite_changes($dbhandle);
}?></example>
<example_result></example_result>
</object>

<object id=2514> 
<name>getmygid</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Get PHP script owner&#039;s GID</short-description>
<description>int getmygid ( void ) 
 Gets the group ID of the current script. </description>
<parameters></parameters>
<output>Returns the group ID of the current script, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2515> 
<name>finfo_buffer</name>
<versions>(PHP 5 >= 5.3.0, PECL fileinfo >= 0.1.0)</versions>
<short-description>Возвращает информацию о строке буфера</short-description>
<description>string finfo_buffer ( resource $finfo , string $string = NULL [, int $options = FILEINFO_NONE [, resource $context = NULL ]] ) 
 Объектно-ориентированный стиль string finfo::buffer ( string $string = NULL [, int $options = FILEINFO_NONE [, resource $context = NULL ]] )</description>
<parameters>finfo - Ресурс Fileinfo, полученный функцией finfo_open(). 
string - Содержимое проверяемого файла. 
options - Одна или операция логическое "ИЛИ" из нескольких Fileinfo констант. 
context - </parameters>
<output>Возвращает текстовое описание для аргумента string или FALSE, в случае ошибки. </output>
<errors></errors>
<example><?php
$finfo = new finfo(FILEINFO_MIME);
echo $finfo->buffer($_POST["script"]) . "\n";
?></example>
<example_result>
 
application/x-sh; charset=us-ascii
</example_result>
</object>

<object id=2516> 
<name>feof</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Проверяет, достигнут ли конец файла</short-description>
<description>bool feof ( resource $handle ) 
 Проверяет, достигнут ли конец файла. </description>
<parameters>handle - Указатель на файл должен быть корректным и указыватьна файл, успешно открытый функциями fopen() илиfsockopen() (и все еще не закрытым функцией fclose()).</parameters>
<output>Возвращает TRUE, если указатель файла указывает на EOF или произошла ошибка (в том числе таймаут сокета), иначе возвращает FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2517> 
<name>yaz_range</name>
<versions>(PHP 4 >= 4.0.1, PECL yaz >= 0.9.0)</versions>
<short-description>Specifies a range of records to retrieve </short-description>
<description>void yaz_range ( resource $id , int $start , int $number ) 
 Specifies a range of records to retrieve. 
 This function should be called before yaz_search() or yaz_present(). </description>
<parameters>id - The connection resource returned by yaz_connect(). 
start - Specifies the position of the first record to be retrieved. The records numbers goes from 1 to yaz_hits(). 
number - Specifies the number of records to be retrieved. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2518> 
<name>pg_unescape_bytea</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Убирает экранирование двоичных данных типа bytea </short-description>
<description>string pg_unescape_bytea ( string $data ) 
 pg_unescape_bytea() убирает экранирование спецсимволов в значениях типа PostgreSQL bytea. Возвращает неэкранированную строку, содержащую двоичные данные. 
 Замечание: 
 При выборке SQL функцией SELECT данных типа bytea PostgreSQL возвращает значения в восьмеричной системе счисления с префиксом &#039;\&#039; (такие как \032). Пользователю необходимо вручную преобразовывать их в двоичный формат. 
 Функция поддерживается PostgreSQL версии 7.2 и выше. Для версий 7.2.0 и 7.2.1 значения должны быть преобразованы к типу bytea, когда включена мультибайтовая поддержка. Тогда как INSERT INTO test_table (image)VALUES (&#039;$image_escaped&#039;::bytea); в PostgreSQL 7.2.2 и выше не требует каких-либо преобразований. Исключение составляет случай, когда клиентская (frontend) кодировка не соответствует серверной (backend). При этом возникает ошибка мультибайтового потока, и пользователь должен привести данные к типу bytea, чтобы ее избежать. </description>
<parameters>data - Строка (string), содержащая данные типа PostgreSQL bytea и подлежащая преобразованию в двоичную строку PHP. </parameters>
<output>Строка (string) с неэкранированными спецсимволами. </output>
<errors></errors>
<example><?php 
  // Подключение к базе данных
  $dbconn = pg_connect('dbname=foo');
  
  // Получение bytea данных
  $res = pg_query("SELECT data FROM gallery WHERE name='Pine trees'");  
  $raw = pg_fetch_result($res, 'data');
  
  // Преобразование в двоичный формат и отправка в броузер
  header('Content-type: image/jpeg');
  echo pg_unescape_bytea($raw);
?></example>
<example_result></example_result>
</object>

<object id=2519> 
<name>ibase_trans</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Begin a transaction</short-description>
<description>resource ibase_trans ([ int $trans_args [, resource $link_identifier ]] ) resource ibase_trans ([ resource $link_identifier [, int $trans_args ]] )</description>
<parameters>trans_args - trans_args can be a combination of IBASE_READ, IBASE_WRITE, IBASE_COMMITTED, IBASE_CONSISTENCY, IBASE_CONCURRENCY, IBASE_REC_VERSION, IBASE_REC_NO_VERSION, IBASE_WAIT and IBASE_NOWAIT. 
link_identifier - An InterBase link identifier. If omitted, the last opened link is assumed. </parameters>
<output>Returns a transaction handle, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2520> 
<name>mysqli_escape_string</name>
<versions>(PHP 5)</versions>
<short-description>Псевдоним функции mysqli_real_escape_string()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2521> 
<name>ocicollgetelem</name>
<versions>(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним OCI-Collection::getElem()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2522> 
<name>zend_logo_guid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the Zend guid</short-description>
<description>string zend_logo_guid ( void ) 
 This function returns the ID which can be used to display the Zend logo using the built-in image. </description>
<parameters></parameters>
<output>Returns PHPE9568F35-D428-11d2-A769-00AA001ACF42. </output>
<errors></errors>
<example><?php
echo '<img src="' . $_SERVER['PHP_SELF'] .
     '?=' . zend_logo_guid() . '" alt="Zend Logo !" />';
?></example>
<example_result></example_result>
</object>

<object id=2523> 
<name>date_create_from_format</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Псевдоним DateTime::createFromFormat()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2524> 
<name>bzcompress</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Сжимает строку с использованием bzip2</short-description>
<description>mixed bzcompress ( string $source [, int $blocksize = 4 [, int $workfactor = 0 ]] ) 
 bzcompress() сжимает переданную строку и возвращает ее в виде закодированных данных bzip2. </description>
<parameters>source - Сжимаемая строка. 
blocksize - Определяет размера блока, используемый при сжатии, должен быть числом в диапазоне от 1 до 9, где 9 даст наилучшее, но более ресурсоемкое сжатие. 
workfactor - Контролирует поведение фазы компресии в худшем случае, когда входные данные являются часто повторяющимися. Параметр может принимать значения между 0 и 250, где 0 означает специальный случай. </parameters>
<output>Сжатая строка или код ошибки в случае неудачного завершения работы. </output>
<errors></errors>
<example><?php
$str = "sample data";
$bzstr = bzcompress($str, 9);
echo $bzstr;
?></example>
<example_result></example_result>
</object>

<object id=2525> 
<name>define_syslog_variables</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Initializes all syslog related variables</short-description>
<description>void define_syslog_variables ( void ) 
 Initializes all variables used in the syslog functions. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
// Check if syslog variables already is defined
if(!get_cfg_var('define_syslog_variables'))
{    define_syslog_variables();
}
// Open the log
openlog('', $LOG_ODELAY, $LOG_MAIL | $LOG_USER);
// Continue script ...
?></example>
<example_result></example_result>
</object>

<object id=2526> 
<name>oci_client_version</name>
<versions>(PHP 5.3.7, PECL OCI8 >= 1.4.6)</versions>
<short-description>Возвращает версию клиентской библиотеки </short-description>
<description>string oci_client_version ( void ) 
 Возвращает номер версии в виде строки клиентской C-библиотеки Oracle, с которой связан PHP. </description>
<parameters></parameters>
<output>Возвращает номер версии в виде строки. </output>
<errors></errors>
<example><?php
    echo "Версия клиента: " . oci_client_version(); // Версия клиента: 11.2.0.2
?></example>
<example_result></example_result>
</object>

<object id=2527> 
<name>imap_unsubscribe</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Unsubscribe from a mailbox</short-description>
<description>bool imap_unsubscribe ( resource $imap_stream , string $mailbox ) 
 Unsubscribe from the specified mailbox. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
mailbox - The mailbox name, see imap_open() for more information </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2528> 
<name>mysql_result</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает данные результата запроса</short-description>
<description>string mysql_result ( resource $result , int $row [, mixed $field = 0 ] ) 
 Возвращает содержимое одного поля из набора результата MySQL. 
 Работая с большими результатами запросов, следует использовать одну из функций, обрабатывающих сразу целый ряд результата (указаны ниже). Так как эти функции возвращают значение нескольких ячеек сразу, они НАМНОГО быстрее mysql_result(). Кроме того, учтите, что указание численного смещения работает намного быстрее, чем указание колонки, или колонки с таблицей через точку. </description>
<parameters>result - Обрабатываемый результат запроса.Этот результат может быть получен с помощью функции mysql_query().
row - Номер получаемого ряда из результата. Нумерация рядов начинается с 0. 
field - Имя или смещение получаемого поля. </parameters>
<output>Содержимое одного поля из набора результата MySQL в случае успеха, или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Ошибка соединения: ' . mysql_error());
}if (!mysql_select_db('database_name')) {
    die('Ошибка выбора базы данных: ' . mysql_error());
}$result = mysql_query('SELECT name FROM work.employee');
if (!$result) {
    die('Ошибка выполнения запроса:' . mysql_error());
}echo mysql_result($result, 2); // выведет имя третьего сотрудника
mysql_close($link);
?></example>
<example_result></example_result>
</object>

<object id=2529> 
<name>pg_lo_seek</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Перемещает внутренний указатель большого объекта </short-description>
<description>bool pg_lo_seek ( resource $large_object , int $offset [, int $whence = PGSQL_SEEK_CUR ] ) 
 pg_lo_seek() перемещает внутренний указатель большого объекта. 
 Операции с использованием интерфейса больших объектов необходимо заключать в блок транзакции. </description>
<parameters>large_object - Ресурс большого объекта (LOB) PostgreSQL, возвращаемый функцией pg_lo_open(). 
offset - Количество байт, на сколько требуется переместить указатель. 
whence - Одна из констант: PGSQL_SEEK_SET (перемещать от начала объекта), PGSQL_SEEK_CUR (перемещать с текущей позиции) или PGSQL_SEEK_END (отступать от конца объекта). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
   $doc_oid = 189762345;
   $database = pg_connect("dbname=jacarta");
   pg_query($database, "begin");
   $handle = pg_lo_open($database, $doc_oid, "r");
   // Пропустить первые 50000 байт
   pg_lo_seek($handle, 50000, PGSQL_SEEK_SET);
   // Прочитать следующие 10000 байт
   $data = pg_lo_read($handle, 10000);
   pg_query($database, "commit");
   echo $data;
?></example>
<example_result></example_result>
</object>

<object id=2530> 
<name>ifxus_open_slob</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Opens an slob object</short-description>
<description>int ifxus_open_slob ( int $bid , int $mode ) 
 Opens an slob object. bid should be an existing slob id. </description>
<parameters>bid - An existing slob id. 
mode - A combination of IFX_LO_RDONLY, IFX_LO_WRONLY, IFX_LO_APPEND IFX_LO_RDWR, IFX_LO_BUFFER, IFX_LO_NOBUFFER. </parameters>
<output>Returns the new slob object-id, or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2531> 
<name>ncurses_vline</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Draw a vertical line at current position using an attributed character and max. n characters long </short-description>
<description>int ncurses_vline ( int $charattr , int $n ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>charattr - 
n - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2532> 
<name>curl_setopt_array</name>
<versions>(PHP 5 >= 5.1.3)</versions>
<short-description>Устанавливает несколько параметров для сеанса cURL</short-description>
<description>bool curl_setopt_array ( resource $ch , array $options ) 
 Устанавливает несколько параметров для сеанса cURL. Эта функция полезна при установке большого количества cURL-параметров без необходимости постоянно вызывать curl_setopt(). </description>
<parameters>ch - Дескриптор cURL, полученный из curl_init().
options - Массив (array), определяющий устанавливаемые параметры и их значения. Ключи должны быть корректными константами для функции curl_setopt() или их целочисленными эквивалентами. </parameters>
<output>Возвращает TRUE, если все параметры были успешно установлены. Если не удалось успешно установить какой-либо параметр, немедленно возвращается значение FALSE, а последующие параметры в массиве options будут проигнорированы. </output>
<errors></errors>
<example><?php
// создание нового ресурса cURL
$ch = curl_init();
// установка set URL и других соответствующих параметров
$options = array(CURLOPT_URL => 'http://www.example.com/',
                 CURLOPT_HEADER => false
                );
curl_setopt_array($ch, $options);
// загрузка URL и ее выдача в браузер
curl_exec($ch);
// закрытие ресурса cURL и освобождение системных ресурсов
curl_close($ch);
?></example>
<example_result></example_result>
</object>

<object id=2533> 
<name>gmp_and</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Побитовое И</short-description>
<description>resource gmp_and ( resource $a , resource $b ) 
 Вичисляет побитовое И двух GMP чисел. </description>
<parameters>a - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.
b - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.</parameters>
<output>Рехультат побитового И сопоставления в виде GMP числа. </output>
<errors></errors>
<example><?php
$and1 = gmp_and("0xfffffffff4", "0x4");
$and2 = gmp_and("0xfffffffff4", "0x8");
echo gmp_strval($and1) . "\n";
echo gmp_strval($and2) . "\n";
?></example>
<example_result>
 
4
0
</example_result>
</object>

<object id=2534> 
<name>sha1_file</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Возвращает SHA1-хэш файла</short-description>
<description>string sha1_file ( string $filename [, bool $raw_output = false ] ) 
 Вычисляет SHA1-хэш файла, имя которого задано аргументом filename, используя алгоритм &raquo; US Secure Hash Algorithm 1 и возвращает этот хэш. </description>
<parameters>filename - Имя хэшируемого файла. 
raw_output - Если установлен в TRUE, возвращает 20-символьный хэш в бинарном формате. </parameters>
<output>Возвращает строку в случае успеха, иначе возвращается FALSE. </output>
<errors></errors>
<example><?php
foreach(glob('/home/Kalle/myproject/*.php') as $ent)
{    if(is_dir($ent))
    {
        continue;
    }
    echo $ent . ' (SHA1: ' . sha1_file($ent) . ')', PHP_EOL;
}?></example>
<example_result></example_result>
</object>

<object id=2535> 
<name>aggregate_properties_by_list</name>
<versions>(PHP 4 >= 4.2.0)</versions>
<short-description>Selective dynamic class properties aggregation to an object </short-description>
<description>void aggregate_properties_by_list ( object $object , string $class_name , array $properties_list [, bool $exclude = false ] ) 
 Aggregates properties from a class to an existing object using a list of property names. 
 The properties whose names start with an underscore character (_), which are considered private to the aggregated class, are always excluded. </description>
<parameters>object - 
class_name - 
properties_list - 
exclude - The optional parameter exclude is used to decide whether the list contains the names of class properties to include in the aggregation (i.e. exclude is FALSE), or to exclude from the aggregation (exclude is TRUE). </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2536> 
<name>mb_regex_set_options</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Set/Get the default options for mbregex functions</short-description>
<description>string mb_regex_set_options ([ string $options = "msr" ] ) 
 Sets the default options described by options for multibyte regex functions. </description>
<parameters>options - The options to set. This is a a string where each character is an option. To set a mode, the mode character must be the last one set, however there can only be set one mode but multiple options. </parameters>
<output>The previous options. If options is omitted, it returns the string that describes the current options. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2537> 
<name>inet_ntop</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Конвертирует упакованный интернет адрес в читаемый формат</short-description>
<description>string inet_ntop ( string $in_addr ) 
 Эта функция конвертирует 32-битный IPv4 или 128-битный IPv6 адрес (если PHP был собран с поддержкой IPv6) в соответствующее строковое представление адреса. </description>
<parameters>in_addr - 32-битный IPv4, или 128-битный IPv6 адрес. </parameters>
<output>Возвращает строковое представление адреса или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$packed = chr(127) . chr(0) . chr(0) . chr(1);
$expanded = inet_ntop($packed);
/* Выведет: 127.0.0.1 */
echo $expanded;
$packed = str_repeat(chr(0), 15) . chr(1);
$expanded = inet_ntop($packed);
/* Выведет: ::1 */
echo $expanded;
?></example>
<example_result></example_result>
</object>

<object id=2538> 
<name>PDF_open_pdi</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Open PDF file [deprecated]</short-description>
<description>int PDF_open_pdi ( resource $pdfdoc , string $filename , string $optlist , int $len ) 
 Opens a disk-based or virtual PDF document and prepares it for later use. 
 This function is deprecated since PDFlib version 7, use PDF_open_pdi_document() instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2539> 
<name>getopt</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Gets options from the command line argument list</short-description>
<description>array getopt ( string $options [, array $longopts ] ) 
 Parses options passed to the script. </description>
<parameters>options Each character in this string will be used as option characters and matched against options passed to the script starting with a single hyphen (-). For example, an option string "x" recognizes an option -x. Only a-z, A-Z and 0-9 are allowed. longopts An array of options. Each element in this array will be used as option strings and matched against options passed to the script starting with two hyphens (--). For example, an longopts element "opt" recognizes an option --opt. - The options parameter may contain the following elements: Individual characters (do not accept values) Characters followed by a colon (parameter requires value) Characters followed by two colons (optional value) Option values are the first argument after the string. It does not matter if a value has leading white space or not. 
 Замечание: Optional values do not accept " " (space) as a separator. </parameters>
<output>This function will return an array of option / argument pairs or FALSE on failure. </output>
<errors></errors>
<example><?php
$options = getopt("f:hp:");
var_dump($options);
?></example>
<example_result>
 
array(2) {
  ["f"]=>
  string(5) "value"
  ["h"]=>
  bool(false)
}
</example_result>
</object>

<object id=2540> 
<name>yaz_ccl_parse</name>
<versions>(PHP 4 >= 4.0.5, PECL yaz >= 0.9.0)</versions>
<short-description>Invoke CCL Parser</short-description>
<description>bool yaz_ccl_parse ( resource $id , string $query , array &$result ) 
 This function invokes a CCL parser. It converts a given CCL FIND query to an RPN query which may be passed to the yaz_search() function to perform a search. 
 To define a set of valid CCL fields call yaz_ccl_conf() prior to this function. </description>
<parameters>id - The connection resource returned by yaz_connect(). 
query - The CCL FIND query. 
result - If the function was executed successfully, this will be an array containing the valid RPN query under the key rpn. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example>
 $ccl is a CCL query. </example>
<example_result></example_result>
</object>

<object id=2541> 
<name>imagesavealpha</name>
<versions>(PHP 4 >= 4.3.2, PHP 5)</versions>
<short-description>Set the flag to save full alpha channel information (as opposed to single-color transparency) when saving PNG images</short-description>
<description>bool imagesavealpha ( resource $image , bool $saveflag ) 
 imagesavealpha() sets the flag to attempt to save full alpha channel information (as opposed to single-color transparency) when saving PNG images. 
 You have to unset alphablending (imagealphablending($im, false)), to use it. 
 Alpha channel is not supported by all browsers, if you have problem with your browser, try to load your script with an alpha channel compliant browser, e.g. latest Mozilla. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
saveflag - Whether to save the alpha channel or not. Default to FALSE. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Load a png image with alpha channels
$png = imagecreatefrompng('./alphachannel_example.png');
// Do required operations
// Turn off alpha blending and set alpha flag
imagealphablending($png, false);
imagesavealpha($png, true);
// Output image to browser
header('Content-Type: image/png');
imagepng($png);
imagedestroy($png);
?></example>
<example_result></example_result>
</object>

<object id=2542> 
<name>oci_field_is_null</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Проверяет, равняется ли поле NULL</short-description>
<description>bool oci_field_is_null ( resource $statement , mixed $field ) 
 Проверяет, является ли значение, переданное в поле field из запроса statement равным NULL. </description>
<parameters>statement - Идентификатор допустимого OCI запроса. 
field - Может быть порядковый номер поля или имя поля (в верхнем регистре). </parameters>
<output>Возвращает TRUE, если field равен NULL, и FALSE если нет. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2543> 
<name>ncurses_wmove</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Moves windows output position</short-description>
<description>int ncurses_wmove ( resource $window , int $y , int $x ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>window - 
y - 
x - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2544> 
<name>stream_context_create</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Создаёт контекст потока</short-description>
<description>resource stream_context_create ([ array $options [, array $params ]] ) 
 Создаёт и возвращает контекст потока с опциями, указанными в массиве options. </description>
<parameters>options - Должен быть ассоциативным массивом в формате $arr[&#039;wrapper&#039;][&#039;option&#039;] = $value. 
params - Должен быть ассоциативным массивом в формате $arr[&#039;parameter&#039;] = $value. Обратитесь к разделу context parameters за списком стандартных параметров потока. </parameters>
<output>resource контекста потока. </output>
<errors></errors>
<example><?php
$opts = array(
  'http'=>array(
    'method'=>"GET",
    'header'=>"Accept-language: en\r\n" .
              "Cookie: foo=bar\r\n"
  )
);
$context = stream_context_create($opts);
/* Отправляет http-запрос на домен www.example.com
   с дополнительными заголовкам, показанными выше */
$fp = fopen('http://www.example.com', 'r', false, $context);
fpassthru($fp);
fclose($fp);
?></example>
<example_result></example_result>
</object>

<object id=2545> 
<name>fputs</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним fwrite()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2546> 
<name>str_replace</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Заменяет все вхождения строки поиска на строку замены</short-description>
<description>mixed str_replace ( mixed $search , mixed $replace , mixed $subject [, int &$count ] ) 
 Эта функция возвращает строку или массив, в котором все вхождения search в subject заменены на replace. 
 Если не нужны сложные правила поиска/замены (например, регулярные выражения), использование этой функции предпочтительнее preg_replace(). </description>
<parameters>search - Искомое значение, также известное как needle (иголка). Для множества искомых значений можно использовать массив. 
replace - Значение замены, будет использовано для замены искомых значений search. Для множества значений можно использовать массив. 
subject - Строка или массив, в котором производится поиск и замена, также известный как haystack (стог сена). 
count - Если передан, то будет установлен в количество произведенных замен. </parameters>
<output>Эта функция возвращает строку или массив с замененными значениями. </output>
<errors></errors>
<example><?php
// присваивает <body text='black'>
$bodytag = str_replace("%body%", "black", "<body text='%body%'>");
// присваивает: Hll Wrld f PHP
$vowels = array("a", "e", "i", "o", "u", "A", "E", "I", "O", "U");
$onlyconsonants = str_replace($vowels, "", "Hello World of PHP");
// присваивает: You should eat pizza, beer, and ice cream every day
$phrase  = "You should eat fruits, vegetables, and fiber every day.";
$healthy = array("fruits", "vegetables", "fiber");
$yummy   = array("pizza", "beer", "ice cream");
$newphrase = str_replace($healthy, $yummy, $phrase);
// присваивает: 2
$str = str_replace("ll", "", "good golly miss molly!", $count);
echo $count;
?></example>
<example_result></example_result>
</object>

<object id=2547> 
<name>PDF_setlinejoin</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set linejoin parameter</short-description>
<description>bool PDF_setlinejoin ( resource $p , int $value ) 
 Sets the linejoin parameter to specify the shape at the corners of paths that are stroked. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2548> 
<name>mysql_db_query</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Переключается на указанную базу данных и посылает запрос</short-description>
<description>resource mysql_db_query ( string $database , string $query [, resource $link_identifier ] ) 
 mysql_db_query() выбирает базу данных и выполняет запрос к ней. Внимание
 С версии PHP 5.3.0 эта функция считаетсяУСТАРЕВШЕЙ. Крайне не рекомендуется полагаться на эту возможность.</description>
<parameters>database - Имя базы данных, на которую произойдет переключение. 
query - Запрос MySQL. 
link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Возвращает ресурс результата запроса к MySQL или FALSE в случае ошибки. Функция также возвращает TRUE/FALSE для INSERT/UPDATE/DELETE запросов для индикации успеха/провала. </output>
<errors></errors>
<example><?php
if (!$link = mysql_connect('mysql_host', 'mysql_user', 'mysql_password')) {
    echo 'Не удалось подключиться к mysql';
    exit;
}
if (!mysql_select_db('mysql_dbname', $link)) {
    echo 'Не удалось выбрать базу данных';
    exit;
}
$sql    = 'SELECT foo FROM bar WHERE id = 42';
$result = mysql_query($sql, $link);
if (!$result) {
    echo "Ошибка DB, запрос не удался\n";
    echo 'MySQL Error: ' . mysql_error();
    exit;
}
while ($row = mysql_fetch_assoc($result)) {
    echo $row['foo'];
}
mysql_free_result($result);
?></example>
<example_result></example_result>
</object>

<object id=2549> 
<name>PDF_set_value</name>
<versions>(PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0)</versions>
<short-description>Set numerical parameter</short-description>
<description>bool PDF_set_value ( resource $p , string $key , float $value ) 
 Sets the value of some PDFlib parameter with numerical type. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2550> 
<name>pg_field_type_oid</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Возвращает идентификатор типа заданного поля </short-description>
<description>int pg_field_type_oid ( resource $result , int $field_number ) 
 pg_field_type_oid() возвращает целочисленный идентификатор базового типа (OID) значений колонки результата запроса result с номером field_number. 
 Более подробную информацию о типе значений можно получить, отправив запрос с полученным OID к системной таблице PostgreSQL pg_type. Функция PostgreSQL format_type() преобразует OID в стандартное имя типа SQL. 
 Замечание: 
 Если в качестве типа значений используется PostgreSQL домен (вместо базового типа), функция вернет OID типа внутри домена, а не OID самого домена. </description>
<parameters>result - Ресурс результата запроса PostgreSQL, возвращаемый функциями pg_query(), pg_query_params() или pg_execute() (в числе прочих). 
field_number - Порядковый номер поля, начиная с нуля. </parameters>
<output>OID базового типа значений поля, либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
  $dbconn = pg_connect("dbname=publisher") or die("Невозможно соединиться с базой");
  // Допустим, 'title' имеет тип varchar
  $res = pg_query($dbconn, "select title from authors where author = 'Orwell'");
  echo "Title field type OID: ", pg_field_type_oid($res, 0);
?></example>
<example_result>
 
Title field type OID: 1043
</example_result>
</object>

<object id=2551> 
<name>iconv_mime_encode</name>
<versions>(PHP 5)</versions>
<short-description>Composes a MIME header field</short-description>
<description>string iconv_mime_encode ( string $field_name , string $field_value [, array $preferences = NULL ] ) 
 Composes and returns a string that represents a valid MIME header field, which looks like the following: 
 Subject: =?ISO-8859-1?Q?Pr=FCfung_f=FCr?= Entwerfen von einer MIME kopfzeile
</description>
<parameters>field_name - The field name. 
field_value - The field value. 
preferences - You can control the behaviour of iconv_mime_encode() by specifying an associative array that contains configuration items to the optional third parameter preferences. The items supported by iconv_mime_encode() are listed below. Note that item names are treated case-sensitive. Configuration items supported by iconv_mime_encode() Item Type Description Default value Example scheme string Specifies the method to encode a field value by. The value of this item may be either "B" or "Q", where "B" stands for base64 encoding scheme and "Q" stands for quoted-printable encoding scheme. B B input-charset string Specifies the character set in which the first parameter field_name and the second parameter field_value are presented. If not given, iconv_mime_encode() assumes those parameters are presented to it in the iconv.internal_encoding ini setting. iconv.internal_encoding ISO-8859-1 output-charset string Specifies the character set to use to compose the MIME header. iconv.internal_encoding UTF-8 line-length integer Specifies the maximum length of the header lines. The resulting header is "folded" to a set of multiple lines in case the resulting header field would be longer than the value of this parameter, according to &raquo; RFC2822 - Internet Message Format. If not given, the length will be limited to 76 characters. 76 996 line-break-chars string Specifies the sequence of characters to append to each line as an end-of-line sign when "folding" is performed on a long header field. If not given, this defaults to "\r\n" (CR LF). Note that this parameter is always treated as an ASCII string regardless of the value of input-charset. \r\n \n </parameters>
<output>Returns an encoded MIME field on success, or FALSE if an error occurs during the encoding. </output>
<errors></errors>
<example><?php
$preferences = array(
    "input-charset" => "ISO-8859-1",
    "output-charset" => "UTF-8",
    "line-length" => 76,
    "line-break-chars" => "\n"
);
$preferences["scheme"] = "Q";
// This yields "Subject: =?UTF-8?Q?Pr=C3=BCfung=20Pr=C3=BCfung?="
echo iconv_mime_encode("Subject", "Prüfung Prüfung", $preferences);
$preferences["scheme"] = "B";
// This yields "Subject: =?UTF-8?B?UHLDvGZ1bmcgUHLDvGZ1bmc=?="
echo iconv_mime_encode("Subject", "Prüfung Prüfung", $preferences);
?></example>
<example_result>
 
Subject: =?ISO-8859-1?Q?Pr=FCfung_f=FCr?= Entwerfen von einer MIME kopfzeile
</example_result>
</object>

<object id=2552> 
<name>odbc_tables</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get the list of table names stored in a specific data source</short-description>
<description>resource odbc_tables ( resource $connection_id [, string $qualifier [, string $owner [, string $name [, string $types ]]]] ) 
 Lists all tables in the requested range. 
 To support enumeration of qualifiers, owners, and table types, the following special semantics for the qualifier, owner, name, and table_type are available: If qualifier is a single percent character (%) and owner and name are empty strings, then the result set contains a list of valid qualifiers for the data source. (All columns except the TABLE_QUALIFIER column contain NULLs.) If owner is a single percent character (%) and qualifier and name are empty strings, then the result set contains a list of valid owners for the data source. (All columns except the TABLE_OWNER column contain NULLs.) If table_type is a single percent character (%) and qualifier, owner and name are empty strings, then the result set contains a list of valid table types for the data source. (All columns except the TABLE_TYPE column contain NULLs.) </description>
<parameters>connection_id - Идентификатор соединения ODBC,за подробностями обращайтесь к odbc_connect().
qualifier - The qualifier. 
owner - The owner. Accepts search patterns (&#039;%&#039; to match zero or more characters and &#039;_&#039; to match a single character). 
name - The name. Accepts search patterns (&#039;%&#039; to match zero or more characters and &#039;_&#039; to match a single character). 
types - If table_type is not an empty string, it must contain a list of comma-separated values for the types of interest; each value may be enclosed in single quotes (&#039;) or unquoted. For example, "&#039;TABLE&#039;,&#039;VIEW&#039;" or "TABLE, VIEW". If the data source does not support a specified table type, odbc_tables() does not return any results for that type. </parameters>
<output>Returns an ODBC result identifier containing the information или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2553> 
<name>stream_get_filters</name>
<versions>(PHP 5)</versions>
<short-description>Извлекает список зарегистрированных фильтров</short-description>
<description>array stream_get_filters ( void ) 
 Извлекает список зарегистрированных фильтров на запущенной системе. </description>
<parameters></parameters>
<output>Возвращает индексированный массив, содержащий названия всех доступных системных фильтров потока. </output>
<errors></errors>
<example><?php
$streamlist = stream_get_filters();
print_r($streamlist);
?></example>
<example_result>
 
Array (
  [0] => string.rot13
  [1] => string.toupper
  [2] => string.tolower
  [3] => string.base64
  [4] => string.quoted-printable
)
</example_result>
</object>

<object id=2554> 
<name>vsprintf</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Возвращает отформатированную строку</short-description>
<description>string vsprintf ( string $format , array $args ) 
 Эта функция подобна sprintf(), но она принимает не переменное число аргументов, а массив. </description>
<parameters>format - Описание параметра format смотрите в документации к функции sprintf(). 
args - </parameters>
<output>Возвращает значения массива в виде строки, отформатированные в соответствии с параметром format, описанном в документации к функции sprintf(). </output>
<errors></errors>
<example><?php
print vsprintf("%04d-%02d-%02d", explode('-', '1988-8-1')); // 1988-08-01
?></example>
<example_result></example_result>
</object>

<object id=2555> 
<name>notes_header_info</name>
<versions>(PHP 4 >= 4.0.5)</versions>
<short-description>Open the message msg_number in the specified mailbox on the specified server (leave serv</short-description>
<description>object notes_header_info ( string $server , string $mailbox , int $msg_number ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2556> 
<name>vpopmail_alias_add</name>
<versions>(PHP 4 >= 4.0.7, PECL vpopmail >= 0.2)</versions>
<short-description>Insert a virtual alias</short-description>
<description>bool vpopmail_alias_add ( string $user , string $domain , string $alias ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2557> 
<name>dcgettext</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Переопределяет одно сообщение в домене</short-description>
<description>string dcgettext ( string $domain , string $message , int $category ) 
 Данная функция позволяет переопределить текущий домен для одного сообщения. </description>
<parameters>domain - Домен 
message - Сообщение 
category - Категория </parameters>
<output>В случае успеха возвращает значение типа string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2558> 
<name>dbplus_info</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Get information about a relation</short-description>
<description>int dbplus_info ( resource $relation , string $key , array &$result ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>relation - A relation opened by dbplus_open(). 
key - 
result - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2559> 
<name>intl_error_name</name>
<versions>(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)</versions>
<short-description>Get symbolic name for a given error code</short-description>
<description>string intl_error_name ( int $error_code ) 
 Return ICU error code name. </description>
<parameters>error_code - ICU error code. </parameters>
<output>The returned string will be the same as the name of the error code constant. </output>
<errors></errors>
<example><?php
$coll     = collator_create( 'en_RU' );
$err_code = collator_get_error_code( $coll );
printf( "Symbolic name for %d is %s\n.", $err_code, intl_error_name( $err_code ) );
?></example>
<example_result>
 
Symbolic name for -128 is U_USING_FALLBACK_WARNING.
</example_result>
</object>

<object id=2560> 
<name>zend_thread_id</name>
<versions>(PHP 5)</versions>
<short-description>Returns a unique identifier for the current thread</short-description>
<description>int zend_thread_id ( void ) 
 This function returns a unique identifier for the current thread. </description>
<parameters></parameters>
<output>Returns the thread id as an integer. </output>
<errors></errors>
<example><?php
$thread_id = zend_thread_id();
echo 'Current thread id is: ' . $thread_id;
?></example>
<example_result>
 
Current thread id is: 7864
</example_result>
</object>

<object id=2561> 
<name>html_entity_decode</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Преобразует все HTML-сущности в соответствующие символы</short-description>
<description>string html_entity_decode ( string $string [, int $quote_style = ENT_COMPAT [, string $charset = &#039;UTF-8&#039; ]] ) 
 html_entity_decode() является противоположностью функции htmlentities(), она преобразует все HTML-сущности в строке string в соответствующие символы. </description>
<parameters>string - Входная строка. 
quote_style - Необязательный аргумент quote_style позволяет указать способ обработки &#039;одиночных&#039; и "двойных" кавычек. Значением этого аргумента может быть одна из трех следующих констант: Константы quote_style Имя константы Описание ENT_COMPAT Преобразуются двойные кавычки, одиночные остаются без изменений. ENT_QUOTES Преобразуются и двойные, и одиночные кавычки. ENT_NOQUOTES И двойные, и одиночные кавычки остаются без изменений. 
charset - Определяет кодировку, используемую при преобразовании. Передача пустой строки включит автоматическое определение кодировки, основанное на значениях внутренней кодировки mbstring и текущей локали. </parameters>
<output>Возвращает раскодированную строку. </output>
<errors></errors>
<example><?php
$orig = "I'll \"walk\" the <b>dog</b> now";
$a = htmlentities($orig);
$b = html_entity_decode($a);
echo $a; // I'll &quot;walk&quot; the <b>dog</b> now
echo $b; // I'll "walk" the <b>dog</b> now

// в версиях до PHP 4.3.0 можно сделать так:
function unhtmlentities($string)
{    // заменяет числовые сущности
    $string = preg_replace('~&#x([0-9a-f]+);~ei', 'chr(hexdec("\\1"))', $string);
    $string = preg_replace('~&#([0-9]+);~e', 'chr("\\1")', $string);
    // заменяем буквенные сущности
    $trans_tbl = get_html_translation_table(HTML_ENTITIES);
    $trans_tbl = array_flip($trans_tbl);
    return strtr($string, $trans_tbl);
}
$c = unhtmlentities($a);
echo $c; // I'll "walk" the <b>dog</b> now
?></example>
<example_result></example_result>
</object>

<object id=2562> 
<name>pspell_config_data_dir</name>
<versions>(PHP 5)</versions>
<short-description>Расположение файлов с языковыми данными</short-description>
<description>bool pspell_config_data_dir ( int $conf , string $directory ) 
 Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2563> 
<name>krsort</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сортирует массив по ключам в обратном порядке</short-description>
<description>bool krsort ( array &$array [, int $sort_flags = SORT_REGULAR ] ) 
 Сортирует массив по ключам в обратном порядке, сохраняя отношения между ключами и значениями. Эта функция полезна, в основном, для работы с ассоциативными массивами. </description>
<parameters>array - Входной массив. 
sort_flags - Вы можете изменить поведение сортировки, используя дополнительный параметр sort_flags, подробнее см. sort(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$fruits = array("d"=>"lemon", "a"=>"orange", "b"=>"banana", "c"=>"apple");
krsort($fruits);
foreach ($fruits as $key => $val) {
    echo "$key = $val\n";
}?></example>
<example_result>
 
d = lemon
c = apple
b = banana
a = orange
</example_result>
</object>

<object id=2564> 
<name>variant_and</name>
<versions>(PHP 5)</versions>
<short-description>Performs a bitwise AND operation between two variants</short-description>
<description>mixed variant_and ( mixed $left , mixed $right ) 
 Performs a bitwise AND operation. Note that this is slightly different from a regular AND operation. </description>
<parameters>left - The left operand. 
right - The right operand. </parameters>
<output>Variant AND Rules If left is If right is then the result is TRUETRUETRUE TRUEFALSEFALSE TRUENULLNULL FALSETRUEFALSE FALSEFALSEFALSE FALSENULLFALSE NULLTRUENULL NULLFALSEFALSE NULLNULLNULL </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2565> 
<name>mcrypt_enc_get_modes_name</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Returns the name of the opened mode</short-description>
<description>string mcrypt_enc_get_modes_name ( resource $td ) 
 This function returns the name of the mode. </description>
<parameters>td - The encryption descriptor. </parameters>
<output>Returns the name as a string. </output>
<errors></errors>
<example><?php
$td = mcrypt_module_open (MCRYPT_CAST_256, '', MCRYPT_MODE_CFB, '');
echo mcrypt_enc_get_modes_name($td). "\n";
$td = mcrypt_module_open ('cast-256', '', 'ecb', '');
echo mcrypt_enc_get_modes_name($td). "\n";
?></example>
<example_result>
 
CFB
ECB
</example_result>
</object>

<object id=2566> 
<name>openssl_pkcs7_encrypt</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Encrypt an S/MIME message</short-description>
<description>bool openssl_pkcs7_encrypt ( string $infile , string $outfile , mixed $recipcerts , array $headers [, int $flags = 0 [, int $cipherid = OPENSSL_CIPHER_RC2_40 ]] ) 
 openssl_pkcs7_encrypt() takes the contents of the file named infile and encrypts them using an RC2 40-bit cipher so that they can only be read by the intended recipients specified by recipcerts. </description>
<parameters>infile - 
outfile - 
recipcerts - Either a lone X.509 certificate, or an array of X.509 certificates. 
headers - headers is an array of headers that will be prepended to the data after it has been encrypted. 
flags - flags can be used to specify options that affect the encoding process - see PKCS7 constants. 
cipherid - One of cipher constants. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// the message you want to encrypt and send to your secret agent
// in the field, known as nighthawk.  You have his certificate
// in the file nighthawk.pem
$data = <<<EOD
Nighthawk,
Top secret, for your eyes only!
The enemy is closing in! Meet me at the cafe at 8.30am
to collect your forged passport!
HQ
EOD;
// load key
$key = file_get_contents("nighthawk.pem");
// save message to file
$fp = fopen("msg.txt", "w");
fwrite($fp, $data);
fclose($fp);
// encrypt it
if (openssl_pkcs7_encrypt("msg.txt", "enc.txt", $key,
    array("To" => "nighthawk@example.com", // keyed syntax
          "From: HQ <hq@example.com>", // indexed syntax
          "Subject" => "Eyes only"))) {
    // message encrypted - send it!
    exec(ini_get("sendmail_path") . " < enc.txt");
}?></example>
<example_result></example_result>
</object>

<object id=2567> 
<name>mysql_set_charset</name>
<versions>(PHP 5 >= 5.2.3)</versions>
<short-description>Устанавливает кодировку клиента</short-description>
<description>bool mysql_set_charset ( string $charset [, resource $link_identifier ] ) 
 Устанавливает кодировку по умолчанию для текущего соединения. </description>
<parameters>charset - Корректное название кодировки. 
link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2568> 
<name>sleep</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Откладывает выполнение</short-description>
<description>int sleep ( int $seconds ) 
 Откладывает исполнение программы на число секунд, заданное параметром seconds. </description>
<parameters>seconds - Время остановки в секундах. </parameters>
<output>Возвращает 0 при успешном выполнении или FALSE при ошибке. </output>
<errors>Если указанное число секунд в параметре seconds отрицательно, то функция создаст исключение уровня E_WARNING. </errors>
<example><?php
// текущее время
echo date('h:i:s') . "\n";
// ожидание в течении 10 секунд
sleep(10);
// завершение ожидания
echo date('h:i:s') . "\n";
?></example>
<example_result>
 
05:31:23
05:31:33
</example_result>
</object>

<object id=2569> 
<name>mb_convert_encoding</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Преобразует кодировку символов</short-description>
<description>string mb_convert_encoding ( string $str , string $to_encoding [, mixed $from_encoding ] ) 
 Преобразует символы строки string str в кодировку to_encoding. Также можно указать необязательный параметр from_encoding. </description>
<parameters>str - Строка (string), которая преобразуется. 
to_encoding - Кодировка, в которую будет преобразована строка str. 
from_encoding - Параметр для указания исходной кодировки строки. Это может быть массив (array), или строка со списком кодировок через запятую. Если параметр from_encoding не указан, то кодировка определяется автоматически. </parameters>
<output>Преобразованная строка. </output>
<errors></errors>
<example><?php
/* Преобразует строку в кодировку SJIS */
$str = mb_convert_encoding($str, "SJIS");
/* Преобразует из EUC-JP в UTF-7 */
$str = mb_convert_encoding($str, "UTF-7", "EUC-JP");
/* Автоматически определяется кодировка среди JIS, eucjp-win, sjis-win, затем преобразуется в UCS-2LE */
$str = mb_convert_encoding($str, "UCS-2LE", "JIS, eucjp-win, sjis-win");
/* "auto" используется для обозначения "ASCII,JIS,UTF-8,EUC-JP,SJIS" */
$str = mb_convert_encoding($str, "EUC-JP", "auto");
?></example>
<example_result></example_result>
</object>

<object id=2570> 
<name>openssl_pkcs7_verify</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Verifies the signature of an S/MIME signed message</short-description>
<description>mixed openssl_pkcs7_verify ( string $filename , int $flags [, string $outfilename [, array $cainfo [, string $extracerts [, string $content ]]]] ) 
 openssl_pkcs7_verify() reads the S/MIME message contained in the given file and examines the digital signature. </description>
<parameters>filename - Path to the message. 
flags - flags can be used to affect how the signature is verified - see PKCS7 constants for more information. 
outfilename - If the outfilename is specified, it should be a string holding the name of a file into which the certificates of the persons that signed the messages will be stored in PEM format. 
cainfo - If the cainfo is specified, it should hold information about the trusted CA certificates to use in the verification process - see certificate verification for more information about this parameter. 
extracerts - If the extracerts is specified, it is the filename of a file containing a bunch of certificates to use as untrusted CAs. 
content - You can specify a filename with content that will be filled with the verified data, but with the signature information stripped. </parameters>
<output>Returns TRUE if the signature is verified, FALSE if it is not correct (the message has been tampered with, or the signing certificate is invalid), or -1 on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2571> 
<name>restore_exception_handler</name>
<versions>(PHP 5)</versions>
<short-description>Восстанавливает предыдущий обработчик исключений </short-description>
<description>bool restore_exception_handler ( void ) 
 Используется после смены обработчика исключений функцией set_exception_handler(), чтобы вернуть предыдущий обработчик (который может быть как встроенной функцией, так и определенной пользователем). </description>
<parameters></parameters>
<output>Эта функция всегда возвращает TRUE. </output>
<errors></errors>
<example><?php
    function exception_handler_1(Exception $e)
    {
        echo '[' . __FUNCTION__ . '] ' . $e->getMessage();
    }
    function exception_handler_2(Exception $e)
    {
        echo '[' . __FUNCTION__ . '] ' . $e->getMessage();
    }
    set_exception_handler('exception_handler_1');
    set_exception_handler('exception_handler_2');
    restore_exception_handler();
    throw new Exception('Вызван первый обработчик исключений...');
?></example>
<example_result>
 
[exception_handler_1] Вызван первый обработчик исключений...
</example_result>
</object>

<object id=2572> 
<name>snmp_set_valueretrieval</name>
<versions>(PHP 4 >= 4.3.3, PHP 5)</versions>
<short-description>Specify the method how the SNMP values will be returned </short-description>
<description>bool snmp_set_valueretrieval ( int $method = SNMP_VALUE_LIBRARY ) </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example><?php
 snmp_set_valueretrieval(SNMP_VALUE_LIBRARY);
 $ret = snmpget('localhost', 'public', 'IF-MIB::ifName.1');
 // $ret = "STRING: lo"
 snmp_set_valueretrieval(SNMP_VALUE_PLAIN);
 $ret = snmpget('localhost', 'public', 'IF-MIB::ifName.1');
 // $ret = "lo";
 snmp_set_valueretrieval(SNMP_VALUE_OBJECT);
 $ret = snmpget('localhost', 'public', 'IF-MIB::ifName.1');
 // stdClass Object
 // (
 //   [type] => 4        <-- SNMP_OCTET_STR, see constants
 //   [value] => lo
 // )
 // PHP 5.4+ examples
 snmp_set_valueretrieval(SNMP_VALUE_OBJECT | SNMP_VALUE_PLAIN);
 $ret = snmpget('localhost', 'public', 'IF-MIB::ifName.1');
 // stdClass Object
 // (
 //   [type] => 4        <-- SNMP_OCTET_STR, see constants
 //   [value] => lo
 // )
 snmp_set_valueretrieval(SNMP_VALUE_OBJECT | SNMP_VALUE_LIBRARY);
 $ret = snmpget('localhost', 'public', 'IF-MIB::ifName.1');
 // stdClass Object
 // (
 //   [type] => 4        <-- SNMP_OCTET_STR, see constants
 //   [value] => STRING: lo
 // )
?></example>
<example_result></example_result>
</object>

<object id=2573> 
<name>strpos</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает позицию первого вхождения подстроки</short-description>
<description>int strpos ( string $haystack , mixed $needle [, int $offset = 0 ] ) 
 Ищет позицию первого вхождения подстроки needle в строку haystack. </description>
<parameters>haystack - Строка, в которой производится поиск 
needle - Если needle не является строкой, он приводится к целому и трактуется как код символа. 
offset - Если этот параметр указан, то поиск будет начат с указанного количества символов с начала строки. В отличии от strrpos() и strripos() данный параметр не может быть отрицательным. </parameters>
<output>Возвращает позицию, в которой находится искомая строка, относительно начала строки haystack (независимо от смещения (offset). Также обратите внимание на то, что позиция строки отсчитывается от 0, а не от 1. </output>
<errors></errors>
<example><?php
$mystring = 'abc';
$findme   = 'a';
$pos = strpos($mystring, $findme);
// Заметьте, что используется ===.  Использование == не даст верного 
// результата, так как 'a' находится в нулевой позиции.
if ($pos === false) {
    echo "Строка '$findme' не найдена в строке '$mystring'";
} else {
    echo "Строка '$findme' найдена в строке '$mystring'";
    echo " в позиции $pos";
}?></example>
<example_result></example_result>
</object>

<object id=2574> 
<name>udm_open_stored</name>
<versions>(PHP 4 >= 4.2.0)</versions>
<short-description>Open connection to stored</short-description>
<description>int udm_open_stored ( resource $agent , string $storedaddr ) 
 Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2575> 
<name>sprintf</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает отформатированную строку</short-description>
<description>string sprintf ( string $format [, mixed $args [, mixed $... ]] ) 
 Возвращает строку, созданную с использованием строки формата format. </description>
<parameters>format - Строка формата состоит из нуля и более директив: обычных символов (за исключением %), которые копируются напрямую в результирующую строку, и описателей преобразований, каждый из которых заменяется на один из параметров. Это относится как к sprintf(), так и к printf(). </parameters>
<output>Возвращает строку, отформатированную в соответствии со строкой format. </output>
<errors></errors>
<example><?php
$n =  43951789;
$u = -43951789;
$c = 65; // ASCII 65 is 'A'
// заметьте, двойной %% выводится как одинарный '%'
printf("%%b = '%b'\n", $n); // двоичное представление
printf("%%c = '%c'\n", $c); // выводит символ ascii, аналогично функции chr()
printf("%%d = '%d'\n", $n); // обычное целое число
printf("%%e = '%e'\n", $n); // научная нотация
printf("%%u = '%u'\n", $n); // беззнаковое целое представление положительного числа
printf("%%u = '%u'\n", $u); // беззнаковое целое представление отрицательного числа
printf("%%f = '%f'\n", $n); // представление числа с плавающей точкой
printf("%%o = '%o'\n", $n); // восьмеричное представление
printf("%%s = '%s'\n", $n); // строка
printf("%%x = '%x'\n", $n); // шестнадцатеричное представление (нижний регистр)
printf("%%X = '%X'\n", $n); // шестнадцатеричное представление (верхний регистр)
printf("%%+d = '%+d'\n", $n); // описатель знака с положительным целым числом
printf("%%+d = '%+d'\n", $u); // описатель знака с отрицательным целым числом
?></example>
<example_result>
 
На дереве сидят 0005 обезьян
</example_result>
</object>

<object id=2576> 
<name>oci_num_rows</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Возвращает количество строк, измененных в процессе выполнения запроса</short-description>
<description>int oci_num_rows ( resource $statement ) 
 Возвращает число строк, затронутых в процессе выполнения запроса. </description>
<parameters>statement - Идентификатор допустимого OCI запроса. </parameters>
<output>Возвращает число затронутых строк в виде integer, либо FALSE при ошибке. </output>
<errors></errors>
<example><?php
    echo "<pre>";
    $conn = oci_connect("scott", "tiger");
     
    $stmt = oci_parse($conn, "create table emp2 as select * from emp");
    oci_execute($stmt);
    echo oci_num_rows($stmt) . " rows inserted.<br />";
    oci_free_statement($stmt);
    
    $stmt = oci_parse($conn, "delete from emp2");
    oci_execute($stmt, OCI_DEFAULT);
    echo oci_num_rows($stmt) . " rows deleted.<br />";
    oci_commit($conn);
    oci_free_statement($stmt);
    
    $stmt = oci_parse($conn, "drop table emp2");
    oci_execute($stmt);
    oci_free_statement($stmt);
    
    oci_close($conn);
    echo "</pre>";
?></example>
<example_result></example_result>
</object>

<object id=2577> 
<name>variant_or</name>
<versions>(PHP 5)</versions>
<short-description>Performs a logical disjunction on two variants</short-description>
<description>mixed variant_or ( mixed $left , mixed $right ) 
 Performs a bitwise OR operation. Note that this is slightly different from a regular OR operation. </description>
<parameters>left - The left operand. 
right - The right operand. </parameters>
<output>Variant OR Rules If left is If right is then the result is TRUETRUETRUE TRUEFALSETRUE TRUENULLTRUE FALSETRUETRUE FALSEFALSEFALSE FALSENULLNULL NULLTRUETRUE NULLFALSENULL NULLNULLNULL </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2578> 
<name>localeconv</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Возвращает информацию о числовых форматах</short-description>
<description>array localeconv ( void ) 
 Возвращает ассоциативный массив с информацией о числовых и денежных форматах в текущей локали. </description>
<parameters></parameters>
<output>localeconv() возвращает данные, основанные на текущей локали, установленной функцией setlocale(). Возвращаемый массив содержит следующие элементы: Элемент Описание decimal_point Символ десятичной точки thousands_sep Разделитель групп grouping Массив, содержащий количества цифр в группах для числовых данных int_curr_symbol Международное обозначение валюты (например, RUB) currency_symbol Национальное обозначение валюты (например, руб) mon_decimal_point Символ десятичной точки в денежном формате mon_thousands_sep Разделитель групп в денежном формате mon_grouping Массив, содержащий количества цифр в группах для денежных данных positive_sign Знак для положительных чисел negative_sign Знак для отрицательных чисел int_frac_digits Число разрядов после точки (международное) frac_digits Число разрядов после точки (национальное) p_cs_precedes TRUE, если currency_symbol записывается перед положительным значением, иначе FALSE p_sep_by_space TRUE, если currency_symbol отделяется от положительного значения пробелом, иначе FALSE n_cs_precedes TRUE, если currency_symbol записывается перед отрицательным значением, иначе FALSE n_sep_by_space TRUE, если currency_symbol отделяется от отрицательного значения пробелом, иначе FALSE p_sign_posn Для положительных чисел: 0 - Число и обозначение валюты заключаются в скобки 1 - Знак записывается перед числом и обозначением валюты 2 - Знак записывается после числа и обозначения валюты 3 - Знак записывается перед обозначением валюты 4 - Знак записывается после обозначения валюты n_sign_posn Для отрицательных чисел: 0 - Число и обозначение валюты заключаются в скобки 1 - Знак записывается перед числом и обозначением валюты 2 - Знак записывается после числа и обозначения валюты 3 - Знак записывается перед обозначением валюты 4 - Знак записывается после обозначения валюты </output>
<errors></errors>
<example><?php
if (false !== setlocale(LC_ALL, 'ru_RU.UTF-8')) {
    $locale_info = localeconv();
    print_r($locale_info);
}?></example>
<example_result>
 
Array
(
    [decimal_point] => ,
    [thousands_sep] =>  
    [int_curr_symbol] => RUB
    [currency_symbol] => руб
    [mon_decimal_point] => .
    [mon_thousands_sep] =>  
    [positive_sign] =>
    [negative_sign] => -
    [int_frac_digits] => 2
    [frac_digits] => 2
    [p_cs_precedes] => 0
    [p_sep_by_space] => 1
    [n_cs_precedes] => 0
    [n_sep_by_space] => 1
    [p_sign_posn] => 1
    [n_sign_posn] => 1
    [grouping] => Array
        (
            [0] => 3
            [1] => 3
        )

    [mon_grouping] => Array
        (
            [0] => 3
            [1] => 3
        )

)
</example_result>
</object>

<object id=2579> 
<name>msql_dbname</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним msql_result()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2580> 
<name>mysqli_master_query</name>
<versions>(PHP 5)</versions>
<short-description>Enforce execution of a query on the master in a master/slave setup</short-description>
<description>bool mysqli_master_query ( mysqli $link , string $query ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2581> 
<name>imagepsloadfont</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Load a PostScript Type 1 font from file</short-description>
<description>resource imagepsloadfont ( string $filename ) 
 Load a PostScript Type 1 font from the given filename. </description>
<parameters>filename - Path to the Postscript font file. </parameters>
<output>In the case everything went right, a valid font index will be returned and can be used for further purposes. Otherwise the function returns FALSE. </output>
<errors></errors>
<example><?php
// Create a new image instance
$im = imagecreatetruecolor(350, 45);
// Allocate colors and fill the background
$black = imagecolorallocate($im, 0, 0, 0);
$white = imagecolorallocate($im, 255, 255, 255);
imagefilledrectangle($im, 0, 0, 349, 44, $white);
// Load a font, write to the image and free the font from memory
$font = imagepsloadfont("bchbi.pfb");
imagepstext($im, "Testing... It worked!", $font, 32, $white, $black, 32, 32);
imagepsfreefont($font);
// Output the image
header('Content-type: image/png');
imagepng($im);
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=2582> 
<name>dbplus_tremove</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Remove tuple and return new current tuple</short-description>
<description>int dbplus_tremove ( resource $relation , array $tuple [, array &$current ] ) 
 dbplus_tremove() removes tuple from relation if it perfectly matches a tuple within the relation. current, if given, will contain the data of the new current tuple after calling dbplus_tremove(). </description>
<parameters>relation - A relation opened by dbplus_open(). 
tuple - 
current - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2583> 
<name>fbsql_connect</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Open a connection to a FrontBase Server</short-description>
<description>resource fbsql_connect ([ string $hostname = ini_get("fbsql.default_host") [, string $username = ini_get("fbsql.default_user") [, string $password = ini_get("fbsql.default_password") ]]] ) 
 fbsql_connect() establishes a connection to a FrontBase server. 
 If a second call is made to fbsql_connect() with the same arguments, no new link will be established, but instead, the link identifier of the already opened link will be returned. 
 The link to the server will be closed as soon as the execution of the script ends, unless it&#039;s closed earlier by explicitly calling fbsql_close(). </description>
<parameters>hostname - The server host name. 
username - The user name for the connection. 
password - The password for the connection. </parameters>
<output>Returns a positive FrontBase link identifier on success, or FALSE on errors. </output>
<errors></errors>
<example><?php
$link = fbsql_connect("localhost", "_SYSTEM", "secret")
    or die("Could not connect");
echo "Connected successfully";
fbsql_close($link);
?></example>
<example_result></example_result>
</object>

<object id=2584> 
<name>gmp_legendre</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Символ Лежандра</short-description>
<description>int gmp_legendre ( resource $a , resource $p ) 
 Вычисляет &raquo;  символ Лежандра чисел a и p. p должно быть нечетным и положительным. </description>
<parameters>a - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.
p - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.</parameters>
<output>Число GMP. </output>
<errors></errors>
<example><?php
echo gmp_legendre("1", "3") . "\n";
echo gmp_legendre("2", "3") . "\n";
?></example>
<example_result>
 
1
0
</example_result>
</object>

<object id=2585> 
<name>getimagesize</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get the size of an image</short-description>
<description>array getimagesize ( string $filename [, array &$imageinfo ] ) 
 The getimagesize() function will determine the size of any given image file and return the dimensions along with the file type and a height/width text string to be used inside a normal HTML IMG tag and the correspondant HTTP content type. 
 getimagesize() can also return some more information in imageinfo parameter. 
 Замечание: Note that JPC and JP2 are capable of having components with different bit depths. In this case, the value for "bits" is the highest bit depth encountered. Also, JP2 files may contain multiple JPEG 2000 codestreams. In this case, getimagesize() returns the values for the first codestream it encounters in the root of the file. 
 Замечание: The information about icons are retrieved from the icon with the highest bitrate. </description>
<parameters>filename - This parameter specifies the file you wish to retrieve information about. It can reference a local file or (configuration permitting) a remote file using one of the supported streams. 
imageinfo - This optional parameter allows you to extract some extended information from the image file. Currently, this will return the different JPG APP markers as an associative array. Some programs use these APP markers to embed text information in images. A very common one is to embed &raquo; IPTC information in the APP13 marker. You can use the iptcparse() function to parse the binary APP13 marker into something readable. </parameters>
<output>Returns an array with 7 elements. </output>
<errors>If accessing the filename image is impossible, or if it isn&#039;t a valid picture, getimagesize() will generate an error of level E_WARNING. On read error, getimagesize() will generate an error of level E_NOTICE. </errors>
<example><?php
list($width, $height, $type, $attr) = getimagesize("img/flag.jpg");
echo "<img src=\"img/flag.jpg\" $attr alt=\"getimagesize() example\" />";
?></example>
<example_result></example_result>
</object>

<object id=2586> 
<name>fdf_open</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Open a FDF document</short-description>
<description>resource fdf_open ( string $filename ) 
 Opens a file with form data. 
 You can also use fdf_open_string() to process the results of a PDF form POST request. </description>
<parameters>filename - Path to the FDF file. This file must contain the data as returned from a PDF form or created using fdf_create() and fdf_save(). </parameters>
<output>Returns a FDF document handle, or FALSE on error. </output>
<errors></errors>
<example><?php
// Save the FDF data into a temp file
$fdffp = fopen("test.fdf", "w");
fwrite($fdffp, $HTTP_FDF_DATA, strlen($HTTP_FDF_DATA));
fclose($fdffp);
// Open temp file and evaluate data
$fdf = fdf_open("test.fdf");
/* ... */
fdf_close($fdf);
?></example>
<example_result></example_result>
</object>

<object id=2587> 
<name>imagedashedline</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Draw a dashed line</short-description>
<description>bool imagedashedline ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color ) 
 This function is deprecated. Use combination of imagesetstyle() and imageline() instead. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
x1 - Upper left x coordinate. 
y1 - Upper left y coordinate 0, 0 is the top left corner of the image. 
x2 - Bottom right x coordinate. 
y2 - Bottom right y coordinate. 
color - The fill color. A color identifier created with imagecolorallocate(). </parameters>
<output>Always returns true </output>
<errors></errors>
<example><?php
// Create a 100x100 image
$im = imagecreatetruecolor(100, 100);
$white = imagecolorallocate($im, 0xFF, 0xFF, 0xFF);
// Draw a vertical dashed line
imagedashedline($im, 50, 25, 50, 75, $white);
// Save the image
imagepng($im, './dashedline.png');
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=2588> 
<name>xslt_set_base</name>
<versions>(PHP 4 >= 4.0.5)</versions>
<short-description>Установка базового URI для всех XSLT преобразований </short-description>
<description>void xslt_set_base ( resource $xh , string $uri ) 
 Задает значение базового URI для всех XSLT преобразований. Этот URI используется в Xpath инструкциях для разбора document() и других команд, имеющих доступ к внешним источникам. Также он используется для разрешения URI элементов <xsl:include> и <xsl:import>. </description>
<parameters>xh - Идентификатор ссылки на XSLT-процессор, созданный функцией xslt_create(). 
uri - Значение базового URI. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2589> 
<name>ldap_count_entries</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Посчитать число записей в результатах поиска</short-description>
<description>int ldap_count_entries ( resource $link_identifier , resource $result_identifier ) 
 Возвращает число записей, сохраненных в результате предыдущей операции поиска. </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный функцией ldap_connect(). 
result_identifier - Внутренний результат LDAP. </parameters>
<output>Возвращает число записей в результате или FALSE в случае ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2590> 
<name>rmdir</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Удаляет директорию</short-description>
<description>bool rmdir ( string $dirname [, resource $context ] ) 
 Пытается удалить директорию с именем dirname. Директория должна быть пустой и должны иметься необходимые для этого права. В случае ошибки будет сгенерирована ошибка уровня E_WARNING. </description>
<parameters>dirname - Путь к директории. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
if (!is_dir('examples')) {
    mkdir('examples');
}
rmdir('examples');
?></example>
<example_result></example_result>
</object>

<object id=2591> 
<name>strip_tags</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Удаляет HTML и PHP-теги из строки</short-description>
<description>string strip_tags ( string $str [, string $allowable_tags ] ) 
 Эта функция пытается возвратить строку str, из которой удалены все NUL-байты, HTML и PHP теги. Для удаления тегов используется тот же автомат, что и в функции fgetss(). </description>
<parameters>str - Входная строка. 
allowable_tags - Второй необязательный параметр может быть использован для указания тегов, которые не нужно удалять. </parameters>
<output>Возвращает строку без тегов. </output>
<errors></errors>
<example><?php
$text = '<p>Параграф.</p><!-- Комментарий --> <a href="#fragment">Еще текст</a>';
echo strip_tags($text);
echo "\n";
// Разрешаем <p> и <a>
echo strip_tags($text, '<p><a>');
?></example>
<example_result>
 
Параграф. Еще текст
<p>Параграф.</p> <a href="#fragment">Еще текст</a>
</example_result>
</object>

<object id=2592> 
<name>ncurses_attrset</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Set given attributes</short-description>
<description>int ncurses_attrset ( int $attributes ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>attributes - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2593> 
<name>sqlite_fetch_array</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Выбирает следующую запись из результата запроса и возвращает массив</short-description>
<description>array sqlite_fetch_array ( resource $result [, int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]] ) 
 Объектно-ориентированный стиль (метод): array SQLiteResult::fetch ([ int $result_type = SQLITE_BOTH [, bool $decode_binary = true ]] )</description>
<parameters>result - Ресурс результата SQLite. Этот параметр не требуется при использовании объектно-ориентированного метода. 
result_type - Необязательный параметрresult_type принимает константу, определяющую, как будетиндексирован возвращаемый массив.При использовании SQLITE_ASSOC будет возвращенассоциативный массив, а при использовании SQLITE_NUM- числовой. SQLITE_BOTH вернет массив как сассоциативными, так и с числовыми индексами.Значением по умолчанию для этой функции являетсяSQLITE_BOTH.
decode_binary - Когда параметрdecode_binary установлен в TRUE (по умолчанию),PHP будет декодировать бинарный код, примененный к данным, как если бы они были закодированы функциейsqlite_escape_string(). Обычно вам следует оставлятьэто значение по умолчанию, если только вы не работаете с базой данныхsqlite, которая была создана в ином приложении.</parameters>
<output>Возвращает массив со следующей записью в результирующем наборе, или FALSE, если следующая позиция находится за последней записью. </output>
<errors></errors>
<example><?php
$dbhandle = sqlite_open('sqlitedb');
$query = sqlite_query($dbhandle, 'SELECT name, email FROM users LIMIT 25');
while ($entry = sqlite_fetch_array($query, SQLITE_ASSOC)) {
    echo 'Имя: ' . $entry['name'] . '  E-mail: ' . $entry['email'];
}?></example>
<example_result></example_result>
</object>

<object id=2594> 
<name>imagecopyresampled</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Copy and resize part of an image with resampling</short-description>
<description>bool imagecopyresampled ( resource $dst_image , resource $src_image , int $dst_x , int $dst_y , int $src_x , int $src_y , int $dst_w , int $dst_h , int $src_w , int $src_h ) 
 imagecopyresampled() copies a rectangular portion of one image to another image, smoothly interpolating pixel values so that, in particular, reducing the size of an image still retains a great deal of clarity. 
 In other words, imagecopyresampled() will take an rectangular area from src_image of width src_w and height src_h at position (src_x,src_y) and place it in a rectangular area of dst_image of width dst_w and height dst_h at position (dst_x,dst_y). 
 If the source and destination coordinates and width and heights differ, appropriate stretching or shrinking of the image fragment will be performed. The coordinates refer to the upper left corner. This function can be used to copy regions within the same image (if dst_image is the same as src_image) but if the regions overlap the results will be unpredictable. </description>
<parameters>dst_image - Ресурс целевого изображения.
src_image - Ресурс исходного изображения.
dst_x - x-coordinate of destination point. 
dst_y - y-coordinate of destination point. 
src_x - x-coordinate of source point. 
src_y - y-coordinate of source point. 
dst_w - Destination width. 
dst_h - Destination height. 
src_w - Ширина исходного изображения.
src_h - Высота исходного изображения.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=2595> 
<name>oci_fetch_all</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Выбирает все строки из результата запроса в двумерный массив</short-description>
<description>int oci_fetch_all ( resource $statement , array &$output [, int $skip = 0 [, int $maxrows = -1 [, int $flags = OCI_FETCHSTATEMENT_BY_COLUMN + OCI_ASSOC ]]] ) 
 Выбирает все строки из результата запроса в двумерный массив. По умолчанию возвращает все строки. 
 Эта функция может быть вызваться только один раз для каждого запроса запущенного с помощью oci_execute(). </description>
<parameters>statement - Корректный идентификатор выражения OCI8, полученный изoci_parse() и исполненный функцией oci_execute(), или идентификатор выраженияREF CURSOR.
output - Переменная, содержащая возвращенные строки. 
skip - Число строк, которых необходимо исключить из выборки. По умолчанию равно 0, выборка возвращается со следующего за первым ряда. 
maxrows - Число возвращаемых строк. По умолчанию равно -1, что означает возврат всех строк, начиная с указанных в skip + 1 предыдущая строка. 
flags - Параметр flags содержит структуру массива отражает необходимость использования ассоциативных массивов. Структура массива oci_fetch_all() Константа Описание OCI_FETCHSTATEMENT_BY_ROW Массив будет содержать по одному под-массиву на каждую строку запроса. OCI_FETCHSTATEMENT_BY_COLUMN Массив будет содержать по одному под-массиву на каждый столбец. Используется по умолчанию. </parameters>
<output>Возвращает число столбцов в output, который может принимать значение 0 или более, или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $e = oci_error();
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}
$stid = oci_parse($conn, 'SELECT POSTAL_CODE, CITY FROM locations WHERE ROWNUM < 3');
oci_execute($stid);
$nrows = oci_fetch_all($stid, $res);
echo "$nrows rows fetched<br>\n";
var_dump($res);
// Вывод var_dump:
//    2 rows fetched
//    array(2) {
//      ["POSTAL_CODE"]=>
//      array(2) {
//        [0]=>
//        string(6) "00989x"
//        [1]=>
//        string(6) "10934x"
//      }
//      ["CITY"]=>
//      array(2) {
//        [0]=>
//        string(4) "Roma"
//        [1]=>
//        string(6) "Venice"
//      }
//    }
// Форматирование результатов
echo "<table border='1'>\n";
foreach ($res as $col) {
    echo "<tr>\n";
    foreach ($col as $item) {
        echo "    <td>".($item !== null ? htmlentities($item, ENT_QUOTES) : "")."</td>\n";
    }
    echo "</tr>\n";
}echo "</table>\n";
oci_free_statement($stid);
oci_close($conn);
?></example>
<example_result></example_result>
</object>

<object id=2596> 
<name>php_uname</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Returns information about the operating system PHP is running on</short-description>
<description>string php_uname ([ string $mode = "a" ] ) 
 php_uname() returns a description of the operating system PHP is running on. This is the same string you see at the very top of the phpinfo() output. For the name of just the operating system, consider using the PHP_OS constant, but keep in mind this constant will contain the operating system PHP was built on. 
 On some older UNIX platforms, it may not be able to determine the current OS information in which case it will revert to displaying the OS PHP was built on. This will only happen if your uname() library call either doesn&#039;t exist or doesn&#039;t work. </description>
<parameters>mode - mode is a single character that defines what information is returned: &#039;a&#039;: This is the default. Contains all modes in the sequence "s n r v m". &#039;s&#039;: Operating system name. eg. FreeBSD. &#039;n&#039;: Host name. eg. localhost.example.com. &#039;r&#039;: Release name. eg. 5.1.2-RELEASE. &#039;v&#039;: Version information. Varies a lot between operating systems. &#039;m&#039;: Machine type. eg. i386. </parameters>
<output>Returns the description, as a string. </output>
<errors></errors>
<example><?php
echo php_uname();
echo PHP_OS;
/* Some possible outputs:
Linux localhost 2.4.21-0.13mdk #1 Fri Mar 14 15:08:06 EST 2003 i686
Linux
FreeBSD localhost 3.2-RELEASE #15: Mon Dec 17 08:46:02 GMT 2001
FreeBSD
Windows NT XN1 5.1 build 2600
WINNT
*/
if (strtoupper(substr(PHP_OS, 0, 3)) === 'WIN') {
    echo 'This is a server using Windows!';
} else {
    echo 'This is a server not using Windows!';
}
?></example>
<example_result></example_result>
</object>

<object id=2597> 
<name>grapheme_strrpos</name>
<versions>(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)</versions>
<short-description>Find position (in grapheme units) of last occurrence of a string</short-description>
<description>int grapheme_strrpos ( string $haystack , string $needle [, int $offset = 0 ] ) 
 Find position (in grapheme units) of last occurrence of a string </description>
<parameters>haystack - The string to look in. Must be valid UTF-8. 
needle - The string to look for. Must be valid UTF-8. 
offset - The optional $offset parameter allows you to specify where in $haystack to start searching as an offset in grapheme units (not bytes or characters). The position returned is still relative to the beginning of haystack regardless of the value of $offset. </parameters>
<output>Returns the position as an integer. If needle is not found, grapheme_strrpos() will return boolean FALSE. </output>
<errors></errors>
<example><?php
$char_a_ring_nfd = "a\xCC\x8A";  // 'LATIN SMALL LETTER A WITH RING ABOVE' (U+00E5) normalization form "D"
$char_o_diaeresis_nfd = "o\xCC\x88"; // 'LATIN SMALL LETTER O WITH DIAERESIS' (U+00F6) normalization form "D"
print grapheme_strrpos( $char_a_ring_nfd . $char_o_diaeresis_nfd . $char_o_diaeresis_nfd, $char_o_diaeresis_nfd);
?></example>
<example_result>
 
2
</example_result>
</object>

<object id=2598> 
<name>date_timezone_get</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Псевдоним DateTime::getTimezone()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2599> 
<name>PDF_show_boxed</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Output text in a box [deprecated]</short-description>
<description>int PDF_show_boxed ( resource $p , string $text , float $left , float $top , float $width , float $height , string $mode , string $feature ) 
 This function is deprecated since PDFlib version 6, use PDF_fit_textline() for single lines, or the PDF_*_textflow() functions for multi-line formatting instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2600> 
<name>imagepsslantfont</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Slant a font</short-description>
<description>bool imagepsslantfont ( resource $font_index , float $slant ) 
 Slant a given font given. </description>
<parameters>font_index - A font resource, returned by imagepsloadfont(). 
slant - Slant level. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Load a .pfb font file
$font = imagepsloadfont('./px3l.pfb');
// Slant the font by 22.5
imagepsslantfont($font, 22.5);
// Do any operations with the font here
// Free the font from memory
imagepsfreefont($font);
?></example>
<example_result></example_result>
</object>

<object id=2601> 
<name>ftp_quit</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним ftp_close()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2602> 
<name>ncurses_border</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Draw a border around the screen using attributed characters</short-description>
<description>int ncurses_border ( int $left , int $right , int $top , int $bottom , int $tl_corner , int $tr_corner , int $bl_corner , int $br_corner ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>left - 
right - 
top - 
bottom - 
tl_corner - Top left corner 
tr_corner - Top right corner 
bl_corner - Bottom left corner 
br_corner - Bottom right corner </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2603> 
<name>mysql_fetch_assoc</name>
<versions>(PHP 4 >= 4.0.3, PHP 5)</versions>
<short-description>Возвращает ряд результата запроса в качестве ассоциативного массива</short-description>
<description>array mysql_fetch_assoc ( resource $result ) 
 Возвращает ассоциативный массив, соответсвующий полученному ряду и сдвигает вперед внутренний указатель результата. Функция mysql_fetch_assoc() аналогична вызову функции mysql_fetch_array() со вторым необязательным параметром, равным MYSQL_ASSOC. Функция возвращает только ассоциативный массив. </description>
<parameters>result - Обрабатываемый результат запроса.Этот результат может быть получен с помощью функции mysql_query().</parameters>
<output>Возвращает ассоциативный массив строк, соответствующий полученному ряду, либо FALSE если рядов больше нет. </output>
<errors></errors>
<example><?php
$conn = mysql_connect("localhost", "mysql_user", "mysql_password");
if (!$conn) {
    echo "Unable to connect to DB: " . mysql_error();
    exit;
}
if (!mysql_select_db("mydbname")) {
    echo "Unable to select mydbname: " . mysql_error();
    exit;
}
$sql = "SELECT id as userid, fullname, userstatus
        FROM   sometable
        WHERE  userstatus = 1";
$result = mysql_query($sql);
if (!$result) {
    echo "Could not successfully run query ($sql) from DB: " . mysql_error();
    exit;
}
if (mysql_num_rows($result) == 0) {
    echo "No rows found, nothing to print so am exiting";
    exit;
}
// До тех пор, пока в результате содержатся ряды, помещаем их в ассоциативный массив.
// Замечание: если запрос возвращает только один ряд - нет нужды в цикле.
// Замечание: если вы добавите extract($row); в начало цикла, вы сделаете
//            доступными переменные $userid, $fullname и $userstatus
while ($row = mysql_fetch_assoc($result)) {
    echo $row["userid"];
    echo $row["fullname"];
    echo $row["userstatus"];
}
mysql_free_result($result);
?></example>
<example_result></example_result>
</object>

<object id=2604> 
<name>spl_object_hash</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Return hash id for given object </short-description>
<description>string spl_object_hash ( object $obj ) 
 This function returns a unique identifier for the object. This id can be used as a hash key for storing objects or for identifying an object. </description>
<parameters>object - Any object. </parameters>
<output>A string that is unique for each currently existing object and is always the same for each object. </output>
<errors></errors>
<example><?php
$id = spl_object_hash($object);
$storage[$id] = $object;
?></example>
<example_result></example_result>
</object>

<object id=2605> 
<name>imagegd</name>
<versions>(PHP 4 >= 4.0.7, PHP 5)</versions>
<short-description>Вывод GD-изображения в браузер или в файл</short-description>
<description>bool imagegd ( resource $image [, string $filename ] ) 
 Вывод GD-изображения в filename. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
filename - Путь для сохранения файла. Если не установлен или равен NULL, изображение будет выведено в поток вывода в бинарном виде.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Создаём пустое изображение и добавляем текст
$im = imagecreatetruecolor(120, 20);
$text_color = imagecolorallocate($im, 233, 14, 91);
imagestring($im, 1, 5, 5,  "A Simple Text String", $text_color);
// Выводим изображение
imagegd($im);
// Освобождаем память
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=2606> 
<name>php_logo_guid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the logo guid</short-description>
<description>string php_logo_guid ( void ) 
 This function returns the ID which can be used to display the PHP logo using the built-in image. Logo is displayed only if expose_php is On. </description>
<parameters></parameters>
<output>Returns PHPE9568F34-D428-11d2-A769-00AA001ACF42. </output>
<errors></errors>
<example><?php
echo '<img src="' . $_SERVER['PHP_SELF'] .
     '?=' . php_logo_guid() . '" alt="PHP Logo !" />';
?></example>
<example_result></example_result>
</object>

<object id=2607> 
<name>mysqli_get_metadata</name>
<versions>(PHP 5)</versions>
<short-description>Синоним для mysqli_stmt_result_metadata()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2608> 
<name>get_called_class</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Имя класса, полученное с помощью позднего статического связывания</short-description>
<description>string get_called_class ( void ) 
 Возвращает имя класса, из которого был вызван статический метод. </description>
<parameters></parameters>
<output>Возвращает имя класса. Возвращает FALSE, если было вызвано вне класса. </output>
<errors></errors>
<example><?php
class foo {
    static public function test() {
        var_dump(get_called_class());
    }
}
class bar extends foo {
}
foo::test();
bar::test();
?></example>
<example_result>
 
string(3) "foo"
string(3) "bar"
</example_result>
</object>

<object id=2609> 
<name>fseek</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Устанавливает смещение в файловом указателе</short-description>
<description>int fseek ( resource $handle , int $offset [, int $whence = SEEK_SET ] ) 
 Устанавливает смещение в файле, на который ссылается handle. Новое смещение, измеряемое в байтах от начала файла, получается путём прибавления параметра offset к позиции, указанной в параметре whence. 
 В общей сложности, разрешается указывать смещение за пределами конца файла, если данные потом будут записаны в этой позиции, чтение любого незаписанного региона между концом файла и указанной позицией возвратит нулевые байты. Однако, определенные потоки могут не поддерживать это поведение, особенно если они оперируют над хранилищем фиксированного размера. </description>
<parameters>handle - Указатель (resource)на файл, обычно создаваемый с помощью функции fopen().
offset - Смещение. 
whence - Значениями whence являются: SEEK_SET - Устанавливает смещение в offset байт. SEEK_CUR - Устанавливает смещение в текущее положение плюс offset. SEEK_END - Устанавливает смещение в конец файла плюс offset. </parameters>
<output>В случае успеха возвращает 0; в противном сучае возвращает -1. </output>
<errors></errors>
<example><?php
$fp = fopen('somefile.txt', 'r');
// читаем немного данных
$data = fgets($fp, 4096);
// перемещаемся назад к началу файла
// то же самое, что и rewind($fp);
fseek($fp, 0);
?></example>
<example_result></example_result>
</object>

<object id=2610> 
<name>implode</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Объединяет элементы массива в строку</short-description>
<description>string implode ( string $glue , array $pieces ) string implode ( array $pieces )</description>
<parameters>glue - По умолчанию равен пустой строке. Это не является предпочтительным вариантом использования implode(), т.к. glue в таком случае будет вторым параметром, а это значит, что используется нежелательный прототип. 
pieces - Массив объединяемых строк. </parameters>
<output>Возвращает строку, содержащую строкое представление всех элементов массива в указанном порядке, со строкой glue между каждым элементом. </output>
<errors></errors>
<example><?php
$array = array('имя', 'почта', 'телефон');
$comma_separated = implode(",", $array);
echo $comma_separated; // имя,почта,телефон
// Пустая строка при использовании пустого массива:
var_dump(implode('hello', array())); // string(0) ""
?></example>
<example_result></example_result>
</object>

<object id=2611> 
<name>hw_pConnect</name>
<versions>(PHP 4)</versions>
<short-description>Make a persistent database connection</short-description>
<description>int hw_pconnect ( string $host , int $port [, string $username ], string $password ) 
 Opens a persistent connection to a Hyperwave server. You can have multiple persistent connections open at once. </description>
<parameters>host - The server host name. 
port - The server port number. 
username - The Hyperwave user name. If omitted, no identification with the server will be done. It is similar to identify as user anonymous. 
password - The password for username. Keep in mind, that the password is not encrypted. </parameters>
<output>Returns a connection index on success, or FALSE if the connection could not be made. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2612> 
<name>odbc_pconnect</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Open a persistent database connection</short-description>
<description>resource odbc_pconnect ( string $dsn , string $user , string $password [, int $cursor_type ] ) 
 Opens a persistent database connection. 
 This function is much like odbc_connect(), except that the connection is not really closed when the script has finished. Future requests for a connection with the same dsn, user, password combination (via odbc_connect() and odbc_pconnect()) can reuse the persistent connection. </description>
<parameters></parameters>
<output>Returns an ODBC connection id or 0 (FALSE) on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2613> 
<name>msql_fieldlen</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Alias of msql_field_len()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2614> 
<name>odbc_rollback</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Rollback a transaction</short-description>
<description>bool odbc_rollback ( resource $connection_id ) 
 Rolls back all pending statements on the connection. </description>
<parameters>connection_id - Идентификатор соединения ODBC,за подробностями обращайтесь к odbc_connect().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2615> 
<name></name>
<versions>(PHP 4, PHP5)</versions>
<short-description></short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2616> 
<name>bin2hex</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Преобразует бинарные данные в шестнадцатиричное представление</short-description>
<description>string bin2hex ( string $str ) 
 Возвращает ASCII-строку, содержащую шестнадцатиричное представление аргумента str. Преобразование производится побайтно, начиная с верхнего полубайта. </description>
<parameters>str - Строка. </parameters>
<output>Возвращает шестнадцатиричное представление указанной строки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2617> 
<name>ldap_get_values</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает все значения из записи результата</short-description>
<description>array ldap_get_values ( resource $link_identifier , resource $result_entry_identifier , string $attribute ) 
 Читает все значения атрибута в записи результата. 
 Эта функция требует result_entry_identifier, а следовательно, перед ней должны быть запущена одна из функций ldap поиска и один из результатов их вызова для получения отдельной записи. 
 В создаваемом приложении необходимо будет использовать сложные конструкции для поиска определённых атрибутов (таких как "фамилия" или "почта") или необходимо будет использовать функцию ldap_get_attributes(), чтобы разобрать, какие атрибуты существуют для данной записи. </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
result_entry_identifier - 
attribute - </parameters>
<output>Возвращает массив значений для атрибута в случае успеха, и FALSE в случае ошибки. Число значений может быть найдено по индексу "count" в результирующем массиве. Отдельные значения могут быть доступны по целочисленным индексам в массиве. Первый индекс 0. </output>
<errors></errors>
<example><?php
// $ds верный идентификатор ссылки на сервер директории
// $sr верный результат поиска в директории ldap
// $entry верный идентификатор записи из вызова функции
//        вернувшей запись директории
$values = ldap_get_values($ds, $entry, "mail");
echo $values["count"] . " адреса email для этой записи.<br />";
for ($i=0; $i < $values["count"]; $i++) {
    echo $values[$i] . "<br />";
}?></example>
<example_result></example_result>
</object>

<object id=2618> 
<name>convert_uuencode</name>
<versions>(PHP 5)</versions>
<short-description>Кодирует строку в формат uuencode</short-description>
<description>string convert_uuencode ( string $data ) 
 convert_uuencode() кодирует строку с помощью алгоритма uuencode. 
 Кодирование uuencode переводит строки (включая бинарные символы) в последовательности печатных (7-битных) ASCII-символов, что позволяет безопасно обмениваться данными через сеть. Закодированные данные примерно на 35% больше оригинала. </description>
<parameters>data - Кодируемые данные. </parameters>
<output>Возвращает закодированные данные в формате uuencode. </output>
<errors></errors>
<example><?php
$some_string = "test\ntext text\r\n";
echo convert_uuencode($some_string);
?></example>
<example_result></example_result>
</object>

<object id=2619> 
<name>hw_Unlock</name>
<versions>(PHP 4)</versions>
<short-description>Unlock object</short-description>
<description>bool hw_unlock ( int $connection , int $objectID ) 
 Unlocks a document, so other users regain access. </description>
<parameters>connection - The connection identifier. 
objectID - The document object identifier. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2620> 
<name>readline_redisplay</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Redraws the display</short-description>
<description>void readline_redisplay ( void ) 
 Redraws readline to redraw the display. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2621> 
<name>get_included_files</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Returns an array with the names of included or required files</short-description>
<description>array get_included_files ( void ) 
 Gets the names of all files that have been included using include(), include_once(), require() or require_once(). </description>
<parameters></parameters>
<output>Returns an array of the names of all files. </output>
<errors></errors>
<example><?php
// This file is abc.php
include 'test1.php';
include_once 'test2.php';
require 'test3.php';
require_once 'test4.php';
$included_files = get_included_files();
foreach ($included_files as $filename) {
    echo "$filename\n";
}
?></example>
<example_result>
 
abc.php
test1.php
test2.php
test3.php
test4.php
</example_result>
</object>

<object id=2622> 
<name>PDF_new</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Создает объект PDFlib</short-description>
<description>resource PDF_new ( void ) 
 Создает новый объект PDFlib с настройками по умолчанию. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2623> 
<name>gmp_nextprime</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Поиск следующего простого числа</short-description>
<description>resource gmp_nextprime ( int $a ) 
 Ищет следующее простое число </description>
<parameters>a - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.</parameters>
<output>Возвращает следующее простое число, большее, чем a в виде GMP числа. </output>
<errors></errors>
<example><?php
$prime1 = gmp_nextprime(10); // ближайшее простое число, большее 10
$prime2 = gmp_nextprime(-1000); // ближайшее простое число, большее -1000
echo gmp_strval($prime1) . "\n";
echo gmp_strval($prime2) . "\n";
?></example>
<example_result>
 
11
-997
</example_result>
</object>

<object id=2624> 
<name>imagepsfreefont</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Free memory used by a PostScript Type 1 font</short-description>
<description>bool imagepsfreefont ( resource $font_index ) 
 imagepsfreefont() frees memory used by a PostScript Type 1 font. </description>
<parameters>font_index - A font resource, returned by imagepsloadfont(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Load a .pfb font file
$font = imagepsloadfont('./bchbi.pfb');
// Do any operations with the font here
// Free the font from memory
imagepsfreefont($font);
?></example>
<example_result></example_result>
</object>

<object id=2625> 
<name>mb_ereg_search</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Поиск соответствий регулярному выражению для строк в многобайтных кодировках </short-description>
<description>bool mb_ereg_search ([ string $pattern [, string $option = "ms" ]] ) 
 Выполняет поиск соответствий регулярному выражению в многобайтной строке. </description>
<parameters>pattern - Шаблон для поиска, текст регулярного выражения. 
option - Настройка поиска. </parameters>
<output>Для этой функции будетиспользована внутренняя кодировка или кодировка, установленная функцией mb_regex_encoding().</output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2626> 
<name>odbc_connect</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Connect to a datasource</short-description>
<description>resource odbc_connect ( string $dsn , string $user , string $password [, int $cursor_type ] ) 
 The connection id returned by this functions is needed by other ODBC functions. You can have multiple connections open at once as long as they either use different db or different credentials. 
 With some ODBC drivers, executing a complex stored procedure may fail with an error similar to: "Cannot open a cursor on a stored procedure that has anything other than a single select statement in it". Using SQL_CUR_USE_ODBC may avoid that error. Also, some drivers don&#039;t support the optional row_number parameter in odbc_fetch_row(). SQL_CUR_USE_ODBC might help in that case, too. </description>
<parameters>dsn - The database source name for the connection. Alternatively, a DSN-less connection string can be used. 
user - The username. 
password - The password. 
cursor_type - This sets the type of cursor to be used for this connection. This parameter is not normally needed, but can be useful for working around problems with some ODBC drivers. </parameters>
<output>Returns an ODBC connection id or 0 (FALSE) on error. </output>
<errors></errors>
<example><?php
// Microsoft SQL Server using the SQL Native Client 10.0 ODBC Driver - allows connection to SQL 7, 2000, 2005 and 2008
$connection = odbc_connect("Driver={SQL Server Native Client 10.0};Server=$server;Database=$database;", $user, $password);
// Microsoft Access
$connection = odbc_connect("Driver={Microsoft Access Driver (*.mdb)};Dbq=$mdbFilename", $user, $password);
// Microsoft Excel
$excelFile = realpath('C:/ExcelData.xls');
$excelDir = dirname($excelFile);
$connection = odbc_connect("Driver={Microsoft Excel Driver (*.xls)};DriverId=790;Dbq=$excelFile;DefaultDir=$excelDir" , '', '');
?></example>
<example_result></example_result>
</object>

<object id=2627> 
<name>mysql_db_name</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает название базы данных из вызова к mysql_list_dbs()</short-description>
<description>string mysql_db_name ( resource $result , int $row [, mixed $field ] ) 
 Возвращает название базы данных из вызова к mysql_list_dbs(). </description>
<parameters>result - Дескриптор результата, полученный из вызова mysql_list_dbs(). 
row - Индекс в результате. 
field - Имя поля. </parameters>
<output>Возвращает название базы данных в случае успеха, или FALSE в случае ошибки. В случае возврата FALSE используйте mysql_error() для определения природы ошибок. </output>
<errors></errors>
<example><?php
error_reporting(E_ALL);
$link = mysql_connect('dbhost', 'username', 'password');
$db_list = mysql_list_dbs($link);
$i = 0;
$cnt = mysql_num_rows($db_list);
while ($i < $cnt) {
    echo mysql_db_name($db_list, $i) . "\n";
    $i++;
}?></example>
<example_result></example_result>
</object>

<object id=2628> 
<name>msql_result</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get result data</short-description>
<description>string msql_result ( resource $result , int $row [, mixed $field ] ) 
 msql_result() returns the contents of one cell from a mSQL result set. 
 When working on large result sets, you should consider using one of the functions that fetch an entire row (specified below). As these functions return the contents of multiple cells in one function call, they are often much quicker than msql_result(). 
 Recommended high-performance alternatives: msql_fetch_row(), msql_fetch_array(), and msql_fetch_object(). </description>
<parameters>result - Обрабатываемый результат запроса,полученный с помощью функции msql_query().
row - The row offset. 
field - Can be the field&#039;s offset, or the field&#039;s name, or the field&#039;s table dot field&#039;s name (tablename.fieldname.). If the column name has been aliased (&#039;select foo as bar from ...&#039;), use the alias instead of the column name. </parameters>
<output>Returns the contents of the cell at the row and offset in the specified mSQL result set. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2629> 
<name>array_rand</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выбирает одно или несколько случайных значений из массива</short-description>
<description>mixed array_rand ( array $input [, int $num_req = 1 ] ) 
 Выбирает одно или несколько случайных значений из массива. Возвращает ключ (или ключи) данных случайных элементов. </description>
<parameters>input - Входной массив. 
num_req - Определяет количество выбираемых элементов. Попытка выбрать больше элементов, чем есть в массиве, сгенерирует ошибку уровня E_WARNING. </parameters>
<output>Если вы выбираете только одно значение, функция array_rand() возвращает ключ, соответствующий этому значению. В обратном случае, она возвращает массив ключей, соответствующих случайным значениям. Это сделано так образом, чтобы дать возможность выбрать из массива как случайные значения, так и случайные ключи. </output>
<errors></errors>
<example><?php
$input = array("Neo", "Morpheus", "Trinity", "Cypher", "Tank");
$rand_keys = array_rand($input, 2);
echo $input[$rand_keys[0]] . "\n";
echo $input[$rand_keys[1]] . "\n";
?></example>
<example_result></example_result>
</object>

<object id=2630> 
<name>aggregate_methods_by_list</name>
<versions>(PHP 4 >= 4.2.0)</versions>
<short-description>Selective dynamic class methods aggregation to an object </short-description>
<description>void aggregate_methods_by_list ( object $object , string $class_name , array $methods_list [, bool $exclude = false ] ) 
 Aggregates methods from a class to an existing object using a list of method names. 
 The class constructor or methods whose names start with an underscore character (_), which are considered private to the aggregated class, are always excluded. </description>
<parameters>object - 
class_name - 
methods_list - 
exclude - The optional parameter exclude is used to decide whether the list contains the names of methods to include in the aggregation (i.e. exclude is FALSE), or to exclude from the aggregation (exclude is TRUE). </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2631> 
<name>mb_convert_kana</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Преобразование кодировок "kana" из одной в другую ("zen-kaku", "han-kaku" и другие)</short-description>
<description>string mb_convert_kana ( string $str [, string $option = "KV" [, string $encoding ]] ) 
 Поизводит преобразование "han-kaku" - "zen-kaku" для агрумента string str. Эта функция может быть полезной только для японского языка. </description>
<parameters>str - Исходная строка string. 
option - Настройка конвертации. 
encoding - Параметр encodingпредставляет собой символьную кодировку. Если он опущен, вместо него будет использовано значение внутренней кодировки.</parameters>
<output>Преобразованная строка string. </output>
<errors></errors>
<example><?php
/* Преобразование всех символов "kana" в "zen-kaku" "kata-kana" */
$str = mb_convert_kana($str, "KVC");
/* Преобразование "han-kaku" "kata-kana" в "zen-kaku" "kata-kana" 
   и "zen-kaku" alpha-numeric в "han-kaku" */
$str = mb_convert_kana($str, "KVa");
?></example>
<example_result></example_result>
</object>

<object id=2632> 
<name>xmlrpc_server_add_introspection_data</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Добавляет документацию самоанализа</short-description>
<description>int xmlrpc_server_add_introspection_data ( resource $server , array $desc ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2633> 
<name>addslashes</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Экранирует строку с помощью слэшей</short-description>
<description>string addslashes ( string $str ) 
 Возвращает строку, в которой перед каждым спецсимволом добавлен обратный слэш, например, для последующего использования этой строки в запросе к базе данных и т.п. Экранируются одиночная кавычка (&#039;), двойная кавычка ("), обратный слэш (\) и NUL (байт NULL). 
 Функция addslashes() часто применяется при записи в базу данных. Предположим, если нужно внести в базу данных имя O&#039;reilly, то эту строку необходимо проэкранировать. Настоятельно рекомендуется использовать функцию экранирования, специфичную для используемой вами базы данных (например, mysqli_real_escape_string() для MySQL или pg_escape_string() для PostgreSQL), но если используемая вами база данных не имеет собственной функции экранирования и для экранирования специальных символов используется символ \, то для этой цели можно воспользоваться данной функцией. Заметьте, что сам символ \ в базу данных записан не будет, он используется только для корректной передачи данных в базу. Если директива конфигурации magic_quotes_sybase имеет значение on, то символ одинарной кавычки &#039; будет экранироваться добавлением еще одной кавычки &#039; вместо обратного слэша. 
 Директива конфигурации magic_quotes_gpc по умолчанию имеет значение on, при этом функция addslashes() автоматически применяется ко всем данным GET, POST, и COOKIE. Не используйте addslashes() для данных, обработанных magic_quotes_gpc, чтобы избежать двойного экранирования. Для проверки состояния этой директивы используется get_magic_quotes_gpc(). </description>
<parameters>str - Экранируемая строка. </parameters>
<output>Возвращает экранируемую строку. </output>
<errors></errors>
<example><?php
$str = "Ваше имя O'reilly?";
// выводит: Ваше имя O\'reilly?
echo addslashes($str);
?></example>
<example_result></example_result>
</object>

<object id=2634> 
<name>apache_lookup_uri</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Осуществить частичный запрос на указанный URI и вернуть все полученные сведения</short-description>
<description>object apache_lookup_uri ( string $filename ) 
 Эта функция осуществляет частичный запрос на указанный URI. Этого достаточно для получения всей важной информации о переданном функции ресурсе. 
 Эта функция поддерживается только если PHPустановлен в качестве модуля Apache. </description>
<parameters>filename - Имя файла (URI), который запрашивается. </parameters>
<output>Объект, содержащий информацию о переданном URI. Свойствами данного объекта являются: </output>
<errors></errors>
<example><?php
$info = apache_lookup_uri('index.php?var=value');
print_r($info);
if (file_exists($info->filename)) {
    echo 'file exists!';
}?></example>
<example_result>
 
stdClass Object
(
    [status] => 200
    [the_request] => GET /dir/file.php HTTP/1.1
    [method] => GET
    [mtime] => 0
    [clength] => 0
    [chunked] => 0
    [content_type] => application/x-httpd-php
    [no_cache] => 0
    [no_local_copy] => 1
    [unparsed_uri] => /dir/index.php?var=value
    [uri] => /dir/index.php
    [filename] => /home/htdocs/dir/index.php
    [args] => var=value
    [allowed] => 0
    [sent_bodyct] => 0
    [bytes_sent] => 0
    [request_time] => 1074282764
)
file exists!
</example_result>
</object>

<object id=2635> 
<name>hash_update_stream</name>
<versions>(PHP 5 >= 5.1.2, PECL hash >= 1.1)</versions>
<short-description>Добавляет данные из открытого потока в активный контекст хеширования</short-description>
<description>int hash_update_stream ( resource $context , resource $handle [, int $length = -1 ] ) </description>
<parameters>context - Контекст хеширования, возвращаемый hash_init(). 
handle - Дескриптор открытого файла, возвращаемый любой функцией создания потока. 
length - Максимальное число символов для копирования из handle в контекст хеширования. </parameters>
<output>Фактическое количество байт, добавленное в контекст хеширования из handle. </output>
<errors></errors>
<example><?php
$fp = tmpfile();
fwrite($fp, 'Наглый коричневый лисёнок прыгает вокруг ленивой собаки.');
rewind($fp);
$ctx = hash_init('md5');
hash_update_stream($ctx, $fp);
echo hash_final($ctx);
?></example>
<example_result>
 
bff8b4bc8b5c1c1d5b3211dfb21d1e76
</example_result>
</object>

<object id=2636> 
<name>mb_ereg_search_init</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Инициализация поиска соответствий регулярному выражению многобайтной строкой и текстом регулярного выражения </short-description>
<description>bool mb_ereg_search_init ( string $string [, string $pattern [, string $option = "msr" ]] ) 
 mb_ereg_search_init() задает значения параметров string и pattern для функций регулярных выражений. Эти значения будут использоваться в функциях mb_ereg_search(), mb_ereg_search_pos() и mb_ereg_search_regs(). </description>
<parameters>string - Строка, в которой будет осуществляться поиск соответствий. 
pattern - Шаблон, регулярное выражение. 
option - Настройка поиска. </parameters>
<output>Для этой функции будетиспользована внутренняя кодировка или кодировка, установленная функцией mb_regex_encoding().</output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2637> 
<name>dbase_get_header_info</name>
<versions>(PHP 5)</versions>
<short-description>Получает информацию о свойствах полей базы данных</short-description>
<description>array dbase_get_header_info ( int $dbase_identifier ) 
 Возвращает информацию о структуре полей (столбцов) базы данных, согласно заданному идентификатору. </description>
<parameters>dbase_identifier - Идентификатор базы данных, полученный с помощью dbase_open() или dbase_create(). </parameters>
<output>Индексированный массив значений для каждой колонки (поля). Индекс массива начинается с 0. </output>
<errors></errors>
<example><?php
// Путь к файлу БД
$db_path = "/tmp/test.dbf";
// Открываем файл БД
$dbh = dbase_open($db_path, 0)
  or die("Ошибка! Не получается открыть файл '$db_path'.");
// Получаем информацию о столбцах
$column_info = dbase_get_header_info($dbh);
// Отображение информации
print_r($column_info);
?></example>
<example_result></example_result>
</object>

<object id=2638> 
<name>fbsql_select_db</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Select a FrontBase database</short-description>
<description>bool fbsql_select_db ([ string $database_name [, resource $link_identifier ]] ) 
 Sets the current active database on the given link identifier. 
 The client contacts FBExec to obtain the port number to use for the connection to the database. If the database name is a number the system will use that as a port number and it will not ask FBExec for the port number. The FrontBase server can be stared as FRontBase -FBExec=No -port=<port number> <database name>. 
 Every subsequent call to fbsql_query() will be made on the active database. </description>
<parameters>database_name - The name of the database to be selected. 
link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2639> 
<name>PDF_add_pdflink</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Add file link annotation for current page [deprecated]</short-description>
<description>bool PDF_add_pdflink ( resource $pdfdoc , float $bottom_left_x , float $bottom_left_y , float $up_right_x , float $up_right_y , string $filename , int $page , string $dest ) 
 Add a file link annotation to a PDF target. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. 
 This function is deprecated since PDFlib version 6, use PDF_create_action() with type=GoToR and PDF_create_annotation() with type=Link instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2640> 
<name>XMLWriter::setIndent</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Включить или отключить отступы</short-description>
<description>bool XMLWriter::setIndent ( bool $indent ) 
 Процедурный стиль bool xmlwriter_set_indent ( resource $xmlwriter , bool $indent )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
indent - Включено ли добавление отступа. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2641> 
<name>sqlite_create_function</name>
<versions>(PHP 5, sqlite >= 1.0.0)</versions>
<short-description>Регистрирует "стандартную" функцию (UDF) для использования в SQL-запросах</short-description>
<description>void sqlite_create_function ( resource $dbhandle , string $function_name , callback $callback [, int $num_args = -1 ] ) 
 Объектно-ориентированный стиль (метод): void SQLiteDatabase::createFunction ( string $function_name , callback $callback [, int $num_args = -1 ] )</description>
<parameters>dbhandle - Ресурс базы данных SQLite, полученный из функции sqlite_open() в случае использования процедурного подхода. Этот параметр не требуется при использовании объектно-ориентированного подхода. 
function_name - Имя функции, используемой в SQL-запросах. 
callback - Callback-функция, обрабатывающая указанную SQL-функцию. 
num_args - Подсказка парсеру SQLite, если callback-функция принимает известное количество аргументов. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
function md5_and_reverse($string) 
{    return strrev(md5($string));
}
if ($dbhandle = sqlite_open('mysqlitedb', 0666, $sqliteerror)) {
    
    sqlite_create_function($dbhandle, 'md5rev', 'md5_and_reverse', 1);
    
    $sql  = 'SELECT md5rev(filename) FROM files';
    $rows = sqlite_array_query($dbhandle, $sql);
} else {
    echo 'Ошибка открытия базы sqlite: ' . $sqliteerror;
    exit;
}?></example>
<example_result></example_result>
</object>

<object id=2642> 
<name>notes_nav_create</name>
<versions>(PHP 4 >= 4.0.5)</versions>
<short-description>Create a navigator name, in database_name</short-description>
<description>bool notes_nav_create ( string $database_name , string $name ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2643> 
<name>rewinddir</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сбросить дескриптор каталога</short-description>
<description>void rewinddir ([ resource $dir_handle ] ) 
 Сбрасывает поток каталога, переданный в параметре dir_handle таким образом, чтобы тот указывал на начало каталога. </description>
<parameters>dir_handle - Ресурс resource дескриптора каталога, ранее открытый с помощью функции opendir(). Если дескриптор каталога не указан, подразумевается последний дескриптор, который был открыт с помощью opendir(). </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2644> 
<name>iterator_to_array</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Копирует итератор в массив</short-description>
<description>array iterator_to_array ( Traversable $iterator [, bool $use_keys = true ] ) 
 Копирует элементы итератора в массив. </description>
<parameters>iterator - Копируемый итератор. 
use_keys - Следует ли использовать ключи элементов итератора как индексы. </parameters>
<output>Массив (array), содержащий элементы итератора (iterator). </output>
<errors></errors>
<example><?php
$iterator = new ArrayIterator(array('recipe'=>'pancakes', 'egg', 'milk', 'flour'));
var_dump(iterator_to_array($iterator, true));
var_dump(iterator_to_array($iterator, false));
?></example>
<example_result>
 
array(4) {
  ["recipe"]=>
  string(8) "pancakes"
  [0]=>
  string(3) "egg"
  [1]=>
  string(4) "milk"
  [2]=>
  string(5) "flour"
}
array(4) {
  [0]=>
  string(8) "pancakes"
  [1]=>
  string(3) "egg"
  [2]=>
  string(4) "milk"
  [3]=>
  string(5) "flour"
}
</example_result>
</object>

<object id=2645> 
<name>m_completeauthorizations</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Number of complete authorizations in queue, returning an array of their identifiers</short-description>
<description>int m_completeauthorizations ( resource $conn , int &$array ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
array - Its description </parameters>
<output>What the function returns, first on success, then on failure. See also the &return.success; entity </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2646> 
<name>oci_new_collection</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Создает новый объект коллекции</short-description>
<description>OCI-Collection oci_new_collection ( resource $connection , string $tdo [, string $schema = NULL ] ) 
 Создает новый объект коллекции. </description>
<parameters>connection - Идентификатор соединения с сервером Oracle, возвращаемый функцией oci_connect() или oci_pconnect(). 
tdo - Должен быть корректным именем типа (в верхнем регистре). 
schema - Должна быть указана схема данных, где создан именованный тип. По умолчанию, указывается имя пользователя в качестве имени схемы. </parameters>
<output>Returns a new OCICollection object or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2647> 
<name>openssl_pkey_new</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Generates a new private key </short-description>
<description>resource openssl_pkey_new ([ array $configargs ] ) 
 openssl_pkey_new() generates a new private and public key pair. The public component of the key can be obtained using openssl_pkey_get_public(). 
 Замечание: Для корректной работы этой функции должен существовать правильный openssl.cnf. Для более подробной информации смотрите замечания под разделом установки. </description>
<parameters>configargs - You can finetune the key generation (such as specifying the number of bits) using configargs. See openssl_csr_new() for more information about configargs. </parameters>
<output>Returns a resource identifier for the pkey on success, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2648> 
<name>image_type_to_mime_type</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Get Mime-Type for image-type returned by getimagesize, exif_read_data, exif_thumbnail, exif_imagetype</short-description>
<description>string image_type_to_mime_type ( int $imagetype ) 
 The image_type_to_mime_type() function will determine the Mime-Type for an IMAGETYPE constant. </description>
<parameters>imagetype - One of the IMAGETYPE_XXX constants. </parameters>
<output>The returned values are as follows Returned values Constants imagetype Returned value IMAGETYPE_GIF image/gif IMAGETYPE_JPEG image/jpeg IMAGETYPE_PNG image/png IMAGETYPE_SWF application/x-shockwave-flash IMAGETYPE_PSD image/psd IMAGETYPE_BMP image/bmp IMAGETYPE_TIFF_II (intel byte order) image/tiff IMAGETYPE_TIFF_MM (motorola byte order) image/tiff IMAGETYPE_JPC application/octet-stream IMAGETYPE_JP2 image/jp2 IMAGETYPE_JPX application/octet-stream IMAGETYPE_JB2 application/octet-stream IMAGETYPE_SWC application/x-shockwave-flash IMAGETYPE_IFF image/iff IMAGETYPE_WBMP image/vnd.wap.wbmp IMAGETYPE_XBM image/xbm IMAGETYPE_ICO image/vnd.microsoft.icon </output>
<errors></errors>
<example><?php
header("Content-type: " . image_type_to_mime_type(IMAGETYPE_PNG));
?></example>
<example_result></example_result>
</object>

<object id=2649> 
<name>ncurses_mvaddchstr</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Move position and add attributed string </short-description>
<description>int ncurses_mvaddchstr ( int $y , int $x , string $s ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>y - 
x - 
s - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2650> 
<name>mysql_data_seek</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Перемещает внутренний указатель в результате запроса</short-description>
<description>bool mysql_data_seek ( resource $result , int $row_number ) 
 mysql_data_seek() перемещает внутренний указатель результата запроса, с которым связан переданный дескриптор, к ряду с указанным номером. Следующий вызов к функции получения данных MySQL, такой как mysql_fetch_assoc(), вернёт именно его. 
 Нумерация row_number начинается с 0. row_number должен быть значением в диапазоне от 0 до mysql_num_rows() - 1. Однако, если результат пуст (mysql_num_rows() == 0), то попытка сдвига указателя к нулевому ряду завершится неудачей - будет вызвана ошибка уровня E_WARNING и mysql_data_seek() вернет FALSE. </description>
<parameters>result - Обрабатываемый результат запроса.Этот результат может быть получен с помощью функции mysql_query().
row_number - Желаемый номер ряда в полученном дескрипторе результата. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Ошибка соединения: ' . mysql_error());
}$db_selected = mysql_select_db('sample_db');
if (!$db_selected) {
    die('Не удалось выбрать базу данных: ' . mysql_error());
}$query = 'SELECT last_name, first_name FROM friends';
$result = mysql_query($query);
if (!$result) {
    die('Ошибка запроса: ' . mysql_error());
}/* получение рядов в обратном порядке */
for ($i = mysql_num_rows($result) - 1; $i >= 0; $i--) {
    if (!mysql_data_seek($result, $i)) {
        echo "Не удалось переместиться к ряду $i: " . mysql_error() . "\n";
        continue;
    }
    if (!($row = mysql_fetch_assoc($result))) {
        continue;
    }
    echo $row['last_name'] . ' ' . $row['first_name'] . "<br />\n";
}
mysql_free_result($result);
?></example>
<example_result></example_result>
</object>

<object id=2651> 
<name>phpinfo</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Outputs information about PHP&#039;s configuration</short-description>
<description>bool phpinfo ([ int $what = INFO_ALL ] ) 
 Outputs a large amount of information about the current state of PHP. This includes information about PHP compilation options and extensions, the PHP version, server information and environment (if compiled as a module), the PHP environment, OS version information, paths, master and local values of configuration options, HTTP headers, and the PHP License. 
 Because every system is setup differently, phpinfo() is commonly used to check configuration settings and for available predefined variables on a given system. 
 phpinfo() is also a valuable debugging tool as it contains all EGPCS (Environment, GET, POST, Cookie, Server) data. </description>
<parameters>what - The output may be customized by passing one or more of the following constants bitwise values summed together in the optional what parameter. One can also combine the respective constants or bitwise values together with the or operator. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Show all information, defaults to INFO_ALL
phpinfo();
// Show just the module information.
// phpinfo(8) yields identical results.
phpinfo(INFO_MODULES);
?></example>
<example_result></example_result>
</object>

<object id=2652> 
<name>posix_getgroups</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Return the group set of the current process</short-description>
<description>array posix_getgroups ( void ) 
 Gets the group set of the current process. </description>
<parameters></parameters>
<output>Returns an array of integers containing the numeric group ids of the group set of the current process. </output>
<errors></errors>
<example><?php
$groups = posix_getgroups();
print_r($groups);
?></example>
<example_result>
 
Array
(
    [0] => 4
    [1] => 20
    [2] => 24
    [3] => 25
    [4] => 29
    [5] => 30
    [6] => 33
    [7] => 44
    [8] => 46
    [9] => 104
    [10] => 109
    [11] => 110
    [12] => 1000
)
</example_result>
</object>

<object id=2653> 
<name>ncurses_newpad</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Creates a new pad (window)</short-description>
<description>resource ncurses_newpad ( int $rows , int $cols ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>rows - 
cols - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2654> 
<name>dbplus_xlockrel</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Request exclusive lock on relation</short-description>
<description>int dbplus_xlockrel ( resource $relation ) 
 Request an exclusive lock on relation preventing even read access from other clients. </description>
<parameters>relation - A relation opened by dbplus_open(). </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2655> 
<name>register_tick_function</name>
<versions>(PHP 4 >= 4.0.3, PHP 5)</versions>
<short-description>Регистрирует функцию для выполнения при каждом тике</short-description>
<description>bool register_tick_function ( callback $function [, mixed $arg [, mixed $... ]] ) 
 Регистрирует функцию function, которая должна вызываться при каждом тике. </description>
<parameters>function - Строка с именем функции, или массив, состоящий из объекта и метода. 
arg - 
... - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
declare(ticks=1);
// using a function as the callback
register_tick_function('my_function', true);
// using an object->method
$object = new my_class();
register_tick_function(array(&$object, 'my_method'), true);
?></example>
<example_result></example_result>
</object>

<object id=2656> 
<name>fam_close</name>
<versions>(PHP 5 <= 5.0.5)</versions>
<short-description>Close FAM connection</short-description>
<description>void fam_close ( resource $fam ) 
 Closes a connection to the FAM service. </description>
<parameters>fam - A resource representing a connection to the FAM service returned by fam_open() </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2657> 
<name>array_walk_recursive</name>
<versions>(PHP 5)</versions>
<short-description>Рекурсивно применяет пользовательскую функцию к каждому элементу массива</short-description>
<description>bool array_walk_recursive ( array &$input , callback $funcname [, mixed $userdata ] ) 
 Применяет пользовательскую функцию funcname к каждому элементу массива input. Эта функция обрабатывает каждый элемент многомерного массива. </description>
<parameters>input - Входной массив. 
funcname - Обычно, funcname принимает два параметра. Первым параметром идет значение элемента массива input, а вторым - его ключ. 
userdata - Если указан необязательный параметр userdata, то он будет передан третьим параметром функции funcname. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$sweet = array('a' => 'apple', 'b' => 'banana');
$fruits = array('sweet' => $sweet, 'sour' => 'lemon');
function test_print($item, $key)
{    echo "$key holds $item\n";
}
array_walk_recursive($fruits, 'test_print');
?></example>
<example_result>
 
a holds apple
b holds banana
sour holds lemon
</example_result>
</object>

<object id=2658> 
<name>strcasecmp</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Бинарно-безопасное сравнение строк без учета регистра</short-description>
<description>int strcasecmp ( string $str1 , string $str2 ) 
 Бинарно-безопасное сравнение строк без учета регистра. </description>
<parameters>str1 - Первая строка 
str2 - Вторая строка </parameters>
<output>Возвращает отрицательное число, если str1 меньше, чем str2, положительное число, если str1 больше, чем str2, и 0 если строки равны. </output>
<errors></errors>
<example><?php
$var1 = "Hello";
$var2 = "hello";
if (strcasecmp($var1, $var2) == 0) {
    echo '$var1 равно $var2 при сравнении без учета регистра';
}?></example>
<example_result></example_result>
</object>

<object id=2659> 
<name>eregi_replace</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Осуществляет замену по регулярному выражению без учета регистра</short-description>
<description>string eregi_replace ( string $pattern , string $replacement , string $string ) 
 Эта функция идентична функции ereg_replace() за исключением того, что игнорирует регистр при сравнении алфавитных символов. Внимание
 С версии PHP 5.3.0 эта функция считаетсяУСТАРЕВШЕЙ. Крайне не рекомендуется полагаться на эту возможность.</description>
<parameters>pattern - Расширенное регулярное выражение POSIX. 
replacement - Если pattern содержит подстроки в скобках, replacement может содержать подстроки вида \\digit, которые будут заменены текстом, совпавшим с digit-подстрокой в скобках; \\0 воспроизведет все содержимое строки. Может использоваться до 9 подстрок. Круглые скобки могут быть вложенными, в этом случае они подсчитываются по открывающим скобкам. 
string - Исходная строка. </parameters>
<output>Возвращается измененная строка. Если в строке string совпадений не найдено, она возвратится без изменений. </output>
<errors></errors>
<example><?php
$pattern = '(>[^<]*)('. quotemeta($_GET['search']) .')';
$replacement = '\\1<span class="search">\\2</span>';
$body = eregi_replace($pattern, $replacement, $body);
?></example>
<example_result></example_result>
</object>

<object id=2660> 
<name>imap_set_quota</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Sets a quota for a given mailbox</short-description>
<description>bool imap_set_quota ( resource $imap_stream , string $quota_root , int $quota_limit ) 
 Sets an upper limit quota on a per mailbox basis. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
quota_root - The mailbox to have a quota set. This should follow the IMAP standard format for a mailbox: user.name. 
quota_limit - The maximum size (in KB) for the quota_root </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$mbox = imap_open("{imap.example.org:143}", "mailadmin", "password");
if (!imap_set_quota($mbox, "user.kalowsky", 3000)) {
    echo "Error in setting quota\n";
    return;
}
imap_close($mbox);
?></example>
<example_result></example_result>
</object>

<object id=2661> 
<name>dbplus_tcl</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Execute TCL code on server side</short-description>
<description>string dbplus_tcl ( int $sid , string $script ) 
 A db++ server will prepare a TCL interpreter for each client connection. This interpreter will enable the server to execute TCL code provided by the client as a sort of stored procedures to improve the performance of database operations by avoiding client/server data transfers and context switches. 
 dbplus_tcl() needs to pass the client connection id the TCL script code should be executed by. dbplus_resolve() will provide this connection id. The function will return whatever the TCL code returns or a TCL error message if the TCL code fails. </description>
<parameters>sid - 
script - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2662> 
<name>gmp_random</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Случайное число</short-description>
<description>resource gmp_random ([ int $limiter = 20 ] ) 
 Генерирует случайное число. Число будет лежать в пределах от нуля до числа, представляеющего из себя произведение числа limiter и количества бит в лимбе (limb). Если число limiter отрицательное, то будет возвращен отрицательный результат. 
 Лимб (дословно конечность) - внутренний GMP механизм. Технически это часть числа, помещающаяся в одно машинное слово. Количество бит в нем может различаться в разных системах. В основном это либо 16, либо 32, но это не гарантируется. </description>
<parameters>limiter - Ограничитель. </parameters>
<output>Случайное GMP число. </output>
<errors></errors>
<example><?php
$rand1 = gmp_random(1); // случайное число от 0 до 1 * бит на лимб
$rand2 = gmp_random(2); // случайное число от 0 до 2 * бит на лимб
echo gmp_strval($rand1) . "\n";
echo gmp_strval($rand2) . "\n";
?></example>
<example_result>
 
1915834968
8642564075890328087
</example_result>
</object>

<object id=2663> 
<name>xslt_set_log</name>
<versions>(PHP 4 >= 4.0.6)</versions>
<short-description>Задание файла журнала для записи сообщений XSLT процессора </short-description>
<description>void xslt_set_log ( resource $xh [, mixed $log ] ) 
 Эта функция позволяет задать файл, в который будут записываться сообщения XSLT-процессора. Сообщения XSLT-процессора отличаются от сообщений об ошибках, они не являются сообщениями об ошибках, но также зависят от состояния XSLT-процессора. Эти сообщения могут быть полезны для отладки XSLT в случаях, когда преобразование проходит ненадлежащим образом. 
 По умолчанию протоколирование событий отключено. Для его включения необходимо вызвать функцию xslt_set_log() с аргументом логического типа (boolean). Для задания файла журнала необходимо вызвать эту функцию повторно, но передать ей в качестве аргумента уже строку, содержащую имя файла. </description>
<parameters>xh - Идентификатор ссылки на XSLT-процессор, созданный функцией xslt_create(). 
log - Этот аргумент может быть логического типа для включения и выключения протоколирования, либо это может быть строка содержащая имя файла журнала, в который будут записываться сообщения, в том числе и об ошибках. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
$xh = xslt_create();
xslt_set_log($xh, true);
xslt_set_log($xh, getcwd() . '/myfile.log');
$result = xslt_process($xh, 'dog.xml', 'pets.xsl');
echo $result;
xslt_free($xh);
?></example>
<example_result></example_result>
</object>

<object id=2664> 
<name>pg_lo_close</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Закрывает большой объект</short-description>
<description>bool pg_lo_close ( resource $large_object ) 
 pg_lo_close() закрывает большой объект. large_object - ресурс большого объекта, созданный функцией pg_lo_open(). 
 Операции с использованием интерфейса больших объектов необходимо заключать в блок транзакции. 
 Замечание: 
 Прежнее название функции: pg_loclose(). </description>
<parameters>result - Ресурс большого объекта PostgreSQL (large object, LOB) возвращаемый функцией pg_lo_open(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
   $database = pg_connect("dbname=jacarta");
   pg_query($database, "begin");
   $oid = pg_lo_create($database);
   echo "$oid\n";
   $handle = pg_lo_open($database, $oid, "w");
   echo "$handle\n";
   pg_lo_write($handle, "large object data");
   pg_lo_close($handle);
   pg_query($database, "commit");
?></example>
<example_result></example_result>
</object>

<object id=2665> 
<name>stream_wrapper_register</name>
<versions>(PHP 4 >= 4.3.2, PHP 5)</versions>
<short-description>Регистрирует обёртку URL, реализованную в виде PHP-класса</short-description>
<description>bool stream_wrapper_register ( string $protocol , string $classname [, int $flags = 0 ] ) 
 Позволяет вам реализовать ваши собственные обработчики протоколов и потоков для использования со всеми другими функциями файловой системы (такими, как fopen(), fread() и т. д.). </description>
<parameters>protocol - Название регистрируемой обёртки. 
classname - Название класса, который реализует протокол protocol. 
flags - Должно быть установлено в STREAM_IS_URL, если параметр protocol является протоколом URL. По умолчанию 0, локальный поток. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$existed = in_array("var", stream_get_wrappers());
if ($existed) {
    stream_wrapper_unregister("var");
}stream_wrapper_register("var", "VariableStream");
$myvar = "";
$fp = fopen("var://myvar", "r+");
fwrite($fp, "line1\n");
fwrite($fp, "line2\n");
fwrite($fp, "line3\n");
rewind($fp);
while (!feof($fp)) {
    echo fgets($fp);
}fclose($fp);
var_dump($myvar);
if ($existed) {
    stream_wrapper_restore("var");
}
?></example>
<example_result>
 
line1
line2
line3
string(18) "line1
line2
line3
"
</example_result>
</object>

<object id=2666> 
<name>ncurses_nonl</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Do not translate newline and carriage return / line feed </short-description>
<description>bool ncurses_nonl ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2667> 
<name>finfo_open</name>
<versions>(PHP >= 5.3.0, PECL fileinfo >= 0.1.0)</versions>
<short-description>Создает ресурс Fileinfo</short-description>
<description>resource finfo_open ([ int $options = FILEINFO_NONE [, string $magic_file = NULL ]] ) 
 Объектно-ориентированный стиль (constructor): finfo::__construct() ([ int $options = FILEINFO_NONE [, string $magic_file = NULL ]] )</description>
<parameters>options - Одна из нескольких Fileinfo констант. 
magic_file - Имя файла магической базы данных, обычно что-то наподобие этого: /path/to/magic.mime. Если не указан полный путь, будет использована переменная окружения MAGIC. Если эта переменная не указана, будет использован путь по умолчанию /usr/share/misc/magic. При необходимости добавляется суффикс .mime и/или .mgc. </parameters>
<output>Возвращает ресурс магической базы данных в случае успеха или или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$finfo = new finfo(FILEINFO_MIME, "/usr/share/misc/magic"); // возвращает mime-тип аля mimetype расширения
if (!$finfo) {
    echo "Opening fileinfo database failed";
    exit();
}
/* получить mime-type для указанного файла */
$filename = "/usr/local/something.txt";
echo $finfo->file($filename);
?></example>
<example_result>
 
text/plain; charset=us-ascii
</example_result>
</object>

<object id=2668> 
<name>imagejpeg</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выводит изображение в браузер или пишет в файл</short-description>
<description>bool imagejpeg ( resource $image [, string $filename [, int $quality ]] ) 
 Функция imagejpeg() создаёт файл JPEG из изображенияimage. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
filename - Путь для сохранения файла. Если не установлен или равен NULL, изображение будет выведено в поток вывода в бинарном виде.
quality - Необязательный параметр, и может принимать значения в диапазоне от 0 (низкое качество, маленький размер файла) до 100 (высокое качество, большой размер файла). По умолчанию используется качество IJG (около 75). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Создаём пустое изображение и добавляем текст
$im = imagecreatetruecolor(120, 20);
$text_color = imagecolorallocate($im, 233, 14, 91);
imagestring($im, 1, 5, 5,  'A Simple Text String', $text_color);
// Устанавливаем тип содержимого в заголовок, в данном случае image/jpeg
header('Content-Type: image/jpeg');
// Выводим изображение
imagejpeg($im);
// Освобождаем память
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=2669> 
<name>dbplus_rsecindex</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Create a new secondary index for a relation</short-description>
<description>mixed dbplus_rsecindex ( resource $relation , mixed $domlist , int $type ) 
 dbplus_rsecindex() will create a new secondary index for relation with consists of the domains specified by domlist and is of type type </description>
<parameters>relation - A relation opened by dbplus_open(). 
domlist - A combination of domains. May be passed as a single domain name string or as an array of domain names. 
type - </parameters>
<output>Returns resource on success or DBPLUS_ERR_UNKNOWN on failure. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2670> 
<name>xslt_backend_version</name>
<versions>(PHP 4 >= 4.3.0)</versions>
<short-description>Возвращает номер версии Sablotron </short-description>
<description>string xslt_backend_version ( void ) 
 xslt_backend_version() получает номер версии Sablotron. </description>
<parameters></parameters>
<output>Возвращает номер версии или FALSE, если он недоступен. </output>
<errors></errors>
<example><?php
echo xslt_backend_version(); // 0.98 например
?></example>
<example_result></example_result>
</object>

<object id=2671> 
<name>mssql_num_rows</name>
<versions>(PHP 4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Gets the number of rows in result</short-description>
<description>int mssql_num_rows ( resource $result ) 
 mssql_num_rows() returns the number of rows in a result set. </description>
<parameters>result - The result resource that is being evaluated. This result comes from a call to mssql_query(). </parameters>
<output>Returns the number of rows, as an integer. </output>
<errors></errors>
<example><?php
// Connect to MSSQL and select the database
$link = mssql_connect('KALLESPC\SQLEXPRESS', 'sa', 'phpfi');
mssql_select_db('php');
// Select all our records from a table
$query = mssql_query('SELECT * FROM [php].[dbo].[persons]');
echo 'Total records in database: ' . mssql_num_rows($query);
// Clean up
mssql_free_result($query);
?></example>
<example_result></example_result>
</object>

<object id=2672> 
<name>oci_field_scale</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Возвращает масштаб поля</short-description>
<description>int oci_field_scale ( resource $statement , int $field ) 
 Возвращает масштаб поля под номером field. 
 Для полей типа FLOAT точность, получаемая с помощью oci_field_precision(), больше нуля, а масштаб равен -127. Если точность поля равна нулю, то тип поля - NUMBER. Иначе же, тип поля может быть описан как NUMBER(precision, scale). </description>
<parameters>statement - Идентификатор допустимого OCI запроса. 
field - Может быть номером поля (нумерация начинается с 1) или именем. </parameters>
<output>Возвращает масштаб в виде числа, или FALSE при ошибке. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2673> 
<name>PDF_set_border_style</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set border style of annotations [deprecated]</short-description>
<description>bool PDF_set_border_style ( resource $pdfdoc , string $style , float $width ) 
 Sets the border style for all kinds of annotations. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. 
 This function is deprecated since PDFlib version 6, use the options borderstyle and linewidth in PDF_create_annotation() instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2674> 
<name>dir</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает экземпляр класса Directory</short-description>
<description>Directory dir ( string $directory [, resource $context ] ) 
 Псевдо-объектно-ориентированный механизм для чтения каталога. Переданный параметром directory каталог открывается. </description>
<parameters>directory - Каталог для открытия 
context - 
 Замечание: Поддержка контекста была добавленав PHP 5.0.0. Для описания контекстов смотрите разделStreams.</parameters>
<output>Возвращает экземпляр класса Directory, NULL при неверных параметрах, и FALSE в случае другой ошибки. </output>
<errors></errors>
<example>
 Directory::read() в примере, приведенном ниже. В этом примере явно проводится проверка значения на идентичность (выражения идентичны, когда они равны и являются одного типа - за более подробной информацией обратитесь к главе Операторы сравнения) значению FALSE, поскольку в ином случае, любой элемент каталога, чье имя может быть выражено как FALSE, остановит цикл. </example>
<example_result>
 
Дескриптор: Resource id #2
Путь: /etc/php5
.
..
apache
cgi
cli
</example_result>
</object>

<object id=2675> 
<name>set_socket_blocking</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним stream_set_blocking()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2676> 
<name>vpopmail_del_domain</name>
<versions>(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)</versions>
<short-description>Delete a virtual domain</short-description>
<description>bool vpopmail_del_domain ( string $domain ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2677> 
<name>dbplus_update</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Update specified tuple in relation</short-description>
<description>int dbplus_update ( resource $relation , array $old , array $new ) 
 dbplus_update() replaces the old tuple with the data from the new one, only if the old completely matches a tuple within relation. </description>
<parameters>relation - A relation opened by dbplus_open(). 
old - The old tuple. 
new - The new tuple. </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2678> 
<name>chr</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает символ по его коду</short-description>
<description>string chr ( int $ascii ) 
 Возвращает строку из одного символа, код которого задан аргументом ascii. 
 Эта функция дополняет функцию ord(). </description>
<parameters>ascii - ASCII-код. </parameters>
<output>Возвращает символ по его коду. </output>
<errors></errors>
<example><?php
$str = "Эта строка заканчивается на escape: ";
$str .= chr(27); /* добавляет символ escape в конец $str */
/* Но обычно лучше использовать такую конструкцию */
$str = sprintf("The string ends in escape: %c", 27);
?></example>
<example_result></example_result>
</object>

<object id=2679> 
<name>gzclose</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Закрывает открытый gz-файл по его указателю</short-description>
<description>bool gzclose ( resource $zp ) 
 Закрывает открытый gz-файл по его указателю. </description>
<parameters>zp - Указатель на gz-файл. Должен указывать на файл, успешно открытый gzopen(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$gz = gzopen('somefile.gz','w9');
gzputs ($gz, 'Добавлено в файл somefile.gz');
gzclose($gz);
?></example>
<example_result></example_result>
</object>

<object id=2680> 
<name>filter_var</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Фильтрует переменную с помощью определенного фильтра</short-description>
<description>mixed filter_var ( mixed $variable [, int $filter = FILTER_DEFAULT [, mixed $options ]] ) </description>
<parameters>variable - Значение переменной для фильтрации. 
filter - ID используемого фильтра. Список доступных фильтров доступен на странице "Types of filters". 
options - Ассоциативный массив параметров либо логическая дизъюнкция (операция ИЛИ) флагов. Если фильтр принимает параметры, флаги могут быть указаны в элементе массива "flags". Для фильтра "callback" должен быть указан тип callback. Фильтр "callback" должен принимать один аргумент, значение для фильтрации, и возвращать значение после фильтрации. </parameters>
<output>Возвращает отфильтрованные данные или FALSE, если фильтрация завершилась неудачей. </output>
<errors></errors>
<example><?php
var_dump(filter_var('bob@example.com', FILTER_VALIDATE_EMAIL));
var_dump(filter_var('http://example.com', FILTER_VALIDATE_URL, FILTER_FLAG_PATH_REQUIRED));
?></example>
<example_result>
 
string(15) "bob@example.com"
bool(false)
</example_result>
</object>

<object id=2681> 
<name>swf_definerect</name>
<versions>(PHP 4)</versions>
<short-description>Define a rectangle</short-description>
<description>void swf_definerect ( int $objid , float $x1 , float $y1 , float $x2 , float $y2 , float $width ) 
 Defines a rectangle with an upper left hand coordinate and a lower right hand coordinate. </description>
<parameters>objid - The object id. 
x1 - x-coordinate of upper left point. 
y1 - y-coordinate of upper left point. 
x2 - x-coordinate of lower right point. 
y2 - y-coordinate of lower right point. 
width - Width of the rectangles border, if the width is 0.0 then the rectangle is filled. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2682> 
<name>imagecolorstotal</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Find out the number of colors in an image&#039;s palette</short-description>
<description>int imagecolorstotal ( resource $image ) 
 Returns the number of colors in an image palette. </description>
<parameters>image - An image resource, returned by one of the image creation functions, such as imagecreatefromgif(). </parameters>
<output>Returns the number of colors in the specified image&#039;s palette or 0 for truecolor images. </output>
<errors></errors>
<example><?php
// Create image instance
$im = imagecreatefromgif('php.gif');
echo 'Total colors in image: ' . imagecolorstotal($im);
// Free image
imagedestroy($im);
?></example>
<example_result>
 
Total colors in image: 128
</example_result>
</object>

<object id=2683> 
<name>dba_key_split</name>
<versions>(PHP 5)</versions>
<short-description>Splits a key in string representation into array representation </short-description>
<description>mixed dba_key_split ( mixed $key ) 
 dba_key_split() splits a key (string representation) into an array representation. </description>
<parameters>key - The key in string representation. </parameters>
<output>Returns an array of the form array(0 => group, 1 => value_name). This function will return FALSE if key is NULL or FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2684> 
<name>m_uwait</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Wait x microsecs</short-description>
<description>int m_uwait ( int $microsecs ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>microsecs - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2685> 
<name>date_parse</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Возвращает ассоциативный массив с подробной информацией о заданной дате </short-description>
<description>array date_parse ( string $date ) </description>
<parameters>date - Дата в формате, распознаваемом функцией strtotime(). </parameters>
<output>Возвращает массив (array), содержащий информацию о дате в случае успеха или FALSE в случае возникновения ошибки. </output>
<errors>В случае ошибок форматирования даты, элемент массива &#039;errors&#039; будет содержать сообщения об этих ошибках. </errors>
<example><?php
print_r(date_parse("2006-12-12 10:00:00.5"));
?></example>
<example_result>
 
Array
(
    [year] => 2006
    [month] => 12
    [day] => 12
    [hour] => 10
    [minute] => 0
    [second] => 0
    [fraction] => 0.5
    [warning_count] => 0
    [warnings] => Array()
    [error_count] => 0
    [errors] => Array()
    [is_localtime] => 
)
</example_result>
</object>

<object id=2686> 
<name>fbsql_field_len</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Returns the length of the specified field</short-description>
<description>int fbsql_field_len ( resource $result [, int $field_offset ] ) 
 Returns the length of the specified field. </description>
<parameters>result - A result pointer returned by fbsql_list_fields(). 
field_offset - The numerical offset of the field. The field index starts at 0. </parameters>
<output>Returns the length of the specified field. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2687> 
<name>extract</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Импортирует переменные из массива в текущую таблицу символов</short-description>
<description>int extract ( array &$var_array [, int $extract_type = EXTR_OVERWRITE [, string $prefix ]] ) 
 Импортирует переменные из массива в текущую таблицу символов. 
 Каждый ключ проверяется на предмет корректного имени переменной. Также проверяются совпадения с существующими переменными в символьной таблице. </description>
<parameters>var_array - Ассоциативный массив. Эта функция рассматривает ключи массива в качестве имен переменных, а их значения - в качестве значений этих переменных. Для каждой пары ключ/значение будет создана переменная в текущей таблице символов, в соответствии с параметрами extract_type и prefix. 
extract_type - Параметр extract_type определяет способ трактования неправильных/числовых ключей и коллизий. Он может принимать следующие значения: EXTR_OVERWRITE Если переменная с таким именем существует, она будет перезаписана. EXTR_SKIP Если переменная с таким именем существует, ее текущее значение не будет перезаписано. EXTR_PREFIX_SAME Если переменная с таким именем существует, к её имени будет добавлен префикс, определённый параметром prefix. EXTR_PREFIX_ALL Добавить префикс prefix ко всем именам переменных. EXTR_PREFIX_INVALID Добавить префикс prefix только к некорректным/числовым именам переменных. EXTR_IF_EXISTS Перезаписать только переменные, уже имеющиеся в текущей таблице символов, в противном случае не делать ничего. Данная возможность полезна для определения списка приемлемых переменных и для извлечения только тех переменных, которые вы уже определили из массивов типа $_REQUEST, например. EXTR_PREFIX_IF_EXISTS Создать только префикс-версии переменных, если версия данной переменной без префикса уже существует в текущей символьной таблице. EXTR_REFS Извлечь переменные как ссылки. Это означает, что значения таких переменных будут всё ещё ссылаться на значения массива var_array. Вы можете использовать этот флаг отдельно или комбинировать его с другими значениями extract_type с помощью побитового &#039;или&#039;. 
prefix - Обратите внимание, что prefix имеет значение, только если extract_type установлен в EXTR_PREFIX_SAME, EXTR_PREFIX_ALL, EXTR_PREFIX_INVALID или EXTR_PREFIX_IF_EXISTS. Если в результате добавления префикса, не будет получено допустимое имя для переменной, она не будет импортирована в текущую символьную таблицу. </parameters>
<output>Возвращает количество переменных, успешно импортированных в текущую таблицу символов. </output>
<errors></errors>
<example>
 extract() также можно использовать для импорта в текущую таблицу символов переменных, содержащихся в ассоциативном массиве, возвращённом функцией wddx_deserialize(). </example>
<example_result>
 
blue, large, sphere, medium
</example_result>
</object>

<object id=2688> 
<name>ldap_get_entries</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает все записи результата</short-description>
<description>array ldap_get_entries ( resource $link_identifier , resource $result_identifier ) 
 Читает множественные записи из заданного результата, и затем читает атрибуты и множественные значения. </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
result_identifier - </parameters>
<output>Возвращает полную информацию о результате в виде многомерного массива в случае успеха, и FALSE в случае ошибки. </output>
<errors></errors>
<example></example>
<example_result>
 
return_value["count"] = число записей в результате
return_value[0] : ссылается на информацию о первой записи

return_value[i]["dn"] =  DN i-ой записи в результате

return_value[i]["count"] = число атрибутов в i-ой записи
return_value[i][j] = NAME j-ого атрибута в i-ой записи результата

return_value[i]["attribute"]["count"] = число значений атрибута в
                                        i-ой записи
return_value[i]["attribute"][j] = j-ое значение атрибута i-ой записи
</example_result>
</object>

<object id=2689> 
<name>swf_shapefillbitmaptile</name>
<versions>(PHP 4)</versions>
<short-description>Set current fill mode to tiled bitmap</short-description>
<description>void swf_shapefillbitmaptile ( int $bitmapid ) 
 Sets the fill to bitmap tile, empty spaces will be filled by the bitmap. </description>
<parameters>bitmapid - The bitmap id. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2690> 
<name>yaz_scan_result</name>
<versions>(PHP 4 >= 4.0.5, PECL yaz >= 0.9.0)</versions>
<short-description>Returns Scan Response result</short-description>
<description>array yaz_scan_result ( resource $id [, array &$result ] ) 
 yaz_scan_result() returns terms and associated information as received from the server in the last performed yaz_scan(). </description>
<parameters>id - The connection resource returned by yaz_connect(). 
result - If given, this array will be modified to hold additional information taken from the Scan Response: 
 number - Number of entries returned </parameters>
<output>Returns an array (0..n-1) where n is the number of terms returned. Each value is a pair where the first item is the term, and the second item is the result-count. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2691> 
<name>curl_init</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Инициализирует сеанс cURL</short-description>
<description>resource curl_init ([ string $url = NULL ] ) 
 Инициализирует новый сеанс cURL и возвращает дескриптор, который используется с функциями curl_setopt(), curl_exec() и curl_close(). </description>
<parameters>url - Если указан, опция CURLOPT_URL будет автоматически установлена в значение этого аргумента. Вы можете вручную установить эту опцию с помощью функции curl_setopt(). </parameters>
<output>Возвращает дескриптор cURL при удаче, и FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
// создание нового ресурса cURL
$ch = curl_init();
// установка URL и других необходимых параметров
curl_setopt($ch, CURLOPT_URL, "http://www.example.com/");
curl_setopt($ch, CURLOPT_HEADER, 0);
// загрузка страницы и выдача её браузеру
curl_exec($ch);
// завершение сеанса и освобождение ресурсов
curl_close($ch);
?></example>
<example_result></example_result>
</object>

<object id=2692> 
<name>msql_fieldflags</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Alias of msql_field_flags()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2693> 
<name>array_udiff</name>
<versions>(PHP 5)</versions>
<short-description>Вычисляет расхождение массивов, используя для сравнения callback-функцию</short-description>
<description>array array_udiff ( array $array1 , array $array2 [, array $ ... ], callback $data_compare_func ) 
 Вычисляет расхождение массивов, используя для сравнения данных callback-функцию. Это отличается от поведения array_diff(), которая использует встроенную функцию для сравнения данных. </description>
<parameters>array1 - Первый массив. 
array2 - Второй массив. 
data_compare_func - Callback-функция, используемая для сравнения. </parameters>
<output>Возвращает массив, содержащий все элементы array1, которые не существуют в каком-либо из других аргументов. </output>
<errors></errors>
<example><?php
class cr {
    private $priv_member;
    function cr($val)
    {
        $this->priv_member = $val;
    }
    static function comp_func_cr($a, $b)
    {
        if ($a->priv_member === $b->priv_member) return 0;
        return ($a->priv_member > $b->priv_member)? 1:-1;
    }
}$a = array("0.1" => new cr(9), "0.5" => new cr(12), 0 => new cr(23), 1=> new cr(4), 2 => new cr(-15),);
$b = array("0.2" => new cr(9), "0.5" => new cr(22), 0 => new cr(3), 1=> new cr(4), 2 => new cr(-15),);
$result = array_udiff($a, $b, array("cr", "comp_func_cr"));
print_r($result);
?></example>
<example_result>
 
Array
(
    [0.5] => cr Object
        (
            [priv_member:private] => 12
        )

    [0] => cr Object
        (
            [priv_member:private] => 23
        )

)
</example_result>
</object>

<object id=2694> 
<name>mysql_affected_rows</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает число затронутых прошлой операцией рядов</short-description>
<description>int mysql_affected_rows ([ resource $link_identifier ] ) 
 Возвращает количество рядов, затронутых последним INSERT, UPDATE, REPLACE или DELETE запросом, связанным с дескриптором link_identifier. </description>
<parameters>link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Возвращает количество измененных записей в случае успеха, и -1 в случае если последний запрос не удался. </output>
<errors></errors>
<example><?php
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Ошибка соединения: ' . mysql_error());
}mysql_select_db('mydb');
/* здесь функция вернёт корректное число удалённых записей */
mysql_query('DELETE FROM mytable WHERE id < 10');
printf("Удалено записей: %d\n", mysql_affected_rows());
/* если WHERE всегда возвращает false, то функция возвращает 0 */
mysql_query('DELETE FROM mytable WHERE 0');
printf("Удалено записей: %d\n", mysql_affected_rows());
?></example>
<example_result>
 
Удалено записей: 10
Удалено записей: 0
</example_result>
</object>

<object id=2695> 
<name>echo</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выводит одну или более строк</short-description>
<description>void echo ( string $arg1 [, string $... ] ) 
 Выводит все аргументы. 
 На самом деле echo() - это не функция, а конструкция языка, поэтому заключать аргументы в скобки необязательно. echo() (в отличии от других языковых конструкций) не ведет себя как функция, поэтому не всегда может быть использована в контексте функции. Вдобавок, если вы хотите передать более одного аргумента в echo(), эти аргументы нельзя заключать в скобки. 
 echo() имеет также краткую форму, представляющую собой знак равенства, следующий непосредственно за открывающим тэгом. Этот сокращенный синтаксис допустим только когда включена директива конфигурации short_open_tag. I have <?=$foo?> foo.</description>
<parameters>arg1 - The parameter to output. 
... - </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
echo "Привет мир!";
echo "Это займет
несколько строк. Переводы строки тоже
выводятся";
echo "Это займет\nнесколько строк. Переводы строки тоже\nвыводятся";
echo "Экранирование символов делается \"Так\".";
// с echo можно использовать переменные ...
$foo = "foobar";
$bar = "barbaz";
echo "foo - это $foo"; // foo - это foobar
// ... и массивы
$baz = array("value" => "foo");
echo "это {$baz['value']} !"; // это foo !
// При использовании одиночных кавычек выводится имя переменной, а не значение
echo 'foo - это $foo'; // foo - это $foo
// Если вы не используете другие символы, можно вывести просто значения переменных
echo $foo;          // foobar
echo $foo,$bar;     // foobarbarbaz
// Некоторые предпочитают передачу нескольких аргументов вместо конкатенации
echo 'Эта ', 'строка ', 'была ', 'создана ', 'несколькими параметрами.', chr(10);
echo 'Эта ' . 'строка ' . 'была ' . 'создана ' . 'с помощью конкатенации.' . "\n";
echo <<<END
Здесь используется синтаксис "here document" для вывода
нескольких строк с подстановкой переменных $variable.
Заметьте, что закрывающий идентификатор должен
располагаться в отдельной строке. никаких пробелов!
END;
// Следующая строка неверна, так как echo не является функцией
($some_var) ? echo 'true' : echo 'false';
// Но это можно записать по другому
($some_var) ? print 'true' : print 'false'; // print также является конструкцией языка,
                                            // но ведет себя как функция, поэтому она
                                            // может быть использована в этом контексте.
echo $some_var ? 'true': 'false'; // echo вынесен за пределы выражения
?></example>
<example_result></example_result>
</object>

<object id=2696> 
<name>PDF_close_pdi</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Close the input PDF document [deprecated]</short-description>
<description>bool PDF_close_pdi ( resource $p , int $doc ) 
 Closes all open page handles, and closes the input PDF document. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. 
 This function is deprecated since PDFlib version 7, use PDF_close_pdi_document() instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2697> 
<name>ncurses_mvgetch</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Move position and get character at new position </short-description>
<description>int ncurses_mvgetch ( int $y , int $x ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>y - 
x - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2698> 
<name>hw_insertanchors</name>
<versions>(PHP 4 >= 4.0.4)</versions>
<short-description>Inserts only anchors into text</short-description>
<description>bool hw_insertanchors ( int $hwdoc , array $anchorecs , array $dest [, array $urlprefixes ] ) 
 Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2699> 
<name>mssql_free_result</name>
<versions>(PHP 4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Free result memory</short-description>
<description>bool mssql_free_result ( resource $result ) 
 mssql_free_result() only needs to be called if you are worried about using too much memory while your script is running. All result memory will automatically be freed when the script ends. You may call mssql_free_result() with the result identifier as an argument and the associated result memory will be freed. </description>
<parameters>result - The result resource that is being freed. This result comes from a call to mssql_query(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Select some data from a table
$query = mssql_query('SELECT * FROM [php].[dbo].[persons]', $link);
// Handle query result here
// When we're done we free the result by calling
// mssql_free_result like so:
mssql_free_result($query);
?></example>
<example_result></example_result>
</object>

<object id=2700> 
<name>odbc_field_name</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get the columnname</short-description>
<description>string odbc_field_name ( resource $result_id , int $field_number ) 
 Gets the name of the field occupying the given column number in the given result identifier. </description>
<parameters>result_id - The result identifier. 
field_number - The field number. Field numbering starts at 1. </parameters>
<output>Returns the field name as a string, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2701> 
<name>dio_stat</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)</versions>
<short-description>Gets stat information about the file descriptor fd </short-description>
<description>array dio_stat ( resource $fd ) 
 dio_stat() returns information about the given file descriptor. </description>
<parameters>fd - The file descriptor returned by dio_open(). </parameters>
<output>Returns an associative array with the following keys: 
 "device" - device </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2702> 
<name>xml_parser_set_option</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Установка значения настройки XML анализатора </short-description>
<description>bool xml_parser_set_option ( resource $parser , int $option , mixed $value ) 
 Устанавливает значение настройки XML анализатора. </description>
<parameters>parser - Ссылка на XML анализатор. 
option - Какую настройку требуется установить. См. ниже. 
value - Новое значение настройки. </parameters>
<output>Функция возвращает FALSE, если parser ссылается на недопустимый анализатор или если настройка не может быть установлена. В противном случае устанавливается новое значение настройки и возвращается значение TRUE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2703> 
<name>msql_fetch_array</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Fetch row as array</short-description>
<description>array msql_fetch_array ( resource $result [, int $result_type ] ) 
 msql_fetch_array() is an extended version of msql_fetch_row(). In addition to storing the data in the numeric indices of the result array, it also stores the data in associative indices, using the field names as keys. 
 An important thing to note is that using msql_fetch_array() is NOT significantly slower than using msql_fetch_row(), while it provides a significant added value. </description>
<parameters>result - Обрабатываемый результат запроса,полученный с помощью функции msql_query().
result_type - A constant that can take the following values: MSQL_ASSOC, MSQL_NUM, and MSQL_BOTH with MSQL_BOTH being the default. </parameters>
<output>Returns an array that corresponds to the fetched row, or FALSE if there are no more rows. </output>
<errors></errors>
<example><?php
$con = msql_connect();
if (!$con) {
    die('Server connection problem: ' . msql_error());
}
if (!msql_select_db('test', $con)) {
    die('Database connection problem: ' . msql_error());
}
$result = msql_query('SELECT id, name FROM people', $con);
if (!$result) {
    die('Query execution problem: ' . msql_error());
}
while ($row = msql_fetch_array($result, MSQL_ASSOC)) {
    echo $row['id'] . ': ' . $row['name'] . "\n";
}
msql_free_result($result);
?></example>
<example_result></example_result>
</object>

<object id=2704> 
<name>ftok</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Convert a pathname and a project identifier to a System V IPC key</short-description>
<description>int ftok ( string $pathname , string $proj ) 
 The function converts the pathname of an existing accessible file and a project identifier into an integer for use with for example shmop_open() and other System V IPC keys. </description>
<parameters>pathname - Path to an accessible file. 
proj - Project identifier. This must be a one character string. </parameters>
<output>On success the return value will be the created key value, otherwise -1 is returned. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2705> 
<name>PDF_moveto</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set current point</short-description>
<description>bool PDF_moveto ( resource $p , float $x , float $y ) 
 Sets the current point for graphics output. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2706> 
<name>dbplus_freerlocks</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Free all tuple locks on given relation</short-description>
<description>int dbplus_freerlocks ( resource $relation ) 
 Frees all tuple locks held on the given relation. </description>
<parameters>relation - A relation opened by dbplus_open(). </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2707> 
<name>mhash_get_hash_name</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the name of the specified hash</short-description>
<description>string mhash_get_hash_name ( int $hash ) 
 Gets the name of the specified hash. </description>
<parameters>hash - The hash ID. One of the MHASH_hashname constants. </parameters>
<output>Returns the name of the hash or FALSE, if the hash does not exist. </output>
<errors></errors>
<example><?php
echo mhash_get_hash_name(MHASH_MD5); // MD5
?></example>
<example_result></example_result>
</object>

<object id=2708> 
<name>is_writeable</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним is_writable()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2709> 
<name>sybase_min_error_severity</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Sets minimum error severity</short-description>
<description>void sybase_min_error_severity ( int $severity ) 
 sybase_min_error_severity() sets the minimum error severity level. </description>
<parameters>severity - </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2710> 
<name>imap_delete</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Mark a message for deletion from current mailbox</short-description>
<description>bool imap_delete ( resource $imap_stream , int $msg_number [, int $options = 0 ] ) 
 Marks messages listed in msg_number for deletion. Messages marked for deletion will stay in the mailbox until either imap_expunge() is called or imap_close() is called with the optional parameter CL_EXPUNGE. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
msg_number - The message number 
options - You can set the FT_UID which tells the function to treat the msg_number argument as an UID. </parameters>
<output>Returns TRUE. </output>
<errors></errors>
<example><?php
$mbox = imap_open("{imap.example.org}INBOX", "username", "password")
    or die("Can't connect: " . imap_last_error());
$check = imap_mailboxmsginfo($mbox);
echo "Messages before delete: " . $check->Nmsgs . "<br />\n";
imap_delete($mbox, 1);
$check = imap_mailboxmsginfo($mbox);
echo "Messages after  delete: " . $check->Nmsgs . "<br />\n";
imap_expunge($mbox);
$check = imap_mailboxmsginfo($mbox);
echo "Messages after expunge: " . $check->Nmsgs . "<br />\n";
imap_close($mbox);
?></example>
<example_result></example_result>
</object>

<object id=2711> 
<name>filter_input_array</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Принимает несколько переменных извне PHP и, при необходимости, фильтрует их</short-description>
<description>mixed filter_input_array ( int $type [, mixed $definition ] ) 
 Эта функция полезна для получения множества переменных без многократного вызова функции filter_input(). </description>
<parameters>type - Один из INPUT_GET, INPUT_POST, INPUT_COOKIE, INPUT_SERVER или INPUT_ENV. 
definition - Массив, определяющий аргументы. Допустимый ключ - строка string, содержащая имя переменной, и допустимое значение - или тип filter, или массив array, при необходимости определяющий фильтр, флаги и параметры. Если значение является массивом, допустимыми ключами являются filter, который определяет (тип фильтра ), flags, который определяет любые флаги, применяемые к фильтру и options, который определяет любые параметры, применяемые к фильтру. См. пример ниже для лучшего понимания. </parameters>
<output>Массив, содержащий значения запрошенных переменных в случае успеха, или FALSE в случае возникновения ошибки. Значение массива будет FALSE, если фильтрация завершилась неудачей, или NULL, если переменная не определена. Либо, если установлен флаг FILTER_NULL_ON_FAILURE, возвращается FALSE, если переменная не определена и NULL, если фильтрация завершилась неудачей. </output>
<errors></errors>
<example><?php
error_reporting(E_ALL | E_STRICT);
/* данные, полученные методом POST
$_POST = array(
    'product_id'    => 'libgd<script>',
    'component'     => '10',
    'versions'      => '2.0.33',
    'testscalar'    => array('2', '23', '10', '12'),
    'testarray'     => '2',
);*/
$args = array(
    'product_id'   => FILTER_SANITIZE_ENCODED,
    'component'    => array('filter'    => FILTER_VALIDATE_INT,
                            'flags'     => FILTER_REQUIRE_ARRAY, 
                            'options'   => array('min_range' => 1, 'max_range' => 10)
                           ),
    'versions'     => FILTER_SANITIZE_ENCODED,
    'doesnotexist' => FILTER_VALIDATE_INT,
    'testscalar'   => array(
                            'filter' => FILTER_VALIDATE_INT,
                            'flags'  => FILTER_REQUIRE_SCALAR,
                           ),
    'testarray'    => array(
                            'filter' => FILTER_VALIDATE_INT,
                            'flags'  => FILTER_REQUIRE_ARRAY,
                           )
);
$myinputs = filter_input_array(INPUT_POST, $args);
var_dump($myinputs);
echo "\n";
?></example>
<example_result>
 
array(6) {
  ["product_id"]=>
  array(1) {
    [0]=>
    string(17) "libgd%3Cscript%3E"
  }
  ["component"]=>
  array(1) {
    [0]=>
    int(10)
  }
  ["versions"]=>
  array(1) {
    [0]=>
    string(6) "2.0.33"
  }
  ["doesnotexist"]=>
  NULL
  ["testscalar"]=>
  bool(false)
  ["testarray"]=>
  array(1) {
    [0]=>
    int(2)
  }
}
</example_result>
</object>

<object id=2712> 
<name>sqlite_busy_timeout</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Устанавливает или полностью отключает время ожидания</short-description>
<description>void sqlite_busy_timeout ( resource $dbhandle , int $milliseconds ) 
 Объектно-ориентированный стиль (метод): void SQLiteDatabase::busyTimeout ( int $milliseconds )</description>
<parameters>dbhandle - Ресурс базы данных SQLite, полученный из функции sqlite_open() в случае использования процедурного подхода. Этот параметр не требуется при использовании объектно-ориентированного подхода. 
milliseconds - Количество миллисекунд. Если равен 0, то в случае, то функции-обработчики, вызываемые при блокировке базы данных, будут отключены и SQLITE немедленно вернет статус-код SQLITE_BUSY, если другой процесс/нить заблокировал базу данных для обновления. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
$dbhandle = sqlite_open('sqlitedb');
sqlite_busy_timeout($dbhandle, 10000); // установка таймаута в 10 секунд
sqlite_busy_timeout($dbhandle, 0); // отключение функции-обработчика
?></example>
<example_result></example_result>
</object>

<object id=2713> 
<name>ocicollmax</name>
<versions>(PHP 4 >= 4.0.6, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним OCI-Collection::max()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2714> 
<name>date_sunset</name>
<versions>(PHP 5)</versions>
<short-description>Возвращает время захода солнца для заданных дня и местоположения </short-description>
<description>mixed date_sunset ( int $timestamp [, int $format = SUNFUNCS_RET_STRING [, float $latitude = ini_get("date.default_latitude") [, float $longitude = ini_get("date.default_longitude") [, float $zenith = ini_get("date.sunset_zenith") [, float $gmt_offset = 0 ]]]]] ) 
 date_sunset() возвращает время захода солнца для определенных дня (заданного аргументом timestamp) и местоположения. </description>
<parameters>timestamp - Временная метка (timestamp) дня, для которого определяется время захода солнца. 
format - format constants константа описание пример SUNFUNCS_RET_STRING тип возвращаемого результата string 16:46 SUNFUNCS_RET_DOUBLE тип возвращаемого результата float 16.78243132 SUNFUNCS_RET_TIMESTAMP тип возвращаемого результата integer (временная метка) 1095034606 
latitude - По умолчанию в Северном полушарии, для Южного передается отрицательная величина. См. также date.default_latitude. 
longitude - По умолчанию восточная, для указания западной долготы передается отрицательная величина. См. также date.default_longitude. 
zenith - По умолчанию: date.sunset_zenith 
gmtoffset - Задается в часах. </parameters>
<output>Возвращает время захода солнца в заданном формате format или FALSE в случае возникновения ошибки. </output>
<errors>Каждый вызов к функциям даты/времени при неправильных настройках временной зоны сгенерирует ошибку уровня E_NOTICE,и/или ошибку уровня E_STRICT или E_WARNING при использовании системныхнастроек или переменной окружения TZ. Смотрите также date_default_timezone_set()</errors>
<example><?php
/* calculate the sunset time for Lisbon, Portugal
Latitude: 38.4 North
Longitude: 9 West
Zenith ~= 90
offset: +1 GMT
*/
echo date("D M d Y"). ', время захода солнца : ' .date_sunset(time(), SUNFUNCS_RET_STRING, 38.4, -9, 90, 1);
?></example>
<example_result>
 
Mon Dec 20 2004, время захода солнца : 18:13
</example_result>
</object>

<object id=2715> 
<name>notes_mark_read</name>
<versions>(PHP 4 >= 4.0.5)</versions>
<short-description>Mark a note_id as read for the User user_name</short-description>
<description>bool notes_mark_read ( string $database_name , string $user_name , string $note_id ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2716> 
<name>hw_Error</name>
<versions>(PHP 4)</versions>
<short-description>Error number</short-description>
<description>int hw_error ( int $connection ) 
 Returns the last error number, for the last command. </description>
<parameters>connection - The connection identifier. </parameters>
<output>Returns the last error number or 0 if no error occurred. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2717> 
<name>imagepsbbox</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Give the bounding box of a text rectangle using PostScript Type1 fonts</short-description>
<description>array imagepsbbox ( string $text , resource $font , int $size ) array imagepsbbox ( string $text , resource $font , int $size , int $space , int $tightness , float $angle )</description>
<parameters>text - The text to be written. 
font_index - A font resource, returned by imagepsloadfont(). 
size - size is expressed in pixels. 
space - Allows you to change the default value of a space in a font. This amount is added to the normal value and can also be negative. Expressed in character space units, where 1 unit is 1/1000th of an em-square. 
tightness - tightness allows you to control the amount of white space between characters. This amount is added to the normal character width and can also be negative. Expressed in character space units, where 1 unit is 1/1000th of an em-square. 
angle - angle is in degrees. </parameters>
<output>Returns an array containing the following elements: 0 left x-coordinate 1 upper y-coordinate 2 right x-coordinate 3 lower y-coordinate </output>
<errors></errors>
<example><?php
// Create image handle
$im = imagecreatetruecolor(200, 200);
// Allocate colors
$black = imagecolorallocate($im, 0, 0, 0);
$white = imagecolorallocate($im, 255, 255, 255);
// Load the PostScript Font
$font = imagepsloadfont('font.pfm');
// Make a bounding box for the font
$bbox = imagepsbbox('Sample text is simple', $font, 12);
// Define our X and Y cordinates
$x = ($bbox[2] / 2) - 10;
$y = ($bbox[3] / 2) - 10;
// Write the font to the image
imagepstext($im, 'Sample text is simple', $font, 12, $black, $white, $x, $y);
// Output and free memory
header('Content-type: image/png');
imagepng($im);
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=2718> 
<name>pspell_add_to_personal</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Добавляет слово в персональный список слов</short-description>
<description>bool pspell_add_to_personal ( int $dictionary_link , string $word ) 
 pspell_add_to_personal() добавляет слово в персональный список слов. Если вы использовали pspell_new_config() вместе с pspell_config_personal() для открытия словаря, вы можете сохранить список слов позднее с помощью pspell_save_wordlist(). </description>
<parameters>dictionary_link - 
word - Добавляемое слово. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$pspell_config = pspell_config_create("en");
pspell_config_personal($pspell_config, "/var/dictionaries/custom.pws");
$pspell_link = pspell_new_config($pspell_config);
pspell_add_to_personal($pspell_link, "Vlad");
pspell_save_wordlist($pspell_link);
?></example>
<example_result></example_result>
</object>

<object id=2719> 
<name>abs</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Модуль числа</short-description>
<description>number abs ( mixed $number ) 
 Возвращает абсолютное значение number. </description>
<parameters>number - Числовое значение </parameters>
<output>Абсолютное значение number. Если тип аргумента number - float, то возвращаемый тип также float, иначе - integer (тип float обычно имеет большую область значений, чем тип integer). </output>
<errors></errors>
<example><?php
$abs = abs(-4.2); // $abs = 4.2; (double/float)
$abs2 = abs(5);   // $abs2 = 5; (integer)
$abs3 = abs(-5);  // $abs3 = 5; (integer)
?></example>
<example_result></example_result>
</object>

<object id=2720> 
<name>chop</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним rtrim()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2721> 
<name>pg_fetch_result</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает запись из результата запроса</short-description>
<description>string pg_fetch_result ( resource $result , int $row , mixed $field ) string pg_fetch_result ( resource $result , mixed $field )</description>
<parameters>result - Ресурс результата запроса PostgreSQL, возвращаемый функциями pg_query(), pg_query_params() или pg_execute() (в числе прочих). 
row - Номер выбираемой из результата запроса строки. Нумерация начинается с нуля. Если аргумент опущен, берется следующая по очереди строка. 
field - Имя или номер поля выбираемого значения. Поля нумеруются с нуля. </parameters>
<output>Логические значения возвращаются как "t" или "f". Остальные типы, включая массивы, возвращаются в виде строк в стандартном формате PostgreSQL, аналогично выводу программы psql. Значения NULL базы данных преобразуются в PHP NULL. </output>
<errors></errors>
<example><?php
$db = pg_connect("dbname=users user=me") || die();
$res = pg_query($db, "SELECT 1 UNION ALL SELECT 2");
$val = pg_fetch_result($res, 1, 0);
echo "Первое поле во второй строчке результата это: ", $val, "\n";
?></example>
<example_result>
 
Первое поле во второй строчке результата это: 2
</example_result>
</object>

<object id=2722> 
<name>get_html_translation_table</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает таблицу преобразований, используемую функциями htmlspecialchars()</short-description>
<description>array get_html_translation_table ([ int $table = HTML_SPECIALCHARS [, int $quote_style = ENT_COMPAT [, string $charset_hint ]]] ) 
 get_html_translation_table() возвращает таблицу преобразований, используемую функциями htmlspecialchars() и htmlentities() с кодировкой по умолчанию. 
 Замечание: 
 Специальные символы могут быть закодированы разными способами. Например, " может быть закодирован как &quot;, &#34; или &#x22. get_html_translation_table() возвращает только формы, используемые функциями htmlspecialchars() и htmlentities(). </description>
<parameters>table - Существуют две новые константы (HTML_ENTITIES, HTML_SPECIALCHARS), позволяющие указать нужную таблицу преобразований. 
quote_style - Аналогично функциям htmlspecialchars() и htmlentities() можно задать необязательный аргумент quote_style. Описание режимов этого параметра см. в описании функции htmlspecialchars(). 
charset_hint - Аналогично функции htmlentities(), данная функция принимает необязательный третий параметр charset, определяющий используемую при преобразовании кодировку. В настоящий момент по умолчанию используется ISO-8859-1. </parameters>
<output>Возвращает таблицу преобразований в виде массива. </output>
<errors></errors>
<example><?php
$trans = get_html_translation_table(HTML_ENTITIES);
$str = "Hallo & <Frau> & Krämer";
$encoded = strtr($str, $trans);
echo $encoded;
?></example>
<example_result>
 
Hallo & <Frau> & Kr&auml;mer
</example_result>
</object>

<object id=2723> 
<name>date_add</name>
<versions>(PHP 5 >= 5.3.0)</versions>
<short-description>Псевдоним DateTime::add()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2724> 
<name>dbase_numrecords</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает количество записей в базе данных</short-description>
<description>int dbase_numrecords ( int $dbase_identifier ) 
 Получает количество записей (строк) в указанной базе данных. 
 Замечание: 
 Записи базы данных нумеруются от 1 до dbase_numrecords($db), тогда как поля от 0 до dbase_numfields($db)-1. </description>
<parameters>dbase_identifier - Идентификатор базы данных, возвращаемый функцией dbase_open() или dbase_create(). </parameters>
<output>Количество записей в базе данных, или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// открываем в режиме для чтения
$db = dbase_open('/tmp/test.dbf', 0);
if ($db) {
  $record_numbers = dbase_numrecords($db);
  for ($i = 1; $i <= $record_numbers; $i++) {   
      //выполнение каких-либо действий с записью
  }
}
?></example>
<example_result></example_result>
</object>

<object id=2725> 
<name>PDF_set_text_rise</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set text rise [deprecated]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2726> 
<name>pcntl_getpriority</name>
<versions>(PHP 5)</versions>
<short-description>Get the priority of any process</short-description>
<description>int pcntl_getpriority ([ int $pid = getmypid() [, int $process_identifier = PRIO_PROCESS ]] ) 
 pcntl_getpriority() gets the priority of pid. Because priority levels can differ between system types and kernel versions, please see your system&#039;s getpriority(2) man page for specific details. </description>
<parameters>pid - If not specified, the pid of the current process is used. 
process_identifier - One of PRIO_PGRP, PRIO_USER or PRIO_PROCESS. </parameters>
<output>pcntl_getpriority() returns the priority of the process or FALSE on error. A lower numerical value causes more favorable scheduling. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2727> 
<name>ibase_service_attach</name>
<versions>(PHP 5)</versions>
<short-description>Connect to the service manager</short-description>
<description>resource ibase_service_attach ( string $host , string $dba_username , string $dba_password ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2728> 
<name>xslt_set_error_handler</name>
<versions>(PHP 4 >= 4.0.4)</versions>
<short-description>Задание обработчика ошибок для XSLT-процессора </short-description>
<description>void xslt_set_error_handler ( resource $xh , mixed $handler ) 
 Задает функцию обработки ошибок для XSLT-процессора, заданного аргументом xh. Эта функция будет вызываться в случает возникновения ошибок в процессе XSLT преобразования (также она будет вызываться при уведомлениях). </description>
<parameters>xh - Идентификатор ссылки на XSLT-процессор, созданный функцией xslt_create(). 
handler - Пользовательская функция должна принимать четыре аргумента: ссылку на XSLT-процессор, уровень ошибки, код ошибки и массив сообщений об ошибках. Это может выглядеть так: error_handler ( resource $xh , int $error_level , int $error_code , array $messages ) </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
// Наш обработчик ошибок XSLT
function xslt_error_handler($handler, $errno, $level, $info)
{  // проверим список аргументов
  var_dump(func_get_args());
}
// XML содержимое :
$xml='<?xml version="1.0"?>
<para>
 упс, я пропустил закрывающий тэг
</pata>';
// XSL содержимое :
$xsl='<?xml version="1.0"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:template match="/">
   <strong><xsl:value-of select="para"/></strong>
</xsl:template>
</xsl:stylesheet>';
$xh = xslt_create();
xslt_set_error_handler($xh, "xslt_error_handler");
echo xslt_process($xh, 'arg:/_xml', 'arg:/_xsl',
                  NULL, array("/_xml" => $xml, "/_xsl" => $xsl));
?></example>
<example_result>
 
array(4) {
  [0]=>
  resource(1) of type (XSLT Processor)
  [1]=>
  int(3)
  [2]=>
  int(0)
  [3]=>
  array(6) {
    ["msgtype"]=>
    string(5) "error"
    ["code"]=>
    string(1) "2"
    ["module"]=>
    string(9) "Sablotron"
    ["URI"]=>
    string(9) "arg:/_xml"
    ["line"]=>
    string(1) "4"
    ["msg"]=>
    string(34) "XML parser error 7: mismatched tag"
  }
}
</example_result>
</object>

<object id=2729> 
<name>ftp_cdup</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Переходит в родительскую директорию</short-description>
<description>bool ftp_cdup ( resource $ftp_stream ) 
 Переходит в родительскую директорию. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// установка соединения
$conn_id = ftp_connect($ftp_server);
// вход с именем пользователя и паролем
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);
// изменение текущей директории на html
ftp_chdir($conn_id, 'html');
echo ftp_pwd($conn_id); // /html 
// возврат в родительскую директорию
if (ftp_cdup($conn_id)) { 
  echo "команда cdup выполнена успешно\n";
} else {
  echo "команда cdup завершилась неудачей\n";
}
echo ftp_pwd($conn_id); // /
ftp_close($conn_id);
?></example>
<example_result></example_result>
</object>

<object id=2730> 
<name>variant_add</name>
<versions>(PHP 5)</versions>
<short-description>"Adds" two variant values together and returns the result</short-description>
<description>mixed variant_add ( mixed $left , mixed $right ) 
 Adds left to right using the following rules (taken from the MSDN library), which correspond to those of Visual Basic: Variant Addition Rules If Then Both expressions are of the string type Concatenation One expression is a string type and the other a character Addition One expression is numeric and the other is a string Addition Both expressions are numeric Addition Either expression is NULL NULL is returned Both expressions are empty Integer subtype is returned </description>
<parameters>left - The left operand. 
right - The right operand. </parameters>
<output>Returns the result. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2731> 
<name>setlocale</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Устанавливает настройки локали</short-description>
<description>string setlocale ( int $category , string $locale [, string $... ] ) string setlocale ( int $category , array $locale )</description>
<parameters>category - Параметр category это именованная константа, определяющая категорию функций, на которые будет влиять установка локали: LC_ALL - все нижеперечисленное LC_COLLATE - функции сравнения строк, смотри strcoll() LC_CTYPE - функции преобразования и классификации строк, например strtoupper() LC_MONETARY - для функции localeconv() LC_NUMERIC - задает символ десятичного разделения (см. также localeconv()) LC_TIME - форматирование даты/времени функцией strftime() LC_MESSAGES для системынх сообщений (доступна если PHP был скомпилирован с поддержкой libintl) 
locale - Если в качестве locale передана пустая строка "" или NULL, имена локалей будут взяты из одноименных переменных окружения или переменной с именем "LANG". 
... - (Необязательные аргументы в виде строк или массивов для установки настроек локали до первой успешной попытки.) </parameters>
<output>Возвращает имя вновь установленной локали или FALSE если система не поддерживает установку локали, указанная локаль не существует или передано недопустимое имя категории. </output>
<errors></errors>
<example><?php
/* Установка голландской локали */
setlocale(LC_ALL, 'nl_NL');
/* выводит: vrijdag 22 december 1978 */
echo strftime("%A %e %B %Y", mktime(0, 0, 0, 12, 22, 1978));
/* попытка использовать различные локали для  немецкого языка (с PHP 4.3.0) */
$loc_de = setlocale(LC_ALL, 'de_DE@euro', 'de_DE', 'de', 'ge');
echo "На этой системе немецкая локаль имеет имя '$loc_de'";
?></example>
<example_result></example_result>
</object>

<object id=2732> 
<name>php_strip_whitespace</name>
<versions>(PHP 5)</versions>
<short-description>Возвращает исходный код без комментариев и пробелов</short-description>
<description>string php_strip_whitespace ( string $filename ) 
 Возвращает исходный код PHP в файл (filename) исключая комментарии и пробелы. Эта функция может быть полезной для определения актуального объема чистого кода в скриптах по сравнению с объемом комментариев. Функция аналогична использованию php -w из командной строки. </description>
<parameters>filename - Путь к PHP файлу. </parameters>
<output>Возвращает очищенный исходный код, или пустую строку в случае ошибки. </output>
<errors></errors>
<example><?php
// PHP комментарий
/*
 * Другой PHP комментарий
 */
echo        php_strip_whitespace(__FILE__);
// Символы новой строки считаются пробелами, и также удаляются:
do_nothing();
?></example>
<example_result>
 
<?php
 echo php_strip_whitespace(__FILE__); do_nothing(); ?>
</example_result>
</object>

<object id=2733> 
<name>eval</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Исполняет код PHP, содержащейся в строке</short-description>
<description>mixed eval ( string $code_str ) 
 Исполняет строку, переданную в параметре code_str, как код PHP. Помимо прочего, это может быть полезно при хранении кода в текстовом поле базы данных для его вызова по необходимости. 
 При использовании функции eval() необходимо учитывать несколько факторов. Помните о том, что используемые строки должны содержать правильный PHP код, включая, к примеру, использование точки с запятой в завершение строки так, чтобы парсер не отключился на строке после eval() и правильно обработал строку code_str. Для совмещения вывода HTML и PHP кода вы можете использовать закрывающий тег PHP. 
 Также помните, что значения переменных, заданных в eval(), будут перенесены в главный скрипт. </description>
<parameters>code_str - Исполняемая строка кода. Строка code_str может не содержать открывающий тег PHP. </parameters>
<output>Функция eval() возвращает NULL пока не вызывается return, в случае чего возвращается значение, переданное return. Если в исполняемом коде присутствует ошибка, то eval() возвращает FALSE и продолжается нормальное выполнение последующего кода. Ошибку обработки кода парсером невозможно использовать в set_error_handler(). </output>
<errors></errors>
<example><?php
$string = 'cup';
$name = 'coffee';
$str = 'This is a $string with my $name in it.';
echo $str. "\n";
eval("\$str = \"$str\";");
echo $str. "\n";
?></example>
<example_result>
 
This is a $string with my $name in it.
This is a cup with my coffee in it.
</example_result>
</object>

<object id=2734> 
<name>PDF_findfont</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Prepare font for later use [deprecated]</short-description>
<description>int PDF_findfont ( resource $p , string $fontname , string $encoding , int $embed ) 
 Search for a font and prepare it for later use with PDF_setfont(). The metrics will be loaded, and if embed is nonzero, the font file will be checked, but not yet used. encoding is one of builtin, macroman, winansi, host, a user-defined encoding name or the name of a CMap. Parameter embed is optional before PHP 4.3.5 or with PDFlib less than 5. 
 This function is deprecated since PDFlib version 5, use PDF_load_font() instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2735> 
<name>ociserverversion</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_server_version()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2736> 
<name>posix_getegid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Return the effective group ID of the current process</short-description>
<description>int posix_getegid ( void ) 
 Return the numeric effective group ID of the current process. </description>
<parameters></parameters>
<output>Returns an integer of the effective group ID. </output>
<errors></errors>
<example>
 posix_setegid(). </example>
<example_result></example_result>
</object>

<object id=2737> 
<name>curl_close</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Завершает сеанс cURL</short-description>
<description>void curl_close ( resource $ch ) 
 Завершает сеанс cURL и освобождает все ресурсы. Дескриптор ch также уничтожается. </description>
<parameters>ch - Дескриптор cURL, полученный из curl_init().</parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
// создание нового ресурса cURL
$ch = curl_init();
// установка URL и других необходимых параметров
curl_setopt($ch, CURLOPT_URL, "http://www.example.com/");
curl_setopt($ch, CURLOPT_HEADER, 0);
// загрузка страницы и выдача её браузеру
curl_exec($ch);
// завершение сеанса и освобождение ресурсов
curl_close($ch);
?></example>
<example_result></example_result>
</object>

<object id=2738> 
<name>pg_query</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Выполняет запрос</short-description>
<description>resource pg_query ([ resource $connection ], string $query ) 
 pg_query() выполняет запрос query в заданной БД connection. 
 В случае ошибка функция возвращает FALSE, детали ошибки можно получить с помощью функции pg_last_error() если соединение с БД не нарушено. 
 
 Замечание: Несмотря на то, что параметр connection может быть опущен, делать так не рекомендуется, так как это может привести к трудно находимым ошибкам в скриптах. 
 Замечание: 
 Ранее данная функция называлась pg_exec(). pg_exec() все еще доступна в целях обеспечения совместимости, но лучше использовать новое имя. </description>
<parameters>connection - Ресурс соединения с БД PostgreSQL. Если не передать параметр connection используется соединение по умолчанию. Соединение по умолчанию -- это последнее соединение, созданное функцией pg_connect() или pg_pconnect(). 
query - Выражение или выражения SQL для выполнения. Если передано несколько выражений они автоматически выполняются как одна транзакция если явно не указаны команды BEGIN/COMMIT внутри выражения. Тем не менее, использовать несколько транзакий в одном вызове функции не рекомендуется. </parameters>
<output>Ресурс результата запроса в случае успеха или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$conn = pg_pconnect("dbname=publisher");
if (!$conn) {
  echo "Произошла ошибка.\n";
  exit;
}
$result = pg_query($conn, "SELECT author, email FROM authors");
if (!$result) {
  echo "Произошла ошибка.\n";
  exit;
}
while ($row = pg_fetch_row($result)) {
  echo "Автор: $row[0]  E-mail: $row[1]";
  echo "<br />\n";
} 
?></example>
<example_result></example_result>
</object>

<object id=2739> 
<name>socket_create</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Create a socket (endpoint for communication)</short-description>
<description>resource socket_create ( int $domain , int $type , int $protocol ) 
 Creates and returns a socket resource, also referred to as an endpoint of communication. A typical network connection is made up of 2 sockets, one performing the role of the client, and another performing the role of the server. </description>
<parameters>domain - The domain parameter specifies the protocol family to be used by the socket. 
type - The type parameter selects the type of communication to be used by the socket. 
protocol - The protocol parameter sets the specific protocol within the specified domain to be used when communicating on the returned socket. The proper value can be retrieved by name by using getprotobyname(). If the desired protocol is TCP, or UDP the corresponding constants SOL_TCP, and SOL_UDP can also be used. </parameters>
<output>socket_create() returns a socket resource on success, or FALSE on error. The actual error code can be retrieved by calling socket_last_error(). This error code may be passed to socket_strerror() to get a textual explanation of the error. </output>
<errors>If an invalid domain or type is given, socket_create() defaults to AF_INET and SOCK_STREAM respectively and additionally emits an E_WARNING message. </errors>
<example></example>
<example_result></example_result>
</object>

<object id=2740> 
<name>ftp_nb_put</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Загружает файл на FTP сервер в асинхронном режиме</short-description>
<description>int ftp_nb_put ( resource $ftp_stream , string $remote_file , string $local_file , int $mode [, int $startpos = 0 ] ) 
 ftp_nb_put() загружает локальный файл на FTP-сервер. 
 Отличие этой функции от ftp_put() состоит в том, что загрузка файла происходит в асинхронном режиме, что позволяет программе выполнять другие операции во время загрузки. </description>
<parameters>ftp_stream - Идентификатор соединения с FTP-сервером. 
remote_file - Путь к файлу на сервере. 
local_file - Путь к локальному файлу. 
mode - Режим передачи. Может принимать значения FTP_ASCII или FTP_BINARY. 
startpos - Позиция в удаленном файле, в которую начинается загрузка</parameters>
<output>Возвращает FTP_FAILED, FTP_FINISHED или FTP_MOREDATA. </output>
<errors></errors>
<example><?php
// Начало загрузки
$ret = ftp_nb_put($my_connection, "test.remote", "test.local", FTP_BINARY);
while ($ret == FTP_MOREDATA) {
   
   // производим какие-то действия ...
   echo ".";
   // продолжение загрузки ...
   $ret = ftp_nb_continue($my_connection);
}if ($ret != FTP_FINISHED) {
   echo "При загрузке файла произошла ошибка...";
   exit(1);
}?></example>
<example_result></example_result>
</object>

<object id=2741> 
<name>dbplus_curr</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Get current tuple from relation</short-description>
<description>int dbplus_curr ( resource $relation , array &$tuple ) 
 Reads the data for the current tuple for the given relation. </description>
<parameters>relation - A relation opened by dbplus_open(). 
tuple - The data will be passed back in this parameter, as an associative array. </parameters>
<output>The function will return zero (aka. DBPLUS_ERR_NOERR) on success or a db++ error code on failure. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2742> 
<name>openssl_seal</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Seal (encrypt) data</short-description>
<description>int openssl_seal ( string $data , string &$sealed_data , array &$env_keys , array $pub_key_ids [, string $method ] ) 
 openssl_seal() seals (encrypts) data by using RC4 with a randomly generated secret key. The key is encrypted with each of the public keys associated with the identifiers in pub_key_ids and each encrypted key is returned in env_keys. This means that one can send sealed data to multiple recipients (provided one has obtained their public keys). Each recipient must receive both the sealed data and the envelope key that was encrypted with the recipient&#039;s public key. </description>
<parameters>data - 
sealed_data - 
env_keys - 
pub_key_ids - </parameters>
<output>Returns the length of the sealed data on success, or FALSE on error. If successful the sealed data is returned in sealed_data, and the envelope keys in env_keys. </output>
<errors></errors>
<example><?php
// $data is assumed to contain the data to be sealed
// fetch public keys for our recipients, and ready them
$fp = fopen("/src/openssl-0.9.6/demos/maurice/cert.pem", "r");
$cert = fread($fp, 8192);
fclose($fp);
$pk1 = openssl_get_publickey($cert);
// Repeat for second recipient
$fp = fopen("/src/openssl-0.9.6/demos/sign/cert.pem", "r");
$cert = fread($fp, 8192);
fclose($fp);
$pk2 = openssl_get_publickey($cert);
// seal message, only owners of $pk1 and $pk2 can decrypt $sealed with keys
// $ekeys[0] and $ekeys[1] respectively.
openssl_seal($data, $sealed, $ekeys, array($pk1, $pk2));
// free the keys from memory
openssl_free_key($pk1);
openssl_free_key($pk2);
?></example>
<example_result></example_result>
</object>

<object id=2743> 
<name>ovrimos_connect</name>
<versions>(PHP 4 >= 4.0.3, PHP 5 <= 5.0.5)</versions>
<short-description>Connect to the specified database</short-description>
<description>int ovrimos_connect ( string $host , string $dborport , string $user , string $password ) 
 Connects to the specified database. </description>
<parameters>host - A host name or IP address. 
dborport - Either a database name, or the port number to connect to. 
user - The user name. 
password - Password associated with user. </parameters>
<output>Returns a connection identifier (greater than 0) on success, or 0 on failure. </output>
<errors></errors>
<example><?php
$conn = ovrimos_connect("server.example.com", "8001", "admin", "password");
if ($conn != 0) {
    echo "Connection ok!";
    $res = ovrimos_exec($conn, "select table_id, table_name from sys.tables");
    if ($res != 0) {
        echo "Statement ok!";
        ovrimos_result_all($res);
        ovrimos_free_result($res);
    }
    ovrimos_close($conn);
}?></example>
<example_result></example_result>
</object>

<object id=2744> 
<name>sybase_select_db</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Selects a Sybase database</short-description>
<description>bool sybase_select_db ( string $database_name [, resource $link_identifier ] ) 
 sybase_select_db() sets the current active database on the server that&#039;s associated with the specified link identifier. 
 Every subsequent call to sybase_query() will be made on the active database. </description>
<parameters>database_name - 
link_identifier - If no link identifier is specified, the last opened link is assumed. If no link is open, the function will try to establish a link as if sybase_connect() was called, and use it. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2745> 
<name>enchant_broker_request_pwl_dict</name>
<versions>(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )</versions>
<short-description>creates a dictionary using a PWL file</short-description>
<description>resource enchant_broker_request_pwl_dict ( resource $broker , string $filename ) 
 Creates a dictionary using a PWL file. A PWL file is personal word file one word per line. </description>
<parameters>broker - Broker resource 
filename - Path to the PWL file. </parameters>
<output>Returns a dictionary resource on success или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2746> 
<name>dba_firstkey</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Fetch first key</short-description>
<description>string dba_firstkey ( resource $handle ) 
 dba_firstkey() returns the first key of the database and resets the internal key pointer. This permits a linear search through the whole database. </description>
<parameters>handle - The database handler, returned by dba_open() or dba_popen(). </parameters>
<output>Returns the key on success или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2747> 
<name>ocicolumnscale</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_field_scale()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2748> 
<name>xslt_getopt</name>
<versions>(PHP 4 >= 4.3.0)</versions>
<short-description>Получение настроек заданного XSLT-процессора </short-description>
<description>int xslt_getopt ( resource $processor ) 
 xslt_getopt() возвращает значения настроек XSLT-процессора processor. </description>
<parameters>processor - Ресурс XSLT-процессора, возвращаемый функцией xslt_create(). </parameters>
<output>Возвращает значения настроек в виде битовой маски, созданной с помощью констант XSLT_SABOPT_XXX. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2749> 
<name>java_last_exception_clear</name>
<versions>(PHP 4 >= 4.0.2)</versions>
<short-description>Clear last Java exception</short-description>
<description>void java_last_exception_clear ( void ) 
 Clears last Java exception. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2750> 
<name>oci_pconnect</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Устанавливает постоянное соединение с сервером Oracle</short-description>
<description>resource oci_pconnect ( string $username , string $password [, string $connection_string [, string $character_set [, int $session_mode ]]] ) 
 Создает постоянное соединение с сервером Oracle и выполняет аутентификацию. 
 Постоянные соединения кэшируются и повторно используются при следующих запросах, в результате снижаются накладные расходы при каждой загрузке страницы; типичное приложение PHP имеет одно постоянное подключение к серверу PHP, реализованное дочерним процессом Apache (или PHP FastCGI/CGI). Для получения подробной информации см. раздел Постоянные соединения с БД. </description>
<parameters>username - Имя пользователя Oracle. 
password - Пароль пользователя username. 
connection_string - Содержитэкземпляр Oracle для подключения. Это может быть&raquo; Easy Connect string, или Connect Name из файлаtnsnames.ora, или имя локального экземпляра Oracle.
character_set - Определяет кодировку, используемую клиентскимибиблиотеками Oracle. Данная кодировка не обязательно должна совпадать с кодировкой, используемой в самой базе данных.Если она не совпадает, Oracle сделает все возможное для конвертирования данных из- и в данную кодировку.В зависимости от используемых кодировок это может не всегда давать приемлемые результаты. Преобразование такжесоздает некоторые дополнительные временные затраты.
session_mode - Этот параметрдоступен начиная с версии PHP 5 (PECL OCI8 1.1) и принимает следующие значения:OCI_DEFAULT,OCI_SYSOPER и OCI_SYSDBA.Если были указаны OCI_SYSOPER илиOCI_SYSDBA, данная функция попытается установить привилегированное соединение, используя внешниеданные авторизации.По умолчанию привилегированные соединения отключены. Чтобы их включить, необходимо установитьoci8.privileged_connectв On.</parameters>
<output>Возвращает идентификатор подключения или FALSE в случае ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2751> 
<name>ob_implicit_flush</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Функция включает/выключает неявный сброс</short-description>
<description>void ob_implicit_flush ([ int $flag = true ] ) 
 ob_implicit_flush() включает или выключает неявный сброс. Неявный сброс приводит к тому, что операция сброса выполняется после каждого вывода, поэтому явные вызовы функции flush() не нужны. </description>
<parameters>flag - TRUE для включения неявного сброса, FALSE в противном случае. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2752> 
<name>dbx_compare</name>
<versions>(PHP 4 >= 4.1.0, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)</versions>
<short-description>Compare two rows for sorting purposes</short-description>
<description>int dbx_compare ( array $row_a , array $row_b , string $column_key [, int $flags = DBX_CMP_ASC | DBX_CMP_NATIVE ] ) 
 dbx_compare() is a helper function for dbx_sort() to ease the make and use of the custom sorting function. </description>
<parameters>row_a - First row 
row_b - Second row 
column_key - The compared column 
flags - The flags can be set to specify comparison direction: DBX_CMP_ASC - ascending order DBX_CMP_DESC - descending order and the preferred comparison type: DBX_CMP_NATIVE - no type conversion DBX_CMP_TEXT - compare items as strings DBX_CMP_NUMBER - compare items numerically One of the direction and one of the type constant can be combined with bitwise OR operator (|). </parameters>
<output>Returns 0 if the row_a[$column_key] is equal to row_b[$column_key], and 1 or -1 if the former is greater or is smaller than the latter one, respectively, or vice versa if the flag is set to DBX_CMP_DESC. </output>
<errors></errors>
<example><?php
function user_re_order($a, $b) 
{    $rv = dbx_compare($a, $b, "parentid", DBX_CMP_DESC);
    if (!$rv) {
        $rv = dbx_compare($a, $b, "id", DBX_CMP_NUMBER);
    }
    return $rv;
}
$link   = dbx_connect(DBX_ODBC, "", "db", "username", "password")
    or die("Could not connect");
$result = dbx_query($link, "SELECT id, parentid, description FROM table ORDER BY id");
    // data in $result is now ordered by id
dbx_sort($result, "user_re_order");
    // date in $result is now ordered by parentid (descending), then by id
dbx_close($link);
?></example>
<example_result></example_result>
</object>

<object id=2753> 
<name>date_format</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Псевдоним DateTime::format()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2754> 
<name>ctype_graph</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Проверяет наличие всех печатных символов, кроме пробела</short-description>
<description>bool ctype_graph ( string $text ) 
 Проверяет, все ли символы в переданной строке text являются видимыми при печати. </description>
<parameters>text - Проверяемая строка. </parameters>
<output>Возвращает TRUE, если каждый символ в строке text печатный и фактически создает видимый вывод (без пробельных символов), FALSE в противном случае. </output>
<errors></errors>
<example><?php
$strings = array('string1' => "asdf\n\r\t", 'string2' => 'arf12', 'string3' => 'LKA#@%.54');
foreach ($strings as $name => $testcase) {
    if (ctype_graph($testcase)) {
        echo "Строка '$name' состоит только из (видимых) печатных символов.\n";
    } else {
        echo "Строка '$name' не состоит только из (видимых) печатных символов.\n";
    }
}?></example>
<example_result>
 
Строка &#039;string1&#039; не состоит только из (видимых) печатных символов.
Строка &#039;string2&#039; состоит только из (видимых) печатных символов.
Строка &#039;string3&#039; состоит только из (видимых) печатных символов.
</example_result>
</object>

<object id=2755> 
<name>linkinfo</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает информацию о ссылке</short-description>
<description>int linkinfo ( string $path ) 
 Возвращает информацию о ссылке. 
 Эта функция используется для определения, существует ли ссылка (на которую указывает path) на самом деле (используя тот же метод, что и макрос S_ISLNK, определённый в stat.h). </description>
<parameters>path - Путь к ссылке. </parameters>
<output>linkinfo() возвращает поле st_dev структуры stat из Unix C, которую возвращает системный вызов lstat. Возвращает 0 или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
echo linkinfo('/vmlinuz'); // 835
?></example>
<example_result></example_result>
</object>

<object id=2756> 
<name>xslt_set_scheme_handlers</name>
<versions>(PHP 4 >= 4.0.6)</versions>
<short-description>Задает обработчики схемы для XSLT-процессора </short-description>
<description>void xslt_set_scheme_handlers ( resource $xh , array $handlers ) 
 Регистрирует обработчики схемы (XPath обработчики) для документа. </description>
<parameters>xh - Идентификатор ссылки на XSLT-процессор, созданный функцией xslt_create(). 
handlers - Массив со следующими ключами: "get_all", "open", "get", "put", и "close". </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example>
 </example>
<example_result>
 
string   get_all(resource processor, string scheme, string rest)
resource open(resource processor, string scheme, string rest)
int      get(resource processor, resource fp, string &data)
int      put(resource processor, resource fp, string data)
void     close(resource processor, resource fp)
</example_result>
</object>

<object id=2757> 
<name>ctype_cntrl</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Проверяет на наличие управляющих символов</short-description>
<description>bool ctype_cntrl ( string $text ) 
 Проверяет, все ли символы в переданной строке text являются управляющими символами. Управляющими символами, к примеру, являются перевод строки, символ табуляции, escape. </description>
<parameters>text - Проверяемая строка. </parameters>
<output>Возвращает TRUE, если каждый символ в строке text является управляющим символом из текущей локали, FALSE в противном случае. </output>
<errors></errors>
<example><?php
$strings = array('string1' => "\n\r\t", 'string2' => 'arf12');
foreach ($strings as $name => $testcase) {
    if (ctype_cntrl($testcase)) {
        echo "Строка '$name' состоит только из управляющих символов.\n";
    } else {
        echo "Строка '$name' не состоит только из управляющих символов.\n";
    }
}?></example>
<example_result>
 
Строка &#039;string1&#039; состоит только из управляющих символов.
Строка &#039;string2&#039; не состоит только из управляющих символов.
</example_result>
</object>

<object id=2758> 
<name>memory_get_peak_usage</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Returns the peak of memory allocated by PHP</short-description>
<description>int memory_get_peak_usage ([ bool $real_usage = false ] ) 
 Returns the peak of memory, in bytes, that&#039;s been allocated to your PHP script. </description>
<parameters>real_usage - Set this to TRUE to get the real size of memory allocated from system. If not set or FALSE only the memory used by emalloc() is reported. </parameters>
<output>Returns the memory peak in bytes. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2759> 
<name>imap_append</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Добавляет строковое сообщение в указанный почтовый ящик</short-description>
<description>bool imap_append ( resource $imap_stream , string $mailbox , string $message [, string $options = NULL [, string $internal_date = NULL ]] ) 
 Добавляет строку message в указанный mailbox. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
mailbox - Имя почтового ящика. Cмотрите imap_open() для подробной информации. 
message - Добавляемое сообщение в виде строки 
options - Если указан, то параметр options также будет записан в mailbox 
internal_date - Если этот параметр указан, он установит INTERNALDATE в добавляемом сообщении. Параметр должен содержать дату, представленную строкой, которая соответствует спецификации rfc2060 для значения date_time. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$stream = imap_open("{imap.example.org}INBOX.Drafts", "username", "password");
$check = imap_check($stream);
echo "Кол-во сообщений до добавления: ". $check->Nmsgs . "\n";
imap_append($stream, "{imap.example.org}INBOX.Drafts"
                   , "From: me@example.com\r\n"
                   . "To: you@example.com\r\n"
                   . "Subject: test\r\n"
                   . "\r\n"
                   . "это проверочное сообщение, пожалуйста, игнорируйте его\r\n"
                   );
$check = imap_check($stream);
echo "Кол-во сообщений после добавления : ". $check->Nmsgs . "\n";
imap_close($stream);
?></example>
<example_result></example_result>
</object>

<object id=2760> 
<name>PDF_setrgbcolor_stroke</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set stroke rgb color values [deprecated]</short-description>
<description>bool PDF_setrgbcolor_stroke ( resource $p , float $red , float $green , float $blue ) 
 Sets the current stroke color to the supplied RGB values. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. 
 This function is deprecated since PDFlib version 4, use PDF_setcolor() instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2761> 
<name>com_addref</name>
<versions>(PHP 4 >= 4.1.0)</versions>
<short-description>Increases the components reference counter [deprecated]</short-description>
<description>void com_addref ( void ) 
 Increases the components reference counter. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2762> 
<name>xml_parser_free</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Освобождение XML анализатора </short-description>
<description>bool xml_parser_free ( resource $parser ) 
 Освобождает память, занятую XML анализатором parser. </description>
<parameters></parameters>
<output>Эта функция возвращает FALSE, если parser ссылается на недопустимый анализатор, в остальных случаях она очищает анализатор и возвращает TRUE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2763> 
<name>PDF_end_template</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Finish template</short-description>
<description>bool PDF_end_template ( resource $p ) 
 Finishes a template definition. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2764> 
<name>m_setssl</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Set the connection method to SSL</short-description>
<description>int m_setssl ( resource $conn , string $host , int $port ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
host - 
port - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2765> 
<name>msg_receive</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Receive a message from a message queue</short-description>
<description>bool msg_receive ( resource $queue , int $desiredmsgtype , int &$msgtype , int $maxsize , mixed &$message [, bool $unserialize = true [, int $flags = 0 [, int &$errorcode ]]] ) 
 msg_receive() will receive the first message from the specified queue of the type specified by desiredmsgtype. </description>
<parameters>queue - 
desiredmsgtype - If desiredmsgtype is 0, the message from the front of the queue is returned. If desiredmsgtype is greater than 0, then the first message of that type is returned. If desiredmsgtype is less than 0, the first message on the queue with the lowest type less than or equal to the absolute value of desiredmsgtype will be read. If no messages match the criteria, your script will wait until a suitable message arrives on the queue. You can prevent the script from blocking by specifying MSG_IPC_NOWAIT in the flags parameter. 
msgtype - The type of the message that was received will be stored in this parameter. 
maxsize - The maximum size of message to be accepted is specified by the maxsize; if the message in the queue is larger than this size the function will fail (unless you set flags as described below). 
message - The received message will be stored in message, unless there were errors receiving the message. 
unserialize - If set to TRUE, the message is treated as though it was serialized using the same mechanism as the session module. The message will be unserialized and then returned to your script. This allows you to easily receive arrays or complex object structures from other PHP scripts, or if you are using the WDDX serializer, from any WDDX compatible source. 
flags - The optional flags allows you to pass flags to the low-level msgrcv system call. It defaults to 0, but you may specify one or more of the following values (by adding or ORing them together). Flag values for msg_receive MSG_IPC_NOWAIT If there are no messages of the desiredmsgtype, return immediately and do not wait. The function will fail and return an integer value corresponding to MSG_ENOMSG. MSG_EXCEPT Using this flag in combination with a desiredmsgtype greater than 0 will cause the function to receive the first message that is not equal to desiredmsgtype. MSG_NOERROR If the message is longer than maxsize, setting this flag will truncate the message to maxsize and will not signal an error. 
errorcode - If the function fails, the optional errorcode will be set to the value of the system errno variable. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2766> 
<name>get_declared_classes</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает массив с именами объявленных классов</short-description>
<description>array get_declared_classes ( void ) 
 Возвращает объявленные классы. </description>
<parameters></parameters>
<output>Возвращает массив имен объявленных классов текущего скрипта. </output>
<errors></errors>
<example><?php
print_r(get_declared_classes());
?></example>
<example_result>
 
Array
(
    [0] => stdClass
    [1] => __PHP_Incomplete_Class
    [2] => Directory
)
</example_result>
</object>

<object id=2767> 
<name>imap_clearflag_full</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Clears flags on messages</short-description>
<description>bool imap_clearflag_full ( resource $imap_stream , string $sequence , string $flag [, int $options = 0 ] ) 
 This function causes a store to delete the specified flag to the flags set for the messages in the specified sequence. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
sequence - A sequence of message numbers. You can enumerate desired messages with the X,Y syntax, or retrieve all messages within an interval with the X:Y syntax 
flag - The flags which you can unset are "\\Seen", "\\Answered", "\\Flagged", "\\Deleted", and "\\Draft" (as defined by &raquo; RFC2060) 
options - options are a bit mask and may contain the single option: ST_UID - The sequence argument contains UIDs instead of sequence numbers </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2768> 
<name>PDF_setrgbcolor_fill</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set fill rgb color values [deprecated]</short-description>
<description>bool PDF_setrgbcolor_fill ( resource $p , float $red , float $green , float $blue ) 
 Sets the current fill color to the supplied RGB values. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. 
 This function is deprecated since PDFlib version 4, use PDF_setcolor() instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2769> 
<name>strncasecmp</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Бинарно-безопасное сравнение первых n символов строк без учета регистра</short-description>
<description>int strncasecmp ( string $str1 , string $str2 , int $len ) 
 Эта функция подобна strcasecmp(), за исключением того, что можно указать максимальное количество символов в обоих строках, которые будут участвовать в сравнении. </description>
<parameters>str1 - Первая строка. 
str2 - Вторая строка. 
len - Количество символов, участвующих в сравнении. </parameters>
<output>Возвращает отрицательное число, если str1 меньше, чем str2, положительное число, если str1 больше, чем str2, и 0 если строки равны. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2770> 
<name>mb_strripos</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Finds position of last occurrence of a string within another, case insensitive</short-description>
<description>int mb_strripos ( string $haystack , string $needle [, int $offset = 0 [, string $encoding ]] ) 
 mb_strripos() performs multi-byte safe strripos() operation based on number of characters. needle position is counted from the beginning of haystack. First character&#039;s position is 0. Second character position is 1. Unlike mb_strrpos(), mb_strripos() is case-insensitive. </description>
<parameters>haystack - The string from which to get the position of the last occurrence of needle 
needle - The string to find in haystack 
offset - The position in haystack to start searching 
encoding - Character encoding name to use. If it is omitted, internal character encoding is used. </parameters>
<output>Return the numeric position of the last occurrence of needle in the haystack string, or FALSE if needle is not found. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2771> 
<name>sqlite_last_error</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Возвращает код ошибки последней операции с SQLite</short-description>
<description>int sqlite_last_error ( resource $dbhandle ) 
 Объектно-ориентированный стиль (метод): int SQLiteDatabase::lastError ( void )</description>
<parameters>dbhandle - Ресурс базы данных SQLite, полученный из функции sqlite_open() в случае использования процедурного подхода. Этот параметр не требуется при использовании объектно-ориентированного подхода. </parameters>
<output>Возвращает код ошибки, или 0 в случае ее отсутствия. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2772> 
<name>msql_fetch_field</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get field information</short-description>
<description>object msql_fetch_field ( resource $result [, int $field_offset = 0 ] ) 
 msql_fetch_field() can be used in order to obtain information about fields in a certain query result. </description>
<parameters>result - Обрабатываемый результат запроса,полученный с помощью функции msql_query().
field_offset - The field offset. If not specified, the next field that wasn&#039;t yet retrieved by msql_fetch_field() is retrieved. </parameters>
<output>Returns an object containing field information. The properties of the object are: 
 name - column name </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2773> 
<name>imap_reopen</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Reopen IMAP stream to new mailbox</short-description>
<description>bool imap_reopen ( resource $imap_stream , string $mailbox [, int $options = 0 [, int $n_retries = 0 ]] ) 
 Reopens the specified stream to a new mailbox on an IMAP or NNTP server. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
mailbox - The mailbox name, see imap_open() for more information 
options - The options are a bit mask with one or more of the following: OP_READONLY - Open mailbox read-only OP_ANONYMOUS - Don&#039;t use or update a .newsrc for news (NNTP only) OP_HALFOPEN - For IMAP and NNTP names, open a connection but don&#039;t open a mailbox. OP_EXPUNGE - Silently expunge recycle stream CL_EXPUNGE - Expunge mailbox automatically upon mailbox close (see also imap_delete() and imap_expunge()) 
n_retries - Number of maximum connect attempts </parameters>
<output>Returns TRUE if the stream is reopened, FALSE otherwise. </output>
<errors></errors>
<example><?php
$mbox = imap_open("{imap.example.org:143}INBOX", "username", "password") or die(implode(", ", imap_errors()));
// ...
imap_reopen($mbox, "{imap.example.org:143}INBOX.Sent") or die(implode(", ", imap_errors()));
// ..
?></example>
<example_result></example_result>
</object>

<object id=2774> 
<name>array_sum</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Вычисляет сумму значений массива</short-description>
<description>number array_sum ( array $array ) 
 array_sum() возвращает сумму значений массива. </description>
<parameters>array - Входной массив. </parameters>
<output>Возвращает сумму значений в виде integer или float. </output>
<errors></errors>
<example><?php
$a = array(2, 4, 6, 8);
echo "sum(a) = " . array_sum($a) . "\n";
$b = array("a" => 1.2, "b" => 2.3, "c" => 3.4);
echo "sum(b) = " . array_sum($b) . "\n";
?></example>
<example_result>
 
sum(a) = 20
sum(b) = 6.9
</example_result>
</object>

<object id=2775> 
<name>ncurses_hide_panel</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Remove panel from the stack, making it invisible</short-description>
<description>int ncurses_hide_panel ( resource $panel ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>panel - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2776> 
<name>swf_enddoaction</name>
<versions>(PHP 4)</versions>
<short-description>End the current action</short-description>
<description>void swf_enddoaction ( void ) 
 Ends the current action started by the swf_startdoaction() function. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2777> 
<name>is_subclass_of</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Проверяет, содержит ли объект в своем дереве предков указанный класс</short-description>
<description>bool is_subclass_of ( mixed $object , string $class_name [, bool $allow_string = TRUE ] ) 
 Проверяет, содержит ли объект object в своем дереве предков класс class_name . </description>
<parameters>object - Имя класса или экземпляр объекта 
class_name - Имя класса 
allow_string - Вызывать ли автозагрузку класса, если он не существует. </parameters>
<output>Эта функция возвращает TRUE, если объект object принадлежит к классу, наследующему от class_name, иначе она возвращает FALSE. </output>
<errors></errors>
<example><?php
// объявляем класс
class WidgetFactory
{
  var $oink = 'moo';
}
// объявляем наследника
class WidgetFactory_Child extends WidgetFactory
{
  var $oink = 'oink';
}
// создаем новый объект
$WF = new WidgetFactory();
$WFC = new WidgetFactory_Child();
if (is_subclass_of($WFC, 'WidgetFactory')) {
  echo "да, \$WFC наследует WidgetFactory\n";
} else {
  echo "нет, \$WFC не наследует WidgetFactory\n";
}
if (is_subclass_of($WF, 'WidgetFactory')) {
  echo "да, \$WF наследует WidgetFactory\n";
} else {
  echo "нет, \$WF не наследует WidgetFactory\n";
}
// применимо только с версии PHP 5.0.3
if (is_subclass_of('WidgetFactory_Child', 'WidgetFactory')) {
  echo "да, WidgetFactory_Child наследует WidgetFactory\n";
} else {
  echo "нет, WidgetFactory_Child не наследует WidgetFactory\n";
}?></example>
<example_result>
 
да, $WFC наследует WidgetFactory
нет, $WF не наследует WidgetFactory
да, WidgetFactory_Child наследует WidgetFactory
</example_result>
</object>

<object id=2778> 
<name>fbsql_start_db</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Start a database on local or remote server</short-description>
<description>bool fbsql_start_db ( string $database_name [, resource $link_identifier [, string $database_options ]] ) 
 Start a database on local or remote server. </description>
<parameters>database_name - The database name. 
link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().
database_options - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2779> 
<name>stripos</name>
<versions>(PHP 5)</versions>
<short-description>Возвращает позицию первого вхождения подстроки без учета регистра</short-description>
<description>int stripos ( string $haystack , string $needle [, int $offset = 0 ] ) 
 Ищет позицию первого вхождения подстроки needle в строку haystack. 
 В отличие от strpos(), эта функция не учитывает регистр символов. </description>
<parameters>haystack - Строка, в которой производится поиск. 
needle - Заметьте, что needle может содержать строку из одного или более символов. 
offset - Если этот параметр указан, то поиск будет начат с указанного количества символов с начала строки. В отличии от strrpos() и strripos() данный параметр не может быть отрицательным. </parameters>
<output>Возвращает позицию, в которой находится искомая строка, относительно начала строки haystack (независимо от смещения (offset). Также обратите внимание на то, что позиция строки отсчитывается от 0, а не от 1. </output>
<errors></errors>
<example><?php
$findme    = 'a';
$mystring1 = 'xyz';
$mystring2 = 'ABC';
$pos1 = stripos($mystring1, $findme);
$pos2 = stripos($mystring2, $findme);
// Конечно, 'a' не входит в 'xyz'
if ($pos1 === false) {
    echo "Строка '$findme' не найдена в строке '$mystring1'";
}
// Заметьте, что используется ===.  Использование == не даст верного 
// результата, так как 'a' в нулевой позиции.
if ($pos2 !== false) {
    echo "Нашел '$findme' в '$mystring2' в позиции $pos2";
}?></example>
<example_result></example_result>
</object>

<object id=2780> 
<name>floatval</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает значение переменной в виде числа с плавающей точкой</short-description>
<description>float floatval ( mixed $var ) 
 Возвращает значение переменной var в виде числа с плавающей точкой (float). </description>
<parameters>var - Может быть любого скалярного типа. floatval() нельзя использовать с объектами, в этом случае возникнет ошибка уровня E_NOTICE и функция вернет 1. </parameters>
<output>Значение заданной переменной в виде числа с плавающей точкой. Пустые массивы в качестве аргумента возвращают 0, непустые массивы возвращают 1. </output>
<errors></errors>
<example><?php
$var = '122.34343The';
$float_value_of_var = floatval($var);
echo $float_value_of_var; // 122.34343
?></example>
<example_result></example_result>
</object>

<object id=2781> 
<name>imap_headers</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Returns headers for all messages in a mailbox</short-description>
<description>array imap_headers ( resource $imap_stream ) 
 Returns headers for all messages in a mailbox. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().</parameters>
<output>Returns an array of string formatted with header info. One element per mail message. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2782> 
<name>dbx_query</name>
<versions>(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)</versions>
<short-description>Send a query and fetch all results (if any)</short-description>
<description>mixed dbx_query ( object $link_identifier , string $sql_statement [, int $flags ] ) 
 Sends a query and fetch all results. </description>
<parameters>link_identifier - The DBX link object returned by dbx_connect() 
sql_statement - SQL statement. 
flags - The flags parameter is used to control the amount of information that is returned. It may be any combination of the following constants with the bitwise OR operator (|). The DBX_COLNAMES_* flags override the dbx.colnames_case setting from php.ini. DBX_RESULT_INDEX It is always set, that is, the returned object has a data property which is a 2 dimensional array indexed numerically. For example, in the expression data[2][3] 2 stands for the row (or record) number and 3 stands for the column (or field) number. The first row and column are indexed at 0. If DBX_RESULT_ASSOC is also specified, the returning object contains the information related to DBX_RESULT_INFO too, even if it was not specified. DBX_RESULT_INFO It provides info about columns, such as field names and field types. DBX_RESULT_ASSOC It effects that the field values can be accessed with the respective column names used as keys to the returned object&#039;s data property. Associated results are actually references to the numerically indexed data, so modifying data[0][0] causes that data[0][&#039;field_name_for_first_column&#039;] is modified as well. DBX_RESULT_UNBUFFERED This flag will not create the data property, and the rows property will initially be 0. Use this flag for large datasets, and use dbx_fetch_row() to retrieve the results row by row. The dbx_fetch_row() function will return rows that are conformant to the flags set with this query. Incidentally, it will also update the rows each time it is called. DBX_COLNAMES_UNCHANGED The case of the returned column names will not be changed. DBX_COLNAMES_UPPERCASE The case of the returned column names will be changed to uppercase. DBX_COLNAMES_LOWERCASE The case of the returned column names will be changed to lowercase. Note that DBX_RESULT_INDEX is always used, regardless of the actual value of flags parameter. This means that only the following combinations are effective: DBX_RESULT_INDEX DBX_RESULT_INDEX | DBX_RESULT_INFO DBX_RESULT_INDEX | DBX_RESULT_INFO | DBX_RESULT_ASSOC - this is the default, if flags is not specified. </parameters>
<output>dbx_query() returns an object or 1 on success, and 0 on failure. The result object is returned only if the query given in sql_statement produces a result set (i.e. a SELECT query, even if the result set is empty). </output>
<errors></errors>
<example><?php
$link   = dbx_connect(DBX_ODBC, "", "db", "username", "password")
    or die("Could not connect");
$result = dbx_query($link, 'SELECT id, parentid, description FROM table');
if (is_object($result) ) {
    // ... do some stuff here, see detailed examples below ...
    // first, print out field names and types 
    // then, draw a table filled with the returned field values
} else {
    exit("Query failed");
}
dbx_close($link);
?></example>
<example_result></example_result>
</object>

<object id=2783> 
<name>vpopmail_del_domain_ex</name>
<versions>(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)</versions>
<short-description>Delete a virtual domain</short-description>
<description>bool vpopmail_del_domain_ex ( string $domain ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2784> 
<name>sqlite_unbuffered_query</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Выполняет запрос без буферизации результатов</short-description>
<description>resource sqlite_unbuffered_query ( resource $dbhandle , string $query [, int $result_type = SQLITE_BOTH [, string &$error_msg ]] ) resource sqlite_unbuffered_query ( string $query , resource $dbhandle [, int $result_type = SQLITE_BOTH [, string &$error_msg ]] )</description>
<parameters>dbhandle - Ресурс базы данных SQLite, полученный из функции sqlite_open() в случае использования процедурного подхода. Этот параметр не требуется при использовании объектно-ориентированного подхода. 
query - Выполняемый запрос. 
result_type - Необязательный параметрresult_type принимает константу, определяющую, как будетиндексирован возвращаемый массив.При использовании SQLITE_ASSOC будет возвращенассоциативный массив, а при использовании SQLITE_NUM- числовой. SQLITE_BOTH вернет массив как сассоциативными, так и с числовыми индексами.Значением по умолчанию для этой функции являетсяSQLITE_BOTH.
error_msg - Указанная переменная будет заполнена в случае возникновения ошибки. Это особенно важно, так как ошибки синтаксиса SQL не возращаются функцией sqlite_last_error(). </parameters>
<output>Возвращает дескриптор результата или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2785> 
<name>str_shuffle</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Переставляет символы в строке случайным образом</short-description>
<description>string str_shuffle ( string $str ) 
 str_shuffle() перемешивает символы в строке. Выбирается одна возможная перестановка из всех возможных. </description>
<parameters>str - Входная строка. </parameters>
<output>Возвращает перемешанную строку. </output>
<errors></errors>
<example><?php
$str = 'abcdef';
$shuffled = str_shuffle($str);
// выведет что-то вроде этого: bfdaec
echo $shuffled;
?></example>
<example_result></example_result>
</object>

<object id=2786> 
<name>sem_get</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get a semaphore id</short-description>
<description>resource sem_get ( int $key [, int $max_acquire = 1 [, int $perm = 0666 [, int $auto_release = 1 ]]] ) 
 sem_get() returns an id that can be used to access the System V semaphore with the given key. 
 A second call to sem_get() for the same key will return a different semaphore identifier, but both identifiers access the same underlying semaphore. </description>
<parameters>key - 
max_acquire - The number of processes that can acquire the semaphore simultaneously is set to max_acquire. 
perm - The semaphore permissions. Actually this value is set only if the process finds it is the only process currently attached to the semaphore. 
auto_release - Specifies if the semaphore should be automatically released on request shutdown. </parameters>
<output>Returns a positive semaphore identifier on success, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2787> 
<name>dotnet_load</name>
<versions>(PHP 4)</versions>
<short-description>Загружает модуль DOTNET</short-description>
<description>int dotnet_load ( string $assembly_name [, string $datatype_name [, int $codepage ]] ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2788> 
<name>pcntl_waitpid</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Waits on or returns the status of a forked child</short-description>
<description>int pcntl_waitpid ( int $pid , int &$status [, int $options = 0 ] ) 
 Suspends execution of the current process until a child as specified by the pid argument has exited, or until a signal is delivered whose action is to terminate the current process or to call a signal handling function. 
 If a child as requested by pid has already exited by the time of the call (a so-called "zombie" process), the function returns immediately. Any system resources used by the child are freed. Please see your system&#039;s waitpid(2) man page for specific details as to how waitpid works on your system. </description>
<parameters>pid - The value of pid can be one of the following: possible values for pid < -1 wait for any child process whose process group ID is equal to the absolute value of pid. -1 wait for any child process; this is the same behaviour that the wait function exhibits. 0 wait for any child process whose process group ID is equal to that of the calling process. > 0 wait for the child whose process ID is equal to the value of pid. 
status - pcntl_waitpid() will store status information in the status parameter which can be evaluated using the following functions: pcntl_wifexited(), pcntl_wifstopped(), pcntl_wifsignaled(), pcntl_wexitstatus(), pcntl_wtermsig() and pcntl_wstopsig(). 
options - The value of options is the value of zero or more of the following two global constants OR&#039;ed together: possible values for options WNOHANG return immediately if no child has exited. WUNTRACED return for children which are stopped, and whose status has not been reported. </parameters>
<output>pcntl_waitpid() returns the process ID of the child which exited, -1 on error or zero if WNOHANG was used and no child was available </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2789> 
<name>mb_ereg</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Regular expression match with multibyte support</short-description>
<description>int mb_ereg ( string $pattern , string $string [, array $regs ] ) 
 Executes the regular expression match with multibyte support. </description>
<parameters>pattern - The search pattern. 
string - The search string. 
regs - Contains a substring of the matched string. </parameters>
<output>Для этой функции будетиспользована внутренняя кодировка или кодировка, установленная функцией mb_regex_encoding().</output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2790> 
<name>com_propget</name>
<versions>(PHP 4)</versions>
<short-description>Псевдоним com_get()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2791> 
<name>variant_mod</name>
<versions>(PHP 5)</versions>
<short-description>Divides two variants and returns only the remainder</short-description>
<description>mixed variant_mod ( mixed $left , mixed $right ) 
 Divides left by right and returns the remainder. </description>
<parameters>left - The left operand. 
right - The right operand. </parameters>
<output>Returns the remainder of the division. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2792> 
<name>dba_exists</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Check whether key exists</short-description>
<description>bool dba_exists ( string $key , resource $handle ) 
 dba_exists() checks whether the specified key exists in the database. </description>
<parameters>key - The key the check is performed for. 
handle - The database handler, returned by dba_open() or dba_popen(). </parameters>
<output>Returns TRUE if the key exists, FALSE otherwise. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2793> 
<name>sqlite_changes</name>
<versions>(PHP 5, PECL sqlite >= 1.0.0)</versions>
<short-description>Возвращает количество записей, которые были изменены последним SQL-запросом </short-description>
<description>int sqlite_changes ( resource $dbhandle ) 
 Объектно-ориентированный стиль (метод): int SQLiteDatabase::changes ( void )</description>
<parameters>dbhandle - Ресурс базы данных SQLite, полученный из функции sqlite_open() в случае использования процедурного подхода. Этот параметр не требуется при использовании объектно-ориентированного подхода. </parameters>
<output>Возвращает количество измененных записей. </output>
<errors></errors>
<example><?php
$dbhandle = sqlite_open('mysqlitedb');
$query = sqlite_query($dbhandle, "UPDATE users SET email='jDoe@example.com' WHERE username='jDoe'");
if (!$query) {
    exit('Ошибка в запросе.');
} else {
    echo 'Количество измененных записей: ', sqlite_changes($dbhandle);
}?></example>
<example_result></example_result>
</object>

<object id=2794> 
<name>mysql_client_encoding</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Возвращает кодировку соединения</short-description>
<description>string mysql_client_encoding ([ resource $link_identifier ] ) 
 Возвращает значение переменной MySQL character_set. </description>
<parameters>link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Возвращает используемую по умолчанию кодировку для данного соединения. </output>
<errors></errors>
<example><?php
$link    = mysql_connect('localhost', 'mysql_user', 'mysql_password');
$charset = mysql_client_encoding($link);
echo "Текущая кодировка: $charset\n";
?></example>
<example_result>
 
Текущая кодировка: latin1
</example_result>
</object>

<object id=2795> 
<name>ibase_commit_ret</name>
<versions>(PHP 5)</versions>
<short-description>Commit a transaction without closing it</short-description>
<description>bool ibase_commit_ret ([ resource $link_or_trans_identifier = NULL ] ) 
 Commits a transaction without closing it. </description>
<parameters>link_or_trans_identifier - If called without an argument, this function commits the default transaction of the default link. If the argument is a connection identifier, the default transaction of the corresponding connection will be committed. If the argument is a transaction identifier, the corresponding transaction will be committed. The transaction context will be retained, so statements executed from within this transaction will not be invalidated. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2796> 
<name>hw_Identify</name>
<versions>(PHP 4)</versions>
<short-description>Identifies as user</short-description>
<description>string hw_identify ( int $link , string $username , string $password ) 
 Identifies as user with username and password. Identification is only valid for the current session. I do not think this function will be needed very often. In most cases it will be easier to identify with the opening of the connection. </description>
<parameters>link - The connection identifier. 
username - The username. 
password - The password. </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2797> 
<name>PDF_arc</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Рисует дугу окружности против часовой стрелки</short-description>
<description>bool PDF_arc ( resource $p , float $x , float $y , float $r , float $alpha , float $beta ) 
 Рисует дугу окружности против часовой стрелки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2798> 
<name>pack</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Упаковывает данные в бинарную строку</short-description>
<description>string pack ( string $format [, mixed $args [, mixed $... ]] ) 
 Упаковывает заданные аргументы в бинарную строку согласно формату в параметре format. 
 Идея этой функции была заимствована из Perl и все коды форматирования работают также. Однако, есть некоторые отсутствующие коды форматирования, как, к примеру, код формата Perl "u". 
 Необходимо иметь ввиду, что отличие между знаковыми и беззнаковыми значениями влияет только на unpack() функцию, тогда как функция pack() дает одинаковый результат для знаковых и беззнаковых кодов формата. </description>
<parameters>format - Параметр format задается в виде строки и состоит из кодов формата и опционального аргумента повторения. Аргумент может быть целочисленным, либо * для повторения до конца введенных данных. Для a, A, h, H число повторений определяет то, сколько символов взято от одного аргумента данных, для @ - это абсолютная позиция для размещения следующих данных, для всего остального число повторений определяет как много аргументов данных было обработано и упаковано в результирующую бинарную строку. 
args - </parameters>
<output>Возвращает бинарную строку, содержащую данные. </output>
<errors></errors>
<example><?php
$binarydata = pack("nvc*", 0x1234, 0x5678, 65, 66);
?></example>
<example_result></example_result>
</object>

<object id=2799> 
<name>openssl_csr_get_public_key</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Returns the public key of a CERT</short-description>
<description>resource openssl_csr_get_public_key ( mixed $csr [, bool $use_shortnames = true ] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2800> 
<name>stream_bucket_prepend</name>
<versions>(PHP 5)</versions>
<short-description>Prepend bucket to brigade </short-description>
<description>void stream_bucket_prepend ( resource $brigade , resource $bucket ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2801> 
<name>hw_Who</name>
<versions>(PHP 4)</versions>
<short-description>List of currently logged in users</short-description>
<description>array hw_who ( int $connection ) 
 Gets the list of currently logged in users. </description>
<parameters>connection - The connection identifier. </parameters>
<output>Returns an array of users currently logged into the Hyperwave server. Each entry in this array is an array itself containing the elements id, name, system, onSinceDate, onSinceTime, TotalTime and self. &#039;self&#039; is 1 if this entry belongs to the user who initiated the request. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2802> 
<name>msql_num_fields</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get number of fields in result</short-description>
<description>int msql_num_fields ( resource $result ) 
 msql_num_fields() returns the number of fields in a result set. </description>
<parameters>result - Обрабатываемый результат запроса,полученный с помощью функции msql_query().</parameters>
<output>Returns the number of fields in the result set. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2803> 
<name>XMLWriter::writeAttribute</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Записать полный атрибут</short-description>
<description>bool XMLWriter::writeAttribute ( string $name , string $value ) 
 Процедурный стиль bool xmlwriter_write_attribute ( resource $xmlwriter , string $name , string $value )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
name - Имя атрибута. 
value - Значение атрибута. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2804> 
<name>swf_lookat</name>
<versions>(PHP 4)</versions>
<short-description>Define a viewing transformation</short-description>
<description>void swf_lookat ( float $view_x , float $view_y , float $view_z , float $reference_x , float $reference_y , float $reference_z , float $twist ) 
 Defines a viewing transformation by giving the viewing position and the coordinates of a reference point in the scene. </description>
<parameters>view_x - x-coordinate for the viewing position 
view_y - y-coordinate for the viewing position 
view_z - z-coordinate for the viewing position 
reference_x - x-coordinate for the reference point 
reference_y - y-coordinate for the reference point 
reference_z - z-coordinate for the reference point 
twist - Controls the rotation along with viewer&#039;s z axis. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
header('Content-type: application/x-shockwave-flash');
swf_openfile("php://stdout", 320, 200, 25, 1, 1, 1);
swf_ortho(-100, 100, -100, 100, -100, 100); // create 3D coordinates
swf_definefont(0, "Pix3");
swf_addcolor(0, 0, 0, 1);
swf_fontsize(10);
swf_fonttracking(0.2);
for ($i = 0; $i < 628; $i += 8) {
    $j = $i / 100;
    swf_pushmatrix();
    swf_translate(0, 0, 0);
    swf_perspective(100, 1, 0, 10);
    swf_lookat(sin($j) * 60, 50, cos($j) * 60, 0, 0, 0, 0);
    swf_definetext (1, 'HotKey@', 0);
    swf_translate(-50,0,0);
    swf_placeobject(1,10);
    swf_definetext(2, 'example.com', 0);
    swf_translate(55, 0, 0);
    swf_placeobject(2, 11);
    swf_showframe();
    swf_removeobject(10);
    swf_removeobject(11);
    swf_popmatrix();
}
swf_closefile();
?></example>
<example_result></example_result>
</object>

<object id=2805> 
<name>odbc_execute</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Execute a prepared statement</short-description>
<description>bool odbc_execute ( resource $result_id [, array $parameters_array ] ) 
 Executes a statement prepared with odbc_prepare(). </description>
<parameters>result_id - The result id resource, from odbc_prepare(). 
parameters_array - Parameters in parameter_array will be substituted for placeholders in the prepared statement in order. Elements of this array will be converted to strings by calling this function. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example>
 $success will only be TRUE if all three parameters to myproc are IN parameters: </example>
<example_result></example_result>
</object>

<object id=2806> 
<name>gzgets</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает строку из gz-файла</short-description>
<description>string gzgets ( resource $zp , int $length ) 
 Возвращает строку (после распаковки) из gz-файла, её длина ограничивается length - 1 байтами. Чтение заканчивается при достижении максимальной длины, конца строки или конца файла (EOF). </description>
<parameters>zp - Указатель на gz-файл, возвращённый, после его успешного открытия, функцией gzopen(). 
length - Максимальный размер возвращаемых данных. </parameters>
<output>Распакованная строка или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$handle = gzopen('somefile.gz', 'r');
while (!gzeof($handle)) {
   $buffer = gzgets($handle, 4096);
   echo $buffer;
}gzclose($handle);
?></example>
<example_result></example_result>
</object>

<object id=2807> 
<name>gmp_clrbit</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Сброс бита</short-description>
<description>void gmp_clrbit ( resource $a , int $index ) 
 Сбрасывает (устанавливает в 0) бит на позиции index аргумента a. Индексация начинается с 0. </description>
<parameters>a - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.
index - Может быть какчислом GMP, так и строкой,при условии, что ее значение можно конвертировать в число.</parameters>
<output>Число GMP. </output>
<errors></errors>
<example><?php
    $a = gmp_init("0xff");
    gmp_clrbit($a, 0); // индексация с 0, младший значащий бит
    echo gmp_strval($a) . "\n";
    ?></example>
<example_result>
 
 254
    </example_result>
</object>

<object id=2808> 
<name>grapheme_strlen</name>
<versions>(PHP 5 >= 5.3.0, PECL intl >= 1.0.0)</versions>
<short-description>Get string length in grapheme units</short-description>
<description>int grapheme_strlen ( string $input ) 
 Get string length in grapheme units (not bytes or characters) </description>
<parameters>input - The string being measured for length. It must be a valid UTF-8 string. </parameters>
<output>The length of the string on success, and 0 if the string is empty. </output>
<errors></errors>
<example><?php
$char_a_ring_nfd = "a\xCC\x8A";  // 'LATIN SMALL LETTER A WITH RING ABOVE' (U+00E5) normalization form "D"
$char_o_diaeresis_nfd = "o\xCC\x88"; // 'LATIN SMALL LETTER O WITH DIAERESIS' (U+00F6) normalization form "D"
print grapheme_strlen( 'abc' . $char_a_ring_nfd . $char_o_diaeresis_nfd . $char_a_ring_nfd);
?></example>
<example_result>
 
6
</example_result>
</object>

<object id=2809> 
<name>enchant_dict_add_to_personal</name>
<versions>(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )</versions>
<short-description>add a word to personal word list</short-description>
<description>void enchant_dict_add_to_personal ( resource $dict , string $word ) 
 Add a word to personal word list of the given dictionary. </description>
<parameters>dict - Dictionary resource 
word - The word to add </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2810> 
<name>ncurses_standout</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Start using &#039;standout&#039; attribute </short-description>
<description>int ncurses_standout ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2811> 
<name>xml_parser_get_option</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получение значения настройки XML анализатора </short-description>
<description>mixed xml_parser_get_option ( resource $parser , int $option ) 
 Получает значение настройки XML анализатора. </description>
<parameters></parameters>
<output>Эта функция возвращает FALSE, если parser ссылается на недопустимый анализатор или если option имеет недопустимое значение (в этом случает выбрасывается предупреждение E_WARNING). В остальных случаях возвращается значение настройки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2812> 
<name>ncurses_getmaxyx</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Returns the size of a window</short-description>
<description>void ncurses_getmaxyx ( resource $window , int &$y , int &$x ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>window - The measured window 
y - This will be set to the window height 
x - This will be set to the window width </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2813> 
<name>ftp_nlist</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает список файлов в заданной директории</short-description>
<description>array ftp_nlist ( resource $ftp_stream , string $directory ) </description>
<parameters>ftp_stream - Идентификатор соединения с FTP сервером. 
directory - Имя директории для получения списка файлов. Этот параметр также может включать аргументы, например ftp_nlist($conn_id, "-la /your/dir"); Обратите внимание, что этот параметр не проходит экранирование спецсимволов, так что могут возникнуть проблемы с именами, содержащими пробелы и прочие подобные символы. </parameters>
<output>Возвращает массив имён файлов в директории или FALSE при возникновении ошибки. </output>
<errors></errors>
<example><?php
// установка соединения
$conn_id = ftp_connect($ftp_server);
// проверка имени пользователя и пароля
$login_result = ftp_login($conn_id, $ftp_user_name, $ftp_user_pass);
// получить содержимое текущей директории
$contents = ftp_nlist($conn_id, ".");
// вывод $contents
var_dump($contents);
?></example>
<example_result>
 
array(3) {
  [0]=>
  string(11) "public_html"
  [1]=>
  string(10) "public_ftp"
  [2]=>
  string(3) "www"
</example_result>
</object>

<object id=2814> 
<name>ldap_first_entry</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвратить первый идентификатор результата first result id</short-description>
<description>resource ldap_first_entry ( resource $link_identifier , resource $result_identifier ) 
 Возвращает идентификатор для первой записи в результате. Этот идентификатор затем используется в функции ldap_next_entry(), для последовательного получения записей из результата. 
 Записи в LDAP результате считываются последовательно используя функции ldap_first_entry() и ldap_next_entry(). </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
result_identifier - </parameters>
<output>Возвращает результирующий идентификатор для первой записи в случае успеха и FALSE в случае ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2815> 
<name>ldap_errno</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвратить номер ошибки LDAP последней команды</short-description>
<description>int ldap_errno ( resource $link_identifier ) 
 Возвращает стандартизированный код ошибки, возвращенный последней командой LDAP. Это число может быть преобразовано в текстовое сообщение об ошибке, используя ldap_err2str(). </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). </parameters>
<output>Возвращает код ошибки LDAP последней команды для этой ссылки. </output>
<errors></errors>
<example><?php
// Этот пример содержит ошибку, которую мы поймаем
$ld = ldap_connect("localhost");
$bind = ldap_bind($ld);
// синтаксическая ошибка в выражении фильтра (errno 87),
// должно быть "objectclass=*" для того, чтобы это работало.
$res =  @ldap_search($ld, "o=Myorg, c=DE", "objectclass");
if (!$res) {
    echo "LDAP-Errno: " . ldap_errno($ld) . "<br />\n";
    echo "LDAP-Error: " . ldap_error($ld) . "<br />\n";
    die("Argh!<br />\n");
}$info = ldap_get_entries($ld, $res);
echo $info["count"] . " подходящих записей.<br />\n";
?></example>
<example_result></example_result>
</object>

<object id=2816> 
<name>imagecolorresolve</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает идентификатор конкретного цвета или его ближайший аналог</short-description>
<description>int imagecolorresolve ( resource $image , int $red , int $green , int $blue ) 
 Эта функция обязательно вернет идентификатор цвета для выбранного цвета, либо ближайшую возможную его альтернативу. 
 Если изображение было создано из файла, то будут распознаны только цвета, используемые в изображении. Цвета, которые используются только в палитре, распознаны не будут. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
red - Значение красного компонента цвета.
green - Значение зеленого компонента цвета.
blue - Значение синего компонента цвета.</parameters>
<output>Возвращает цветовой идентификатор. </output>
<errors></errors>
<example><?php
// загрузить изображение
$im = imagecreatefromgif('phplogo.gif');
// получить ближайшие цвета на изображении
$colors = array();
$colors[] = imagecolorresolve($im, 255, 255, 255);
$colors[] = imagecolorresolve($im, 0, 0, 200);
// вывод
print_r($colors);
imagedestroy($im);
?></example>
<example_result>
 
Array
(
    [0] => 89
    [1] => 85
)
</example_result>
</object>

<object id=2817> 
<name>openssl_csr_export_to_file</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Exports a CSR to a file</short-description>
<description>bool openssl_csr_export_to_file ( resource $csr , string $outfilename [, bool $notext = true ] ) 
 openssl_csr_export_to_file() takes the Certificate Signing Request represented by csr and saves it as ascii-armoured text into the file named by outfilename. </description>
<parameters>csr - 
outfilename - Path to the output file. 
notext - Необязательный параметр notext влияет на детализацию сообщений вывода; если он установлен в FALSE,то в вывод добавляется дополнительная человекочитаемая информация. Значением по умолчаниюnotext является TRUE.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2818> 
<name>msg_remove_queue</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Destroy a message queue</short-description>
<description>bool msg_remove_queue ( resource $queue ) 
 msg_remove_queue() destroys the message queue specified by the queue. Only use this function when all processes have finished working with the message queue and you need to release the system resources held by it. </description>
<parameters>queue - Message queue resource handle </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2819> 
<name>oci_fetch_object</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Возвращает следующую строку из результата запроса в виде объекта</short-description>
<description>object oci_fetch_object ( resource $statement ) 
 Возвращает объект, содержащий следующую строку из результата запроса. Имена свойств объекта соответствуют именам столбцов в строке. Эта функция обычно вызывается в цикле пока не возвращает FALSE когда больше нет рядов. 
 За подробностями по операции отображения типов данных,осуществляемым расширением OCI8, обратитесь к типам данных, поддерживаемых драйвером </description>
<parameters>statement - Корректный идентификатор выражения OCI8, полученный изoci_parse() и исполненный функцией oci_execute(), или идентификатор выраженияREF CURSOR.</parameters>
<output>Возвращает объект. Каждое свойство объекта соответствуют именам столбцов в строке. Если в результате запроса больше нет рядов, то возвращает FALSE. </output>
<errors></errors>
<example><?php
/*
  Перед запуском создайте таблицу:
    CREATE TABLE mytab (id NUMBER, description VARCHAR2(30));
    INSERT INTO mytab (id, description) values (1, 'Fish and Chips');
    COMMIT;
*/
$conn = oci_connect('hr', 'welcome', 'localhost/XE');
if (!$conn) {
    $e = oci_error();
    trigger_error(htmlentities($e['message'], ENT_QUOTES), E_USER_ERROR);
}
$stid = oci_parse($conn, 'SELECT id, description FROM mytab');
oci_execute($stid);
while (($row = oci_fetch_object($stid))) {
    // Используйте имена атрибутов в верхнем регистре 
для каждого столбца Oracle
    echo $row->ID . "<br>\n";
    echo $row->DESCRIPTION . "<br>\n"; 
}
// Выведет:
//    1
//    Fish and Chips
oci_free_statement($stid);
oci_close($conn);
?></example>
<example_result></example_result>
</object>

<object id=2820> 
<name>readline_completion_function</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Registers a completion function</short-description>
<description>bool readline_completion_function ( callback $function ) 
 This function registers a completion function. This is the same kind of functionality you&#039;d get if you hit your tab key while using Bash. </description>
<parameters>function - You must supply the name of an existing function which accepts a partial command line and returns an array of possible matches. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2821> 
<name>pcntl_exec</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Executes specified program in current process space</short-description>
<description>void pcntl_exec ( string $path [, array $args [, array $envs ]] ) 
 Executes the program with the given arguments. </description>
<parameters>path - path must be the path to a binary executable or a script with a valid path pointing to an executable in the shebang ( #!/usr/local/bin/perl for example) as the first line. See your system&#039;s man execve(2) page for additional information. 
args - args is an array of argument strings passed to the program. 
envs - envs is an array of strings which are passed as environment to the program. The array is in the format of name => value, the key being the name of the environmental variable and the value being the value of that variable. </parameters>
<output>Returns FALSE on error and does not return on success. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2822> 
<name>mssql_data_seek</name>
<versions>(PHP 4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Moves internal row pointer</short-description>
<description>bool mssql_data_seek ( resource $result_identifier , int $row_number ) 
 mssql_data_seek() moves the internal row pointer of the MS SQL result associated with the specified result identifier to point to the specified row number, first row being number 0. The next call to mssql_fetch_row() would return that row. </description>
<parameters>result_identifier - The result resource that is being evaluated. 
row_number - The desired row number of the new result pointer. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Connect to MSSQL and select the database
$link = mssql_connect('MANGO\SQLEXPRESS', 'sa', 'phpfi');
mssql_select_db('php', $link);
// Select all people
$result = mssql_query('SELECT [name], [age] FROM [persons] WHERE [age] >= 13');
if (!$result) {
    die('Query failed.');
}
// Select every 4th student in the results
for ($i = mssql_num_rows($result) - 1; $i % 4; $i++) {
    if (!mssql_data_seek($result, $i)) {
        continue;
    }
    // Fetch the row ...
}
// Free the query result
mssql_free_result($result);
?></example>
<example_result></example_result>
</object>

<object id=2823> 
<name>array_udiff_assoc</name>
<versions>(PHP 5)</versions>
<short-description>Вычисляет расхождение в массивах с дополнительной проверкой индексов, используя для сравнения значений callback-функцию</short-description>
<description>array array_udiff_assoc ( array $array1 , array $array2 [, array $ ... ], callback $data_compare_func ) 
 Вычисляет расхождение массивов с дополнительной проверкой индексов, используя для сравнения значений callback-функцию. 
 Замечание: Пожалуйста, обратите внимание, что эта функция обрабатывает только одно измерение многомерного массива. Разумеется, вы можете обработать более одного измерения, используя, например, array_udiff_assoc($array1[0], $array2[0], "some_comparison_func");. </description>
<parameters>array1 - Первый массив. 
array2 - Второй массив. 
data_compare_func - Callback-функция, используемая для сравнения. </parameters>
<output>array_udiff_assoc() возвращает array, содержащий все элементы array1, которых нет в каком-либо из всех остальных аргументов. Обратите внимание, что в отличие от array_diff() и array_udiff() в сравнении используются ключи. Сравнение данных массива производится с помощью callback-функции, предоставленной пользователем. В этом смысле, поведение этой функции отличается от array_diff_assoc(), которая используется встроенную функцию для сравнения. </output>
<errors></errors>
<example><?php
class cr {
    private $priv_member;
    function cr($val)
    {
        $this->priv_member = $val;
    }
    static function comp_func_cr($a, $b)
    {
        if ($a->priv_member === $b->priv_member) return 0;
        return ($a->priv_member > $b->priv_member)? 1:-1;
    }
}
$a = array("0.1" => new cr(9), "0.5" => new cr(12), 0 => new cr(23), 1=> new cr(4), 2 => new cr(-15),);
$b = array("0.2" => new cr(9), "0.5" => new cr(22), 0 => new cr(3), 1=> new cr(4), 2 => new cr(-15),);
$result = array_udiff_assoc($a, $b, array("cr", "comp_func_cr"));
print_r($result);
?></example>
<example_result>
 
Array
(
    [0.1] => cr Object
        (
            [priv_member:private] => 9
        )

    [0.5] => cr Object
        (
            [priv_member:private] => 12
        )

    [0] => cr Object
        (
            [priv_member:private] => 23
        )
)
</example_result>
</object>

<object id=2824> 
<name>rawurldecode</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Декодирование URL-кодированной строки</short-description>
<description>string rawurldecode ( string $str ) 
 Возвращает строку, в которой последовательность знаков процента (%) и следующие за ним два шестнадцатеричных числа заменены буквенными символами. </description>
<parameters>str - URL, который должен быть декодирован. </parameters>
<output>Возвращает декодированный URL в виде строки. </output>
<errors></errors>
<example><?php
echo rawurldecode('foo%20bar%40baz'); // foo bar@baz
?></example>
<example_result></example_result>
</object>

<object id=2825> 
<name>mhash</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Computes hash</short-description>
<description>string mhash ( int $hash , string $data [, string $key ] ) 
 mhash() applies a hash function specified by hash to the data. </description>
<parameters>hash - The hash ID. One of the MHASH_hashname constants. 
data - The user input, as a string. 
key - If specified, the function will return the resulting HMAC instead. HMAC is keyed hashing for message authentication, or simply a message digest that depends on the specified key. Not all algorithms supported in mhash can be used in HMAC mode. </parameters>
<output>Returns the resulting hash (also called digest) or HMAC as a string, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2826> 
<name>ifx_free_char</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Deletes the char object</short-description>
<description>bool ifx_free_char ( int $bid ) 
 Deletes the charobject for the given char object-id. </description>
<parameters>bid - The char object id. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2827> 
<name>odbc_exec</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Prepare and execute an SQL statement</short-description>
<description>resource odbc_exec ( resource $connection_id , string $query_string [, int $flags ] ) 
 Sends an SQL statement to the database server. </description>
<parameters>connection_id - Идентификатор соединения ODBC,за подробностями обращайтесь к odbc_connect().
query_string - The SQL statement. 
flags - This parameter is currently not used. </parameters>
<output>Returns an ODBC result identifier if the SQL command was executed successfully, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2828> 
<name>readline_on_new_line</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Inform readline that the cursor has moved to a new line</short-description>
<description>void readline_on_new_line ( void ) 
 Tells readline that the cursor has moved to a new line. </description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2829> 
<name>max</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает наибольшее значение</short-description>
<description>mixed max ( array $values ) mixed max ( mixed $value1 , mixed $value2 [, mixed $value3... ] )</description>
<parameters>values - Массив с данными. </parameters>
<output>max() вернет значение наибольшего из элементов массива. Если несколько параметров имеют одинаковое значение - будет возвращено значение того, который был указан первым. </output>
<errors></errors>
<example><?php
echo max(1, 3, 5, 6, 7);  // 7
echo max(array(2, 4, 5)); // 5
// 'hello' будет представлено как числое значение значение 0.
// Оба параметра имеют одинаковое значение, поэтому результат
// определяется порядком, в котором параметры переданы 
echo max(0, 'hello');     // 0
echo max('hello', 0);     // hello
echo max('42', 3); // '42'
// В данном случае 0 больше, чем -1, поэтому результат равен 'hello'.
echo max(-1, 'hello');    // hello
// При сравнении массивов, разной длины - max вернет более длинный
$val = max(array(2, 2, 2), array(1, 1, 1, 1)); // array(1, 1, 1, 1)
// При сравнении массивов одинаковой длины - max будет сравнивать их поэлементно
// слева направо, в данном примере 2 == 2, но 4 < 5
$val = max(array(2, 4, 8), array(2, 5, 7)); // array(2, 5, 7)
// Если передан массив и не массив, в результате всегда будет возвращен массив
$val = max('string', array(2, 5, 7), 42);   // array(2, 5, 7)
?></example>
<example_result></example_result>
</object>

<object id=2830> 
<name>ftell</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сообщает текущую позицию чтения/записи файла</short-description>
<description>int ftell ( resource $handle ) 
 Возвращает позицию файлового указателя handle. </description>
<parameters>handle - Файловый указатель должен быть действующим указателем на поток, открытый функциями fopen() или popen(). ftell() возвращает неопределённые результаты для потоков, разрешающих только запись в конец (открытых с флагом "a"). </parameters>
<output>Возвращает позицию файлового указателя handle в виде целого числа, т.е. его смещение в файловом потоке. </output>
<errors></errors>
<example><?php
// открываем файл и читаем немного данных
$fp = fopen("/etc/passwd", "r");
$data = fgets($fp, 12);
// где же мы ?
echo ftell($fp); // 11
fclose($fp);
?></example>
<example_result></example_result>
</object>

<object id=2831> 
<name>enchant_dict_store_replacement</name>
<versions>(PHP 5 >= 5.3.0, PECL enchant >= 0.1.0 )</versions>
<short-description>Add a correction for a word</short-description>
<description>void enchant_dict_store_replacement ( resource $dict , string $mis , string $cor ) 
 Add a correction for &#039;mis&#039; using &#039;cor&#039;. Notes that you replaced @mis with @cor, so it&#039;s possibly more likely that future occurrences of @mis will be replaced with @cor. So it might bump @cor up in the suggestion list. </description>
<parameters>dict - Dictionary resource 
mis - The work to fix 
cor - The correct word </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2832> 
<name>strcoll</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Сравнение строк с учетом текущей локали</short-description>
<description>int strcoll ( string $str1 , string $str2 ) 
 Обратите внимание, что эта функция учитывает регистр символов, и, в отличие от strcmp() не безопасна для обработки данных в двоичной форме. 
 strcoll() при сравнении использует установки текущей локали. Если установлена локаль C или POSIX, эта функция аналогична strcmp(). </description>
<parameters>str1 - Первая строка. 
str2 - Вторая строка. </parameters>
<output>Возвращает отрицательное число, если str1 меньше, чем str2, положительное число, если str1 больше, чем str2, и 0, если они равны. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2833> 
<name>socket_shutdown</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Shuts down a socket for receiving, sending, or both</short-description>
<description>bool socket_shutdown ( resource $socket [, int $how = 2 ] ) 
 The socket_shutdown() function allows you to stop incoming, outgoing or all data (the default) from being sent through the socket </description>
<parameters>socket - A valid socket resource created with socket_create(). 
how - The value of how can be one of the following: possible values for how 0 Shutdown socket reading 1 Shutdown socket writing 2 Shutdown socket reading and writing </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2834> 
<name>apache_get_version</name>
<versions>(PHP 4 >= 4.3.2, PHP 5)</versions>
<short-description>Возвращает версию Apache</short-description>
<description>string apache_get_version ( void ) 
 Возвращает версию Apache. </description>
<parameters></parameters>
<output>Возвращает версию Apache или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$version = apache_get_version();
echo "$version\n";
?></example>
<example_result>
 
Apache/1.3.29 (Unix) PHP/4.3.4 
</example_result>
</object>

<object id=2835> 
<name>array_walk</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Применяет пользовательскую функцию к каждому элементу массива</short-description>
<description>bool array_walk ( array &$array , callback $funcname [, mixed $userdata ] ) 
 Применяет пользовательскую функцию funcname к каждому элементу массива array. 
 array_walk() не подвержена влиянию внутреннего указателя массива array. array_walk() обойдёт все элементы массива независимо от позиции указателя. </description>
<parameters>array - Входной массив. 
funcname - Обычно функция funcname принимает два параметра. В качестве первого параметра идет значение элемента массива array, а ключ - в качестве второго. 
userdata - Если указан необязательный параметр userdata, он будет передан в качестве третьего параметра в callback-функцию funcname. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors>Если функция funcname требует больше параметров, чем передано на самом деле, каждый раз, когда array_walk() будет вызывать funcname, будет генерироваться ошибка уровня E_WARNING. Эти предупреждения могут быть подавлены добавлением оператора управления ошибками PHP @ в вызов array_walk(), или использованием error_reporting(). </errors>
<example><?php
$fruits = array("d" => "lemon", "a" => "orange", "b" => "banana", "c" => "apple");
function test_alter(&$item1, $key, $prefix)
{    $item1 = "$prefix: $item1";
}
function test_print($item2, $key)
{    echo "$key. $item2<br />\n";
}
echo "До ...:\n";
array_walk($fruits, 'test_print');
array_walk($fruits, 'test_alter', 'fruit');
echo "... и после:\n";
array_walk($fruits, 'test_print');
?></example>
<example_result>
 
До ...:
d. lemon
a. orange
b. banana
c. apple
... и после:
d. fruit: lemon
a. fruit: orange
b. fruit: banana
c. fruit: apple
</example_result>
</object>

<object id=2836> 
<name>pg_lo_tell</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает текущее положение внутреннего указателя большого объекта </short-description>
<description>int pg_lo_tell ( resource $large_object ) 
 pg_lo_tell() возвращает текущую позицию (отступ от начала) внутреннего указателя большого объекта. 
 Операции с использованием интерфейса больших объектов необходимо заключать в блок транзакции. </description>
<parameters>large_object - Ресурс большого объекта (LOB) PostgreSQL, возвращаемый функцией pg_lo_open(). </parameters>
<output>Текущая позиция внутреннего указателя (количество байт от начала) большого объекта. В случае ошибки функция вернет отрицательное значение. </output>
<errors></errors>
<example><?php
   $doc_oid = 189762345;
   $database = pg_connect("dbname=jacarta");
   pg_query($database, "begin");
   $handle = pg_lo_open($database, $doc_oid, "r");
   // Пропустить первые 50000 байт
   pg_lo_seek($handle, 50000, PGSQL_SEEK_SET);
   // Проверим, на сколько мы отступили
   $offset = pg_lo_tell($handle);
   echo "Seek position is: $offset";
   pg_query($database, "commit");
?></example>
<example_result>
 
Seek position is: 50000
</example_result>
</object>

<object id=2837> 
<name>imageloadfont</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Load a new font</short-description>
<description>int imageloadfont ( string $file ) 
 imageloadfont() loads a user-defined bitmap and returns its identifier. </description>
<parameters>file - The font file format is currently binary and architecture dependent. This means you should generate the font files on the same type of CPU as the machine you are running PHP on. </parameters>
<output>The font identifier which is always bigger than 5 to avoid conflicts with built-in fonts or FALSE on errors. </output>
<errors></errors>
<example><?php
// Create a new image instance
$im = imagecreatetruecolor(50, 20);
$black = imagecolorallocate($im, 0, 0, 0);
$white = imagecolorallocate($im, 255, 255, 255);
// Make the background white
imagefilledrectangle($im, 0, 0, 49, 19, $white);
// Load the gd font and write 'Hello'
$font = imageloadfont('./04b.gdf');
imagestring($im, $font, 0, 0, 'Hello', $black);
// Output to browser
header('Content-type: image/png');
imagepng($im);
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=2838> 
<name>closelog</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Завершает соединение с системным журналом</short-description>
<description>bool closelog ( void ) 
 Функция closelog() закрывает дескриптор, используемый для записи в системный журнал. Использование closelog() не является обязательным. </description>
<parameters></parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2839> 
<name>swf_getfontinfo</name>
<versions>(PHP 4)</versions>
<short-description>Gets font information</short-description>
<description>array swf_getfontinfo ( void ) 
 Gets information about the font by giving the height in pixels of a capital A and a lowercase x. </description>
<parameters></parameters>
<output>Returns an associative array with the following parameters: Aheight - The height in pixels of a capital A. xheight - The height in pixels of a lowercase x. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2840> 
<name>pspell_config_repl</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Устанавливает файл, содержащий замещающие пары</short-description>
<description>bool pspell_config_repl ( int $dictionary_link , string $file ) 
 Устанавливает файл, содержащий замещающие пары. 
 Замещающие пары повышают качество проверки орфографии. Когда слово написано с ошибками, а правильный вариант не найден в списке, pspell_store_replacement() может быть использована для того, чтобы сохранить замещающую пару, а pspell_save_wordlist() - чтобы сохранить список слов вместе с замещающими парами. 
 pspell_config_repl() должна быть использована для конфигурации до вызова pspell_new_config(). </description>
<parameters>dictionary_link - 
file - Файл должен быть доступен для записи любому, кто запускает PHP (например, nobody). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$pspell_config = pspell_config_create("en");
pspell_config_personal($pspell_config, "/var/dictionaries/custom.pws");
pspell_config_repl($pspell_config, "/var/dictionaries/custom.repl");
$pspell_link = pspell_new_config($pspell_config);
pspell_check($pspell_link, "thecat");
?></example>
<example_result></example_result>
</object>

<object id=2841> 
<name>m_responsekeys</name>
<versions>(PHP 5 >= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Returns array of strings which represents the keys that can be used for response parameters on this transaction</short-description>
<description>array m_responsekeys ( resource $conn , int $identifier ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
identifier - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2842> 
<name>pg_put_line</name>
<versions>(PHP 4 >= 4.0.3, PHP 5)</versions>
<short-description>Передает на PostgreSQL сервер строку с завершающим нулем</short-description>
<description>bool pg_put_line ([ resource $connection ], string $data ) 
 pg_put_line() передает на PostgreSQL сервер строку с завершающим нулем. Завершение строки значением NULL необходимо при ее объединении с командой PostgreSQL COPY FROM. 
 COPY является высокоскоростным интерфейсом передачи данных, поддерживаемым PostgreSQL. Данные передаются одной транзакцией и не разбираются парсером. 
 В качестве альтернативы можно использовать функцию pg_copy_from(). Она значительно проще в использовании. 
 Замечание: 
 Перед запуском функции pg_end_copy() приложение должно сообщить о серверу о завершении передачи данных, добавив в конец последней строки символы "\.". Внимание 
 Использование pg_put_line() может привести к отказу операций с большими объектами, включающих функции pg_lo_read() и pg_lo_tell(). Для этих целей используйте функции pg_copy_from() и pg_copy_to(). </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). 
data - Текстовая строка для прямой пересылки на сервер. Завершающий NULL добавляется автоматически. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php 
  $conn = pg_pconnect("dbname=foo");
  pg_query($conn, "create table bar (a int4, b char(16), d float8)");
  pg_query($conn, "copy bar from stdin");
  pg_put_line($conn, "3\thello world\t4.5\n");
  pg_put_line($conn, "4\tgoodbye world\t7.11\n");
  pg_put_line($conn, "\\.\n");
  pg_end_copy($conn);
?></example>
<example_result></example_result>
</object>

<object id=2843> 
<name>decbin</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Переводит число из десятичной системы счисления в двоичную</short-description>
<description>string decbin ( int $number ) 
 Возвращает строку, содержащую двоичное представление указанного аргумента number. </description>
<parameters>number - Десятичное число для преобразования </parameters>
<output>Бинарное строковое представление number </output>
<errors></errors>
<example><?php
echo decbin(12) . "\n";
echo decbin(26);
?></example>
<example_result>
 
1100
11010
</example_result>
</object>

<object id=2844> 
<name>quotemeta</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Экранирует специальные символы</short-description>
<description>string quotemeta ( string $str ) 
 Возвращает модифицированную строку, в которой перед каждым символом из следующего списка: . \ + * ? [ ^ ] ( $ )</description>
<parameters>str - Входная строка. </parameters>
<output>Возвращает экранированную строку, или FALSE, если в качестве параметра str была указана пустая строка. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2845> 
<name>PDF_get_parameter</name>
<versions>(PHP 4 >= 4.0.1, PECL pdflib >= 1.0.0)</versions>
<short-description>Get string parameter</short-description>
<description>string PDF_get_parameter ( resource $p , string $key , float $modifier ) 
 Gets the contents of some PDFlib parameter with string type. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2846> 
<name>hypot</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Рассчитывает длину гипотенузы прямоугольного треугольника </short-description>
<description>float hypot ( float $x , float $y ) 
 hypot() возвращает длину гипотенузы прямоугольного треугольника с длинами сторон x и y, или расстояние точки (x, y) до начала координат Эквивалентно sqrt(x*x + y*y). </description>
<parameters>x - Длина первой стороны 
y - Длина второй стороны </parameters>
<output>Вычисленная длина гипотенузы </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2847> 
<name>m_maxconntimeout</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>The maximum amount of time the API will attempt a connection to MCVE</short-description>
<description>bool m_maxconntimeout ( resource $conn , int $secs ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
secs - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2848> 
<name>imap_status</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Returns status information on a mailbox</short-description>
<description>object imap_status ( resource $imap_stream , string $mailbox , int $options ) 
 Gets status information about the given mailbox. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
mailbox - The mailbox name, see imap_open() for more information 
options - Valid flags are: SA_MESSAGES - set $status->messages to the number of messages in the mailbox SA_RECENT - set $status->recent to the number of recent messages in the mailbox SA_UNSEEN - set $status->unseen to the number of unseen (new) messages in the mailbox SA_UIDNEXT - set $status->uidnext to the next uid to be used in the mailbox SA_UIDVALIDITY - set $status->uidvalidity to a constant that changes when uids for the mailbox may no longer be valid SA_ALL - set all of the above </parameters>
<output>This function returns an object containing status information. The object has the following properties: messages, recent, unseen, uidnext, and uidvalidity. </output>
<errors></errors>
<example><?php
$mbox = imap_open("{imap.example.com}", "username", "password", OP_HALFOPEN)
      or die("can't connect: " . imap_last_error());
$status = imap_status($mbox, "{imap.example.org}INBOX", SA_ALL);
if ($status) {
  echo "Messages:   " . $status->messages    . "<br />\n";
  echo "Recent:     " . $status->recent      . "<br />\n";
  echo "Unseen:     " . $status->unseen      . "<br />\n";
  echo "UIDnext:    " . $status->uidnext     . "<br />\n";
  echo "UIDvalidity:" . $status->uidvalidity . "<br />\n";
} else {
  echo "imap_status failed: " . imap_last_error() . "\n";
}
imap_close($mbox);
?></example>
<example_result></example_result>
</object>

<object id=2849> 
<name>ftp_connect</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Устанавливает соединение с FTP-сервером</short-description>
<description>resource ftp_connect ( string $host [, int $port = 21 [, int $timeout = 90 ]] ) 
 ftp_connect() устанавливает FTP-соединение с указанным сервером host. </description>
<parameters>host - Адрес FTP-сервера. Этот аргумент не должен содержать слэшей в конце и префикса ftp:// в начале. 
port - Этот аргумент указывает альтернативный порт для подключения. Если он опущен или установлен в ноль, то будет использован FTP порт по умолчанию - 21. 
timeout - Этот аргумент указывает таймаут для всех последующих сетевых операций. Если опущен, используется значение по умолчанию, равное 90 секундам. Таймаут может быть изменён и получен в любой момент при помощи функций ftp_set_option() и ftp_get_option() соответственно. </parameters>
<output>Возвращает поток FTP в случае успешного выполнения или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$ftp_server = "ftp.example.com";
// устанавливает соединение или выходит
$conn_id = ftp_connect($ftp_server) or die("Не удалось установить соединение с $ftp_server"); 
?></example>
<example_result></example_result>
</object>

<object id=2850> 
<name>highlight_string</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Подсветка синтаксиса строки</short-description>
<description>mixed highlight_string ( string $str [, bool $return = false ] ) 
 Выводит или возвращает PHP код с подсвеченным синтаксисом, используя цвета, определенные во встроенном обработчике подсветки синтаксиса PHP. </description>
<parameters>str - Подсвечиваемый PHP код, который должен включать открывающий тег. 
return - При установке этого параметра равным TRUE функция возвращает код с подсветкой синтаксиса. </parameters>
<output>Если параметр return равен TRUE, то, вместо вывода, в виде строки возвращается код с подсветкой синтаксиса. В другом случае возвращает TRUE, либо FALSE при ошибке. </output>
<errors></errors>
<example><?php
highlight_string('<?php phpinfo(); ?>');
?></example>
<example_result>
 
<code><font color="#000000">
<font color="#0000BB"><?php phpinfo</font><font color="#007700">(); </font><font color="#0000BB">?></font>
</font>
</code>
</example_result>
</object>

<object id=2851> 
<name>stream_wrapper_restore</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Восстанавливает ранее разрегистрированную встроенную обёртку</short-description>
<description>bool stream_wrapper_restore ( string $protocol ) 
 Восстанавливает встроенную обёртку, ранее разрегистрированную при помощи stream_wrapper_unregister(). </description>
<parameters>protocol - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2852> 
<name>variant_eqv</name>
<versions>(PHP 5)</versions>
<short-description>Performs a bitwise equivalence on two variants</short-description>
<description>mixed variant_eqv ( mixed $left , mixed $right ) 
 Performs a bitwise equivalence on two variants. </description>
<parameters>left - The left operand. 
right - The right operand. </parameters>
<output>If each bit in left is equal to the corresponding bit in right then TRUE is returned, otherwise FALSE is returned. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2853> 
<name>md5</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает MD5-хэш строки</short-description>
<description>string md5 ( string $str [, bool $raw_output = false ] ) 
 Вычисляет MD5-хэш строки str используя &raquo; алгоритм MD5 RSA Data Security, Inc. и возвращает этот хэш. </description>
<parameters>str - Строка. 
raw_output - Если необязательный аргумент raw_output имеет значение TRUE, то возвращается бинарная строка из 16 символов. </parameters>
<output>Возвращает хэш в виде 32-символьного шестнадцатеричного числа. </output>
<errors></errors>
<example><?php
$str = 'яблоко';
if (md5($str) === '1afa148eb41f2e7103f21410bf48346c') {
    echo "Вам зеленое или красное яблоко?";
}?></example>
<example_result></example_result>
</object>

<object id=2854> 
<name>vpopmail_passwd</name>
<versions>(PHP 4 >= 4.0.5, PECL vpopmail >= 0.2)</versions>
<short-description>Change a virtual user&#039;s password</short-description>
<description>bool vpopmail_passwd ( string $user , string $domain , string $password [, bool $apop ] ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2855> 
<name>usort</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сортирует массив по значениям используя пользовательскую функцию для сравнения элементов</short-description>
<description>bool usort ( array &$array , callback $cmp_function ) 
 Эта функция сортирует элементы массива, используя для сравнения значений callback-функцию, предоставленную пользователем. Используйте эту функцию, если вам нужно отсортировать массив по какому-нибудь необычному признаку. 
 Замечание: 
 Если два элемента исходного массива равны, их порядок в отсортированном массиве неопределён. 
 Замечание: Эта функция присваиваетновые ключи элементам массива.Она удалит все существующие ключи, а не просто переупорядочит их. </description>
<parameters>array - Входной массив. 
cmp_function - Функция, используемая для сравнения, должна возвращать целое число, меньшее, равное или большее нуля, если первый аргумент соответственно меньше, равен или больше второго. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
function cmp($a, $b)
{    if ($a == $b) {
        return 0;
    }
    return ($a < $b) ? -1 : 1;
}
$a = array(3, 2, 5, 6, 1);
usort($a, "cmp");
foreach ($a as $key => $value) {
    echo "$key: $value\n";
}?></example>
<example_result>
 
0: 1
1: 2
2: 3
3: 5
4: 6
</example_result>
</object>

<object id=2856> 
<name>ldap_list</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Одноуровневый поиск</short-description>
<description>resource ldap_list ( resource $link_identifier , string $base_dn , string $filter [, array $attributes [, int $attrsonly [, int $sizelimit [, int $timelimit [, int $deref ]]]]] ) 
 Выполняет поиск для указанного filter в директории в рамках LDAP_SCOPE_ONELEVEL. 
 LDAP_SCOPE_ONELEVEL означает, что поиск должен возвратить только информацию, которая является следующим уровнем ниже base_dn, заданного при вызове. (Эквивалент вводу "ls" и получения списка файлов и папок в текущем рабочем каталоге.) </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
base_dn - Базовое DN для каталога. 
filter - 
attributes - Массив необходимых атрибутов, например, array("mail", "sn", "cn"). Обратите внимание, что "dn" возвращается всегда, независимо от того, какие типы атрибутов требуются. 
attrsonly - Должен быть равен 1, только если требуются типы атрибута. Если установлено 0, то, по умолчанию, выбираются и типы атрибутов и значения атрибута. 
sizelimit - Позволяет ограничить количество выбранных записей. Установка этого параметра как 0 означает, что ограничение отсутствует. 
timelimit - Устанавливает число секунд, ограничивающее процесс поиска. Установка этого параметра как 0 означает, что ограничение отсутствует. 
deref - Определяет, как псевдонимы должны быть обработаны во время поиска. Может быть одним из следующих: LDAP_DEREF_NEVER - (по умолчанию) псевдонимы никогда не разыменовываться. LDAP_DEREF_SEARCHING - псевдонимы должны быть разыменованы во время поиска, но не при определении местоположения базового объекта поиска. LDAP_DEREF_FINDING - псевдонимы должны быть разыменованы при определении местоположения базового объекта, но не во время поиска. LDAP_DEREF_ALWAYS - псевдонимы должны всегда разыменовываться всегда. </parameters>
<output>Возвращает идентификатор результата поиска или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
// $ds верный идентификатор ссылки на сервер директории
$basedn = "o=My Company, c=US";
$justthese = array("ou");
$sr = ldap_list($ds, $basedn, "ou=*", $justthese);
$info = ldap_get_entries($ds, $sr);
for ($i=0; $i < $info["count"]; $i++) {
    echo $info[$i]["ou"][0];
}?></example>
<example_result></example_result>
</object>

<object id=2857> 
<name>pg_fetch_array</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает строку результата в виде массива</short-description>
<description>array pg_fetch_array ( resource $result [, int $row [, int $result_type = PGSQL_BOTH ]] ) 
 pg_fetch_array() возвращает массив, соответствующий выбранной строке (записи). 
 pg_fetch_array() расширенная версия функции pg_fetch_row(). Эта функция способна сохранить данные не только с цифровыми индексами, но и с ассоциативными (имя поля). По умолчанию хранит и те и другие. 
 Замечание: Эта функция устанавливает NULL-поляв значение NULL PHP. 
 pg_fetch_array() выполняется незначительно медленнее чем pg_fetch_row(), но значительно проще в использовании. </description>
<parameters>result - Ресурс результата запроса PostgreSQL, возвращенный функцией pg_query(), pg_query_params() или pg_execute() (и прочих). 
row - Номер строки в result для выборки. Строки пронумерованы с 0 по возрастанию. Если параметр опущен или передан NULL будет выбрана следующая строка. 
result_type - Необязательный параметр для управления типом индексации возвращаемого массива (array). Параметр result_type обязателен и может принимать следующие значения: PGSQL_ASSOC, PGSQL_NUM и PGSQL_BOTH. При указании PGSQL_NUM, pg_fetch_array() вернет массив с цифровыми индексами, в случае PGSQL_ASSOC вернет только ассоциативные индексы, а в случае PGSQL_BOTH (используется по умолчанию) -- цифровые и ассоциативные индексы. </parameters>
<output>Массив (array) с цифровыми индексами (начиная с 0), либо ассоциативнми (по имени поля), либо с обеими типами индексов. Каждое значение в массиве (array) представлено как строка (string). Значение NULL возвращается как NULL. </output>
<errors></errors>
<example><?php 
$conn = pg_pconnect("dbname=publisher");
if (!$conn) {
  echo "Произошла ошибка.\n";
  exit;
}
$result = pg_query($conn, "SELECT author, email FROM authors");
if (!$result) {
  echo "Произошла ошибка.\n";
  exit;
}
$arr = pg_fetch_array($result, 0, PGSQL_NUM);
echo $arr[0] . " <- Row 1 Author\n";
echo $arr[1] . " <- Row 1 E-mail\n";
// С версии PHP 4.1.0 параметр row стал опциональным, 
// для передечи result_type вместо row можно передать NULL.
// Успешные вызовы pg_fetch_array вернут следующий ряд.
$arr = pg_fetch_array($result, NULL, PGSQL_ASSOC);
echo $arr["author"] . " <- Row 2 Author\n";
echo $arr["email"] . " <- Row 2 E-mail\n";
$arr = pg_fetch_array($result);
echo $arr["author"] . " <- Row 3 Author\n";
echo $arr[1] . " <- Row 3 E-mail\n";
?></example>
<example_result></example_result>
</object>

<object id=2858> 
<name>gmp_sub</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Вычитание чисел</short-description>
<description>resource gmp_sub ( resource $a , resource $b ) 
 Вычитает число b из числа a и возвращает результат. </description>
<parameters>a - Уменьшаемое. 
b - Вычитаемое из числа a. </parameters>
<output>Число GMP. </output>
<errors></errors>
<example><?php
$sub = gmp_sub("281474976710656", "4294967296"); // 2^48 - 2^32
echo gmp_strval($sub) . "\n";
?></example>
<example_result>
 
281470681743360
</example_result>
</object>

<object id=2859> 
<name>ibase_field_info</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get information about a field</short-description>
<description>array ibase_field_info ( resource $result , int $field_number ) 
 Returns an array with information about a field after a select query has been run. </description>
<parameters>result - An InterBase result identifier. 
field_number - Field offset. </parameters>
<output>Returns an array with the following keys: name, alias, relation, length and type. </output>
<errors></errors>
<example><?php
$rs = ibase_query("SELECT * FROM tablename");
$coln = ibase_num_fields($rs);
for ($i = 0; $i < $coln; $i++) {
    $col_info = ibase_field_info($rs, $i);
    echo "name: ". $col_info['name']. "\n";
    echo "alias: ". $col_info['alias']. "\n";
    echo "relation: ". $col_info['relation']. "\n";
    echo "length: ". $col_info['length']. "\n";
    echo "type: ". $col_info['type']. "\n";
}?></example>
<example_result></example_result>
</object>

<object id=2860> 
<name>msql_select_db</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Select mSQL database</short-description>
<description>bool msql_select_db ( string $database_name [, resource $link_identifier ] ) 
 msql_select_db() sets the current active database on the server that&#039;s associated with the specified link_identifier. 
 Subsequent calls to msql_query() will be made on the active database. </description>
<parameters>database_name - The database name. 
link_identifier - Соединение mSQL.Если не указан, используется последнее соединение, открытое msql_connect().Если такое соединение не было найдено, функция попытается установить новое, как если бы была вызвана функцияmsql_connect(), и использовать его.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2861> 
<name>variant_fix</name>
<versions>(PHP 5)</versions>
<short-description>Returns the integer portion of a variant</short-description>
<description>mixed variant_fix ( mixed $variant ) 
 Gets the integer portion of a variant. </description>
<parameters>variant - The variant. </parameters>
<output>If variant is negative, then the first negative integer greater than or equal to the variant is returned, otherwise returns the integer portion of the value of variant. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2862> 
<name>bccomp</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сравнение двух чисел произвольной точности </short-description>
<description>int bccomp ( string $left_operand , string $right_operand [, int $scale ] ) 
 Сравнивает left_operand с right_operand и возвращает целочисленный результат. </description>
<parameters>left_operand - Левый операнд в виде строки. 
right_operand - Правый операнд в виде строки. 
scale - Необязательный аргумент scale задает количество цифр после десятичной точки, которое будет участвовать в сравнении. </parameters>
<output>Возвращает 0, если числа равны; 1, если left_operand больше, чем right_operand; -1, если меньше. </output>
<errors></errors>
<example><?php
echo bccomp('1', '2') . "\n";   // -1
echo bccomp('1.00001', '1', 3); // 0
echo bccomp('1.00001', '1', 5); // 1
?></example>
<example_result></example_result>
</object>

<object id=2863> 
<name>ifx_pconnect</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Open persistent Informix connection</short-description>
<description>resource ifx_pconnect ([ string $database [, string $userid [, string $password ]]] ) 
 ifx_pconnect() acts very much like ifx_connect() with two major differences. 
 First, when connecting, the function would first try to find a (persistent) link that&#039;s already open with the same host, username and password. If one is found, an identifier for it will be returned instead of opening a new connection. 
 Second, the connection to the SQL server will not be closed when the execution of the script ends. Instead, the link will remain open for future use (ifx_close() will not close links established by ifx_pconnect()). 
 This type of links is therefore called &#039;persistent&#039;. </description>
<parameters>database - The database name, as a string. 
userid - The username, as a string. 
password - The password, as a string. </parameters>
<output>Returns: valid Informix persistent link identifier on success, or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2864> 
<name>ncurses_wclear</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Clears window</short-description>
<description>int ncurses_wclear ( resource $window ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>window - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2865> 
<name>sem_acquire</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Acquire a semaphore</short-description>
<description>bool sem_acquire ( resource $sem_identifier ) 
 sem_acquire() blocks (if necessary) until the semaphore can be acquired. A process attempting to acquire a semaphore which it has already acquired will block forever if acquiring the semaphore would cause its maximum number of semaphore to be exceeded. 
 After processing a request, any semaphores acquired by the process but not explicitly released will be released automatically and a warning will be generated. </description>
<parameters>sem_identifier - sem_identifier is a semaphore resource, obtained from sem_get(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2866> 
<name>imagefilltoborder</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Flood fill to specific color</short-description>
<description>bool imagefilltoborder ( resource $image , int $x , int $y , int $border , int $color ) 
 imagefilltoborder() performs a flood fill whose border color is defined by border. The starting point for the fill is x, y (top left is 0, 0) and the region is filled with color color. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
x - x-coordinate of start. 
y - y-coordinate of start. 
border - The border color. A color identifier created with imagecolorallocate(). 
color - The fill color. A color identifier created with imagecolorallocate(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Create the image handle, set the background to white
$im = imagecreatetruecolor(100, 100);
imagefilledrectangle($im, 0, 0, 100, 100, imagecolorallocate($im, 255, 255, 255));
// Draw an ellipse to fill with a black border
imageellipse($im, 50, 50, 50, 50, imagecolorallocate($im, 0, 0, 0));
// Set the border and fill colors
$border = imagecolorallocate($im, 0, 0, 0);
$fill = imagecolorallocate($im, 255, 0, 0);
// Fill the selection
imagefilltoborder($im, 50, 50, $border, $fill);
// Output and free memory
header('Content-type: image/png');
imagepng($im);
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=2867> 
<name>PDF_add_locallink</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Add link annotation for current page [deprecated]</short-description>
<description>bool PDF_add_locallink ( resource $pdfdoc , float $lowerleftx , float $lowerlefty , float $upperrightx , float $upperrighty , int $page , string $dest ) 
 Add a link annotation to a target within the current PDF file. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. 
 This function is deprecated since PDFlib version 6, use PDF_create_action() with type=GoTo and PDF_create_annotation() with type=Link instead. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2868> 
<name>filter_id</name>
<versions>(PHP 5 >= 5.2.0)</versions>
<short-description>Возвращает идентификатор, принадлежащий именованному фильтру</short-description>
<description>int filter_id ( string $filtername ) </description>
<parameters>filtername - Имя фильтра. </parameters>
<output>Идентификатор фильтра в случае успеха или FALSE, если фильтр не существует. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2869> 
<name>ncurses_flushinp</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Flush keyboard input buffer </short-description>
<description>bool ncurses_flushinp ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Returns FALSE on success, otherwise TRUE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2870> 
<name>XMLWriter::startDTDElement</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Создать начальный элемент DTD</short-description>
<description>bool XMLWriter::startDTDElement ( string $qualifiedName ) 
 Процедурный стиль bool xmlwriter_start_dtd_element ( resource $xmlwriter , string $qualifiedName )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
qualifiedName - Полностью определенное имя типа документа для создания. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2871> 
<name>cal_to_jd</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Преобразует заданную дату в Юлианское исчисление </short-description>
<description>int cal_to_jd ( int $calendar , int $month , int $day , int $year ) 
 cal_to_jd() расчитывает количество дней с начала Юлианской эпохи до даты в заданном календаре calendar. Список поддерживаемых календарей calendar: CAL_GREGORIAN, CAL_JULIAN, CAL_JEWISH и CAL_FRENCH. </description>
<parameters>calendar - Календарь, из которого будет произведена конвертация, один из: CAL_GREGORIAN, CAL_JULIAN, CAL_JEWISH или CAL_FRENCH. 
month - Месяц в виде числа, разрешенное значение зависит от календаря calendar. 
day - День в виде числа, разрешенное значение зависит от календаря calendar. 
year - Год в виде числа, разрешенное значение зависит от календаря calendar. </parameters>
<output>Число дней в Юлианском исчислении. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2872> 
<name>sem_release</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Release a semaphore</short-description>
<description>bool sem_release ( resource $sem_identifier ) 
 sem_release() releases the semaphore if it is currently acquired by the calling process, otherwise a warning is generated. 
 After releasing the semaphore, sem_acquire() may be called to re-acquire it. </description>
<parameters>sem_identifier - A Semaphore resource handle as returned by sem_get(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2873> 
<name>ming_useconstants</name>
<versions>(PHP 5 <= 5.3.0, PECL ming SVN)</versions>
<short-description>Use constant pool</short-description>
<description>void ming_useconstants ( int $use ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2874> 
<name>sybase_free_result</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Frees result memory</short-description>
<description>bool sybase_free_result ( resource $result ) 
 sybase_free_result() only needs to be called if you are worried about using too much memory while your script is running. All result memory will automatically be freed when the script ends. You may call sybase_free_result() with the result identifier as an argument and the associated result memory will be freed. </description>
<parameters>result - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2875> 
<name>fdf_get_value</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get the value of a field</short-description>
<description>mixed fdf_get_value ( resource $fdf_document , string $fieldname [, int $which = -1 ] ) 
 Gets the value for the requested field. </description>
<parameters>fdf_document - The FDF document handle, returned by fdf_create(), fdf_open() or fdf_open_string(). 
fieldname - Name of the FDF field, as a string. 
which - Elements of an array field can be retrieved by passing this optional parameter, starting at zero. For non-array fields, this parameter will be ignored. </parameters>
<output>Returns the field value. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2876> 
<name>fbsql_field_seek</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Set result pointer to a specified field offset</short-description>
<description>bool fbsql_field_seek ( resource $result [, int $field_offset ] ) 
 Seeks to the specified field offset. If the next call to fbsql_fetch_field() doesn&#039;t include a field offset, the field offset specified in fbsql_field_seek() will be returned. </description>
<parameters>result - Идентификатор результата запроса, полученный изfbsql_query() илиfbsql_db_query().
field_offset - The numerical offset of the field. The field index starts at 0. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2877> 
<name>mysql_thread_id</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Возвращает идентификатор текущего потока</short-description>
<description>int mysql_thread_id ([ resource $link_identifier ] ) 
 mysql_thread_id() возвращает идентификатор текущего потока. Если соединение потеряно и вы пересоединились с помощью mysql_ping(), то идентификатор потока изменится. Это означает, что вам не следует получать данный идентификатор и хранить его для дальнейщего использования. Вызывайте функцию тогда, когда он вам нужен. </description>
<parameters>link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Идентификатор потока в случае успеха или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
$thread_id = mysql_thread_id($link);
if ($thread_id){
    printf("Идентификатор текущего потока: %d\n", $thread_id);
}?></example>
<example_result>
 
Идентификатор текущего потока: 73
</example_result>
</object>

<object id=2878> 
<name>openssl_x509_check_private_key</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Checks if a private key corresponds to a certificate</short-description>
<description>bool openssl_x509_check_private_key ( mixed $cert , mixed $key ) 
 Checks whether the given key is the private key that corresponds to cert. </description>
<parameters>cert - The certificate. 
key - The private key. </parameters>
<output>Returns TRUE if key is the private key that corresponds to cert, or FALSE otherwise. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2879> 
<name>dechex</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Переводит число из десятичной системы счисления в шестнадцатиричную</short-description>
<description>string dechex ( int $number ) 
 Возвращает строку, содержащую шестнадцатеричное представление указанного аргумента number. Наибольшее число, которое может быть преобразовано - 4294967295, в шестнадцатеричном представлении - "ffffffff". </description>
<parameters>number - Десятичное значение для преобразования </parameters>
<output>Шестнадцатеричное строковое представление number </output>
<errors></errors>
<example><?php
echo dechex(10) . "\n";
echo dechex(47);
?></example>
<example_result>
 
a
2f
</example_result>
</object>

<object id=2880> 
<name>ncurses_has_ic</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Check for insert- and delete-capabilities </short-description>
<description>bool ncurses_has_ic ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Returns TRUE if the terminal has insert/delete-capabilities, FALSE otherwise. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2881> 
<name>mb_strlen</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Получает длину строки</short-description>
<description>int mb_strlen ( string $str [, string $encoding ] ) 
 Получает длину строки string. </description>
<parameters>str - Строка string, для которой измеряется длина. 
encoding - Параметр encodingпредставляет собой символьную кодировку. Если он опущен, вместо него будет использовано значение внутренней кодировки.</parameters>
<output>Возвращает количество символов в строке (string) str, имеющих кодировку символов encoding. Многобайтный символ вычисляется как 1. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2882> 
<name>ncurses_termname</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Returns terminals (short)-name</short-description>
<description>string ncurses_termname ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Returns the shortname of the terminal, truncated to 14 characters. On errors, returns NULL. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2883> 
<name>imagecopyresized</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Copy and resize part of an image</short-description>
<description>bool imagecopyresized ( resource $dst_image , resource $src_image , int $dst_x , int $dst_y , int $src_x , int $src_y , int $dst_w , int $dst_h , int $src_w , int $src_h ) 
 imagecopyresized() copies a rectangular portion of one image to another image. dst_image is the destination image, src_image is the source image identifier. 
 In other words, imagecopyresized() will take an rectangular area from src_image of width src_w and height src_h at position (src_x,src_y) and place it in a rectangular area of dst_image of width dst_w and height dst_h at position (dst_x,dst_y). 
 If the source and destination coordinates and width and heights differ, appropriate stretching or shrinking of the image fragment will be performed. The coordinates refer to the upper left corner. This function can be used to copy regions within the same image (if dst_image is the same as src_image) but if the regions overlap the results will be unpredictable. </description>
<parameters>dst_image - Ресурс целевого изображения.
src_image - Ресурс исходного изображения.
dst_x - x-coordinate of destination point. 
dst_y - y-coordinate of destination point. 
src_x - x-coordinate of source point. 
src_y - y-coordinate of source point. 
dst_w - Destination width. 
dst_h - Destination height. 
src_w - Ширина исходного изображения.
src_h - Высота исходного изображения.</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=2884> 
<name>ltrim</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Удаляет пробелы (или другие символы) из начала строки</short-description>
<description>string ltrim ( string $str [, string $charlist ] ) 
 Удаляет пробелы (или другие символы) из начала строки. </description>
<parameters>str - Входная строка. 
charlist - С помощью параметра charlist можно также указать удаляемые символы. Просто перечислите все символы, которые вы хотите удалить. Можно указать конструкцию .. для обозначения диапазона символов. </parameters>
<output>Эта функция возвращает строку str с удаленными из начала строки пробелами. Если второй параметр не передан, ltrim() удаляет следующие символы: " " (ASCII 32 (0x20)), обычный пробел. "\t" (ASCII 9 (0x09)), символ табуляции. "\n" (ASCII 10 (0x0A)), символ перевода строки. "\r" (ASCII 13 (0x0D)), символ возврата каретки. "\0" (ASCII 0 (0x00)), NUL-байт. "\x0B" (ASCII 11 (0x0B)), вертикальная табуляция. </output>
<errors></errors>
<example><?php
$text = "\t\tThese are a few words :) ...  ";
$binary = "\x09Example string\x0A";
$hello  = "Hello World";
var_dump($text, $binary, $hello);
print "\n";

$trimmed = ltrim($text);
var_dump($trimmed);
$trimmed = ltrim($text, " \t.");
var_dump($trimmed);
$trimmed = ltrim($hello, "Hdle");
var_dump($trimmed);
// удаляем управляющие ASCII-символы с начала $binary
// (от 0 до 31 включительно)
$clean = ltrim($binary, "\x00..\x1F");
var_dump($clean);
?></example>
<example_result>
 
string(32) "        These are a few words :) ...  "
string(16) "    Example string
"
string(11) "Hello World"

string(30) "These are a few words :) ...  "
string(30) "These are a few words :) ...  "
string(7) "o World"
string(15) "Example string
"
</example_result>
</object>

<object id=2885> 
<name>apache_request_headers</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Получает список всех заголовков HTTP-запроса</short-description>
<description>array apache_request_headers ( void ) 
 Получает список всех заголовков HTTP текущего запроса. </description>
<parameters></parameters>
<output>Ассоциативный массив, содержащий все HTTP-заголовки текущего запроса, или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$headers = apache_request_headers();
foreach ($headers as $header => $value) {
    echo "$header: $value <br />\n";
}?></example>
<example_result>
 
Accept: */*
Accept-Language: en-us
Accept-Encoding: gzip, deflate
User-Agent: Mozilla/4.0
Host: www.example.com
Connection: Keep-Alive
</example_result>
</object>

<object id=2886> 
<name>swf_defineline</name>
<versions>(PHP 4)</versions>
<short-description>Define a line</short-description>
<description>void swf_defineline ( int $objid , float $x1 , float $y1 , float $x2 , float $y2 , float $width ) 
 Defines a line. </description>
<parameters>objid - The object id. 
x1 - x-coordinate of start point. 
y1 - y-coordinate of start point. 
x2 - x-coordinate of end point. 
y2 - y-coordinate of end point. 
width - The line width. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2887> 
<name>snmp2_real_walk</name>
<versions>(PHP >= 5.2.0)</versions>
<short-description>Return all objects including their respective object ID within the specified one</short-description>
<description>array snmp2_real_walk ( string $host , string $community , string $object_id [, string $timeout = 1000000 [, string $retries = 5 ]] ) 
 The snmp2_real_walk() function is used to traverse over a number of SNMP objects starting from object_id and return not only their values but also their object ids. </description>
<parameters>host - The hostname of the SNMP agent (server). 
community - The read community. 
object_id - The SNMP object id which precedes the wanted one. 
timeout - The number of microseconds until the first timeout. 
retries - The number of times to retry if timeouts occur. </parameters>
<output>Returns an associative array of the SNMP object ids and their values on success or FALSE on error. In case of an error, an E_WARNING message is shown. </output>
<errors></errors>
<example><?php
 print_r(snmp2_real_walk("localhost", "public", "IF-MIB::ifName"));
?></example>
<example_result>
 
 Array
      (
      [IF-MIB::ifName.1] => STRING: lo
      [IF-MIB::ifName.2] => STRING: eth0
      [IF-MIB::ifName.3] => STRING: eth2
      [IF-MIB::ifName.4] => STRING: sit0
      [IF-MIB::ifName.5] => STRING: sixxs
    )
</example_result>
</object>

<object id=2888> 
<name>mysql_list_dbs</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает список баз данных, доступных на сервере</short-description>
<description>resource mysql_list_dbs ([ resource $link_identifier ] ) 
 Возвращает указатель на результат, содержащий список баз данных, доступных на указанном сервере. Внимание
 Эта функция УСТАРЕЛА начиная с версии PHP 5.4.0. Использование этой функции не рекомендуется.</description>
<parameters>link_identifier - Соединение MySQL. Если идентификатор соединения не был указан,используется последнее соединение, открытое mysql_connect(). Если такое соединение не было найдено,функция попытается создать таковое, как если бы mysql_connect() была вызвана без параметров.Если соединение не было найдено и не смогло быть создано, генерируется ошибка уровня E_WARNING.</parameters>
<output>Возвращает resource результата в случае успеха, или FALSE в случае ошибки. Используйте функцию mysql_tablename(), чтобы получить данные из результата, или любую другую функцию, работающую с результатами запросов, например mysql_fetch_array(). </output>
<errors></errors>
<example><?php
// Без использования mysql_list_dbs()
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
$res = mysql_query("SHOW DATABASES");
while ($row = mysql_fetch_assoc($res)) {
    echo $row['Database'] . "\n";
}
// Устарело, начиная с PHP 5.4.0
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
$db_list = mysql_list_dbs($link);
while ($row = mysql_fetch_object($db_list)) {
     echo $row->Database . "\n";
}?></example>
<example_result>
 
database1
database2
database3
</example_result>
</object>

<object id=2889> 
<name>imagefilledrectangle</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Draw a filled rectangle</short-description>
<description>bool imagefilledrectangle ( resource $image , int $x1 , int $y1 , int $x2 , int $y2 , int $color ) 
 Creates a rectangle filled with color in the given image starting at point 1 and ending at point 2. 0, 0 is the top left corner of the image. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
x1 - x-coordinate for point 1. 
y1 - y-coordinate for point 1. 
x2 - x-coordinate for point 2. 
y2 - y-coordinate for point 2. 
color - The fill color. A color identifier created with imagecolorallocate(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Create a 55x30 image
$im = imagecreatetruecolor(55, 30);
$white = imagecolorallocate($im, 255, 255, 255);
// Draw a white rectangle
imagefilledrectangle($im, 4, 4, 50, 25, $white);
// Save the image
imagepng($im, './imagefilledrectangle.png');
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=2890> 
<name>fbsql_commit</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Commits a transaction to the database</short-description>
<description>bool fbsql_commit ([ resource $link_identifier ] ) 
 Ends the current transaction by writing all inserts, updates and deletes to the disk and unlocking all row and table locks held by the transaction. This command is only needed if autocommit is set to false. </description>
<parameters>link_identifier - Идентификатор соединения FrontBase, полученный изfbsql_connect() илиfbsql_pconnect().</parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2891> 
<name>fbsql_rows_fetched</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Get the number of rows affected by the last statement</short-description>
<description>int fbsql_rows_fetched ( resource $result ) 
 Gets the number of rows affected by the last statement. </description>
<parameters>result - Идентификатор результата запроса, полученный изfbsql_query() илиfbsql_db_query().</parameters>
<output>Returns the number of rows, as an integer. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2892> 
<name>get_extension_funcs</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Returns an array with the names of the functions of a module</short-description>
<description>array get_extension_funcs ( string $module_name ) 
 This function returns the names of all the functions defined in the module indicated by module_name. </description>
<parameters>module_name - The module name. </parameters>
<output>Returns an array with all the functions, or FALSE if module_name is not a valid extension. </output>
<errors></errors>
<example><?php
print_r(get_extension_funcs("xml"));
?></example>
<example_result>
 
Array
(
    [0] => xml_parser_create
    [1] => xml_parser_create_ns
    [2] => xml_set_object
    [3] => xml_set_element_handler
    [4] => xml_set_character_data_handler
    [5] => xml_set_processing_instruction_handler
    [6] => xml_set_default_handler
    [7] => xml_set_unparsed_entity_decl_handler
    [8] => xml_set_notation_decl_handler
    [9] => xml_set_external_entity_ref_handler
    [10] => xml_set_start_namespace_decl_handler
    [11] => xml_set_end_namespace_decl_handler
    [12] => xml_parse
    [13] => xml_parse_into_struct
    [14] => xml_get_error_code
    [15] => xml_error_string
    [16] => xml_get_current_line_number
    [17] => xml_get_current_column_number
    [18] => xml_get_current_byte_index
    [19] => xml_parser_free
    [20] => xml_parser_set_option
    [21] => xml_parser_get_option
    [22] => utf8_encode
    [23] => utf8_decode
)
</example_result>
</object>

<object id=2893> 
<name>imagecreatefromxpm</name>
<versions>(PHP 4 >= 4.0.1, PHP 5)</versions>
<short-description>Создает новое изображение из файла или URL</short-description>
<description>resource imagecreatefromxpm ( string $filename ) 
 imagecreatefromxpm() returns an image identifier representing the image obtained from the given filename. Подсказка
 Для этой функции вы можете использовать URLв качестве имени файла, если была включена опция fopen wrappers. Смотрите болееподробную информацию об определении имени файла в описании функцииfopen(). Смотрите также список поддерживаемых оберток URL, их возможности, замечания по использованию и списокпредопределенных констант в Поддерживаемые протоколы и обработчики (wrappers).</description>
<parameters>filename - Path to the XPM image. </parameters>
<output>Возвращает ресурс изображения в случае успеха, или FALSE в случае ошибки.</output>
<errors></errors>
<example><?php
// Check for XPM support
if(!(imagetypes() & IMG_XPM))
{    die('Support for xpm was not found!');
}
// Create the image instance
$xpm = imagecreatefromxpm('./example.xpm');
// Do image operations here
// PHP has no support for writing xpm images
// so in this case we save the image as a 
// jpeg file with 100% quality
imagejpeg($xpm, './example.jpg', 100);
imagedestroy($xpm);
?></example>
<example_result></example_result>
</object>

<object id=2894> 
<name>ifx_byteasvarchar</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Set the default byte mode</short-description>
<description>bool ifx_byteasvarchar ( int $mode ) 
 Sets the default byte mode for all select-queries. </description>
<parameters>mode - Mode "0" will return a blob id, and mode "1" will return a varchar with text content. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2895> 
<name>imagefttext</name>
<versions>(PHP 4 >= 4.0.7, PHP 5)</versions>
<short-description>Write text to the image using fonts using FreeType 2</short-description>
<description>array imagefttext ( resource $image , float $size , float $angle , int $x , int $y , int $color , string $fontfile , string $text [, array $extrainfo ] ) </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
size - The font size to use in points. 
angle - The angle in degrees, with 0 degrees being left-to-right reading text. Higher values represent a counter-clockwise rotation. For example, a value of 90 would result in bottom-to-top reading text. 
x - The coordinates given by x and y will define the basepoint of the first character (roughly the lower-left corner of the character). This is different from the imagestring(), where x and y define the upper-left corner of the first character. For example, "top left" is 0, 0. 
y - The y-ordinate. This sets the position of the fonts baseline, not the very bottom of the character. 
color - The index of the desired color for the text, see imagecolorexact(). 
fontfile - The path to the TrueType font you wish to use. </parameters>
<output>This function returns an array defining the four points of the box, starting in the lower left and moving counter-clockwise: 0 lower left x-coordinate 1 lower left y-coordinate 2 lower right x-coordinate 3 lower right y-coordinate 4 upper right x-coordinate 5 upper right y-coordinate 6 upper left x-coordinate 7 upper left y-coordinate </output>
<errors></errors>
<example><?php
// Create a 300x100 image
$im = imagecreatetruecolor(300, 100);
$red = imagecolorallocate($im, 0xFF, 0x00, 0x00);
$black = imagecolorallocate($im, 0x00, 0x00, 0x00);
// Make the background red
imagefilledrectangle($im, 0, 0, 299, 99, $red);
// Path to our ttf font file
$font_file = './arial.ttf';
// Draw the text 'PHP Manual' using font size 13
imagefttext($im, 13, 0, 105, 55, $black, $font_file, 'PHP Manual');
// Output image to the browser
header('Content-Type: image/png');
imagepng($im);
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=2896> 
<name>sqlite_single_query</name>
<versions>(PHP 5, PECL sqlite >= 1.0.1)</versions>
<short-description>Выполняет запрос и возвращает массив со значениями одного поля или первую запись </short-description>
<description>array sqlite_single_query ( resource $db , string $query [, bool $first_row_only [, bool $decode_binary ]] ) 
 Объектно-ориентированный стиль (метод): array SQLiteDatabase::singleQuery ( string $query [, bool $first_row_only [, bool $decode_binary ]] )</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2897> 
<name>dbase_pack</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Фиксирует удаление из базы данных</short-description>
<description>bool dbase_pack ( int $dbase_identifier ) 
 Фиксирует удаление из базы данных, окончательно удаляет записи, которые были помечены на удаление с помощью dbase_delete_record(). </description>
<parameters>dbase_identifier - Идентификатор базы данных, возвращаемый функцией dbase_open() или dbase_create(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// открываем в режиме чтения и записи
$db = dbase_open('/tmp/test.dbf', 2);
if ($db) {
  $record_numbers = dbase_numrecords($db);
  for ($i = 1; $i <= $record_numbers; $i++) {
      dbase_delete_record($db, $i);
  }
  // стираем базу
  dbase_pack($db);
}
?></example>
<example_result></example_result>
</object>

<object id=2898> 
<name>msql_pconnect</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Open persistent mSQL connection</short-description>
<description>resource msql_pconnect ([ string $hostname ] ) 
 msql_pconnect() acts very much like msql_connect() with two major differences. 
 First, when connecting, the function would first try to find a (persistent) link that&#039;s already open with the same host. If one is found, an identifier for it will be returned instead of opening a new connection. 
 Second, the connection to the SQL server will not be closed when the execution of the script ends. Instead, the link will remain open for future use (msql_close() will not close links established by this function). </description>
<parameters>hostname - The hostname can also include a port number. e.g. hostname,port. </parameters>
<output>Returns a positive mSQL link identifier on success, or FALSE on error. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2899> 
<name>imageellipse</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Draw an ellipse</short-description>
<description>bool imageellipse ( resource $image , int $cx , int $cy , int $width , int $height , int $color ) 
 Draws an ellipse centered at the specified coordinates. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
cx - x-coordinate of the center. 
cy - y-coordinate of the center. 
width - The ellipse width. 
height - The ellipse height. 
color - The color of the ellipse. A color identifier created with imagecolorallocate(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Create a blank image.
$image = imagecreatetruecolor(400, 300);
// Select the background color.
$bg = imagecolorallocate($image, 0, 0, 0);
// Fill the background with the color selected above.
imagefill($image, 0, 0, $bg);
// Choose a color for the ellipse.
$col_ellipse = imagecolorallocate($image, 255, 255, 255);
// Draw the ellipse.
imageellipse($image, 200, 150, 300, 200, $col_ellipse);
// Output the image.
header("Content-type: image/png");
imagepng($image);
?></example>
<example_result></example_result>
</object>

<object id=2900> 
<name>bzflush</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Форсирует запись всех буферизированных данных</short-description>
<description>int bzflush ( resource $bz ) 
 Форсирует запись всех буферизированных bzip2 данных в файл, на который ссылается указатель bz. </description>
<parameters>bz - Указатель на файл. Должен быть корректным и указывать на файл, успешно открытый bzopen(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2901> 
<name>ncurses_pair_content</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Retrieves foreground and background colors of a color pair</short-description>
<description>int ncurses_pair_content ( int $pair , int &$f , int &$b ) 
 Retrieves the foreground and background colors that constitute the given color pair. Terminal color capabilities must be initialized with ncurses_start_color() prior to calling this function. </description>
<parameters>pair - The number of the color pair to retrieve information for. 
f - A reference to which to return the foreground color of the color pair. The information returned will be a color number referring to one of the pre-defined colors or a color defined previously by ncurses_init_color() if the terminal supports color changing. 
b - A reference to which to return the background color of the color pair. The information returned will be a color number referring to one of the pre-defined colors or a color defined previously by ncurses_init_color() if the terminal supports color changing. </parameters>
<output>Returns -1 if the function was successful, and 0 if ncurses or terminal color capabilities have not been initialized. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2902> 
<name>nsapi_virtual</name>
<versions>(PHP 4 >= 4.3.3, PHP 5)</versions>
<short-description>Perform an NSAPI sub-request</short-description>
<description>bool nsapi_virtual ( string $uri ) 
 nsapi_virtual() is an NSAPI-specific function which is equivalent to <!--#include virtual...--> in SSI (.shtml files). It does an NSAPI sub-request. It is useful for including CGI scripts or .shtml files, or anything else that you&#039;d parse through webserver. 
 To run the sub-request, all buffers are terminated and flushed to the browser, pending headers are sent too. 
 You cannot make recursive requests with this function to other PHP scripts. If you want to include PHP scripts, use include() or require(). 
 Замечание: 
 This function depends on a undocumented feature of the Netscape/iPlanet/Sun webservers. Use phpinfo() to determine if it is available. In the Unix environment it should always work, in Windows it depends on the name of a ns-httpdXX.dll file. 
 Read the note about subrequests in the NSAPI section (UNIX, Windows) if you experience this problem. </description>
<parameters>uri - The URI of the script. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2903> 
<name>ncurses_wattron</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Turns on attributes for a window</short-description>
<description>int ncurses_wattron ( resource $window , int $attrs ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>window - 
attrs - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2904> 
<name>ncurses_whline</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Draws a horizontal line in a window at current position using an attributed character and max. n characters long</short-description>
<description>int ncurses_whline ( resource $window , int $charattr , int $n ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>window - 
charattr - 
n - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2905> 
<name>stream_is_local</name>
<versions>(PHP 5 >= 5.2.4)</versions>
<short-description>Проверяет, является ли поток локальным потоком</short-description>
<description>bool stream_is_local ( mixed $stream_or_url ) 
 Проверяет, является ли поток или URL локальным или нет. </description>
<parameters>stream_or_url - Ресурс потока (resource) или URL для проверки. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example>
 </example>
<example_result>
 
bool(false)
bool(true)
</example_result>
</object>

<object id=2906> 
<name>dbase_close</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Закрывает базу данных</short-description>
<description>bool dbase_close ( int $dbase_identifier ) 
 Закрывает базу данных согласно полученному идентификатору. </description>
<parameters>dbase_identifier - Идентификатор базы данных, возвращаемый функцией dbase_open() или dbase_create(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// открыть БД в режиме чтения
$db = dbase_open('/tmp/test.dbf', 0);
if ($db) {
  // получить некоторые данные
  
  dbase_close($db);
}
?></example>
<example_result></example_result>
</object>

<object id=2907> 
<name>PDF_fill</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Fill current path</short-description>
<description>bool PDF_fill ( resource $p ) 
 Fills the interior of the current path with the current fill color. Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2908> 
<name>mb_regex_encoding</name>
<versions>(PHP 4 >= 4.2.0, PHP 5)</versions>
<short-description>Возвращает текущую кодировку для многобайтового регулярного выражения в виде строки</short-description>
<description>mixed mb_regex_encoding ([ string $encoding ] ) 
 Возвращает текущую кодировку для многобайтового регулярного выражения в виде строки string. </description>
<parameters>encoding - Параметр encodingпредставляет собой символьную кодировку. Если он опущен, вместо него будет использовано значение внутренней кодировки.</parameters>
<output>mb_internal_encoding() - Set/Get internal character encoding mb_ereg() - Regular expression match with multibyte support </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2909> 
<name>lchgrp</name>
<versions>(PHP 5 >= 5.1.2)</versions>
<short-description>Изменяет группу, которой принадлежит символическая ссылка</short-description>
<description>bool lchgrp ( string $filename , mixed $group ) 
 Пытается изменить группу, которой принадлежит символическая ссылка filename на указанную в group. 
 Только суперпользователь может изменять группу символической ссылки произвольно, другие пользователи могут изменять группу символической ссылки на какую-либо, в которой пользователь является членом. </description>
<parameters>filename - Путь к ссылке. 
group - Группа, указанная по имени или номеру. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
$target = 'output.php';
$link = 'output.html';
symlink($target, $link);
lchgrp($link, 8);
?></example>
<example_result></example_result>
</object>

<object id=2910> 
<name>preg_match</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выполняет проверку на соответствие регулярному выражению</short-description>
<description>int preg_match ( string $pattern , string $subject [, array &$matches [, int $flags = 0 [, int $offset = 0 ]]] ) 
 Ищет в заданном тексте subject совпадения с шаблоном pattern. </description>
<parameters>pattern - Искомый шаблон, строка. 
subject - Входная строка. 
matches - В случае, если указан дополнительный параметр matches, он будет заполнен результатами поиска. Элемент $matches[0] будет содержать часть строки, соответствующую вхождению всего шаблона, $matches[1] - часть строки, соответствующую первой подмаске, и так далее. 
flags - flags может принимать значение следующего флага: PREG_OFFSET_CAPTURE В случае, если этот флаг указан, для каждой найденной подстроки будет указана ее позиция в исходной строке. Необходимо помнить, что этот флаг меняет формат возвращаемого массива matches в массив, каждый элемент которого содержит массив, содержащий в индексе с номером 0 найденную подстроку, а смещение этой подстроки в параметре subject - в индексе 1. 
offset - Обычно поиск осуществляется слева направо, с начала строки. Можно использовать дополнительный параметр offset для указания альтернативной начальной позиции для поиска (в байтах). </parameters>
<output>Функция preg_match() возвращает количество найденных соответствий шаблона pattern. Это может быть 0 (совпадения не найдены) и 1, поскольку preg_match() прекращает свою работу после первого найденного совпадения. Функция же preg_match_all(), наоборот, будет продолжать свою работу пока не достигнет конца subject. Функция preg_match() возвращает FALSE в случае, если во время выполнения возникли какие-либо ошибки. </output>
<errors></errors>
<example><?php
// Символ "i" после закрывающего ограничителя шаблона означает
// регистронезависимый поиск.
if (preg_match("/php/i", "PHP is the web scripting language of choice.")) {
    echo "Вхождение найдено.";
} else {
    echo "Вхождение не найдено.";
}?></example>
<example_result>
 
Array
(
)
</example_result>
</object>

<object id=2911> 
<name>PDF_set_word_spacing</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Set spacing between words [deprecated]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2912> 
<name>imap_fetchmime</name>
<versions>(PHP 5 >= 5.3.6)</versions>
<short-description>Fetch MIME headers for a particular section of the message</short-description>
<description>string imap_fetchmime ( resource $imap_stream , int $msg_number , string $section [, int $options = 0 ] ) 
 Fetch the MIME headers of a particular section of the body of the specified messages. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
msg_number - The message number 
section - The part number. It is a string of integers delimited by period which index into a body part list as per the IMAP4 specification 
options - A bitmask with one or more of the following: FT_UID - The msg_number is a UID FT_PEEK - Do not set the \Seen flag if not already set FT_INTERNAL - The return string is in internal format, will not canonicalize to CRLF. </parameters>
<output>Returns the MIME headers of a particular section of the body of the specified messages as a text string. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2913> 
<name>imagecolortransparent</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Define a color as transparent</short-description>
<description>int imagecolortransparent ( resource $image [, int $color ] ) 
 Sets the transparent color in the given image. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
color - A color identifier created with imagecolorallocate(). </parameters>
<output>The identifier of the new (or current, if none is specified) transparent color is returned. </output>
<errors></errors>
<example><?php
// Create a 55x30 image
$im = imagecreatetruecolor(55, 30);
$red = imagecolorallocate($im, 255, 0, 0);
$black = imagecolorallocate($im, 0, 0, 0);
// Make the background transparent
imagecolortransparent($im, $black);
// Draw a red rectangle
imagefilledrectangle($im, 4, 4, 50, 25, $red);
// Save the image
imagepng($im, './imagecolortransparent.png');
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=2914> 
<name>ncurses_pnoutrefresh</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Copies a region from a pad into the virtual screen</short-description>
<description>int ncurses_pnoutrefresh ( resource $pad , int $pminrow , int $pmincol , int $sminrow , int $smincol , int $smaxrow , int $smaxcol ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>pad - 
pminrow - 
pmincol - 
sminrow - 
smincol - 
smaxrow - 
smaxcol - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2915> 
<name>oci_new_descriptor</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Инициализирует новый дескриптор объекта LOB или FILE</short-description>
<description>OCI-Lob oci_new_descriptor ( resource $connection [, int $type = OCI_DTYPE_LOB ] ) 
 Резервирует ресурсы, необходимые для хранения дескриптора объекта или LOB-локатора. </description>
<parameters>connection - Идентификатор соединения с сервером Oracle, возвращаемый функцией oci_connect() или oci_pconnect(). 
type - Допустимые значения параметра type: OCI_DTYPE_FILE, OCI_DTYPE_LOB и OCI_DTYPE_ROWID. </parameters>
<output>Возвращает новый LOB или дескриптор FILE в случае успеха или FALSE при ошибке. </output>
<errors></errors>
<example><?php
/* Приведенный скрипт разработан для использования с HTML формами.
 * Это подразумевает, что $user, $password, $table, $where, и $commitsize
 * получены из формы. Скрипт удаляет записи с использованием
 * ROWID и закрывает транзакцию после каждого
 * $commitsize записей. (Используйте осторожно, откат изменений невозможен)
 */
$conn = oci_connect($user, $password);
$stmt = oci_parse($conn, "select rowid from $table $where");
$rowid = oci_new_descriptor($conn, OCI_D_ROWID);
oci_define_by_name($stmt, "ROWID", $rowid);
oci_execute($stmt);
while (oci_fetch($stmt)) {
    $nrows = oci_num_rows($stmt);
    $delete = oci_parse($conn, "delete from $table where ROWID = :rid");
    oci_bind_by_name($delete, ":rid", $rowid, -1, OCI_B_ROWID);
    oci_execute($delete);
    echo "$nrows\n";
    if (($nrows % $commitsize) == 0) {
        oci_commit($conn);
    }
}$nrows = oci_num_rows($stmt);
echo "$nrows deleted...\n";
oci_free_statement($stmt);
oci_close($conn);
?></example>
<example_result></example_result>
</object>

<object id=2916> 
<name>ifxus_read_slob</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Reads nbytes of the slob object</short-description>
<description>string ifxus_read_slob ( int $bid , int $nbytes ) 
 Reads nbytes of the slob object. </description>
<parameters>bid - An existing slob id. 
nbytes - The number of bytes to read. </parameters>
<output>Returns the slob contents as a string, or FALSE on errors. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2917> 
<name>ncurses_werase</name>
<versions>(PHP 4 >= 4.3.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Erase window contents</short-description>
<description>int ncurses_werase ( resource $window ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>window - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2918> 
<name>hw_ErrorMsg</name>
<versions>(PHP 4)</versions>
<short-description>Returns error message</short-description>
<description>string hw_errormsg ( int $connection ) 
 Returns a string containing the last error message related to the last command. </description>
<parameters>connection - The connection identifier. </parameters>
<output>Returns a string containing the last error message or &#039;No Error&#039;. If FALSE is returned, this function failed. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2919> 
<name></name>
<versions>(PHP 4, PHP5)</versions>
<short-description></short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2920> 
<name>dbplus_freealllocks</name>
<versions>(PHP 4 <= 4.1.0, PECL dbplus >= 0.9)</versions>
<short-description>Free all locks held by this client</short-description>
<description>int dbplus_freealllocks ( void ) 
 Frees all tuple locks held by this client. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2921> 
<name>ctype_print</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Проверяет на наличие печатных символов</short-description>
<description>bool ctype_print ( string $text ) 
 Проверяет, все ли символы в переданной строке text являются печатными. </description>
<parameters>text - Проверяемая строка. </parameters>
<output>Возвращает TRUE, если каждый символ в строке text фактически создает вывод (включая пустой). Возвращает FALSE, если text содержит управляющие символы, или символы, которые вообще не имеют никакого вывода или функции управления. </output>
<errors></errors>
<example><?php
$strings = array('string1' => "asdf\n\r\t", 'string2' => 'arf12', 'string3' => 'LKA#@%.54');
foreach ($strings as $name => $testcase) {
    if (ctype_print($testcase)) {
        echo "Строка '$name' состоит только из печатных символов.\n";
    } else {
        echo "Строка '$name' не состоит только из печатных символов.\n";
    }
}?></example>
<example_result>
 
Строка &#039;string1&#039; не состоит только из печатных символов.
Строка &#039;string2&#039; состоит только из печатных символов.
Строка &#039;string3&#039; состоит только из печатных символов.
</example_result>
</object>

<object id=2922> 
<name>ncurses_noraw</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Switch terminal out of raw mode </short-description>
<description>bool ncurses_noraw ( void ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output>Returns TRUE if any error occurred, otherwise FALSE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2923> 
<name>array_reverse</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возвращает массив с элементами в обратном порядке</short-description>
<description>array array_reverse ( array $array [, bool $preserve_keys = false ] ) 
 Принимает массив array и возвращает новый массив, содержащем элементы исходного массива в обратном порядке. </description>
<parameters>array - Входной массив. 
preserve_keys - Если установлено в TRUE, то ключи будут сохранены. Нечисловые ключи не подвержены этой опции и всегда сохраняются. </parameters>
<output>Возвращает массив с элементами в обратном порядке. </output>
<errors></errors>
<example><?php
$input  = array("php", 4.0, array("green", "red"));
$result = array_reverse($input);
$result_keyed = array_reverse($input, true);
?></example>
<example_result>
 
Array
(
    [0] => Array
        (
            [0] => green
            [1] => red
        )

    [1] => 4
    [2] => php
)
Array
(
    [2] => Array
        (
            [0] => green
            [1] => red
        )

    [1] => 4
    [0] => php
)
</example_result>
</object>

<object id=2924> 
<name>doubleval</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Псевдоним floatval()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2925> 
<name>ncurses_insstr</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Insert string at current position, moving rest of line right </short-description>
<description>int ncurses_insstr ( string $text ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>text - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2926> 
<name>openssl_x509_read</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Parse an X.509 certificate and return a resource identifier for it</short-description>
<description>resource openssl_x509_read ( mixed $x509certdata ) 
 openssl_x509_read() parses the certificate supplied by x509certdata and returns a resource identifier for it. </description>
<parameters>x509certdata - </parameters>
<output>Returns a resource identifier on success или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2927> 
<name>oci_server_version</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Возвращает версию сервера Oracle</short-description>
<description>string oci_server_version ( resource $connection ) 
 Возвращает строку с информацией о версии сервера Oracle и доступных опциях </description>
<parameters>connection - </parameters>
<output>Возвращает в виде строки информацию о версии или FALSE при ошибке. </output>
<errors></errors>
<example><?php
    $conn = oci_connect("scott", "tiger");
    echo "Версия Сервера: " . oci_server_version($conn);
    // Выводит:
    // Версия сервера: Oracle Database 11g Enterprise Edition Release 11.2.0.1.0 - 64bit Production
    // With the Partitioning, OLAP, Data Mining and Real Application Testing option
    oci_close($conn);
?></example>
<example_result></example_result>
</object>

<object id=2928> 
<name>iconv_strpos</name>
<versions>(PHP 5)</versions>
<short-description>Возвращает позицию первого вхождения подстроки</short-description>
<description>int iconv_strpos ( string $haystack , string $needle [, int $offset = 0 [, string $charset = ini_get("iconv.internal_encoding") ]] ) 
 Возвращает позицию первого вхождения подстроки needle в строке haystack. 
 В отличие от strpos(), iconv_strpos() возвращает смещение перед искомой строкой в символах, а не в байтах. Количество символов трактуется в зависимости от указанной параметром charset кодировки. </description>
<parameters>haystack - Строка, в которой производится поиск. 
needle - Искомая подстрока. 
offset - Необязательный параметр offset позволяет указать, с какого по счёту символа строки начинать поиск. 
charset - Если параметр charset не указан, то подразумевается, что string имеет кодировку iconv.internal_encoding. </parameters>
<output>Возвращает номер позиции первого вхождения строки needle в haystack. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2929> 
<name>ldap_t61_to_8859</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Переводит символы из кодировки t61 в ISO-8859</short-description>
<description>string ldap_t61_to_8859 ( string $value ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2930> 
<name>bzread</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Бинарно-безопасное чтение файла bzip2</short-description>
<description>string bzread ( resource $bz [, int $length = 1024 ] ) 
 bzread() читает из переданного bzip2 файлового указателя. 
 Чтение останавливается, если было считано length (несжатых) байт или был достигнут конец файла, в зависимости от того, что произойдет раньше. </description>
<parameters>bz - Указатель на файл. Должен быть корректным и указывать на файл, успешно открытый bzopen(). 
length - Если не указан, bzread() будет считывать 1024 (несжатых) байта за один раз. За один раз может быть считано максимум 8192 байта. </parameters>
<output>Возвращает распакованные данные либо FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$file = "/tmp/foo.bz2";
$bz = bzopen($file, "r") or die("Невозможно открыть $file");
$decompressed_file = '';
while (!feof($bz)) {
  $decompressed_file .= bzread($bz, 4096);
}bzclose($bz);
echo "Содержимое $file: <br />\n";
echo $decompressed_file;
?></example>
<example_result></example_result>
</object>

<object id=2931> 
<name>hash_update</name>
<versions>(PHP 5 >= 5.1.2, PECL hash >= 1.1)</versions>
<short-description>Добавляет данные в активный контекст хеширования</short-description>
<description>bool hash_update ( resource $context , string $data ) </description>
<parameters>context - Контекст хеширования, возвращаемый hash_init(). 
data - Сообщение, которое должно быть включено в хеш. </parameters>
<output>Возвращает TRUE. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2932> 
<name>PDF_setfont</name>
<versions>(PHP 4 >= 4.0.5, PECL pdflib >= 1.0.0)</versions>
<short-description>Set font</short-description>
<description>bool PDF_setfont ( resource $pdfdoc , int $font , float $fontsize ) 
 Sets the current font in the specified size, using a font handle returned by PDF_load_font(). Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2933> 
<name>xslt_free</name>
<versions>(PHP 4 >= 4.0.3)</versions>
<short-description>Освобождение XSLT-процессора </short-description>
<description>void xslt_free ( resource $xh ) 
 Освобождает ресурс, занятый XSLT-процессором. </description>
<parameters>xh - Ресурс XSLT-процессора, возвращаемый функцией xslt_create(). </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2934> 
<name>mssql_min_error_severity</name>
<versions>(PHP 4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Sets the minimum error severity</short-description>
<description>void mssql_min_error_severity ( int $severity ) 
 Sets the minimum error severity. </description>
<parameters>severity - The new error severity. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example><?php
// Connect to MSSQL and select the database
mssql_connect('KALLESPC\SQLEXPRESS', 'sa', 'phpfi');
mssql_select_db('php');
// Set the minimum error severity to not include SQL 
// syntax errors by setting it to something greater than 
// or equal to 1.
mssql_min_error_severity(1);
// Send a query we know that will cause an syntax error, in
// this case we use the MySQL quote signs instead of wrapping 
// square brackets around the field and table names.
$query = mssql_query('SELECT `syntax`, `error` FROM `MSSQL`');
if (!$query) {
    // Custom error handler ...
}
?></example>
<example_result></example_result>
</object>

<object id=2935> 
<name>ibase_fetch_assoc</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Fetch a result row from a query as an associative array</short-description>
<description>array ibase_fetch_assoc ( resource $result [, int $fetch_flag = 0 ] ) 
 Fetch a result row from a query as an associative array. 
 ibase_fetch_assoc() fetches one row of data from the result. If two or more columns of the result have the same field names, the last column will take precedence. To access the other column(s) of the same name, you either need to access the result with numeric indices by using ibase_fetch_row() or use alias names in your query. </description>
<parameters>result - The result handle. 
fetch_flag - fetch_flag is a combination of the constants IBASE_TEXT and IBASE_UNIXTIME ORed together. Passing IBASE_TEXT will cause this function to return BLOB contents instead of BLOB ids. Passing IBASE_UNIXTIME will cause this function to return date/time values as Unix timestamps instead of as formatted strings. </parameters>
<output>Returns an associative array that corresponds to the fetched row. Subsequent calls will return the next row in the result set, or FALSE if there are no more rows. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2936> 
<name>gmp_mul</name>
<versions>(PHP 4 >= 4.0.4, PHP 5)</versions>
<short-description>Умножение чисел</short-description>
<description>resource gmp_mul ( resource $a , resource $b ) 
 Умножает число a на b и возвращает результат. </description>
<parameters>a - Первый множитель, число умножаемое на b. 
b - Второй множитель, число умножаемое на a. </parameters>
<output>Число GMP. </output>
<errors></errors>
<example><?php
$mul = gmp_mul("12345678", "2000");
echo gmp_strval($mul) . "\n";
?></example>
<example_result>
 
24691356000
</example_result>
</object>

<object id=2937> 
<name>mcrypt_get_cipher_name</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the name of the specified cipher</short-description>
<description>string mcrypt_get_cipher_name ( int $cipher ) string mcrypt_get_cipher_name ( string $cipher )</description>
<parameters>cipher - One of the MCRYPT_ciphername constants or the name of the algorithm as string. </parameters>
<output>This function returns the name of the cipher or FALSE, if the cipher does not exist. </output>
<errors></errors>
<example><?php
   $cipher = MCRYPT_TripleDES;
   echo mcrypt_get_cipher_name($cipher);
?></example>
<example_result>
 
3DES
</example_result>
</object>

<object id=2938> 
<name>shm_remove_var</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Removes a variable from shared memory </short-description>
<description>bool shm_remove_var ( resource $shm_identifier , int $variable_key ) 
 Removes a variable with a given variable_key and frees the occupied memory. </description>
<parameters>shm_identifier - The shared memory identifier as returned by shm_attach() 
variable_key - The variable key. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2939> 
<name>pg_ping</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Проверка соединения с базой данных</short-description>
<description>bool pg_ping ([ resource $connection ] ) 
 pg_ping() проверяет соединение с базой данных и переподключается, если оно нарушено. </description>
<parameters>connection - Ресурс подключения к базе данных PostgreSQL. Если параметр connection не задан, будет использовано подключение по умолчанию - последнее соединение, открытое функцией pg_connect() или pg_pconnect(). </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php 
$conn = pg_pconnect("dbname=publisher");
if (!$conn) {
  echo "Произошла ошибка.\n";
  exit;
}
if (!pg_ping($conn))
  die("Соединение нарушено\n");
?></example>
<example_result></example_result>
</object>

<object id=2940> 
<name>fam_pending</name>
<versions>(PHP 5 <= 5.0.5)</versions>
<short-description>Check for pending FAM events</short-description>
<description>int fam_pending ( resource $fam ) 
 Checks for pending FAM events. </description>
<parameters>fam - A resource representing a connection to the FAM service returned by fam_open() </parameters>
<output>Returns non-zero if events are available to be fetched using fam_next_event(), zero otherwise. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2941> 
<name>posix_getsid</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get the current sid of the process</short-description>
<description>int posix_getsid ( int $pid ) 
 Return the session id of the process pid. The session id of a process is the process group id of the session leader. </description>
<parameters>pid - The process identifier. If set to 0, the current process is assumed. If an invalid pid is specified, then FALSE is returned and an error is set which can be checked with posix_get_last_error(). </parameters>
<output>Returns the identifier, as an integer. </output>
<errors></errors>
<example><?php
$pid = posix_getpid();
echo posix_getsid($pid); //8805
?></example>
<example_result></example_result>
</object>

<object id=2942> 
<name>XMLWriter::writeDTDElement</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Записать полный тэг элемента DTD</short-description>
<description>bool XMLWriter::writeDTDElement ( string $name , string $content ) 
 Процедурный стиль bool xmlwriter_write_dtd_element ( resource $xmlwriter , string $name , string $content )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
name - Имя элемента DTD. 
content - Содержимое элемента. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2943> 
<name>imagesx</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Get image width</short-description>
<description>int imagesx ( resource $image ) 
 Returns the width of the given image resource. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().</parameters>
<output>Return the width of the image or FALSE on errors. </output>
<errors></errors>
<example><?php
// create a 300*200 image
$img = imagecreatetruecolor(300, 200);
echo imagesx($img); // 300
?></example>
<example_result></example_result>
</object>

<object id=2944> 
<name>gzpassthru</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Выводит все оставшиеся данные из указателя gz-файла. </short-description>
<description>int gzpassthru ( resource $zp ) 
 Читает до конца файла (EOF) данные из указателя gz-файла, начиная с текущей позиции, и записывает результат (без сжатия) в стандартный вывод. 
 Замечание: 
 Используйте gzrewind(), чтобы переместить указатель на позицию в начало файла, если вы уже записывали данные в него. Подсказка 
 Если вам нужно просто вывести содержимое файла без перемещения указателя на позицию или внесения изменений, используйте функцию readgzfile(), которая не требует вызова функции gzopen(). </description>
<parameters>zp - Указатель на gz-файл, возвращённый, после его успешного открытия, функцией gzopen(). </parameters>
<output>Количество распакованных символов, полученных из gz, или FALSE в случае ошибки. </output>
<errors></errors>
<example><?php
$fp = gzopen('file.gz', 'r');
gzpassthru($fp);
gzclose($fp);
?></example>
<example_result></example_result>
</object>

<object id=2945> 
<name>XMLWriter::writeComment</name>
<versions>(PHP 5 >= 5.1.2, PECL xmlwriter >= 0.1.0)</versions>
<short-description>Записать полный тэг комментария</short-description>
<description>bool XMLWriter::writeComment ( string $content ) 
 Процедурный стиль bool xmlwriter_write_comment ( resource $xmlwriter , string $content )</description>
<parameters>xmlwriter - Только для процедурных вызовов.Изменяемый resource XMLWriter. Этот ресурс может быть получен из xmlwriter_open_uri() илиxmlwriter_open_memory().
content - Содержание комментария. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2946> 
<name>imagecolorallocate</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Allocate a color for an image</short-description>
<description>int imagecolorallocate ( resource $image , int $red , int $green , int $blue ) 
 Returns a color identifier representing the color composed of the given RGB components. 
 imagecolorallocate() must be called to create each color that is to be used in the image represented by image. 
 Замечание: 
 The first call to imagecolorallocate() fills the background color in palette-based images - images created using imagecreate(). </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
red - Значение красного компонента цвета.
green - Значение зеленого компонента цвета.
blue - Значение синего компонента цвета.</parameters>
<output>A color identifier or FALSE if the allocation failed. </output>
<errors></errors>
<example><?php
$im = imagecreate(100, 100);
// sets background to red
$background = imagecolorallocate($im, 255, 0, 0);
// sets some colors
$white = imagecolorallocate($im, 255, 255, 255);
$black = imagecolorallocate($im, 0, 0, 0);
// hexadecimal way
$white = imagecolorallocate($im, 0xFF, 0xFF, 0xFF);
$black = imagecolorallocate($im, 0x00, 0x00, 0x00);
?></example>
<example_result></example_result>
</object>

<object id=2947> 
<name>ncurses_delwin</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Delete a ncurses window </short-description>
<description>bool ncurses_delwin ( resource $window ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>window - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2948> 
<name>mssql_query</name>
<versions>(PHP 4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Send MS SQL query</short-description>
<description>mixed mssql_query ( string $query [, resource $link_identifier [, int $batch_size = 0 ]] ) 
 mssql_query() sends a query to the currently active database on the server that&#039;s associated with the specified link identifier. </description>
<parameters>query - An SQL query. 
link_identifier - A MS SQL link identifier, returned by mssql_connect() or mssql_pconnect(). 
batch_size - The number of records to batch in the buffer. </parameters>
<output>Returns a MS SQL result resource on success, TRUE if no rows were returned, or FALSE on error. </output>
<errors></errors>
<example><?php
// Connect to MSSQL
$link = mssql_connect('KALLESPC\SQLEXPRESS', 'sa', 'phpfi');
if (!$link || !mssql_select_db('php', $link)) {
    die('Unable to connect or select database!');
}
// Do a simple query, select the version of 
// MSSQL and print it.
$version = mssql_query('SELECT @@VERSION');
$row = mssql_fetch_array($version);
echo $row[0];
// Clean up
mssql_free_result($version);
?></example>
<example_result></example_result>
</object>

<object id=2949> 
<name>mcrypt_encrypt</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Encrypts plaintext with given parameters</short-description>
<description>string mcrypt_encrypt ( string $cipher , string $key , string $data , string $mode [, string $iv ] ) 
 Encrypts the data and returns it. </description>
<parameters>cipher - One of the MCRYPT_ciphername constants, or the name of the algorithm as string. 
key - The key with which the data will be encrypted. If it&#039;s smaller than the required keysize, it is padded with &#039;\0&#039;. It is better not to use ASCII strings for keys. 
data - The data that will be encrypted with the given cipher and mode. If the size of the data is not n * blocksize, the data will be padded with &#039;\0&#039;. 
mode - One of the MCRYPT_MODE_modename constants, or one of the following strings: "ecb", "cbc", "cfb", "ofb", "nofb" or "stream". 
iv - Used for the initialization in CBC, CFB, OFB modes, and in some algorithms in STREAM mode. If you do not supply an IV, while it is needed for an algorithm, the function issues a warning and uses an IV with all its bytes set to &#039;\0&#039;. </parameters>
<output>Returns the encrypted data, as a string. </output>
<errors></errors>
<example><?php
    $iv_size = mcrypt_get_iv_size(MCRYPT_RIJNDAEL_256, MCRYPT_MODE_ECB);
    $iv = mcrypt_create_iv($iv_size, MCRYPT_RAND);
    $key = "This is a very secret key";
    $text = "Meet me at 11 o'clock behind the monument.";
    echo strlen($text) . "\n";
    $crypttext = mcrypt_encrypt(MCRYPT_RIJNDAEL_256, $key, $text, MCRYPT_MODE_ECB, $iv);
    echo strlen($crypttext) . "\n";
?></example>
<example_result>
 
42
64
</example_result>
</object>

<object id=2950> 
<name>mssql_field_name</name>
<versions>(PHP 4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Get the name of a field</short-description>
<description>string mssql_field_name ( resource $result [, int $offset = -1 ] ) 
 Returns the name of field no. offset in result. </description>
<parameters>result - The result resource that is being evaluated. This result comes from a call to mssql_query(). 
offset - The field offset, starts at 0. If omitted, the current field is used. </parameters>
<output>The name of the specified field index on success или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Send a select query to MSSQL
$query = mssql_query('SELECT [username], [name], [email] FROM [php].[dbo].[userlist]');
echo 'Result set contains the following field(s):', PHP_EOL;
// Dump all field names in result
for ($i = 0; $i < mssql_num_fields($query); ++$i) {
    echo ' - ' . mssql_field_name($query, $i), PHP_EOL;
}
// Free the query result
mssql_free_result($query);
?></example>
<example_result>
 
Result set contains the following field(s):
 - username
 - name
 - email
</example_result>
</object>

<object id=2951> 
<name>bcpow</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Возведение в степень чисел с произвольной точностью </short-description>
<description>string bcpow ( string $left_operand , string $right_operand [, int $scale ] ) 
 Возводит left_operand в степень right_operand. </description>
<parameters>left_operand - Левый операнд (основание) в виде строки. 
right_operand - Правый операнд (степень) в виде строки. 
scale - Этот необязательный параметр используется для установки количества знаков после десятичного разделителя в результате.Вы также можете установить этот параметр глобально для всех функций с помощью bcscale().</parameters>
<output>Возвращает результат в виде строки. </output>
<errors></errors>
<example><?php
echo bcpow('4.2', '3', 2); // 74.08
?></example>
<example_result></example_result>
</object>

<object id=2952> 
<name>dbx_close</name>
<versions>(PHP 4 >= 4.0.6, PHP 5 <= 5.0.5, PECL dbx >= 1.1.0)</versions>
<short-description>Close an open connection/database</short-description>
<description>int dbx_close ( object $link_identifier ) </description>
<parameters>link_identifier - The DBX link object to close. </parameters>
<output>Returns 1 on success and 0 on errors. </output>
<errors></errors>
<example><?php
$link = dbx_connect(DBX_MYSQL, "localhost", "db", "username", "password")
    or die("Could not connect");
echo "Connected successfully";
dbx_close($link);
?></example>
<example_result></example_result>
</object>

<object id=2953> 
<name>ifx_htmltbl_result</name>
<versions>(PHP 4, PHP <=5.2.0)</versions>
<short-description>Formats all rows of a query into a HTML table</short-description>
<description>int ifx_htmltbl_result ( resource $result_id [, string $html_table_options ] ) 
 Formats and prints all rows of the result_id query into a HTML table. </description>
<parameters>result_id - result_id is a valid resultid returned by ifx_query() or ifx_prepare() (select type queries only!). 
html_table_options - This optional argument is a string of <table> tag options. </parameters>
<output>Returns the number of fetched rows, or FALSE on errors. </output>
<errors></errors>
<example><?php
$rid = ifx_prepare ("select * from emp where name like " . $name,
                     $connid, IFX_SCROLL);
if (! $rid) {
    /* ... error ... */
}
$rowcount = ifx_affected_rows ($rid);
if ($rowcount > 1000) {
    printf ("Too many rows in result set (%d)\n<br />", $rowcount);
    die ("Please restrict your query<br />\n");
}if (! ifx_do($rid)) {
    /* ... error ... */
}
ifx_htmltbl_result ($rid, "border=\"2\"");
ifx_free_result($rid);
?></example>
<example_result></example_result>
</object>

<object id=2954> 
<name>socket_last_error</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Returns the last error on the socket </short-description>
<description>int socket_last_error ([ resource $socket ] ) 
 If a socket resource is passed to this function, the last error which occurred on this particular socket is returned. If the socket resource is omitted, the error code of the last failed socket function is returned. The latter is particularly helpful for functions like socket_create() which don&#039;t return a socket on failure and socket_select() which can fail for reasons not directly tied to a particular socket. The error code is suitable to be fed to socket_strerror() which returns a string describing the given error code. </description>
<parameters>socket - A valid socket resource created with socket_create(). </parameters>
<output>This function returns a socket error code. </output>
<errors></errors>
<example><?php
$socket = @socket_create(AF_INET, SOCK_STREAM, SOL_TCP);
if ($socket === false) {
    $errorcode = socket_last_error();
    $errormsg = socket_strerror($errorcode);
    
    die("Couldn't create socket: [$errorcode] $errormsg");
}?></example>
<example_result></example_result>
</object>

<object id=2955> 
<name>imap_ping</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Check if the IMAP stream is still active</short-description>
<description>bool imap_ping ( resource $imap_stream ) 
 imap_ping() pings the stream to see if it&#039;s still active. It may discover new mail; this is the preferred method for a periodic "new mail check" as well as a "keep alive" for servers which have inactivity timeout. </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().</parameters>
<output>Returns TRUE if the stream is still alive, FALSE otherwise. </output>
<errors></errors>
<example><?php
$imap = imap_open("{imap.example.org}", "mailadmin", "password");
// after some sleeping
if (!imap_ping($imap)) {
    // do some stuff to reconnect
}
?></example>
<example_result></example_result>
</object>

<object id=2956> 
<name>imagesetstyle</name>
<versions>(PHP 4 >= 4.0.6, PHP 5)</versions>
<short-description>Set the style for line drawing</short-description>
<description>bool imagesetstyle ( resource $image , array $style ) 
 imagesetstyle() sets the style to be used by all line drawing functions (such as imageline() and imagepolygon()) when drawing with the special color IMG_COLOR_STYLED or lines of images with color IMG_COLOR_STYLEDBRUSHED. </description>
<parameters>image - Ресурс изображения, полученный одной из функций создания изображений,например, такой как imagecreatetruecolor().
style - An array of pixel colors. You can use the IMG_COLOR_TRANSPARENT constant to add a transparent pixel. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
header("Content-type: image/jpeg");
$im  = imagecreatetruecolor(100, 100);
$w   = imagecolorallocate($im, 255, 255, 255);
$red = imagecolorallocate($im, 255, 0, 0);
/* Draw a dashed line, 5 red pixels, 5 white pixels */
$style = array($red, $red, $red, $red, $red, $w, $w, $w, $w, $w);
imagesetstyle($im, $style);
imageline($im, 0, 0, 100, 100, IMG_COLOR_STYLED);
/* Draw a line of happy faces using imagesetbrush() with imagesetstyle */
$style = array($w, $w, $w, $w, $w, $w, $w, $w, $w, $w, $w, $w, $red);
imagesetstyle($im, $style);
$brush = imagecreatefrompng("http://www.libpng.org/pub/png/images/smile.happy.png");
$w2 = imagecolorallocate($brush, 255, 255, 255);
imagecolortransparent($brush, $w2);
imagesetbrush($im, $brush);
imageline($im, 100, 0, 0, 100, IMG_COLOR_STYLEDBRUSHED);
imagejpeg($im);
imagedestroy($im);
?></example>
<example_result></example_result>
</object>

<object id=2957> 
<name>ocirowcount</name>
<versions>(PHP 4, PHP 5, PECL OCI8 >= 1.0.0)</versions>
<short-description>Псевдоним oci_num_rows()</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2958> 
<name>fdf_get_status</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Получает значение ключа /STATUS</short-description>
<description>string fdf_get_status ( resource $fdf_document ) 
 Получает значение ключа /STATUS. </description>
<parameters>fdf_document - Дескриптор FDF-документа, возвращенный функциями fdf_create(), fdf_open() или fdf_open_string(). </parameters>
<output>Возвращает значение ключа в виде строки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2959> 
<name>array_diff_ukey</name>
<versions>(PHP 5 >= 5.1.0)</versions>
<short-description>Вычисляет расхождение массивов, используя callback-функцию для сравнения ключей</short-description>
<description>array array_diff_ukey ( array $array1 , array $array2 [, array $ ... ], callback $key_compare_func ) 
 Сравнивает ключи array1 с ключами array2 и возвращает разницу. Эта функция похожа на array_diff() за исключением того, что сравниваются ключи, а не значения. 
 В отличие от функции array_diff_key() для сравнения ключей используется функция, предоставляемая пользователем, а не встроенная функция. </description>
<parameters>array1 - Исходный массив 
array2 - Массив, с которым идет сравнение 
... - Дополнительные массивы, с которыми осуществляется сравнение 
key_compare_func - Применяемая callback-функция. Данная функция должна возвращать целое число, меньшее, равное, либо большее нуля, если первый аргумент соответственно считается меньшим, равным, либо большим, чем второй. </parameters>
<output>Возвращает array, содержащий все элементы array1, отсутствующие в каком-либо из всех остальных массивов. </output>
<errors></errors>
<example><?php
function key_compare_func($key1, $key2)
{    if ($key1 == $key2)
        return 0;
    else if ($key1 > $key2)
        return 1;
    else
        return -1;
}
$array1 = array('blue'  => 1, 'red'  => 2, 'green'  => 3, 'purple' => 4);
$array2 = array('green' => 5, 'blue' => 6, 'yellow' => 7, 'cyan'   => 8);
var_dump(array_diff_ukey($array1, $array2, 'key_compare_func'));
?></example>
<example_result>
 
array(2) {
  ["red"]=>
  int(2)
  ["purple"]=>
  int(4)
}
</example_result>
</object>

<object id=2960> 
<name>cosh</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Гиперболический косинус</short-description>
<description>float cosh ( float $arg ) 
 Возвращает гиперболический косинус arg, определяемый как (exp(arg) + exp(-arg))/2. </description>
<parameters>arg - Входное значение </parameters>
<output>Гиперболический косинус arg </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2961> 
<name>ibase_db_info</name>
<versions>(PHP 5)</versions>
<short-description>Request statistics about a database</short-description>
<description>string ibase_db_info ( resource $service_handle , string $db , int $action [, int $argument = 0 ] ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2962> 
<name>hw_connection_info</name>
<versions>(PHP 4)</versions>
<short-description>Prints information about the connection to Hyperwave server</short-description>
<description>void hw_connection_info ( int $link ) 
 Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2963> 
<name>swf_startshape</name>
<versions>(PHP 4)</versions>
<short-description>Start a complex shape</short-description>
<description>void swf_startshape ( int $objid ) 
 Starts a complex shape. </description>
<parameters>objid - The object id. </parameters>
<output>Эта функция не возвращает значения после выполнения. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2964> 
<name>fam_suspend_monitor</name>
<versions>(PHP 5 <= 5.0.5)</versions>
<short-description>Temporarily suspend monitoring</short-description>
<description>bool fam_suspend_monitor ( resource $fam , resource $fam_monitor ) 
 fam_suspend_monitor() temporarily suspend monitoring of a resource. 
 Monitoring can later be continued using fam_resume_monitor() without the need of requesting a complete new monitor. </description>
<parameters>fam - A resource representing a connection to the FAM service returned by fam_open() 
fam_monitor - A resource returned by one of the fam_monitor_XXX functions </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2965> 
<name>socket_getpeername</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Queries the remote side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type</short-description>
<description>bool socket_getpeername ( resource $socket , string &$address [, int &$port ] ) 
 Queries the remote side of the given socket which may either result in host/port or in a Unix filesystem path, dependent on its type. </description>
<parameters>socket - A valid socket resource created with socket_create() or socket_accept(). 
address - If the given socket is of type AF_INET or AF_INET6, socket_getpeername() will return the peers (remote) IP address in appropriate notation (e.g. 127.0.0.1 or fe80::1) in the address parameter and, if the optional port parameter is present, also the associated port. 
port - If given, this will hold the port associated to address. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. socket_getpeername() may also return FALSE if the socket type is not any of AF_INET, AF_INET6, or AF_UNIX, in which case the last socket error code is not updated. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2966> 
<name>m_verifyconnection</name>
<versions>(PHP 4 >= 4.3.9, PHP 5 <= 5.0.5, PECL mcve >= 1.0.0)</versions>
<short-description>Set whether or not to PING upon connect to verify connection</short-description>
<description>bool m_verifyconnection ( resource $conn , int $tf ) Внимание
 К настоящемувремени эта функция еще не была документирована; для ознакомления доступен только список аргументов.</description>
<parameters>conn - Ресурс MCVE_CONN, полученный изm_initengine().
tf - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2967> 
<name>xmlrpc_server_register_introspection_callback</name>
<versions>(PHP 4 >= 4.1.0, PHP 5)</versions>
<short-description>Регистрирует функцию PHP для генерации документации</short-description>
<description>bool xmlrpc_server_register_introspection_callback ( resource $server , string $function ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2968> 
<name>odbc_errormsg</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Get the last error message</short-description>
<description>string odbc_errormsg ([ resource $connection_id ] ) 
 Returns a string containing the last ODBC error message, or an empty string if there has been no errors. </description>
<parameters>connection_id - Идентификатор соединения ODBC,за подробностями обращайтесь к odbc_connect().</parameters>
<output>If connection_id is specified, the last state of that connection is returned, else the last state of any connection is returned. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2969> 
<name>imap_msgno</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Gets the message sequence number for the given UID</short-description>
<description>int imap_msgno ( resource $imap_stream , int $uid ) 
 Returns the message sequence number for the given uid. 
 This function is the inverse of imap_uid(). </description>
<parameters>imap_stream - Поток IMAP, полученный изimap_open().
uid - The message UID </parameters>
<output>Returns the message sequence number for the given uid. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2970> 
<name>posix_getcwd</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Pathname of current directory</short-description>
<description>string posix_getcwd ( void ) 
 Gets the absolute pathname of the script&#039;s current working directory. On error, it sets errno which can be checked using posix_get_last_error() </description>
<parameters></parameters>
<output>Returns a string of the absolute pathname on success. On error, returns FALSE and sets errno which can be checked with posix_get_last_error(). </output>
<errors></errors>
<example>
 </example>
<example_result></example_result>
</object>

<object id=2971> 
<name>oci_field_type</name>
<versions>(PHP 5, PECL OCI8 >= 1.1.0)</versions>
<short-description>Возвращает тип поля</short-description>
<description>mixed oci_field_type ( resource $statement , int $field ) 
 Возвращает тип поля. </description>
<parameters>statement - Допустимый идентификатор OCI-выражения. 
field - Может быть задано индексом (начиная с 1) или по имени. </parameters>
<output>Возвращает тип поля как строку или FALSE в случае ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2972> 
<name>ncurses_use_env</name>
<versions>(PHP 4 >= 4.0.7, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Control use of environment information about terminal size </short-description>
<description>void ncurses_use_env ( bool $flag ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>flag - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2973> 
<name>hw_Info</name>
<versions>(PHP 4)</versions>
<short-description>Info about connection</short-description>
<description>string hw_info ( int $connection ) 
 Returns information about the current connection. </description>
<parameters>connection - The connection identifier. </parameters>
<output>The returned string has the following format: <Serverstring>, <Host>, <Port>, <Username>, <Port of Client>, <Byte swapping> </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2974> 
<name>odbc_fetch_object</name>
<versions>(PHP 4 >= 4.0.2, PHP 5)</versions>
<short-description>Fetch a result row as an object</short-description>
<description>object odbc_fetch_object ( resource $result [, int $rownumber ] ) 
 Fetch an object from an ODBC query. See the changelog below for when this function is available. </description>
<parameters>result - The result resource from odbc_exec(). 
rownumber - Optionally choose which row number to retrieve. </parameters>
<output>Returns an object that corresponds to the fetched row, or FALSE if there are no more rows. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2975> 
<name>hebrev</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Преобразует текст на иврите из логической кодировки в визуальную</short-description>
<description>string hebrev ( string $hebrew_text [, int $max_chars_per_line = 0 ] ) 
 Преобразует текст на иврите из логической кодировки в визуальную. 
 Эта функция пытается избежать разрывов слов. </description>
<parameters>hebrew_text - Входная строка на иврите. 
max_chars_per_line - Этот необязательный параметр указывает максимально возвращаемое число символов на строку. </parameters>
<output>Возвращает строку в визуальной кодировке. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2976> 
<name>dio_write</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 <= 5.0.5)</versions>
<short-description>Writes data to fd with optional truncation at length </short-description>
<description>int dio_write ( resource $fd , string $data [, int $len = 0 ] ) 
 dio_write() writes up to len bytes from data to file fd. </description>
<parameters>fd - The file descriptor returned by dio_open(). 
data - The written data. 
len - The length of data to write in bytes. If not specified, the function writes all the data to the specified file. </parameters>
<output>Returns the number of bytes written to fd. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2977> 
<name>odbc_data_source</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Returns information about a current connection</short-description>
<description>array odbc_data_source ( resource $connection_id , int $fetch_type ) 
 This function will return the list of available DSN (after calling it several times). </description>
<parameters>connection_id - Идентификатор соединения ODBC,за подробностями обращайтесь к odbc_connect().
fetch_type - The fetch_type can be one of two constant types: SQL_FETCH_FIRST, SQL_FETCH_NEXT. Use SQL_FETCH_FIRST the first time this function is called, thereafter use the SQL_FETCH_NEXT. </parameters>
<output>Returns FALSE on error, and an array upon success. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2978> 
<name>bcmul</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Умножение двух чисел с произвольной точностью </short-description>
<description>string bcmul ( string $left_operand , string $right_operand [, int $scale ] ) 
 Умножает left_operand на right_operand. </description>
<parameters>left_operand - Левый операнд (первый множитель) в виде строки. 
right_operand - Правый операнд (второй множитель) в виде строки. 
scale - Этот необязательный параметр используется для установки количества знаков после десятичного разделителя в результате.Вы также можете установить этот параметр глобально для всех функций с помощью bcscale().</parameters>
<output>Возвращает результат в виде строки. </output>
<errors></errors>
<example><?php
echo bcmul('1.34747474747', '35', 3); // 47.161
echo bcmul('2', '4'); // 8
?></example>
<example_result></example_result>
</object>

<object id=2979> 
<name>stream_context_set_params</name>
<versions>(PHP 4 >= 4.3.0, PHP 5)</versions>
<short-description>Устанавливает параметры для потока/обертки/контекста</short-description>
<description>bool stream_context_set_params ( resource $stream_or_context , array $params ) 
 Устанавливает параметры для указанного контекста. </description>
<parameters>stream_or_context - Поток или контекст, к которому будут применены параметры. 
params - Массив параметров, которые будут установлены. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2980> 
<name>ldap_bind</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Привязать к LDAP директории</short-description>
<description>bool ldap_bind ( resource $link_identifier [, string $bind_rdn = NULL [, string $bind_password = NULL ]] ) 
 Связывает с LDAP директорией с указанным RDN и паролем. </description>
<parameters>link_identifier - Идентификатор ссылки LDAP, возвращенный ldap_connect(). 
bind_rdn - 
bind_password - </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// используется ldap-привязка
$ldaprdn  = 'uname';     // ldap rdn или dn
$ldappass = 'password';  // ассоциированный пароль
// соединение с сервером
$ldapconn = ldap_connect("ldap.example.com")
    or die("Не могу соединиться с сервером LDAP.");
if ($ldapconn) {
    // привязка к ldap-серверу
    $ldapbind = ldap_bind($ldapconn, $ldaprdn, $ldappass);
    // проверка привязки
    if ($ldapbind) {
        echo "LDAP-привязка успешна...";
    } else {
        echo "LDAP-привязка не удалась...";
    }
}
?></example>
<example_result></example_result>
</object>

<object id=2981> 
<name>posix_getlogin</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Return login name</short-description>
<description>string posix_getlogin ( void ) 
 Returns the login name of the user owning the current process. </description>
<parameters></parameters>
<output>Returns the login name of the user, as a string. </output>
<errors></errors>
<example><?php
echo posix_getlogin(); //apache
?></example>
<example_result></example_result>
</object>

<object id=2982> 
<name>ncurses_mvdelch</name>
<versions>(PHP 4 >= 4.2.0, PHP 5 < 5.3.0, PECL ncurses >= 1.0.0)</versions>
<short-description>Move position and delete character, shift rest of line left </short-description>
<description>int ncurses_mvdelch ( int $y , int $x ) Внимание
 Эта функция является ЭКСПЕРИМЕНТАЛЬНОЙ.Поведение этой функции, ее имя и относящаяся к ней документациямогут измениться в последующих версиях PHP без уведомления.Используйте эту функцию на свой страх и риск.</description>
<parameters>y - 
x - </parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2983> 
<name>strnatcmp</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Сравнение строк с использованием алгоритма "natural order"</short-description>
<description>int strnatcmp ( string $str1 , string $str2 ) 
 Эта функция реализует алгоритм сравнения, упорядочивающий алфавитно-цифровые строки подобно тому, как это сделал бы человек, такой алгоритм называется "natural ordering". Сравнение происходит с учетом регистра. </description>
<parameters>str1 - Первая строка. 
str2 - Вторая строка. </parameters>
<output>Подобно другим функциям сравнения строк, данная функция возвращает отрицательное число, если str1 меньше, чем str2, положительное число, если str1 больше, чем str2, и 0 если строки равны. </output>
<errors></errors>
<example><?php
$arr1 = $arr2 = array("img12.png", "img10.png", "img2.png", "img1.png");
echo "Стандартный алгоритм сравнения\n";
usort($arr1, "strcmp");
print_r($arr1);
echo "\nАлгоритм \"natural order\"\n";
usort($arr2, "strnatcmp");
print_r($arr2);
?></example>
<example_result>
 
Стандартный алгоритм сравнения
Array
(
    [0] => img1.png
    [1] => img10.png
    [2] => img12.png
    [3] => img2.png
)

Алгоритм "natural order"
Array
(
    [0] => img1.png
    [1] => img2.png
    [2] => img10.png
    [3] => img12.png
)
</example_result>
</object>

<object id=2984> 
<name>PDF_add_annotation</name>
<versions>(PHP 4, PECL pdflib >= 1.0.0)</versions>
<short-description>Add annotation [deprecated]</short-description>
<description></description>
<parameters></parameters>
<output></output>
<errors></errors>
<example></example>
<example_result></example_result>
</object>

<object id=2985> 
<name>fsockopen</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Open Internet or Unix domain socket connection</short-description>
<description>resource fsockopen ( string $hostname [, int $port = -1 [, int &$errno [, string &$errstr [, float $timeout = ini_get("default_socket_timeout") ]]]] ) 
 Initiates a socket connection to the resource specified by hostname. 
 PHP supports targets in the Internet and Unix domains as described in Список поддерживаемых транспортных протоколов. A list of supported transports can also be retrieved using stream_get_transports(). 
 The socket will by default be opened in blocking mode. You can switch it to non-blocking mode by using stream_set_blocking(). 
 The function stream_socket_client() is similar but provides a richer set of options, including non-blocking connection and the ability to provide a stream context. </description>
<parameters>hostname - If OpenSSL support is installed, you may prefix the hostname with either ssl:// or tls:// to use an SSL or TLS client connection over TCP/IP to connect to the remote host. 
port - The port number. 
errno - If provided, holds the system level error number that occurred in the system-level connect() call. 
errstr - The error message as a string. 
timeout - The connection timeout, in seconds. </parameters>
<output>fsockopen() returns a file pointer which may be used together with the other file functions (such as fgets(), fgetss(), fwrite(), fclose(), and feof()). If the call fails, it will return FALSE </output>
<errors>Throws E_WARNING if hostname is not a valid domain. </errors>
<example><?php
$fp = fsockopen("www.example.com", 80, $errno, $errstr, 30);
if (!$fp) {
    echo "$errstr ($errno)<br />\n";
} else {
    $out = "GET / HTTP/1.1\r\n";
    $out .= "Host: www.example.com\r\n";
    $out .= "Connection: Close\r\n\r\n";
    fwrite($fp, $out);
    while (!feof($fp)) {
        echo fgets($fp, 128);
    }
    fclose($fp);
}?></example>
<example_result></example_result>
</object>

<object id=2986> 
<name>chroot</name>
<versions>(PHP 4 >= 4.0.5, PHP 5)</versions>
<short-description>Изменяет корневой каталог</short-description>
<description>bool chroot ( string $directory ) 
 Изменяет корневой каталог текущего процесса на переданный в качестве параметра directory и меняет текущий каталог на "/". 
 Данная функция доступна только на GNU и BSD системах, а также только при использовании CLI, CGI или Embed SAPI. Кроме того, данная функция требует суперпользовательских привилегий. </description>
<parameters>directory - Путь для смены корневой директории. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
chroot("/path/to/your/chroot/");
echo getcwd();
?></example>
<example_result>
 
/
</example_result>
</object>

<object id=2987> 
<name>mssql_fetch_batch</name>
<versions>(PHP 4 >= 4.0.4, PHP 5, PECL odbtp >= 1.1.1)</versions>
<short-description>Returns the next batch of records</short-description>
<description>int mssql_fetch_batch ( resource $result ) 
 Returns the next batch of records </description>
<parameters>result - The result resource that is being evaluated. This result comes from a call to mssql_query(). </parameters>
<output>Returns the batch number as an integer. </output>
<errors></errors>
<example><?php
// Connect to MSSQL and select the database
$link = mssql_connect('MANGO\SQLEXPRESS', 'sa', 'phpfi');
mssql_select_db('php', $link);
// Send a query
$result = mssql_query('SELECT * FROM [php].[dbo].[people]', $link, 100);
$records = 10;
while ($records >= 0) {
    while ($row = mssql_fetch_assoc($result)) {
        // Do stuff ...
    }
    --$records;
}
if ($batchsize = mssql_fetch_batch($result)) {
    // $batchsize is the number of records left 
    // in the result, but not shown above
}
?></example>
<example_result></example_result>
</object>

<object id=2988> 
<name>imagepsextendfont</name>
<versions>(PHP 4, PHP 5)</versions>
<short-description>Extend or condense a font</short-description>
<description>bool imagepsextendfont ( resource $font_index , float $extend ) 
 Extend or condense a font (font_index), if the value of the extend parameter is less than one you will be condensing the font. </description>
<parameters>font_index - A font resource, returned by imagepsloadfont(). 
extend - Extension value, must be greater than 0. </parameters>
<output>Возвращает TRUE в случае успешного завершения или FALSE в случае возникновения ошибки. </output>
<errors></errors>
<example><?php
// Load a .pfb font file
$font = imagepsloadfont('./px3l.pfb');
// Extend the font by 2.5
imagepsextendfont($font, 2.5);
// Do any operations with the font here
// Free the font from memory
imagepsfreefont($font);
?></example>
<example_result></example_result>
</object>

